

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 30 14:46:06 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     	FNCALL	_main,_inicio
   400                           	FNROOT	_main
   401                           	global	main@F1273
   402                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   403                           global __pidataBANK0
   404                           __pidataBANK0:
   405  0636                     	file	"main.c"
   406                           	line	58
   407                           
   408                           ;initializer for main@F1273
   409                           	retlw	088h
   410  0636  3488               	retlw	0BEh
   411  0637  34BE               	retlw	0C4h
   412  0638  34C4               	retlw	094h
   413  0639  3494               	retlw	066h
   414  063A  3466               	retlw	06Dh
   415  063B  346D               	retlw	07Dh
   416  063C  347D               	retlw	07h
   417  063D  3407               	retlw	07Fh
   418  063E  347F               	retlw	067h
   419  063F  3467               	global	_debounce2
   420                           	global	_debounce
   421                           	global	_ganador
   422                           	global	_estado
   423                           	global	_PORTBbits
   424                           _PORTBbits	set	0x6
   425  0006                     	global	_PORTD
   426                           _PORTD	set	0x8
   427  0008                     	global	_PORTC
   428                           _PORTC	set	0x7
   429  0007                     	global	_PORTB
   430                           _PORTB	set	0x6
   431  0006                     	global	_PORTA
   432                           _PORTA	set	0x5
   433  0005                     	global	_TRISD
   434                           _TRISD	set	0x88
   435  0088                     	global	_TRISC
   436                           _TRISC	set	0x87
   437  0087                     	global	_OPTION_REG
   438                           _OPTION_REG	set	0x81
   439  0081                     	global	_WPUB
   440                           _WPUB	set	0x95
   441  0095                     	global	_TRISB
   442                           _TRISB	set	0x86
   443  0086                     	global	_TRISA
   444                           _TRISA	set	0x85
   445  0085                     	global	_ANSELH
   446                           _ANSELH	set	0x189
   447  0189                     	global	_ANSEL
   448                           _ANSEL	set	0x188
   449  0188                     ; #config settings
   450                           global __CFG_FOSC$INTRC_NOCLKOUT
   451                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   452  0000                     global __CFG_WDTE$OFF
   453                           __CFG_WDTE$OFF equ 0x0
   454  0000                     global __CFG_PWRTE$OFF
   455                           __CFG_PWRTE$OFF equ 0x0
   456  0000                     global __CFG_MCLRE$OFF
   457                           __CFG_MCLRE$OFF equ 0x0
   458  0000                     global __CFG_CP$OFF
   459                           __CFG_CP$OFF equ 0x0
   460  0000                     global __CFG_CPD$OFF
   461                           __CFG_CPD$OFF equ 0x0
   462  0000                     global __CFG_BOREN$OFF
   463                           __CFG_BOREN$OFF equ 0x0
   464  0000                     global __CFG_IESO$OFF
   465                           __CFG_IESO$OFF equ 0x0
   466  0000                     global __CFG_FCMEN$OFF
   467                           __CFG_FCMEN$OFF equ 0x0
   468  0000                     global __CFG_LVP$OFF
   469                           __CFG_LVP$OFF equ 0x0
   470  0000                     global __CFG_BOR4V$BOR40V
   471                           __CFG_BOR4V$BOR40V equ 0x0
   472  0000                     global __CFG_WRT$OFF
   473                           __CFG_WRT$OFF equ 0x0
   474  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sgi0."
   475                           	line	#
   476                           psect cinit,class=CODE,delta=2
   477                           global start_initialization
   478                           start_initialization:
   479  07E8                     
   480                           global __initialization
   481                           __initialization:
   482  07E8                     psect	bssBANK0,class=BANK0,space=1,noexec
   483                           global __pbssBANK0
   484                           __pbssBANK0:
   485  002A                     _jugador2:
   486  002A                            ds      1
   487  002A                     
   488                           _jugador1:
   489  002B                            ds      1
   490  002B                     
   491                           _debounce2:
   492  002C                            ds      1
   493  002C                     
   494                           _debounce:
   495  002D                            ds      1
   496  002D                     
   497                           _ganador:
   498  002E                            ds      1
   499  002E                     
   500                           _estado:
   501  002F                            ds      1
   502  002F                     
   503                           psect	dataBANK0,class=BANK0,space=1,noexec
   504                           global __pdataBANK0
   505                           __pdataBANK0:
   506  0020                     	file	"main.c"
   507                           	line	58
   508                           main@F1273:
   509  0020                            ds      10
   510  0020                     
   511                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sgi0."
   512                           	line	#
   513                           global btemp
   514                           psect inittext,class=CODE,delta=2
   515                           global init_fetch0,btemp
   516                           ;	Called with low address in FSR and high address in W
   517                           init_fetch0:
   518  0640                     	movf btemp,w
   519  0640  087E               	movwf pclath
   520  0641  008A               	movf btemp+1,w
   521  0642  087F               	movwf pc
   522  0643  0082               global init_ram0
   523                           ;Called with:
   524                           ;	high address of idata address in btemp 
   525                           ;	low address of idata address in btemp+1 
   526                           ;	low address of data in FSR
   527                           ;	high address + 1 of data in btemp-1
   528                           init_ram0:
   529  0644                     	fcall init_fetch0
   530  0644  120A  118A  2640  120A  118A  	movwf indf,f
   531  0649  0080               	incf fsr,f
   532  064A  0A84               	movf fsr,w
   533  064B  0804               	xorwf btemp-1,w
   534  064C  067D               	btfsc status,2
   535  064D  1903               	retlw 0
   536  064E  3400               	incf btemp+1,f
   537  064F  0AFF               	btfsc status,2
   538  0650  1903               	incf btemp,f
   539  0651  0AFE               	goto init_ram0
   540  0652  2E44               ; Initialize objects allocated to BANK0
   541                           psect cinit,class=CODE,delta=2,merge=1
   542                           global init_ram0, __pidataBANK0
   543                           	bcf	status, 7	;select IRP bank0
   544  07E8  1383               	movlw low(__pdataBANK0+10)
   545  07E9  302A               	movwf btemp-1,f
   546  07EA  00FD               	movlw high(__pidataBANK0)
   547  07EB  3006               	movwf btemp,f
   548  07EC  00FE               	movlw low(__pidataBANK0)
   549  07ED  3036               	movwf btemp+1,f
   550  07EE  00FF               	movlw low(__pdataBANK0)
   551  07EF  3020               	movwf fsr,f
   552  07F0  0084               	fcall init_ram0
   553  07F1  120A  118A  2644  120A  118A  	line	#
   554                           ; Clear objects allocated to BANK0
   555                           psect cinit,class=CODE,delta=2,merge=1
   556                           	clrf	((__pbssBANK0)+0)&07Fh
   557  07F6  01AA               	clrf	((__pbssBANK0)+1)&07Fh
   558  07F7  01AB               	clrf	((__pbssBANK0)+2)&07Fh
   559  07F8  01AC               	clrf	((__pbssBANK0)+3)&07Fh
   560  07F9  01AD               	clrf	((__pbssBANK0)+4)&07Fh
   561  07FA  01AE               	clrf	((__pbssBANK0)+5)&07Fh
   562  07FB  01AF               psect cinit,class=CODE,delta=2,merge=1
   563                           global end_of_initialization,__end_of__initialization
   564                           
   565                           ;End of C runtime variable initialization code
   566                           
   567                           end_of_initialization:
   568  07FC                     __end_of__initialization:
   569  07FC                     clrf status
   570  07FC  0183               ljmp _main	;jump to C main() function
   571  07FD  120A  118A  2E79   psect	cstackCOMMON,class=COMMON,space=1,noexec
   572                           global __pcstackCOMMON
   573                           __pcstackCOMMON:
   574  0070                     ?_inicio:	; 1 bytes @ 0x0
   575  0070                     ??_inicio:	; 1 bytes @ 0x0
   576  0070                     ?_main:	; 1 bytes @ 0x0
   577  0070                     ??_main:	; 1 bytes @ 0x0
   578  0070                     	ds	4
   579  0070                     	global	main@display
   580                           main@display:	; 10 bytes @ 0x4
   581  0074                     	ds	10
   582  0074                     ;!
   583                           ;!Data Sizes:
   584                           ;!    Strings     0
   585                           ;!    Constant    0
   586                           ;!    Data        10
   587                           ;!    BSS         6
   588                           ;!    Persistent  0
   589                           ;!    Stack       0
   590                           ;!
   591                           ;!Auto Spaces:
   592                           ;!    Space          Size  Autos    Used
   593                           ;!    COMMON           14     14      14
   594                           ;!    BANK0            80      0      16
   595                           ;!    BANK1            80      0       0
   596                           ;!    BANK3            96      0       0
   597                           ;!    BANK2            96      0       0
   598                           
   599                           ;!
   600                           ;!Pointer List with Targets:
   601                           ;!
   602                           ;!    None.
   603                           
   604                           
   605                           ;!
   606                           ;!Critical Paths under _main in COMMON
   607                           ;!
   608                           ;!    None.
   609                           ;!
   610                           ;!Critical Paths under _main in BANK0
   611                           ;!
   612                           ;!    None.
   613                           ;!
   614                           ;!Critical Paths under _main in BANK1
   615                           ;!
   616                           ;!    None.
   617                           ;!
   618                           ;!Critical Paths under _main in BANK3
   619                           ;!
   620                           ;!    None.
   621                           ;!
   622                           ;!Critical Paths under _main in BANK2
   623                           ;!
   624                           ;!    None.
   625                           
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   628 ;;
   629                           
   630                           ;!
   631                           ;!Call Graph Tables:
   632                           ;!
   633                           ;! ---------------------------------------------------------------------------------
   634                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   635                           ;! ---------------------------------------------------------------------------------
   636                           ;! (0) _main                                                14    14      0     160
   637                           ;!                                              0 COMMON    14    14      0
   638                           ;!                             _inicio
   639                           ;! ---------------------------------------------------------------------------------
   640                           ;! (1) _inicio                                               0     0      0       0
   641                           ;! ---------------------------------------------------------------------------------
   642                           ;! Estimated maximum stack depth 1
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;!
   645                           ;! Call Graph Graphs:
   646                           ;!
   647                           ;! _main (ROOT)
   648                           ;!   _inicio
   649                           ;!
   650                           
   651                           ;! Address spaces:
   652                           
   653                           ;!Name               Size   Autos  Total    Cost      Usage
   654                           ;!BANK3               60      0       0       9        0.0%
   655                           ;!BITBANK3            60      0       0       8        0.0%
   656                           ;!SFR3                 0      0       0       4        0.0%
   657                           ;!BITSFR3              0      0       0       4        0.0%
   658                           ;!BANK2               60      0       0      11        0.0%
   659                           ;!BITBANK2            60      0       0      10        0.0%
   660                           ;!SFR2                 0      0       0       5        0.0%
   661                           ;!BITSFR2              0      0       0       5        0.0%
   662                           ;!BANK1               50      0       0       7        0.0%
   663                           ;!BITBANK1            50      0       0       6        0.0%
   664                           ;!SFR1                 0      0       0       2        0.0%
   665                           ;!BITSFR1              0      0       0       2        0.0%
   666                           ;!BANK0               50      0      10       5       20.0%
   667                           ;!BITBANK0            50      0       0       4        0.0%
   668                           ;!SFR0                 0      0       0       1        0.0%
   669                           ;!BITSFR0              0      0       0       1        0.0%
   670                           ;!COMMON               E      E       E       1      100.0%
   671                           ;!BITCOMMON            E      0       0       0        0.0%
   672                           ;!CODE                 0      0       0       0        0.0%
   673                           ;!DATA                 0      0      1E      12        0.0%
   674                           ;!ABS                  0      0      1E       3        0.0%
   675                           ;!NULL                 0      0       0       0        0.0%
   676                           ;!STACK                0      0       0       2        0.0%
   677                           ;!EEDATA             100      0       0       0        0.0%
   678                           
   679                           	global	_main
   680                           
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 56 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  display        10    4[COMMON] unsigned char [10]
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : B00/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:        10       0       0       0       0
   699 ;;      Temps:          4       0       0       0       0
   700 ;;      Totals:        14       0       0       0       0
   701 ;;Total ram usage:       14 bytes
   702 ;; Hardware stack levels required when called:    1
   703 ;; This function calls:
   704 ;;		_inicio
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   710                           	file	"main.c"
   711                           	line	56
   712                           global __pmaintext
   713                           __pmaintext:	;psect for function _main
   714  0679                     psect	maintext
   715                           	file	"main.c"
   716                           	line	56
   717                           	global	__size_of_main
   718                           	__size_of_main	equ	__end_of_main-_main
   719  016F                     	
   720                           _main:	
   721  0679                     ;incstack = 0
   722                           	opt	stack 7
   723                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   724                           	line	58
   725                           	
   726                           l772:	
   727  0679                     ;main.c: 58:     inicio();
   728                           	fcall	_inicio
   729  0679  120A  118A  2653  120A  118A  	line	60
   730                           	
   731                           l774:	
   732  067E                     ;main.c: 60:     unsigned char display[10] = {0x88, 0xBE, 0xC4, 0x94, 0x66, 0x6d, 0x7d, 
                                 0x07, 0x7f, 0x67};
   733                           	movlw	(main@display)&0ffh
   734  067E  3074               	movwf	fsr0
   735  067F  0084               	movlw	low(main@F1273)
   736  0680  3020               	movwf	(??_main+0)+0
   737  0681  00F0               	movf	fsr0,w
   738  0682  0804               	movwf	((??_main+0)+0+1)
   739  0683  00F1               	movlw	10
   740  0684  300A               	movwf	((??_main+0)+0+2)
   741  0685  00F2               u190:
   742  0686                     	movf	(??_main+0)+0,w
   743  0686  0870               	movwf	fsr0
   744  0687  0084               	bcf	status, 7	;select IRP bank0
   745  0688  1383               	
   746                           	movf	indf,w
   747  0689  0800               	movwf	((??_main+0)+0+3)
   748  068A  00F3               	incf	(??_main+0)+0,f
   749  068B  0AF0               	movf	((??_main+0)+0+1),w
   750  068C  0871               	movwf	fsr0
   751  068D  0084               	
   752                           	movf	((??_main+0)+0+3),w
   753  068E  0873               	movwf	indf
   754  068F  0080               	incf	((??_main+0)+0+1),f
   755  0690  0AF1               	decfsz	((??_main+0)+0+2),f
   756  0691  0BF2               	goto	u190
   757  0692  2E86               	
   758                           	line	62
   759                           	
   760                           l776:	
   761  0693                     ;main.c: 62:     if (PORTBbits.RB0==1 && estado == 0){
   762                           	bcf	status, 5	;RP0=0, select bank0
   763  0693  1283               	bcf	status, 6	;RP1=0, select bank0
   764  0694  1303               	btfss	(6),0	;volatile
   765  0695  1C06               	goto	u201
   766  0696  2E98               	goto	u200
   767  0697  2E99               u201:
   768  0698                     	goto	l798
   769  0698  2EF0               u200:
   770  0699                     	
   771                           l778:	
   772  0699                     	movf	((_estado)),w
   773  0699  082F               	btfss	status,2
   774  069A  1D03               	goto	u211
   775  069B  2E9D               	goto	u210
   776  069C  2E9E               u211:
   777  069D                     	goto	l798
   778  069D  2EF0               u210:
   779  069E                     	line	63
   780                           	
   781                           l780:	
   782  069E                     ;main.c: 63:         PORTBbits.RB5 = 1;
   783                           	bsf	(6),5	;volatile
   784  069E  1686               	line	64
   785                           	
   786                           l782:	
   787  069F                     ;main.c: 64:         PORTC = display[3];
   788                           	movf	0+(main@display)+03h,w
   789  069F  0877               	movwf	(7)	;volatile
   790  06A0  0087               	line	65
   791                           ;main.c: 65:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   792                           	opt asmopt_push
   793                           opt asmopt_off
   794                           movlw  6
   795  06A1  3006               movwf	((??_main+0)+0+2),f
   796  06A2  00F2               movlw	19
   797  06A3  3013               movwf	((??_main+0)+0+1),f
   798  06A4  00F1               	movlw	173
   799  06A5  30AD               movwf	((??_main+0)+0),f
   800  06A6  00F0               	u377:
   801  06A7                     decfsz	((??_main+0)+0),f
   802  06A7  0BF0               	goto	u377
   803  06A8  2EA7               	decfsz	((??_main+0)+0+1),f
   804  06A9  0BF1               	goto	u377
   805  06AA  2EA7               	decfsz	((??_main+0)+0+2),f
   806  06AB  0BF2               	goto	u377
   807  06AC  2EA7               	nop2
   808  06AD  2EAE               opt asmopt_pop
   809                           
   810                           	line	66
   811                           	
   812                           l784:	
   813  06AE                     ;main.c: 66:         PORTBbits.RB5 = 0;
   814                           	bcf	status, 5	;RP0=0, select bank0
   815  06AE  1283               	bcf	status, 6	;RP1=0, select bank0
   816  06AF  1303               	bcf	(6),5	;volatile
   817  06B0  1286               	line	67
   818                           	
   819                           l786:	
   820  06B1                     ;main.c: 67:         PORTBbits.RB4 = 1;
   821                           	bsf	(6),4	;volatile
   822  06B1  1606               	line	68
   823                           ;main.c: 68:         PORTC = display[2];
   824                           	movf	0+(main@display)+02h,w
   825  06B2  0876               	movwf	(7)	;volatile
   826  06B3  0087               	line	69
   827                           ;main.c: 69:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   828                           	opt asmopt_push
   829                           opt asmopt_off
   830                           movlw  6
   831  06B4  3006               movwf	((??_main+0)+0+2),f
   832  06B5  00F2               movlw	19
   833  06B6  3013               movwf	((??_main+0)+0+1),f
   834  06B7  00F1               	movlw	173
   835  06B8  30AD               movwf	((??_main+0)+0),f
   836  06B9  00F0               	u387:
   837  06BA                     decfsz	((??_main+0)+0),f
   838  06BA  0BF0               	goto	u387
   839  06BB  2EBA               	decfsz	((??_main+0)+0+1),f
   840  06BC  0BF1               	goto	u387
   841  06BD  2EBA               	decfsz	((??_main+0)+0+2),f
   842  06BE  0BF2               	goto	u387
   843  06BF  2EBA               	nop2
   844  06C0  2EC1               opt asmopt_pop
   845                           
   846                           	line	70
   847                           	
   848                           l788:	
   849  06C1                     ;main.c: 70:         PORTBbits.RB4 = 0;
   850                           	bcf	status, 5	;RP0=0, select bank0
   851  06C1  1283               	bcf	status, 6	;RP1=0, select bank0
   852  06C2  1303               	bcf	(6),4	;volatile
   853  06C3  1206               	line	71
   854                           	
   855                           l790:	
   856  06C4                     ;main.c: 71:         PORTBbits.RB3 = 1;
   857                           	bsf	(6),3	;volatile
   858  06C4  1586               	line	72
   859                           ;main.c: 72:         PORTC = display[1];
   860                           	movf	0+(main@display)+01h,w
   861  06C5  0875               	movwf	(7)	;volatile
   862  06C6  0087               	line	73
   863                           ;main.c: 73:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   864                           	opt asmopt_push
   865                           opt asmopt_off
   866                           movlw  6
   867  06C7  3006               movwf	((??_main+0)+0+2),f
   868  06C8  00F2               movlw	19
   869  06C9  3013               movwf	((??_main+0)+0+1),f
   870  06CA  00F1               	movlw	173
   871  06CB  30AD               movwf	((??_main+0)+0),f
   872  06CC  00F0               	u397:
   873  06CD                     decfsz	((??_main+0)+0),f
   874  06CD  0BF0               	goto	u397
   875  06CE  2ECD               	decfsz	((??_main+0)+0+1),f
   876  06CF  0BF1               	goto	u397
   877  06D0  2ECD               	decfsz	((??_main+0)+0+2),f
   878  06D1  0BF2               	goto	u397
   879  06D2  2ECD               	nop2
   880  06D3  2ED4               opt asmopt_pop
   881                           
   882                           	line	74
   883                           	
   884                           l792:	
   885  06D4                     ;main.c: 74:         PORTBbits.RB3 = 0;
   886                           	bcf	status, 5	;RP0=0, select bank0
   887  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
   888  06D5  1303               	bcf	(6),3	;volatile
   889  06D6  1186               	line	75
   890                           ;main.c: 75:         PORTC = display[0];
   891                           	movf	(main@display),w
   892  06D7  0874               	movwf	(7)	;volatile
   893  06D8  0087               	line	76
   894                           ;main.c: 76:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   895                           	opt asmopt_push
   896                           opt asmopt_off
   897                           movlw  6
   898  06D9  3006               movwf	((??_main+0)+0+2),f
   899  06DA  00F2               movlw	19
   900  06DB  3013               movwf	((??_main+0)+0+1),f
   901  06DC  00F1               	movlw	173
   902  06DD  30AD               movwf	((??_main+0)+0),f
   903  06DE  00F0               	u407:
   904  06DF                     decfsz	((??_main+0)+0),f
   905  06DF  0BF0               	goto	u407
   906  06E0  2EDF               	decfsz	((??_main+0)+0+1),f
   907  06E1  0BF1               	goto	u407
   908  06E2  2EDF               	decfsz	((??_main+0)+0+2),f
   909  06E3  0BF2               	goto	u407
   910  06E4  2EDF               	nop2
   911  06E5  2EE6               opt asmopt_pop
   912                           
   913                           	line	77
   914                           	
   915                           l794:	
   916  06E6                     ;main.c: 77:         PORTC = 0;
   917                           	bcf	status, 5	;RP0=0, select bank0
   918  06E6  1283               	bcf	status, 6	;RP1=0, select bank0
   919  06E7  1303               	clrf	(7)	;volatile
   920  06E8  0187               	line	78
   921                           	
   922                           l796:	
   923  06E9                     ;main.c: 78:         estado = estado + 1;
   924                           	movf	(_estado),w
   925  06E9  082F               	addlw	01h
   926  06EA  3E01               	movwf	(??_main+0)+0
   927  06EB  00F0               	movf	(??_main+0)+0,w
   928  06EC  0870               	movwf	(_estado)
   929  06ED  00AF               	line	79
   930                           ;main.c: 79:     }
   931                           	goto	l798
   932  06EE  2EF0               	line	80
   933                           ;main.c: 80:     else {
   934                           	
   935                           l50:	
   936  06EF                     	goto	l798
   937  06EF  2EF0               	line	81
   938                           ;main.c: 81:     }
   939                           	
   940                           l51:	
   941  06F0                     	line	82
   942                           	
   943                           l798:	
   944  06F0                     ;main.c: 82:     if (estado == 1){
   945                           		decf	((_estado)),w
   946  06F0  032F               	btfss	status,2
   947  06F1  1D03               	goto	u221
   948  06F2  2EF4               	goto	u220
   949  06F3  2EF5               u221:
   950  06F4                     	goto	l846
   951  06F4  2F70               u220:
   952  06F5                     	line	83
   953                           	
   954                           l800:	
   955  06F5                     ;main.c: 83:         PORTC = display[0];
   956                           	movf	(main@display),w
   957  06F5  0874               	movwf	(7)	;volatile
   958  06F6  0087               	line	84
   959                           ;main.c: 84:         while (ganador == 0){
   960                           	goto	l844
   961  06F7  2F69               	
   962                           l54:	
   963  06F8                     	line	86
   964                           ;main.c: 86:             if (PORTBbits.RB2 == 1){
   965                           	btfss	(6),2	;volatile
   966  06F8  1D06               	goto	u231
   967  06F9  2EFB               	goto	u230
   968  06FA  2EFC               u231:
   969  06FB                     	goto	l806
   970  06FB  2F08               u230:
   971  06FC                     	line	88
   972                           	
   973                           l802:	
   974  06FC                     ;main.c: 88:                 debounce = 1;
   975                           	clrf	(_debounce)
   976  06FC  01AD               	incf	(_debounce),f
   977  06FD  0AAD               	line	89
   978                           	
   979                           l804:	
   980  06FE                     ;main.c: 89:                 _delay((unsigned long)((100)*(4000000/4000.0)));
   981                           	opt asmopt_push
   982                           opt asmopt_off
   983                           movlw	130
   984  06FE  3082               movwf	((??_main+0)+0+1),f
   985  06FF  00F1               	movlw	221
   986  0700  30DD               movwf	((??_main+0)+0),f
   987  0701  00F0               	u417:
   988  0702                     decfsz	((??_main+0)+0),f
   989  0702  0BF0               	goto	u417
   990  0703  2F02               	decfsz	((??_main+0)+0+1),f
   991  0704  0BF1               	goto	u417
   992  0705  2F02               	nop2
   993  0706  2F07               opt asmopt_pop
   994                           
   995                           	goto	l806
   996  0707  2F08               	line	90
   997                           ;main.c: 90:             }
   998                           	
   999                           l55:	
  1000  0708                     	line	91
  1001                           	
  1002                           l806:	
  1003  0708                     ;main.c: 91:             if (debounce == 1 && PORTBbits.RB2 == 0){
  1004                           	bcf	status, 5	;RP0=0, select bank0
  1005  0708  1283               	bcf	status, 6	;RP1=0, select bank0
  1006  0709  1303               		decf	((_debounce)),w
  1007  070A  032D               	btfss	status,2
  1008  070B  1D03               	goto	u241
  1009  070C  2F0E               	goto	u240
  1010  070D  2F0F               u241:
  1011  070E                     	goto	l822
  1012  070E  2F2F               u240:
  1013  070F                     	
  1014                           l808:	
  1015  070F                     	btfsc	(6),2	;volatile
  1016  070F  1906               	goto	u251
  1017  0710  2F12               	goto	u250
  1018  0711  2F13               u251:
  1019  0712                     	goto	l822
  1020  0712  2F2F               u250:
  1021  0713                     	line	92
  1022                           	
  1023                           l810:	
  1024  0713                     ;main.c: 92:                 debounce = 0;
  1025                           	clrf	(_debounce)
  1026  0713  01AD               	line	93
  1027                           	
  1028                           l812:	
  1029  0714                     ;main.c: 93:                 if (PORTA == 0){
  1030                           	movf	((5)),w	;volatile
  1031  0714  0805               	btfss	status,2
  1032  0715  1D03               	goto	u261
  1033  0716  2F18               	goto	u260
  1034  0717  2F19               u261:
  1035  0718                     	goto	l816
  1036  0718  2F1C               u260:
  1037  0719                     	line	94
  1038                           	
  1039                           l814:	
  1040  0719                     ;main.c: 94:                     PORTA = 1;
  1041                           	movlw	low(01h)
  1042  0719  3001               	movwf	(5)	;volatile
  1043  071A  0085               	line	95
  1044                           ;main.c: 95:                 }
  1045                           	goto	l58
  1046  071B  2F20               	line	96
  1047                           ;main.c: 96:                 else{
  1048                           	
  1049                           l57:	
  1050  071C                     	line	97
  1051                           	
  1052                           l816:	
  1053  071C                     ;main.c: 97:                     PORTA = PORTA *2;
  1054                           	movf	(5),w	;volatile
  1055  071C  0805               	movwf	(??_main+0)+0
  1056  071D  00F0               	addwf	(??_main+0)+0,w
  1057  071E  0770               	movwf	(5)	;volatile
  1058  071F  0085               	line	98
  1059                           ;main.c: 98:                 }
  1060                           	
  1061                           l58:	
  1062  0720                     	line	99
  1063                           ;main.c: 99:                 if (PORTA == 0b10000000){
  1064                           		movlw	128
  1065  0720  3080               	xorwf	((5)),w	;volatile
  1066  0721  0605               	btfss	status,2
  1067  0722  1D03               	goto	u271
  1068  0723  2F25               	goto	u270
  1069  0724  2F26               u271:
  1070  0725                     	goto	l822
  1071  0725  2F2F               u270:
  1072  0726                     	line	100
  1073                           	
  1074                           l818:	
  1075  0726                     ;main.c: 100:                     estado = estado + 1;
  1076                           	movf	(_estado),w
  1077  0726  082F               	addlw	01h
  1078  0727  3E01               	movwf	(??_main+0)+0
  1079  0728  00F0               	movf	(??_main+0)+0,w
  1080  0729  0870               	movwf	(_estado)
  1081  072A  00AF               	line	101
  1082                           	
  1083                           l820:	
  1084  072B                     ;main.c: 101:                     ganador = 1;
  1085                           	clrf	(_ganador)
  1086  072B  01AE               	incf	(_ganador),f
  1087  072C  0AAE               	goto	l822
  1088  072D  2F2F               	line	105
  1089                           ;main.c: 105:                 }
  1090                           	
  1091                           l59:	
  1092  072E                     	goto	l822
  1093  072E  2F2F               	line	106
  1094                           ;main.c: 106:             }
  1095                           	
  1096                           l56:	
  1097  072F                     	line	110
  1098                           	
  1099                           l822:	
  1100  072F                     ;main.c: 110:             if (PORTBbits.RB1 == 1){
  1101                           	btfss	(6),1	;volatile
  1102  072F  1C86               	goto	u281
  1103  0730  2F32               	goto	u280
  1104  0731  2F33               u281:
  1105  0732                     	goto	l828
  1106  0732  2F3F               u280:
  1107  0733                     	line	112
  1108                           	
  1109                           l824:	
  1110  0733                     ;main.c: 112:                 debounce2 = 1;
  1111                           	clrf	(_debounce2)
  1112  0733  01AC               	incf	(_debounce2),f
  1113  0734  0AAC               	line	113
  1114                           	
  1115                           l826:	
  1116  0735                     ;main.c: 113:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1117                           	opt asmopt_push
  1118                           opt asmopt_off
  1119                           movlw	130
  1120  0735  3082               movwf	((??_main+0)+0+1),f
  1121  0736  00F1               	movlw	221
  1122  0737  30DD               movwf	((??_main+0)+0),f
  1123  0738  00F0               	u427:
  1124  0739                     decfsz	((??_main+0)+0),f
  1125  0739  0BF0               	goto	u427
  1126  073A  2F39               	decfsz	((??_main+0)+0+1),f
  1127  073B  0BF1               	goto	u427
  1128  073C  2F39               	nop2
  1129  073D  2F3E               opt asmopt_pop
  1130                           
  1131                           	goto	l828
  1132  073E  2F3F               	line	114
  1133                           ;main.c: 114:             }
  1134                           	
  1135                           l60:	
  1136  073F                     	line	115
  1137                           	
  1138                           l828:	
  1139  073F                     ;main.c: 115:             if (debounce2 == 1 && PORTBbits.RB1 == 0){
  1140                           	bcf	status, 5	;RP0=0, select bank0
  1141  073F  1283               	bcf	status, 6	;RP1=0, select bank0
  1142  0740  1303               		decf	((_debounce2)),w
  1143  0741  032C               	btfss	status,2
  1144  0742  1D03               	goto	u291
  1145  0743  2F45               	goto	u290
  1146  0744  2F46               u291:
  1147  0745                     	goto	l844
  1148  0745  2F69               u290:
  1149  0746                     	
  1150                           l830:	
  1151  0746                     	btfsc	(6),1	;volatile
  1152  0746  1886               	goto	u301
  1153  0747  2F49               	goto	u300
  1154  0748  2F4A               u301:
  1155  0749                     	goto	l844
  1156  0749  2F69               u300:
  1157  074A                     	line	116
  1158                           	
  1159                           l832:	
  1160  074A                     ;main.c: 116:                 debounce2 = 0;
  1161                           	clrf	(_debounce2)
  1162  074A  01AC               	line	117
  1163                           	
  1164                           l834:	
  1165  074B                     ;main.c: 117:                 if (PORTD == 0){
  1166                           	movf	((8)),w	;volatile
  1167  074B  0808               	btfss	status,2
  1168  074C  1D03               	goto	u311
  1169  074D  2F4F               	goto	u310
  1170  074E  2F50               u311:
  1171  074F                     	goto	l838
  1172  074F  2F53               u310:
  1173  0750                     	line	118
  1174                           	
  1175                           l836:	
  1176  0750                     ;main.c: 118:                     PORTD = 1;
  1177                           	movlw	low(01h)
  1178  0750  3001               	movwf	(8)	;volatile
  1179  0751  0088               	line	119
  1180                           ;main.c: 119:                 }
  1181                           	goto	l63
  1182  0752  2F57               	line	120
  1183                           ;main.c: 120:                 else{
  1184                           	
  1185                           l62:	
  1186  0753                     	line	121
  1187                           	
  1188                           l838:	
  1189  0753                     ;main.c: 121:                     PORTD = PORTD *2;
  1190                           	movf	(8),w	;volatile
  1191  0753  0808               	movwf	(??_main+0)+0
  1192  0754  00F0               	addwf	(??_main+0)+0,w
  1193  0755  0770               	movwf	(8)	;volatile
  1194  0756  0088               	line	122
  1195                           ;main.c: 122:                 }
  1196                           	
  1197                           l63:	
  1198  0757                     	line	123
  1199                           ;main.c: 123:                 if (PORTD == 0b10000000){
  1200                           		movlw	128
  1201  0757  3080               	xorwf	((8)),w	;volatile
  1202  0758  0608               	btfss	status,2
  1203  0759  1D03               	goto	u321
  1204  075A  2F5C               	goto	u320
  1205  075B  2F5D               u321:
  1206  075C                     	goto	l844
  1207  075C  2F69               u320:
  1208  075D                     	line	124
  1209                           	
  1210                           l840:	
  1211  075D                     ;main.c: 124:                     estado = estado + 1;
  1212                           	movf	(_estado),w
  1213  075D  082F               	addlw	01h
  1214  075E  3E01               	movwf	(??_main+0)+0
  1215  075F  00F0               	movf	(??_main+0)+0,w
  1216  0760  0870               	movwf	(_estado)
  1217  0761  00AF               	line	125
  1218                           	
  1219                           l842:	
  1220  0762                     ;main.c: 125:                     ganador = 2;
  1221                           	movlw	low(02h)
  1222  0762  3002               	movwf	(??_main+0)+0
  1223  0763  00F0               	movf	(??_main+0)+0,w
  1224  0764  0870               	movwf	(_ganador)
  1225  0765  00AE               	goto	l844
  1226  0766  2F69               	line	129
  1227                           ;main.c: 129:                 }
  1228                           	
  1229                           l64:	
  1230  0767                     	goto	l844
  1231  0767  2F69               	line	130
  1232                           ;main.c: 130:             }
  1233                           	
  1234                           l61:	
  1235  0768                     	goto	l844
  1236  0768  2F69               	line	131
  1237                           ;main.c: 131:         }
  1238                           	
  1239                           l53:	
  1240  0769                     	line	84
  1241                           	
  1242                           l844:	
  1243  0769                     ;main.c: 84:         while (ganador == 0){
  1244                           	movf	((_ganador)),w
  1245  0769  082E               	btfsc	status,2
  1246  076A  1903               	goto	u331
  1247  076B  2F6D               	goto	u330
  1248  076C  2F6E               u331:
  1249  076D                     	goto	l54
  1250  076D  2EF8               u330:
  1251  076E                     	goto	l846
  1252  076E  2F70               	
  1253                           l65:	
  1254  076F                     	goto	l846
  1255  076F  2F70               	line	132
  1256                           ;main.c: 132:     }
  1257                           	
  1258                           l52:	
  1259  0770                     	line	136
  1260                           	
  1261                           l846:	
  1262  0770                     ;main.c: 136:     if (estado == 2){
  1263                           		movlw	2
  1264  0770  3002               	xorwf	((_estado)),w
  1265  0771  062F               	btfss	status,2
  1266  0772  1D03               	goto	u341
  1267  0773  2F75               	goto	u340
  1268  0774  2F76               u341:
  1269  0775                     	goto	l69
  1270  0775  2FE5               u340:
  1271  0776                     	line	137
  1272                           	
  1273                           l848:	
  1274  0776                     ;main.c: 137:         if (ganador == 1){
  1275                           		decf	((_ganador)),w
  1276  0776  032E               	btfss	status,2
  1277  0777  1D03               	goto	u351
  1278  0778  2F7A               	goto	u350
  1279  0779  2F7B               u351:
  1280  077A                     	goto	l858
  1281  077A  2FAC               u350:
  1282  077B                     	line	138
  1283                           	
  1284                           l850:	
  1285  077B                     ;main.c: 138:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1286                           	opt asmopt_push
  1287                           opt asmopt_off
  1288                           movlw  2
  1289  077B  3002               movwf	((??_main+0)+0+2),f
  1290  077C  00F2               movlw	4
  1291  077D  3004               movwf	((??_main+0)+0+1),f
  1292  077E  00F1               	movlw	186
  1293  077F  30BA               movwf	((??_main+0)+0),f
  1294  0780  00F0               	u437:
  1295  0781                     decfsz	((??_main+0)+0),f
  1296  0781  0BF0               	goto	u437
  1297  0782  2F81               	decfsz	((??_main+0)+0+1),f
  1298  0783  0BF1               	goto	u437
  1299  0784  2F81               	decfsz	((??_main+0)+0+2),f
  1300  0785  0BF2               	goto	u437
  1301  0786  2F81               	nop
  1302  0787  0000               opt asmopt_pop
  1303                           
  1304                           	line	139
  1305                           	
  1306                           l852:	
  1307  0788                     ;main.c: 139:             PORTBbits.RB7 = 1;
  1308                           	bcf	status, 5	;RP0=0, select bank0
  1309  0788  1283               	bcf	status, 6	;RP1=0, select bank0
  1310  0789  1303               	bsf	(6),7	;volatile
  1311  078A  1786               	line	140
  1312                           ;main.c: 140:             _delay((unsigned long)((400)*(4000000/4000.0)));
  1313                           	opt asmopt_push
  1314                           opt asmopt_off
  1315                           movlw  3
  1316  078B  3003               movwf	((??_main+0)+0+2),f
  1317  078C  00F2               movlw	8
  1318  078D  3008               movwf	((??_main+0)+0+1),f
  1319  078E  00F1               	movlw	119
  1320  078F  3077               movwf	((??_main+0)+0),f
  1321  0790  00F0               	u447:
  1322  0791                     decfsz	((??_main+0)+0),f
  1323  0791  0BF0               	goto	u447
  1324  0792  2F91               	decfsz	((??_main+0)+0+1),f
  1325  0793  0BF1               	goto	u447
  1326  0794  2F91               	decfsz	((??_main+0)+0+2),f
  1327  0795  0BF2               	goto	u447
  1328  0796  2F91               opt asmopt_pop
  1329                           
  1330                           	line	141
  1331                           ;main.c: 141:             PORTC = display[1];
  1332                           	movf	0+(main@display)+01h,w
  1333  0797  0875               	bcf	status, 5	;RP0=0, select bank0
  1334  0798  1283               	bcf	status, 6	;RP1=0, select bank0
  1335  0799  1303               	movwf	(7)	;volatile
  1336  079A  0087               	line	142
  1337                           ;main.c: 142:             _delay((unsigned long)((400)*(4000000/4000.0)));
  1338                           	opt asmopt_push
  1339                           opt asmopt_off
  1340                           movlw  3
  1341  079B  3003               movwf	((??_main+0)+0+2),f
  1342  079C  00F2               movlw	8
  1343  079D  3008               movwf	((??_main+0)+0+1),f
  1344  079E  00F1               	movlw	119
  1345  079F  3077               movwf	((??_main+0)+0),f
  1346  07A0  00F0               	u457:
  1347  07A1                     decfsz	((??_main+0)+0),f
  1348  07A1  0BF0               	goto	u457
  1349  07A2  2FA1               	decfsz	((??_main+0)+0+1),f
  1350  07A3  0BF1               	goto	u457
  1351  07A4  2FA1               	decfsz	((??_main+0)+0+2),f
  1352  07A5  0BF2               	goto	u457
  1353  07A6  2FA1               opt asmopt_pop
  1354                           
  1355                           	line	143
  1356                           	
  1357                           l854:	
  1358  07A7                     ;main.c: 143:             ganador = 0;
  1359                           	bcf	status, 5	;RP0=0, select bank0
  1360  07A7  1283               	bcf	status, 6	;RP1=0, select bank0
  1361  07A8  1303               	clrf	(_ganador)
  1362  07A9  01AE               	line	144
  1363                           	
  1364                           l856:	
  1365  07AA                     ;main.c: 144:             estado = 0;
  1366                           	clrf	(_estado)
  1367  07AA  01AF               	goto	l858
  1368  07AB  2FAC               	line	145
  1369                           ;main.c: 145:         }
  1370                           	
  1371                           l67:	
  1372  07AC                     	line	146
  1373                           	
  1374                           l858:	
  1375  07AC                     ;main.c: 146:         if (ganador == 2){
  1376                           		movlw	2
  1377  07AC  3002               	xorwf	((_ganador)),w
  1378  07AD  062E               	btfss	status,2
  1379  07AE  1D03               	goto	u361
  1380  07AF  2FB1               	goto	u360
  1381  07B0  2FB2               u361:
  1382  07B1                     	goto	l69
  1383  07B1  2FE5               u360:
  1384  07B2                     	line	147
  1385                           	
  1386                           l860:	
  1387  07B2                     ;main.c: 147:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1388                           	opt asmopt_push
  1389                           opt asmopt_off
  1390                           movlw  2
  1391  07B2  3002               movwf	((??_main+0)+0+2),f
  1392  07B3  00F2               movlw	4
  1393  07B4  3004               movwf	((??_main+0)+0+1),f
  1394  07B5  00F1               	movlw	186
  1395  07B6  30BA               movwf	((??_main+0)+0),f
  1396  07B7  00F0               	u467:
  1397  07B8                     decfsz	((??_main+0)+0),f
  1398  07B8  0BF0               	goto	u467
  1399  07B9  2FB8               	decfsz	((??_main+0)+0+1),f
  1400  07BA  0BF1               	goto	u467
  1401  07BB  2FB8               	decfsz	((??_main+0)+0+2),f
  1402  07BC  0BF2               	goto	u467
  1403  07BD  2FB8               	nop
  1404  07BE  0000               opt asmopt_pop
  1405                           
  1406                           	line	148
  1407                           	
  1408                           l862:	
  1409  07BF                     ;main.c: 148:            PORTBbits.RB6 = 1;
  1410                           	bcf	status, 5	;RP0=0, select bank0
  1411  07BF  1283               	bcf	status, 6	;RP1=0, select bank0
  1412  07C0  1303               	bsf	(6),6	;volatile
  1413  07C1  1706               	line	149
  1414                           ;main.c: 149:             _delay((unsigned long)((400)*(4000000/4000.0)));
  1415                           	opt asmopt_push
  1416                           opt asmopt_off
  1417                           movlw  3
  1418  07C2  3003               movwf	((??_main+0)+0+2),f
  1419  07C3  00F2               movlw	8
  1420  07C4  3008               movwf	((??_main+0)+0+1),f
  1421  07C5  00F1               	movlw	119
  1422  07C6  3077               movwf	((??_main+0)+0),f
  1423  07C7  00F0               	u477:
  1424  07C8                     decfsz	((??_main+0)+0),f
  1425  07C8  0BF0               	goto	u477
  1426  07C9  2FC8               	decfsz	((??_main+0)+0+1),f
  1427  07CA  0BF1               	goto	u477
  1428  07CB  2FC8               	decfsz	((??_main+0)+0+2),f
  1429  07CC  0BF2               	goto	u477
  1430  07CD  2FC8               opt asmopt_pop
  1431                           
  1432                           	line	150
  1433                           ;main.c: 150:            PORTC = display[2];
  1434                           	movf	0+(main@display)+02h,w
  1435  07CE  0876               	bcf	status, 5	;RP0=0, select bank0
  1436  07CF  1283               	bcf	status, 6	;RP1=0, select bank0
  1437  07D0  1303               	movwf	(7)	;volatile
  1438  07D1  0087               	line	151
  1439                           ;main.c: 151:            _delay((unsigned long)((400)*(4000000/4000.0)));
  1440                           	opt asmopt_push
  1441                           opt asmopt_off
  1442                           movlw  3
  1443  07D2  3003               movwf	((??_main+0)+0+2),f
  1444  07D3  00F2               movlw	8
  1445  07D4  3008               movwf	((??_main+0)+0+1),f
  1446  07D5  00F1               	movlw	119
  1447  07D6  3077               movwf	((??_main+0)+0),f
  1448  07D7  00F0               	u487:
  1449  07D8                     decfsz	((??_main+0)+0),f
  1450  07D8  0BF0               	goto	u487
  1451  07D9  2FD8               	decfsz	((??_main+0)+0+1),f
  1452  07DA  0BF1               	goto	u487
  1453  07DB  2FD8               	decfsz	((??_main+0)+0+2),f
  1454  07DC  0BF2               	goto	u487
  1455  07DD  2FD8               opt asmopt_pop
  1456                           
  1457                           	line	152
  1458                           	
  1459                           l864:	
  1460  07DE                     ;main.c: 152:            ganador = 0;
  1461                           	bcf	status, 5	;RP0=0, select bank0
  1462  07DE  1283               	bcf	status, 6	;RP1=0, select bank0
  1463  07DF  1303               	clrf	(_ganador)
  1464  07E0  01AE               	line	153
  1465                           	
  1466                           l866:	
  1467  07E1                     ;main.c: 153:            estado = 0;
  1468                           	clrf	(_estado)
  1469  07E1  01AF               	goto	l69
  1470  07E2  2FE5               	line	154
  1471                           ;main.c: 154:         }
  1472                           	
  1473                           l68:	
  1474  07E3                     	goto	l69
  1475  07E3  2FE5               	line	155
  1476                           ;main.c: 155:     }
  1477                           	
  1478                           l66:	
  1479  07E4                     	goto	l69
  1480  07E4  2FE5               	line	157
  1481                           	
  1482                           l868:	
  1483  07E5                     	line	158
  1484                           ;main.c: 157:     return;
  1485                           	
  1486                           l69:	
  1487  07E5                     	global	start
  1488                           	ljmp	start
  1489  07E5  120A  118A  2800   	opt stack 0
  1490                           GLOBAL	__end_of_main
  1491                           	__end_of_main:
  1492  07E8                     	signat	_main,89
  1493                           	global	_inicio
  1494                           
  1495 ;; *************** function _inicio *****************
  1496 ;; Defined at:
  1497 ;;		line 26 in file "main.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1524                           	line	26
  1525                           global __ptext1
  1526                           __ptext1:	;psect for function _inicio
  1527  0653                     psect	text1
  1528                           	file	"main.c"
  1529                           	line	26
  1530                           	global	__size_of_inicio
  1531                           	__size_of_inicio	equ	__end_of_inicio-_inicio
  1532  0026                     	
  1533                           _inicio:	
  1534  0653                     ;incstack = 0
  1535                           	opt	stack 7
  1536                           ; Regs used in _inicio: [wreg+status,2]
  1537                           	line	28
  1538                           	
  1539                           l756:	
  1540  0653                     ;main.c: 28:     TRISA = 0;
  1541                           	bsf	status, 5	;RP0=1, select bank1
  1542  0653  1683               	bcf	status, 6	;RP1=0, select bank1
  1543  0654  1303               	clrf	(133)^080h	;volatile
  1544  0655  0185               	line	29
  1545                           ;main.c: 29:     ANSEL = 0;
  1546                           	bsf	status, 5	;RP0=1, select bank3
  1547  0656  1683               	bsf	status, 6	;RP1=1, select bank3
  1548  0657  1703               	clrf	(392)^0180h	;volatile
  1549  0658  0188               	line	30
  1550                           ;main.c: 30:     PORTA = 0;
  1551                           	bcf	status, 5	;RP0=0, select bank0
  1552  0659  1283               	bcf	status, 6	;RP1=0, select bank0
  1553  065A  1303               	clrf	(5)	;volatile
  1554  065B  0185               	line	33
  1555                           ;main.c: 33:     ANSELH = 0;
  1556                           	bsf	status, 5	;RP0=1, select bank3
  1557  065C  1683               	bsf	status, 6	;RP1=1, select bank3
  1558  065D  1703               	clrf	(393)^0180h	;volatile
  1559  065E  0189               	line	34
  1560                           	
  1561                           l758:	
  1562  065F                     ;main.c: 34:     TRISB = 0b00000111;
  1563                           	movlw	low(07h)
  1564  065F  3007               	bsf	status, 5	;RP0=1, select bank1
  1565  0660  1683               	bcf	status, 6	;RP1=0, select bank1
  1566  0661  1303               	movwf	(134)^080h	;volatile
  1567  0662  0086               	line	35
  1568                           	
  1569                           l760:	
  1570  0663                     ;main.c: 35:     PORTB = 0b00000111;
  1571                           	movlw	low(07h)
  1572  0663  3007               	bcf	status, 5	;RP0=0, select bank0
  1573  0664  1283               	bcf	status, 6	;RP1=0, select bank0
  1574  0665  1303               	movwf	(6)	;volatile
  1575  0666  0086               	line	36
  1576                           	
  1577                           l762:	
  1578  0667                     ;main.c: 36:     WPUB = 0b00000111;
  1579                           	movlw	low(07h)
  1580  0667  3007               	bsf	status, 5	;RP0=1, select bank1
  1581  0668  1683               	bcf	status, 6	;RP1=0, select bank1
  1582  0669  1303               	movwf	(149)^080h	;volatile
  1583  066A  0095               	line	37
  1584                           	
  1585                           l764:	
  1586  066B                     ;main.c: 37:     OPTION_REG = 0b00000111;
  1587                           	movlw	low(07h)
  1588  066B  3007               	movwf	(129)^080h	;volatile
  1589  066C  0081               	line	40
  1590                           ;main.c: 40:     TRISC = 0;
  1591                           	clrf	(135)^080h	;volatile
  1592  066D  0187               	line	41
  1593                           	
  1594                           l766:	
  1595  066E                     ;main.c: 41:     PORTC = 0b11111111;
  1596                           	movlw	low(0FFh)
  1597  066E  30FF               	bcf	status, 5	;RP0=0, select bank0
  1598  066F  1283               	bcf	status, 6	;RP1=0, select bank0
  1599  0670  1303               	movwf	(7)	;volatile
  1600  0671  0087               	line	44
  1601                           	
  1602                           l768:	
  1603  0672                     ;main.c: 44:     TRISD = 0;
  1604                           	bsf	status, 5	;RP0=1, select bank1
  1605  0672  1683               	bcf	status, 6	;RP1=0, select bank1
  1606  0673  1303               	clrf	(136)^080h	;volatile
  1607  0674  0188               	line	45
  1608                           	
  1609                           l770:	
  1610  0675                     ;main.c: 45:     PORTD = 0;
  1611                           	bcf	status, 5	;RP0=0, select bank0
  1612  0675  1283               	bcf	status, 6	;RP1=0, select bank0
  1613  0676  1303               	clrf	(8)	;volatile
  1614  0677  0188               	line	46
  1615                           	
  1616                           l31:	
  1617  0678                     	return
  1618  0678  0008               	opt stack 0
  1619                           GLOBAL	__end_of_inicio
  1620                           	__end_of_inicio:
  1621  0679                     	signat	_inicio,89
  1622                           global	___latbits
  1623                           ___latbits	equ	2
  1624  0002                     	global	btemp
  1625                           	btemp set 07Eh
  1626  007E                     
  1627                           	DABS	1,126,2	;btemp
  1628                           	global	wtemp0
  1629                           	wtemp0 set btemp+0
  1630  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     160
                                              0 COMMON    14    14      0
                             _inicio
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _inicio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 30 14:46:06 2020

                       pc 0002               __CFG_CP$OFF 0000                        l31 0678  
                      l50 06EF                        l51 06F0                        l52 0770  
                      l60 073F                        l53 0769                        l61 0768  
                      l62 0753                        l54 06F8                        l63 0757  
                      l55 0708                        l64 0767                        l56 072F  
                      l65 076F                        l57 071C                        l66 07E4  
                      l58 0720                        l67 07AC                        l59 072E  
                      l68 07E3                        l69 07E5                        fsr 0004  
                     l800 06F5                       l810 0713                       l802 06FC  
                     l820 072B                       l812 0714                       l804 06FE  
                     l830 0746                       l814 0719                       l822 072F  
                     l806 0708                       l760 0663                       l840 075D  
                     l832 074A                       l824 0733                       l816 071C  
                     l808 070F                       l770 0675                       l762 0667  
                     l850 077B                       l842 0762                       l834 074B  
                     l826 0735                       l818 0726                       l764 066B  
                     l756 0653                       l860 07B2                       l852 0788  
                     l836 0750                       l828 073F                       l844 0769  
                     l780 069E                       l772 0679                       l766 066E  
                     l758 065F                       l862 07BF                       l854 07A7  
                     l838 0753                       l846 0770                       l790 06C4  
                     l782 069F                       l774 067E                       l768 0672  
                     l864 07DE                       l856 07AA                       l848 0776  
                     l792 06D4                       l784 06AE                       l776 0693  
                     l866 07E1                       l858 07AC                       l794 06E6  
                     l786 06B1                       l778 0699                       l868 07E5  
                     l796 06E9                       l788 06C1                       l798 06F0  
                     u200 0699                       u201 0698                       u210 069E  
                     u211 069D                       u300 074A                       u220 06F5  
                     u301 0749                       u221 06F4                       u310 0750  
                     u230 06FC                       u311 074F                       u231 06FB  
                     u320 075D                       u240 070F                       u321 075C  
                     u241 070E                       u330 076E                       u250 0713  
                     u331 076D                       u251 0712                       u340 0776  
                     u260 0719                       u341 0775                       u261 0718  
                     u350 077B                       u270 0726                       u190 0686  
                     u351 077A                       u271 0725                       u407 06DF  
                     u360 07B2                       u280 0733                       u361 07B1  
                     u281 0732                       u417 0702                       u290 0746  
            __CFG_CPD$OFF 0000                       u291 0745                       u427 0739  
                     u437 0781                       u447 0791                       u457 07A1  
                     u377 06A7                       u467 07B8                       u387 06BA  
                     u477 07C8                       u397 06CD                       u487 07D8  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
             main@display 0074                      _WPUB 0095              __CFG_WRT$OFF 0000  
                    _main 0679                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07E8              __end_of_main 07E8                    ??_main 0070  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000                    _inicio 0653  
                  _estado 002F   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 0636                __pbssBANK0 002A                __pmaintext 0679  
                 ?_inicio 0070           __size_of_inicio 0026                   _ganador 002E  
                 __ptext1 0653      end_of_initialization 07FC                 _PORTBbits 0006  
          __end_of_inicio 0679       start_initialization 07E8  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 0640               __pdataBANK0 0020                  ??_inicio 0070  
               ___latbits 0002                 _debounce2 002C                 main@F1273 0020  
                _debounce 002D         __CFG_BOR4V$BOR40V 0000             __size_of_main 016F  
                _jugador1 002B                  _jugador2 002A                  init_ram0 0644  
              _OPTION_REG 0081  
