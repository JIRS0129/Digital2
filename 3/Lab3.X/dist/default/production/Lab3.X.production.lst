

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Feb 12 20:16:14 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,___fladd
   868                           	FNCALL	_main,___fldiv
   869                           	FNCALL	_main,___flmul
   870                           	FNCALL	_main,___flneg
   871                           	FNCALL	_main,___fltol
   872                           	FNCALL	_main,___xxtofl
   873                           	FNCALL	_main,_clcLCD
   874                           	FNCALL	_main,_configADC
   875                           	FNCALL	_main,_configCanal
   876                           	FNCALL	_main,_initLCD
   877                           	FNCALL	_main,_initUSART
   878                           	FNCALL	_main,_readADC
   879                           	FNCALL	_main,_selCanal
   880                           	FNCALL	_main,_sendUSART
   881                           	FNCALL	_main,_setCursorLCD
   882                           	FNCALL	_main,_setup
   883                           	FNCALL	_main,_writeFloat
   884                           	FNCALL	_main,_writeIntLCD
   885                           	FNCALL	_main,_writeStrLCD
   886                           	FNCALL	_writeFloat,_setCursorLCD
   887                           	FNCALL	_writeFloat,_writeCharLCD
   888                           	FNCALL	_writeFloat,_writeIntLCD
   889                           	FNCALL	_writeIntLCD,_sprintf
   890                           	FNCALL	_writeIntLCD,_writeStrLCD
   891                           	FNCALL	_writeStrLCD,_writeCharLCD
   892                           	FNCALL	_sprintf,___lwdiv
   893                           	FNCALL	_sprintf,___lwmod
   894                           	FNCALL	_setCursorLCD,_cmdLCD
   895                           	FNCALL	_initLCD,_cmdLCD
   896                           	FNCALL	_clcLCD,_cmdLCD
   897                           	FNCALL	___flmul,__Umul8_16
   898                           	FNROOT	_main
   899                           	FNCALL	intlevel1,_ISR
   900                           	global	intlevel1
   901                           	FNROOT	intlevel1
   902                           	global	_dpowers
   903                           psect	strings,class=STRING,delta=2,noexec
   904                           global __pstrings
   905                           __pstrings:
   906  1000                     stringtab:
   907  1000                     	global    __stringtab
   908                           __stringtab:
   909  1000                     ;	String table - string pointers are 1 byte each
   910                           	btfsc	(btemp+1),7
   911  1000  1BFF               	ljmp	stringcode
   912  1001  280A               	bcf	status,7
   913  1002  1383               	btfsc	(btemp+1),0
   914  1003  187F               	bsf	status,7
   915  1004  1783               	movf	indf,w
   916  1005  0800               	incf fsr
   917  1006  0A84               skipnz
   918  1007  1903               incf btemp+1
   919  1008  0AFF               	return
   920  1009  0008               stringcode:stringdir:
   921  100A                     movlw high(stringdir)
      + 100A                     stringdir:	
   922  100A  3010               movwf pclath
   923  100B  008A               movf fsr,w
   924  100C  0804               incf fsr
   925  100D  0A84               	addwf pc
   926  100E  0782               	global __stringbase
   927                           __stringbase:
   928  100F                     	retlw	0
   929  100F  3400               psect	strings
   930                           	global    __end_of__stringtab
   931                           __end_of__stringtab:
   932  1010                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   933                           	line	358
   934                           _dpowers:
   935  1010                     	retlw	01h
   936  1010  3401               	retlw	0
   937  1011  3400               
   938                           	retlw	0Ah
   939  1012  340A               	retlw	0
   940  1013  3400               
   941                           	retlw	064h
   942  1014  3464               	retlw	0
   943  1015  3400               
   944                           	retlw	0E8h
   945  1016  34E8               	retlw	03h
   946  1017  3403               
   947                           	retlw	010h
   948  1018  3410               	retlw	027h
   949  1019  3427               
   950                           	global __end_of_dpowers
   951                           __end_of_dpowers:
   952  101A                     	global	_dpowers
   953                           	global	_receivingData
   954                           	global	_entero2
   955                           	global	_adc
   956                           	global	_entero1
   957                           	global	_sensor2
   958                           	global	_sensor1
   959                           	global	_float2
   960                           	global	_float1
   961                           	global	_sensorF2
   962                           	global	_sensorF1
   963                           	global	_interrupcionUSART
   964                           	global	_dec2
   965                           	global	_dec1
   966                           	global	_cont
   967                           	global	_contADC
   968                           	global	_cursor
   969                           	global	_TXREG
   970                           _TXREG	set	0x19
   971  0019                     	global	_RCSTAbits
   972                           _RCSTAbits	set	0x18
   973  0018                     	global	_PORTE
   974                           _PORTE	set	0x9
   975  0009                     	global	_PORTD
   976                           _PORTD	set	0x8
   977  0008                     	global	_PORTC
   978                           _PORTC	set	0x7
   979  0007                     	global	_PORTA
   980                           _PORTA	set	0x5
   981  0005                     	global	_RCREG
   982                           _RCREG	set	0x1A
   983  001A                     	global	_PORTB
   984                           _PORTB	set	0x6
   985  0006                     	global	_PIR1bits
   986                           _PIR1bits	set	0xC
   987  000C                     	global	_INTCONbits
   988                           _INTCONbits	set	0xB
   989  000B                     	global	_ADCON0bits
   990                           _ADCON0bits	set	0x1F
   991  001F                     	global	_ADRESH
   992                           _ADRESH	set	0x1E
   993  001E                     	global	_RD1
   994                           _RD1	set	0x41
   995  0041                     	global	_RD0
   996                           _RD0	set	0x40
   997  0040                     	global	_SPBRGH
   998                           _SPBRGH	set	0x9A
   999  009A                     	global	_SPBRG
  1000                           _SPBRG	set	0x99
  1001  0099                     	global	_TXSTAbits
  1002                           _TXSTAbits	set	0x98
  1003  0098                     	global	_TRISCbits
  1004                           _TRISCbits	set	0x87
  1005  0087                     	global	_TRISE
  1006                           _TRISE	set	0x89
  1007  0089                     	global	_TRISD
  1008                           _TRISD	set	0x88
  1009  0088                     	global	_TRISC
  1010                           _TRISC	set	0x87
  1011  0087                     	global	_TRISB
  1012                           _TRISB	set	0x86
  1013  0086                     	global	_TRISA
  1014                           _TRISA	set	0x85
  1015  0085                     	global	_ADCON1bits
  1016                           _ADCON1bits	set	0x9F
  1017  009F                     	global	_PIE1bits
  1018                           _PIE1bits	set	0x8C
  1019  008C                     	global	_TRISBbits
  1020                           _TRISBbits	set	0x86
  1021  0086                     	global	_TRISEbits
  1022                           _TRISEbits	set	0x89
  1023  0089                     	global	_TRISAbits
  1024                           _TRISAbits	set	0x85
  1025  0085                     	global	_BAUDCTLbits
  1026                           _BAUDCTLbits	set	0x187
  1027  0187                     	global	_ANSELHbits
  1028                           _ANSELHbits	set	0x189
  1029  0189                     	global	_ANSELbits
  1030                           _ANSELbits	set	0x188
  1031  0188                     	
  1032                           STR_4:	
  1033  101A                     	retlw	67	;'C'
  1034  101A  3443               	retlw	79	;'O'
  1035  101B  344F               	retlw	77	;'M'
  1036  101C  344D               	retlw	0
  1037  101D  3400               psect	strings
  1038                           	
  1039                           STR_5:	
  1040  101E                     	retlw	32	;' '
  1041  101E  3420               	retlw	32	;' '
  1042  101F  3420               	retlw	0
  1043  1020  3400               psect	strings
  1044                           	
  1045                           STR_2:	
  1046  1021                     	retlw	83	;'S'
  1047  1021  3453               	retlw	49	;'1'
  1048  1022  3431               	retlw	0
  1049  1023  3400               psect	strings
  1050                           	
  1051                           STR_3:	
  1052  1024                     	retlw	83	;'S'
  1053  1024  3453               	retlw	50	;'2'
  1054  1025  3432               	retlw	0
  1055  1026  3400               psect	strings
  1056                           	
  1057                           STR_1:	
  1058  1027                     	retlw	37	;'%'
  1059  1027  3425               	retlw	100	;'d'
  1060  1028  3464               	retlw	0
  1061  1029  3400               psect	strings
  1062                           ; #config settings
  1063                           global __CFG_FOSC$INTRC_NOCLKOUT
  1064                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1065  0000                     global __CFG_WDTE$OFF
  1066                           __CFG_WDTE$OFF equ 0x0
  1067  0000                     global __CFG_PWRTE$OFF
  1068                           __CFG_PWRTE$OFF equ 0x0
  1069  0000                     global __CFG_MCLRE$OFF
  1070                           __CFG_MCLRE$OFF equ 0x0
  1071  0000                     global __CFG_CP$OFF
  1072                           __CFG_CP$OFF equ 0x0
  1073  0000                     global __CFG_CPD$OFF
  1074                           __CFG_CPD$OFF equ 0x0
  1075  0000                     global __CFG_BOREN$OFF
  1076                           __CFG_BOREN$OFF equ 0x0
  1077  0000                     global __CFG_IESO$OFF
  1078                           __CFG_IESO$OFF equ 0x0
  1079  0000                     global __CFG_FCMEN$OFF
  1080                           __CFG_FCMEN$OFF equ 0x0
  1081  0000                     global __CFG_LVP$OFF
  1082                           __CFG_LVP$OFF equ 0x0
  1083  0000                     global __CFG_BOR4V$BOR40V
  1084                           __CFG_BOR4V$BOR40V equ 0x0
  1085  0000                     global __CFG_WRT$OFF
  1086                           __CFG_WRT$OFF equ 0x0
  1087  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sbhs."
  1088                           	line	#
  1089                           psect cinit,class=CODE,delta=2
  1090                           global start_initialization
  1091                           start_initialization:
  1092  000F                     
  1093                           global __initialization
  1094                           __initialization:
  1095  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1096                           global __pbssCOMMON
  1097                           __pbssCOMMON:
  1098  0078                     _receivingData:
  1099  0078                            ds      1
  1100  0078                     
  1101                           _entero2:
  1102  0079                            ds      1
  1103  0079                     
  1104                           _adc:
  1105  007A                            ds      1
  1106  007A                     
  1107                           psect	bssBANK0,class=BANK0,space=1,noexec
  1108                           global __pbssBANK0
  1109                           __pbssBANK0:
  1110  006D                     _entero1:
  1111  006D                            ds      1
  1112  006D                     
  1113                           _sensor2:
  1114  006E                            ds      1
  1115  006E                     
  1116                           _sensor1:
  1117  006F                            ds      1
  1118  006F                     
  1119                           psect	bssBANK1,class=BANK1,space=1,noexec
  1120                           global __pbssBANK1
  1121                           __pbssBANK1:
  1122  00A0                     _float2:
  1123  00A0                            ds      4
  1124  00A0                     
  1125                           _float1:
  1126  00A4                            ds      4
  1127  00A4                     
  1128                           _sensorF2:
  1129  00A8                            ds      4
  1130  00A8                     
  1131                           _sensorF1:
  1132  00AC                            ds      4
  1133  00AC                     
  1134                           _interrupcionUSART:
  1135  00B0                            ds      1
  1136  00B0                     
  1137                           _dec2:
  1138  00B1                            ds      1
  1139  00B1                     
  1140                           _dec1:
  1141  00B2                            ds      1
  1142  00B2                     
  1143                           _cont:
  1144  00B3                            ds      1
  1145  00B3                     
  1146                           _contADC:
  1147  00B4                            ds      1
  1148  00B4                     
  1149                           _cursor:
  1150  00B5                            ds      1
  1151  00B5                     
  1152                           _adcValue:
  1153  00B6                            ds      1
  1154  00B6                     
  1155                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sbhs."
  1156                           	line	#
  1157                           psect clrtext,class=CODE,delta=2
  1158                           global clear_ram0
  1159                           ;	Called with FSR containing the base address, and
  1160                           ;	W with the last address+1
  1161                           clear_ram0:
  1162  0801                     	clrwdt			;clear the watchdog before getting into this loop
  1163  0801  0064               clrloop0:
  1164  0802                     	clrf	indf		;clear RAM location pointed to by FSR
  1165  0802  0180               	incf	fsr,f		;increment pointer
  1166  0803  0A84               	xorwf	fsr,w		;XOR with final address
  1167  0804  0604               	btfsc	status,2	;have we reached the end yet?
  1168  0805  1903               	retlw	0		;all done for this memory range, return
  1169  0806  3400               	xorwf	fsr,w		;XOR again to restore value
  1170  0807  0604               	goto	clrloop0		;do the next byte
  1171  0808  2802               
  1172                           ; Clear objects allocated to COMMON
  1173                           psect cinit,class=CODE,delta=2,merge=1
  1174                           	clrf	((__pbssCOMMON)+0)&07Fh
  1175  000F  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
  1176  0010  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
  1177  0011  01FA               ; Clear objects allocated to BANK0
  1178                           psect cinit,class=CODE,delta=2,merge=1
  1179                           	bcf	status, 5	;RP0=0, select bank0
  1180  0012  1283               	bcf	status, 6	;RP1=0, select bank0
  1181  0013  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1182  0014  01ED               	clrf	((__pbssBANK0)+1)&07Fh
  1183  0015  01EE               	clrf	((__pbssBANK0)+2)&07Fh
  1184  0016  01EF               ; Clear objects allocated to BANK1
  1185                           psect cinit,class=CODE,delta=2,merge=1
  1186                           	bcf	status, 7	;select IRP bank0
  1187  0017  1383               	movlw	low(__pbssBANK1)
  1188  0018  30A0               	movwf	fsr
  1189  0019  0084               	movlw	low((__pbssBANK1)+017h)
  1190  001A  30B7               	fcall	clear_ram0
  1191  001B  120A  158A  2001  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1192                           global end_of_initialization,__end_of__initialization
  1193                           
  1194                           ;End of C runtime variable initialization code
  1195                           
  1196                           end_of_initialization:
  1197  0020                     __end_of__initialization:
  1198  0020                     clrf status
  1199  0020  0183               ljmp _main	;jump to C main() function
  1200  0021  120A  118A  2B99   psect	cstackBANK1,class=BANK1,space=1,noexec
  1201                           global __pcstackBANK1
  1202                           __pcstackBANK1:
  1203  00B7                     	global	___fldiv@rem
  1204                           ___fldiv@rem:	; 4 bytes @ 0x0
  1205  00B7                     	ds	4
  1206  00B7                     	global	___fldiv@sign
  1207                           ___fldiv@sign:	; 1 bytes @ 0x4
  1208  00BB                     	ds	1
  1209  00BB                     	global	___fldiv@new_exp
  1210                           ___fldiv@new_exp:	; 2 bytes @ 0x5
  1211  00BC                     	ds	2
  1212  00BC                     	global	___fldiv@grs
  1213                           ___fldiv@grs:	; 4 bytes @ 0x7
  1214  00BE                     	ds	4
  1215  00BE                     	global	___fldiv@bexp
  1216                           ___fldiv@bexp:	; 1 bytes @ 0xB
  1217  00C2                     	ds	1
  1218  00C2                     	global	___fldiv@aexp
  1219                           ___fldiv@aexp:	; 1 bytes @ 0xC
  1220  00C3                     	ds	1
  1221  00C3                     ??_main:	; 1 bytes @ 0xD
  1222  00C4                     	ds	4
  1223  00C4                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1224                           global __pcstackCOMMON
  1225                           __pcstackCOMMON:
  1226  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1227  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1228  0070                     ?_setup:	; 1 bytes @ 0x0
  1229  0070                     ?_sendUSART:	; 1 bytes @ 0x0
  1230  0070                     ?_readADC:	; 1 bytes @ 0x0
  1231  0070                     ?_selCanal:	; 1 bytes @ 0x0
  1232  0070                     ?_configCanal:	; 1 bytes @ 0x0
  1233  0070                     ?_configADC:	; 1 bytes @ 0x0
  1234  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1235  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1236  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1237  0070                     ?_ISR:	; 1 bytes @ 0x0
  1238  0070                     ??_ISR:	; 1 bytes @ 0x0
  1239  0070                     ?_main:	; 1 bytes @ 0x0
  1240  0070                     	ds	3
  1241  0070                     ??_cmdLCD:	; 1 bytes @ 0x3
  1242  0073                     ??_writeCharLCD:	; 1 bytes @ 0x3
  1243  0073                     ??_setup:	; 1 bytes @ 0x3
  1244  0073                     ?_initUSART:	; 1 bytes @ 0x3
  1245  0073                     ??_sendUSART:	; 1 bytes @ 0x3
  1246  0073                     ??_readADC:	; 1 bytes @ 0x3
  1247  0073                     ??_selCanal:	; 1 bytes @ 0x3
  1248  0073                     ??_configCanal:	; 1 bytes @ 0x3
  1249  0073                     ??_configADC:	; 1 bytes @ 0x3
  1250  0073                     	global	?__Umul8_16
  1251                           ?__Umul8_16:	; 2 bytes @ 0x3
  1252  0073                     	global	?___lwdiv
  1253                           ?___lwdiv:	; 2 bytes @ 0x3
  1254  0073                     	global	?___fltol
  1255                           ?___fltol:	; 4 bytes @ 0x3
  1256  0073                     	global	?___xxtofl
  1257                           ?___xxtofl:	; 4 bytes @ 0x3
  1258  0073                     	global	sendUSART@data
  1259                           sendUSART@data:	; 1 bytes @ 0x3
  1260  0073                     	global	__Umul8_16@multiplicand
  1261                           __Umul8_16@multiplicand:	; 1 bytes @ 0x3
  1262  0073                     	global	initUSART@baudrate
  1263                           initUSART@baudrate:	; 2 bytes @ 0x3
  1264  0073                     	global	___lwdiv@divisor
  1265                           ___lwdiv@divisor:	; 2 bytes @ 0x3
  1266  0073                     	global	___fltol@f1
  1267                           ___fltol@f1:	; 4 bytes @ 0x3
  1268  0073                     	global	___xxtofl@val
  1269                           ___xxtofl@val:	; 4 bytes @ 0x3
  1270  0073                     	ds	1
  1271  0073                     	global	selCanal@channel
  1272                           selCanal@channel:	; 1 bytes @ 0x4
  1273  0074                     	global	writeCharLCD@character
  1274                           writeCharLCD@character:	; 1 bytes @ 0x4
  1275  0074                     	ds	1
  1276  0074                     ??__Umul8_16:	; 1 bytes @ 0x5
  1277  0075                     ?_writeStrLCD:	; 1 bytes @ 0x5
  1278  0075                     	global	configCanal@channel
  1279                           configCanal@channel:	; 1 bytes @ 0x5
  1280  0075                     	global	configADC@FOSC
  1281                           configADC@FOSC:	; 1 bytes @ 0x5
  1282  0075                     	global	cmdLCD@cmd
  1283                           cmdLCD@cmd:	; 1 bytes @ 0x5
  1284  0075                     	global	initUSART@txint
  1285                           initUSART@txint:	; 1 bytes @ 0x5
  1286  0075                     	global	writeStrLCD@string
  1287                           writeStrLCD@string:	; 2 bytes @ 0x5
  1288  0075                     	global	___lwdiv@dividend
  1289                           ___lwdiv@dividend:	; 2 bytes @ 0x5
  1290  0075                     	ds	1
  1291  0075                     ?_setCursorLCD:	; 1 bytes @ 0x6
  1292  0076                     ??_clcLCD:	; 1 bytes @ 0x6
  1293  0076                     ??_initLCD:	; 1 bytes @ 0x6
  1294  0076                     	global	setCursorLCD@x
  1295                           setCursorLCD@x:	; 1 bytes @ 0x6
  1296  0076                     	global	initUSART@rcint
  1297                           initUSART@rcint:	; 1 bytes @ 0x6
  1298  0076                     	ds	1
  1299  0076                     ??_setCursorLCD:	; 1 bytes @ 0x7
  1300  0077                     ??___flneg:	; 1 bytes @ 0x7
  1301  0077                     ??___lwdiv:	; 1 bytes @ 0x7
  1302  0077                     	global	initUSART@syncrono
  1303                           initUSART@syncrono:	; 1 bytes @ 0x7
  1304  0077                     	ds	1
  1305  0077                     ??_initUSART:	; 1 bytes @ 0x8
  1306  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1307                           global __pcstackBANK0
  1308                           __pcstackBANK0:
  1309  0020                     ??_writeStrLCD:	; 1 bytes @ 0x0
  1310  0020                     ??___fltol:	; 1 bytes @ 0x0
  1311  0020                     ??___xxtofl:	; 1 bytes @ 0x0
  1312  0020                     	global	setCursorLCD@y
  1313                           setCursorLCD@y:	; 1 bytes @ 0x0
  1314  0020                     	global	___lwdiv@counter
  1315                           ___lwdiv@counter:	; 1 bytes @ 0x0
  1316  0020                     	global	__Umul8_16@product
  1317                           __Umul8_16@product:	; 2 bytes @ 0x0
  1318  0020                     	ds	1
  1319  0020                     	global	___lwdiv@quotient
  1320                           ___lwdiv@quotient:	; 2 bytes @ 0x1
  1321  0021                     	ds	1
  1322  0021                     	global	__Umul8_16@word_mpld
  1323                           __Umul8_16@word_mpld:	; 2 bytes @ 0x2
  1324  0022                     	ds	1
  1325  0022                     	global	?___lwmod
  1326                           ?___lwmod:	; 2 bytes @ 0x3
  1327  0023                     	global	writeStrLCD@cont
  1328                           writeStrLCD@cont:	; 2 bytes @ 0x3
  1329  0023                     	global	___lwmod@divisor
  1330                           ___lwmod@divisor:	; 2 bytes @ 0x3
  1331  0023                     	ds	1
  1332  0023                     	global	___xxtofl@sign
  1333                           ___xxtofl@sign:	; 1 bytes @ 0x4
  1334  0024                     	global	__Umul8_16@multiplier
  1335                           __Umul8_16@multiplier:	; 1 bytes @ 0x4
  1336  0024                     	ds	1
  1337  0024                     	global	___fltol@sign1
  1338                           ___fltol@sign1:	; 1 bytes @ 0x5
  1339  0025                     	global	___xxtofl@exp
  1340                           ___xxtofl@exp:	; 1 bytes @ 0x5
  1341  0025                     	global	___lwmod@dividend
  1342                           ___lwmod@dividend:	; 2 bytes @ 0x5
  1343  0025                     	ds	1
  1344  0025                     	global	___fltol@exp1
  1345                           ___fltol@exp1:	; 1 bytes @ 0x6
  1346  0026                     	global	___xxtofl@arg
  1347                           ___xxtofl@arg:	; 4 bytes @ 0x6
  1348  0026                     	ds	1
  1349  0026                     ??___lwmod:	; 1 bytes @ 0x7
  1350  0027                     	ds	1
  1351  0027                     	global	___lwmod@counter
  1352                           ___lwmod@counter:	; 1 bytes @ 0x8
  1353  0028                     	ds	1
  1354  0028                     	global	?_sprintf
  1355                           ?_sprintf:	; 2 bytes @ 0x9
  1356  0029                     	global	sprintf@f
  1357                           sprintf@f:	; 1 bytes @ 0x9
  1358  0029                     	ds	1
  1359  0029                     	global	?___flneg
  1360                           ?___flneg:	; 4 bytes @ 0xA
  1361  002A                     	global	___flneg@f1
  1362                           ___flneg@f1:	; 4 bytes @ 0xA
  1363  002A                     	ds	2
  1364  002A                     ??_sprintf:	; 1 bytes @ 0xC
  1365  002C                     	ds	2
  1366  002C                     	global	?___fladd
  1367                           ?___fladd:	; 4 bytes @ 0xE
  1368  002E                     	global	___fladd@b
  1369                           ___fladd@b:	; 4 bytes @ 0xE
  1370  002E                     	ds	1
  1371  002E                     	global	sprintf@ap
  1372                           sprintf@ap:	; 1 bytes @ 0xF
  1373  002F                     	ds	1
  1374  002F                     	global	sprintf@flag
  1375                           sprintf@flag:	; 1 bytes @ 0x10
  1376  0030                     	ds	1
  1377  0030                     	global	sprintf@prec
  1378                           sprintf@prec:	; 1 bytes @ 0x11
  1379  0031                     	ds	1
  1380  0031                     	global	sprintf@val
  1381                           sprintf@val:	; 2 bytes @ 0x12
  1382  0032                     	global	___fladd@a
  1383                           ___fladd@a:	; 4 bytes @ 0x12
  1384  0032                     	ds	2
  1385  0032                     	global	sprintf@sp
  1386                           sprintf@sp:	; 1 bytes @ 0x14
  1387  0034                     	ds	1
  1388  0034                     	global	sprintf@c
  1389                           sprintf@c:	; 1 bytes @ 0x15
  1390  0035                     	ds	1
  1391  0035                     ??_writeIntLCD:	; 1 bytes @ 0x16
  1392  0036                     ??___fladd:	; 1 bytes @ 0x16
  1393  0036                     	ds	3
  1394  0036                     	global	writeIntLCD@buffer
  1395                           writeIntLCD@buffer:	; 4 bytes @ 0x19
  1396  0039                     	ds	4
  1397  0039                     	global	writeIntLCD@numero
  1398                           writeIntLCD@numero:	; 1 bytes @ 0x1D
  1399  003D                     	ds	1
  1400  003D                     ?_writeFloat:	; 1 bytes @ 0x1E
  1401  003E                     	global	writeFloat@decimal
  1402                           writeFloat@decimal:	; 1 bytes @ 0x1E
  1403  003E                     	ds	1
  1404  003E                     	global	writeFloat@initPos
  1405                           writeFloat@initPos:	; 1 bytes @ 0x1F
  1406  003F                     	ds	1
  1407  003F                     ??_writeFloat:	; 1 bytes @ 0x20
  1408  0040                     	ds	1
  1409  0040                     	global	writeFloat@integer
  1410                           writeFloat@integer:	; 1 bytes @ 0x21
  1411  0041                     	ds	1
  1412  0041                     	global	___fladd@signs
  1413                           ___fladd@signs:	; 1 bytes @ 0x22
  1414  0042                     	ds	1
  1415  0042                     	global	___fladd@aexp
  1416                           ___fladd@aexp:	; 1 bytes @ 0x23
  1417  0043                     	ds	1
  1418  0043                     	global	___fladd@bexp
  1419                           ___fladd@bexp:	; 1 bytes @ 0x24
  1420  0044                     	ds	1
  1421  0044                     	global	___fladd@grs
  1422                           ___fladd@grs:	; 1 bytes @ 0x25
  1423  0045                     	ds	1
  1424  0045                     	global	?___flmul
  1425                           ?___flmul:	; 4 bytes @ 0x26
  1426  0046                     	global	___flmul@b
  1427                           ___flmul@b:	; 4 bytes @ 0x26
  1428  0046                     	ds	4
  1429  0046                     	global	___flmul@a
  1430                           ___flmul@a:	; 4 bytes @ 0x2A
  1431  004A                     	ds	4
  1432  004A                     ??___flmul:	; 1 bytes @ 0x2E
  1433  004E                     	ds	5
  1434  004E                     	global	___flmul@sign
  1435                           ___flmul@sign:	; 1 bytes @ 0x33
  1436  0053                     	ds	1
  1437  0053                     	global	___flmul@grs
  1438                           ___flmul@grs:	; 4 bytes @ 0x34
  1439  0054                     	ds	4
  1440  0054                     	global	___flmul@aexp
  1441                           ___flmul@aexp:	; 1 bytes @ 0x38
  1442  0058                     	ds	1
  1443  0058                     	global	___flmul@bexp
  1444                           ___flmul@bexp:	; 1 bytes @ 0x39
  1445  0059                     	ds	1
  1446  0059                     	global	___flmul@prod
  1447                           ___flmul@prod:	; 4 bytes @ 0x3A
  1448  005A                     	ds	4
  1449  005A                     	global	___flmul@temp
  1450                           ___flmul@temp:	; 2 bytes @ 0x3E
  1451  005E                     	ds	2
  1452  005E                     	global	?___fldiv
  1453                           ?___fldiv:	; 4 bytes @ 0x40
  1454  0060                     	global	___fldiv@a
  1455                           ___fldiv@a:	; 4 bytes @ 0x40
  1456  0060                     	ds	4
  1457  0060                     	global	___fldiv@b
  1458                           ___fldiv@b:	; 4 bytes @ 0x44
  1459  0064                     	ds	4
  1460  0064                     ??___fldiv:	; 1 bytes @ 0x48
  1461  0068                     	ds	5
  1462  0068                     ;!
  1463                           ;!Data Sizes:
  1464                           ;!    Strings     16
  1465                           ;!    Constant    10
  1466                           ;!    Data        0
  1467                           ;!    BSS         29
  1468                           ;!    Persistent  0
  1469                           ;!    Stack       0
  1470                           ;!
  1471                           ;!Auto Spaces:
  1472                           ;!    Space          Size  Autos    Used
  1473                           ;!    COMMON           14      8      11
  1474                           ;!    BANK0            80     77      80
  1475                           ;!    BANK1            80     17      40
  1476                           ;!    BANK3            96      0       0
  1477                           ;!    BANK2            96      0       0
  1478                           
  1479                           ;!
  1480                           ;!Pointer List with Targets:
  1481                           ;!
  1482                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1483                           ;!		 -> STR_1(CODE[3]), 
  1484                           ;!
  1485                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
  1486                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1487                           ;!
  1488                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1489                           ;!		 -> ?_sprintf(BANK0[2]), 
  1490                           ;!
  1491                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
  1492                           ;!		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[3]), 
  1493                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1494                           ;!
  1495                           
  1496                           
  1497                           ;!
  1498                           ;!Critical Paths under _main in COMMON
  1499                           ;!
  1500                           ;!    _main->_initLCD
  1501                           ;!    _main->_initUSART
  1502                           ;!    _main->_setCursorLCD
  1503                           ;!    _writeFloat->_setCursorLCD
  1504                           ;!    _writeStrLCD->_writeCharLCD
  1505                           ;!    _sprintf->___lwdiv
  1506                           ;!    ___lwmod->___lwdiv
  1507                           ;!    _setCursorLCD->_cmdLCD
  1508                           ;!    _initLCD->_cmdLCD
  1509                           ;!    _clcLCD->_cmdLCD
  1510                           ;!    ___flneg->___xxtofl
  1511                           ;!    ___flmul->__Umul8_16
  1512                           ;!    ___flmul->___xxtofl
  1513                           ;!    ___fldiv->___xxtofl
  1514                           ;!    ___fladd->___xxtofl
  1515                           ;!
  1516                           ;!Critical Paths under _ISR in COMMON
  1517                           ;!
  1518                           ;!    None.
  1519                           ;!
  1520                           ;!Critical Paths under _main in BANK0
  1521                           ;!
  1522                           ;!    _main->___fldiv
  1523                           ;!    _writeFloat->_writeIntLCD
  1524                           ;!    _writeIntLCD->_sprintf
  1525                           ;!    _sprintf->___lwmod
  1526                           ;!    ___lwmod->___lwdiv
  1527                           ;!    ___flneg->___xxtofl
  1528                           ;!    ___flmul->___fladd
  1529                           ;!    ___fldiv->___flmul
  1530                           ;!    ___fladd->___flneg
  1531                           ;!
  1532                           ;!Critical Paths under _ISR in BANK0
  1533                           ;!
  1534                           ;!    None.
  1535                           ;!
  1536                           ;!Critical Paths under _main in BANK1
  1537                           ;!
  1538                           ;!    _main->___fldiv
  1539                           ;!
  1540                           ;!Critical Paths under _ISR in BANK1
  1541                           ;!
  1542                           ;!    None.
  1543                           ;!
  1544                           ;!Critical Paths under _main in BANK3
  1545                           ;!
  1546                           ;!    None.
  1547                           ;!
  1548                           ;!Critical Paths under _ISR in BANK3
  1549                           ;!
  1550                           ;!    None.
  1551                           ;!
  1552                           ;!Critical Paths under _main in BANK2
  1553                           ;!
  1554                           ;!    None.
  1555                           ;!
  1556                           ;!Critical Paths under _ISR in BANK2
  1557                           ;!
  1558                           ;!    None.
  1559                           
  1560 ;;
  1561 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1562 ;;
  1563                           
  1564                           ;!
  1565                           ;!Call Graph Tables:
  1566                           ;!
  1567                           ;! ---------------------------------------------------------------------------------
  1568                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1569                           ;! ---------------------------------------------------------------------------------
  1570                           ;! (0) _main                                                 4     4      0   16721
  1571                           ;!                                             13 BANK1      4     4      0
  1572                           ;!                            ___fladd
  1573                           ;!                            ___fldiv
  1574                           ;!                            ___flmul
  1575                           ;!                            ___flneg
  1576                           ;!                            ___fltol
  1577                           ;!                           ___xxtofl
  1578                           ;!                             _clcLCD
  1579                           ;!                          _configADC
  1580                           ;!                        _configCanal
  1581                           ;!                            _initLCD
  1582                           ;!                          _initUSART
  1583                           ;!                            _readADC
  1584                           ;!                           _selCanal
  1585                           ;!                          _sendUSART
  1586                           ;!                       _setCursorLCD
  1587                           ;!                              _setup
  1588                           ;!                         _writeFloat
  1589                           ;!                        _writeIntLCD
  1590                           ;!                        _writeStrLCD
  1591                           ;! ---------------------------------------------------------------------------------
  1592                           ;! (1) _writeFloat                                           4     2      2    3812
  1593                           ;!                                             30 BANK0      4     2      2
  1594                           ;!                       _setCursorLCD
  1595                           ;!                       _writeCharLCD
  1596                           ;!                        _writeIntLCD
  1597                           ;! ---------------------------------------------------------------------------------
  1598                           ;! (1) _writeIntLCD                                          8     8      0    2279
  1599                           ;!                                             22 BANK0      8     8      0
  1600                           ;!                            _sprintf
  1601                           ;!                        _writeStrLCD
  1602                           ;! ---------------------------------------------------------------------------------
  1603                           ;! (1) _writeStrLCD                                          7     5      2     602
  1604                           ;!                                              5 COMMON     2     0      2
  1605                           ;!                                              0 BANK0      5     5      0
  1606                           ;!                       _writeCharLCD
  1607                           ;! ---------------------------------------------------------------------------------
  1608                           ;! (2) _writeCharLCD                                         2     2      0      22
  1609                           ;!                                              3 COMMON     2     2      0
  1610                           ;! ---------------------------------------------------------------------------------
  1611                           ;! (2) _sprintf                                             21    18      3    1554
  1612                           ;!                                              9 BANK0     13    10      3
  1613                           ;!                            ___lwdiv
  1614                           ;!                            ___lwmod
  1615                           ;! ---------------------------------------------------------------------------------
  1616                           ;! (3) ___lwmod                                              6     2      4     311
  1617                           ;!                                              3 BANK0      6     2      4
  1618                           ;!                            ___lwdiv (ARG)
  1619                           ;! ---------------------------------------------------------------------------------
  1620                           ;! (3) ___lwdiv                                              8     4      4     421
  1621                           ;!                                              3 COMMON     5     1      4
  1622                           ;!                                              0 BANK0      3     3      0
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (2) _setCursorLCD                                         3     2      1     934
  1625                           ;!                                              6 COMMON     2     1      1
  1626                           ;!                                              0 BANK0      1     1      0
  1627                           ;!                             _cmdLCD
  1628                           ;! ---------------------------------------------------------------------------------
  1629                           ;! (1) _setup                                                0     0      0       0
  1630                           ;! ---------------------------------------------------------------------------------
  1631                           ;! (1) _sendUSART                                            1     1      0      22
  1632                           ;!                                              3 COMMON     1     1      0
  1633                           ;! ---------------------------------------------------------------------------------
  1634                           ;! (1) _selCanal                                             2     2      0      22
  1635                           ;!                                              3 COMMON     2     2      0
  1636                           ;! ---------------------------------------------------------------------------------
  1637                           ;! (1) _readADC                                              0     0      0       0
  1638                           ;! ---------------------------------------------------------------------------------
  1639                           ;! (1) _initUSART                                            5     0      5     502
  1640                           ;!                                              3 COMMON     5     0      5
  1641                           ;! ---------------------------------------------------------------------------------
  1642                           ;! (1) _initLCD                                              2     2      0      31
  1643                           ;!                                              6 COMMON     2     2      0
  1644                           ;!                             _cmdLCD
  1645                           ;! ---------------------------------------------------------------------------------
  1646                           ;! (1) _configCanal                                          3     3      0      22
  1647                           ;!                                              3 COMMON     3     3      0
  1648                           ;! ---------------------------------------------------------------------------------
  1649                           ;! (1) _configADC                                            3     3      0      22
  1650                           ;!                                              3 COMMON     3     3      0
  1651                           ;! ---------------------------------------------------------------------------------
  1652                           ;! (1) _clcLCD                                               0     0      0      31
  1653                           ;!                             _cmdLCD
  1654                           ;! ---------------------------------------------------------------------------------
  1655                           ;! (3) _cmdLCD                                               3     3      0      31
  1656                           ;!                                              3 COMMON     3     3      0
  1657                           ;! ---------------------------------------------------------------------------------
  1658                           ;! (1) ___xxtofl                                            14    10      4     836
  1659                           ;!                                              3 COMMON     4     0      4
  1660                           ;!                                              0 BANK0     10    10      0
  1661                           ;! ---------------------------------------------------------------------------------
  1662                           ;! (1) ___fltol                                             11     7      4     697
  1663                           ;!                                              3 COMMON     4     0      4
  1664                           ;!                                              0 BANK0      7     7      0
  1665                           ;! ---------------------------------------------------------------------------------
  1666                           ;! (1) ___flneg                                              4     0      4     197
  1667                           ;!                                             10 BANK0      4     0      4
  1668                           ;!                           ___xxtofl (ARG)
  1669                           ;! ---------------------------------------------------------------------------------
  1670                           ;! (1) ___flmul                                             26    18      8    2873
  1671                           ;!                                             38 BANK0     26    18      8
  1672                           ;!                          __Umul8_16
  1673                           ;!                            ___fladd (ARG)
  1674                           ;!                            ___flneg (ARG)
  1675                           ;!                           ___xxtofl (ARG)
  1676                           ;! ---------------------------------------------------------------------------------
  1677                           ;! (2) __Umul8_16                                            9     7      2     799
  1678                           ;!                                              3 COMMON     4     2      2
  1679                           ;!                                              0 BANK0      5     5      0
  1680                           ;! ---------------------------------------------------------------------------------
  1681                           ;! (1) ___fldiv                                             26    18      8    1425
  1682                           ;!                                             64 BANK0     13     5      8
  1683                           ;!                                              0 BANK1     13    13      0
  1684                           ;!                            ___flmul (ARG)
  1685                           ;!                           ___xxtofl (ARG)
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (1) ___fladd                                             24    16      8    2414
  1688                           ;!                                             14 BANK0     24    16      8
  1689                           ;!                            ___flneg (ARG)
  1690                           ;!                           ___xxtofl (ARG)
  1691                           ;! ---------------------------------------------------------------------------------
  1692                           ;! Estimated maximum stack depth 3
  1693                           ;! ---------------------------------------------------------------------------------
  1694                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1695                           ;! ---------------------------------------------------------------------------------
  1696                           ;! (5) _ISR                                                  3     3      0       0
  1697                           ;!                                              0 COMMON     3     3      0
  1698                           ;! ---------------------------------------------------------------------------------
  1699                           ;! Estimated maximum stack depth 5
  1700                           ;! ---------------------------------------------------------------------------------
  1701                           ;!
  1702                           ;! Call Graph Graphs:
  1703                           ;!
  1704                           ;! _main (ROOT)
  1705                           ;!   ___fladd
  1706                           ;!     ___flneg (ARG)
  1707                           ;!       ___xxtofl (ARG)
  1708                           ;!     ___xxtofl (ARG)
  1709                           ;!   ___fldiv
  1710                           ;!     ___flmul (ARG)
  1711                           ;!       __Umul8_16
  1712                           ;!       ___fladd (ARG)
  1713                           ;!         ___flneg (ARG)
  1714                           ;!           ___xxtofl (ARG)
  1715                           ;!         ___xxtofl (ARG)
  1716                           ;!       ___flneg (ARG)
  1717                           ;!         ___xxtofl (ARG)
  1718                           ;!       ___xxtofl (ARG)
  1719                           ;!     ___xxtofl (ARG)
  1720                           ;!   ___flmul
  1721                           ;!     __Umul8_16
  1722                           ;!     ___fladd (ARG)
  1723                           ;!       ___flneg (ARG)
  1724                           ;!         ___xxtofl (ARG)
  1725                           ;!       ___xxtofl (ARG)
  1726                           ;!     ___flneg (ARG)
  1727                           ;!       ___xxtofl (ARG)
  1728                           ;!     ___xxtofl (ARG)
  1729                           ;!   ___flneg
  1730                           ;!     ___xxtofl (ARG)
  1731                           ;!   ___fltol
  1732                           ;!   ___xxtofl
  1733                           ;!   _clcLCD
  1734                           ;!     _cmdLCD
  1735                           ;!   _configADC
  1736                           ;!   _configCanal
  1737                           ;!   _initLCD
  1738                           ;!     _cmdLCD
  1739                           ;!   _initUSART
  1740                           ;!   _readADC
  1741                           ;!   _selCanal
  1742                           ;!   _sendUSART
  1743                           ;!   _setCursorLCD
  1744                           ;!     _cmdLCD
  1745                           ;!   _setup
  1746                           ;!   _writeFloat
  1747                           ;!     _setCursorLCD
  1748                           ;!       _cmdLCD
  1749                           ;!     _writeCharLCD
  1750                           ;!     _writeIntLCD
  1751                           ;!       _sprintf
  1752                           ;!         ___lwdiv
  1753                           ;!         ___lwmod
  1754                           ;!           ___lwdiv (ARG)
  1755                           ;!       _writeStrLCD
  1756                           ;!         _writeCharLCD
  1757                           ;!   _writeIntLCD
  1758                           ;!     _sprintf
  1759                           ;!       ___lwdiv
  1760                           ;!       ___lwmod
  1761                           ;!         ___lwdiv (ARG)
  1762                           ;!     _writeStrLCD
  1763                           ;!       _writeCharLCD
  1764                           ;!   _writeStrLCD
  1765                           ;!     _writeCharLCD
  1766                           ;!
  1767                           ;! _ISR (ROOT)
  1768                           ;!
  1769                           
  1770                           ;! Address spaces:
  1771                           
  1772                           ;!Name               Size   Autos  Total    Cost      Usage
  1773                           ;!BITCOMMON            E      0       0       0        0.0%
  1774                           ;!EEDATA             100      0       0       0        0.0%
  1775                           ;!NULL                 0      0       0       0        0.0%
  1776                           ;!CODE                 0      0       0       0        0.0%
  1777                           ;!COMMON               E      8       B       1       78.6%
  1778                           ;!BITSFR0              0      0       0       1        0.0%
  1779                           ;!SFR0                 0      0       0       1        0.0%
  1780                           ;!BITSFR1              0      0       0       2        0.0%
  1781                           ;!SFR1                 0      0       0       2        0.0%
  1782                           ;!STACK                0      0       0       2        0.0%
  1783                           ;!ABS                  0      0      83       3        0.0%
  1784                           ;!BITBANK0            50      0       0       4        0.0%
  1785                           ;!BITSFR3              0      0       0       4        0.0%
  1786                           ;!SFR3                 0      0       0       4        0.0%
  1787                           ;!BANK0               50     4D      50       5      100.0%
  1788                           ;!BITSFR2              0      0       0       5        0.0%
  1789                           ;!SFR2                 0      0       0       5        0.0%
  1790                           ;!BITBANK1            50      0       0       6        0.0%
  1791                           ;!BANK1               50     11      28       7       50.0%
  1792                           ;!BITBANK3            60      0       0       8        0.0%
  1793                           ;!BANK3               60      0       0       9        0.0%
  1794                           ;!BITBANK2            60      0       0      10        0.0%
  1795                           ;!BANK2               60      0       0      11        0.0%
  1796                           ;!DATA                 0      0      83      12        0.0%
  1797                           
  1798                           	global	_main
  1799                           
  1800 ;; *************** function _main *****************
  1801 ;; Defined at:
  1802 ;;		line 50 in file "newmain.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : B00/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0
  1818 ;;      Temps:          0       0       4       0       0
  1819 ;;      Totals:         0       0       4       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels required when called:    5
  1822 ;; This function calls:
  1823 ;;		___fladd
  1824 ;;		___fldiv
  1825 ;;		___flmul
  1826 ;;		___flneg
  1827 ;;		___fltol
  1828 ;;		___xxtofl
  1829 ;;		_clcLCD
  1830 ;;		_configADC
  1831 ;;		_configCanal
  1832 ;;		_initLCD
  1833 ;;		_initUSART
  1834 ;;		_readADC
  1835 ;;		_selCanal
  1836 ;;		_sendUSART
  1837 ;;		_setCursorLCD
  1838 ;;		_setup
  1839 ;;		_writeFloat
  1840 ;;		_writeIntLCD
  1841 ;;		_writeStrLCD
  1842 ;; This function is called by:
  1843 ;;		Startup code after reset
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1847                           	file	"newmain.c"
  1848                           	line	50
  1849                           global __pmaintext
  1850                           __pmaintext:	;psect for function _main
  1851  0399                     psect	maintext
  1852                           	file	"newmain.c"
  1853                           	line	50
  1854                           	global	__size_of_main
  1855                           	__size_of_main	equ	__end_of_main-_main
  1856  032A                     	
  1857                           _main:	
  1858  0399                     ;incstack = 0
  1859                           	opt	stack 3
  1860                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1861                           	line	53
  1862                           	
  1863                           l3089:	
  1864  0399                     ;newmain.c: 53:     setup();;newmain.c: 53:     setup();
  1865                           	fcall	_setup
  1866  0399  160A  118A  258B  120A  118A  	line	54
  1867                           ;newmain.c: 54:     initUSART(9600, 1, 1, 0);;newmain.c: 54:     initUSART(9600, 1, 1, 0
                                 );
  1868                           	movlw	080h
  1869  039E  3080               	movwf	(initUSART@baudrate)
  1870  039F  00F3               	movlw	025h
  1871  03A0  3025               	movwf	((initUSART@baudrate))+1
  1872  03A1  00F4               	clrf	(initUSART@txint)
  1873  03A2  01F5               	incf	(initUSART@txint),f
  1874  03A3  0AF5               	clrf	(initUSART@rcint)
  1875  03A4  01F6               	incf	(initUSART@rcint),f
  1876  03A5  0AF6               	clrf	(initUSART@syncrono)
  1877  03A6  01F7               	fcall	_initUSART
  1878  03A7  160A  118A  2787  120A  118A  	line	55
  1879                           	
  1880                           l3091:	
  1881  03AC                     ;newmain.c: 55:     configADC(1);;newmain.c: 55:     configADC(1);
  1882                           	movlw	low(01h)
  1883  03AC  3001               	fcall	_configADC
  1884  03AD  160A  118A  2618  120A  118A  	line	56
  1885                           	
  1886                           l3093:	
  1887  03B2                     ;newmain.c: 56:     configCanal(10);;newmain.c: 56:     configCanal(10);
  1888                           	movlw	low(0Ah)
  1889  03B2  300A               	fcall	_configCanal
  1890  03B3  120A  158A  2188  120A  118A  	line	57
  1891                           	
  1892                           l3095:	
  1893  03B8                     ;newmain.c: 57:     configCanal(12);;newmain.c: 57:     configCanal(12);
  1894                           	movlw	low(0Ch)
  1895  03B8  300C               	fcall	_configCanal
  1896  03B9  120A  158A  2188  120A  118A  	line	58
  1897                           	
  1898                           l3097:	
  1899  03BE                     ;newmain.c: 58:     initLCD();;newmain.c: 58:     initLCD();
  1900                           	fcall	_initLCD
  1901  03BE  120A  118A  27C5  120A  118A  	line	59
  1902                           	
  1903                           l3099:	
  1904  03C3                     ;newmain.c: 59:     clcLCD();;newmain.c: 59:     clcLCD();
  1905                           	fcall	_clcLCD
  1906  03C3  160A  118A  254A  120A  118A  	line	62
  1907                           	
  1908                           l3101:	
  1909  03C8                     ;newmain.c: 62:     setCursorLCD(1, 1);;newmain.c: 62:     setCursorLCD(1, 1);
  1910                           	clrf	(setCursorLCD@x)
  1911  03C8  01F6               	incf	(setCursorLCD@x),f
  1912  03C9  0AF6               	movlw	low(01h)
  1913  03CA  3001               	fcall	_setCursorLCD
  1914  03CB  120A  158A  2009  120A  118A  	line	63
  1915                           	
  1916                           l3103:	
  1917  03D0                     ;newmain.c: 63:     writeStrLCD("S1");;newmain.c: 63:     writeStrLCD("S1");
  1918                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1919  03D0  3012               	movwf	(writeStrLCD@string)
  1920  03D1  00F5               	movlw	80h
  1921  03D2  3080               	movwf	(writeStrLCD@string+1)
  1922  03D3  00F6               	fcall	_writeStrLCD
  1923  03D4  160A  118A  2692  120A  118A  	line	64
  1924                           	
  1925                           l3105:	
  1926  03D9                     ;newmain.c: 64:     setCursorLCD(1, 7);;newmain.c: 64:     setCursorLCD(1, 7);
  1927                           	movlw	low(07h)
  1928  03D9  3007               	bsf	status, 5	;RP0=1, select bank1
  1929  03DA  1683               	bcf	status, 6	;RP1=0, select bank1
  1930  03DB  1303               	movwf	(??_main+0)^080h+0
  1931  03DC  00C4               	movf	(??_main+0)^080h+0,w
  1932  03DD  0844               	movwf	(setCursorLCD@x)
  1933  03DE  00F6               	movlw	low(01h)
  1934  03DF  3001               	fcall	_setCursorLCD
  1935  03E0  120A  158A  2009  120A  118A  	line	65
  1936                           	
  1937                           l3107:	
  1938  03E5                     ;newmain.c: 65:     writeStrLCD("S2");;newmain.c: 65:     writeStrLCD("S2");
  1939                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1940  03E5  3015               	movwf	(writeStrLCD@string)
  1941  03E6  00F5               	movlw	80h
  1942  03E7  3080               	movwf	(writeStrLCD@string+1)
  1943  03E8  00F6               	fcall	_writeStrLCD
  1944  03E9  160A  118A  2692  120A  118A  	line	66
  1945                           	
  1946                           l3109:	
  1947  03EE                     ;newmain.c: 66:     setCursorLCD(1, 13);;newmain.c: 66:     setCursorLCD(1, 13);
  1948                           	movlw	low(0Dh)
  1949  03EE  300D               	bsf	status, 5	;RP0=1, select bank1
  1950  03EF  1683               	bcf	status, 6	;RP1=0, select bank1
  1951  03F0  1303               	movwf	(??_main+0)^080h+0
  1952  03F1  00C4               	movf	(??_main+0)^080h+0,w
  1953  03F2  0844               	movwf	(setCursorLCD@x)
  1954  03F3  00F6               	movlw	low(01h)
  1955  03F4  3001               	fcall	_setCursorLCD
  1956  03F5  120A  158A  2009  120A  118A  	line	67
  1957                           	
  1958                           l3111:	
  1959  03FA                     ;newmain.c: 67:     writeStrLCD("COM");;newmain.c: 67:     writeStrLCD("COM");
  1960                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1961  03FA  300B               	movwf	(writeStrLCD@string)
  1962  03FB  00F5               	movlw	80h
  1963  03FC  3080               	movwf	(writeStrLCD@string+1)
  1964  03FD  00F6               	fcall	_writeStrLCD
  1965  03FE  160A  118A  2692  120A  118A  	line	68
  1966                           	
  1967                           l3113:	
  1968  0403                     ;newmain.c: 68:     setCursorLCD(2, 1);;newmain.c: 68:     setCursorLCD(2, 1);
  1969                           	clrf	(setCursorLCD@x)
  1970  0403  01F6               	incf	(setCursorLCD@x),f
  1971  0404  0AF6               	movlw	low(02h)
  1972  0405  3002               	fcall	_setCursorLCD
  1973  0406  120A  158A  2009  120A  118A  	goto	l3115
  1974  040B  2C0C               	line	70
  1975                           ;newmain.c: 70:     while(1){;newmain.c: 70:     while(1){
  1976                           	
  1977                           l204:	
  1978  040C                     	line	72
  1979                           	
  1980                           l3115:	
  1981  040C                     ;newmain.c: 72:         if(adc){;newmain.c: 72:         if(adc){
  1982                           	movf	((_adc)),w
  1983  040C  087A               	btfsc	status,2
  1984  040D  1903               	goto	u4121
  1985  040E  2C10               	goto	u4120
  1986  040F  2C11               u4121:
  1987  0410                     	goto	l3131
  1988  0410  2C43               u4120:
  1989  0411                     	line	73
  1990                           	
  1991                           l3117:	
  1992  0411                     ;newmain.c: 73:             contADC++;;newmain.c: 73:             contADC++;
  1993                           	movlw	low(01h)
  1994  0411  3001               	bsf	status, 5	;RP0=1, select bank1
  1995  0412  1683               	bcf	status, 6	;RP1=0, select bank1
  1996  0413  1303               	movwf	(??_main+0)^080h+0
  1997  0414  00C4               	movf	(??_main+0)^080h+0,w
  1998  0415  0844               	addwf	(_contADC)^080h,f
  1999  0416  07B4               	line	74
  2000                           	
  2001                           l3119:	
  2002  0417                     ;newmain.c: 74:             if(contADC%2){;newmain.c: 74:             if(contADC%2){
  2003                           	btfss	(_contADC)^080h,(0)&7
  2004  0417  1C34               	goto	u4131
  2005  0418  2C1A               	goto	u4130
  2006  0419  2C1B               u4131:
  2007  041A                     	goto	l3125
  2008  041A  2C2E               u4130:
  2009  041B                     	line	75
  2010                           	
  2011                           l3121:	
  2012  041B                     ;newmain.c: 75:                 selCanal(10);;newmain.c: 75:                 selCanal(10
                                 );
  2013                           	movlw	low(0Ah)
  2014  041B  300A               	fcall	_selCanal
  2015  041C  160A  118A  2551  120A  118A  	line	76
  2016                           	
  2017                           l3123:	
  2018  0421                     ;newmain.c: 76:                 sensor1 = readADC();;newmain.c: 76:                 sens
                                 or1 = readADC();
  2019                           	fcall	_readADC
  2020  0421  160A  118A  2545  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  2021  0426  1683               	bcf	status, 6	;RP1=0, select bank1
  2022  0427  1303               	movwf	(??_main+0)^080h+0
  2023  0428  00C4               	movf	(??_main+0)^080h+0,w
  2024  0429  0844               	bcf	status, 5	;RP0=0, select bank0
  2025  042A  1283               	bcf	status, 6	;RP1=0, select bank0
  2026  042B  1303               	movwf	(_sensor1)
  2027  042C  00EF               	line	77
  2028                           ;newmain.c: 77:             }else{;newmain.c: 77:             }else{
  2029                           	goto	l3129
  2030  042D  2C41               	
  2031                           l206:	
  2032  042E                     	line	78
  2033                           	
  2034                           l3125:	
  2035  042E                     ;newmain.c: 78:                 selCanal(12);;newmain.c: 78:                 selCanal(12
                                 );
  2036                           	movlw	low(0Ch)
  2037  042E  300C               	fcall	_selCanal
  2038  042F  160A  118A  2551  120A  118A  	line	80
  2039                           	
  2040                           l3127:	
  2041  0434                     ;newmain.c: 80:                 sensor2 = readADC();;newmain.c: 80:                 sens
                                 or2 = readADC();
  2042                           	fcall	_readADC
  2043  0434  160A  118A  2545  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  2044  0439  1683               	bcf	status, 6	;RP1=0, select bank1
  2045  043A  1303               	movwf	(??_main+0)^080h+0
  2046  043B  00C4               	movf	(??_main+0)^080h+0,w
  2047  043C  0844               	bcf	status, 5	;RP0=0, select bank0
  2048  043D  1283               	bcf	status, 6	;RP1=0, select bank0
  2049  043E  1303               	movwf	(_sensor2)
  2050  043F  00EE               	goto	l3129
  2051  0440  2C41               	line	81
  2052                           ;newmain.c: 81:             };newmain.c: 81:             }
  2053                           	
  2054                           l207:	
  2055  0441                     	line	82
  2056                           	
  2057                           l3129:	
  2058  0441                     ;newmain.c: 82:             adc = 0;;newmain.c: 82:             adc = 0;
  2059                           	clrf	(_adc)
  2060  0441  01FA               	goto	l3131
  2061  0442  2C43               	line	83
  2062                           ;newmain.c: 83:         };newmain.c: 83:         }
  2063                           	
  2064                           l205:	
  2065  0443                     	line	86
  2066                           	
  2067                           l3131:	
  2068  0443                     ;newmain.c: 86:         sensorF1 = (float) sensor1 * 5/255;;newmain.c: 86:         senso
                                 rF1 = (float) sensor1 * 5/255;
  2069                           	movlw	0x43
  2070  0443  3043               	bcf	status, 5	;RP0=0, select bank0
  2071  0444  1283               	bcf	status, 6	;RP1=0, select bank0
  2072  0445  1303               	movwf	(___fldiv@a+3)
  2073  0446  00E3               	movlw	0x7f
  2074  0447  307F               	movwf	(___fldiv@a+2)
  2075  0448  00E2               	movlw	0x0
  2076  0449  3000               	movwf	(___fldiv@a+1)
  2077  044A  00E1               	movlw	0x0
  2078  044B  3000               	movwf	(___fldiv@a)
  2079  044C  00E0               
  2080                           	movlw	0x40
  2081  044D  3040               	movwf	(___flmul@b+3)
  2082  044E  00C9               	movlw	0xa0
  2083  044F  30A0               	movwf	(___flmul@b+2)
  2084  0450  00C8               	movlw	0x0
  2085  0451  3000               	movwf	(___flmul@b+1)
  2086  0452  00C7               	movlw	0x0
  2087  0453  3000               	movwf	(___flmul@b)
  2088  0454  00C6               
  2089                           	movf	(_sensor1),w
  2090  0455  086F               	bsf	status, 5	;RP0=1, select bank1
  2091  0456  1683               	bcf	status, 6	;RP1=0, select bank1
  2092  0457  1303               	movwf	(??_main+0)^080h+0
  2093  0458  00C4               	clrf	(??_main+0)^080h+0+1
  2094  0459  01C5               	clrf	(??_main+0)^080h+0+2
  2095  045A  01C6               	clrf	(??_main+0)^080h+0+3
  2096  045B  01C7               	movf	3+(??_main+0)^080h+0,w
  2097  045C  0847               	movwf	(___xxtofl@val+3)
  2098  045D  00F6               	movf	2+(??_main+0)^080h+0,w
  2099  045E  0846               	movwf	(___xxtofl@val+2)
  2100  045F  00F5               	movf	1+(??_main+0)^080h+0,w
  2101  0460  0845               	movwf	(___xxtofl@val+1)
  2102  0461  00F4               	movf	0+(??_main+0)^080h+0,w
  2103  0462  0844               	movwf	(___xxtofl@val)
  2104  0463  00F3               
  2105                           	movlw	low(0)
  2106  0464  3000               	fcall	___xxtofl
  2107  0465  120A  158A  20C4  120A  118A  	movf	(3+(?___xxtofl)),w
  2108  046A  0876               	bcf	status, 5	;RP0=0, select bank0
  2109  046B  1283               	bcf	status, 6	;RP1=0, select bank0
  2110  046C  1303               	movwf	(___flmul@a+3)
  2111  046D  00CD               	movf	(2+(?___xxtofl)),w
  2112  046E  0875               	movwf	(___flmul@a+2)
  2113  046F  00CC               	movf	(1+(?___xxtofl)),w
  2114  0470  0874               	movwf	(___flmul@a+1)
  2115  0471  00CB               	movf	(0+(?___xxtofl)),w
  2116  0472  0873               	movwf	(___flmul@a)
  2117  0473  00CA               
  2118                           	fcall	___flmul
  2119  0474  120A  118A  2024  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2120  0479  1283               	bcf	status, 6	;RP1=0, select bank0
  2121  047A  1303               	movf	(3+(?___flmul)),w
  2122  047B  0849               	movwf	(___fldiv@b+3)
  2123  047C  00E7               	movf	(2+(?___flmul)),w
  2124  047D  0848               	movwf	(___fldiv@b+2)
  2125  047E  00E6               	movf	(1+(?___flmul)),w
  2126  047F  0847               	movwf	(___fldiv@b+1)
  2127  0480  00E5               	movf	(0+(?___flmul)),w
  2128  0481  0846               	movwf	(___fldiv@b)
  2129  0482  00E4               
  2130                           	fcall	___fldiv
  2131  0483  120A  158A  2532  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2132  0488  1283               	bcf	status, 6	;RP1=0, select bank0
  2133  0489  1303               	movf	(3+(?___fldiv)),w
  2134  048A  0863               	bsf	status, 5	;RP0=1, select bank1
  2135  048B  1683               	bcf	status, 6	;RP1=0, select bank1
  2136  048C  1303               	movwf	(_sensorF1+3)^080h
  2137  048D  00AF               	bcf	status, 5	;RP0=0, select bank0
  2138  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  2139  048F  1303               	movf	(2+(?___fldiv)),w
  2140  0490  0862               	bsf	status, 5	;RP0=1, select bank1
  2141  0491  1683               	bcf	status, 6	;RP1=0, select bank1
  2142  0492  1303               	movwf	(_sensorF1+2)^080h
  2143  0493  00AE               	bcf	status, 5	;RP0=0, select bank0
  2144  0494  1283               	bcf	status, 6	;RP1=0, select bank0
  2145  0495  1303               	movf	(1+(?___fldiv)),w
  2146  0496  0861               	bsf	status, 5	;RP0=1, select bank1
  2147  0497  1683               	bcf	status, 6	;RP1=0, select bank1
  2148  0498  1303               	movwf	(_sensorF1+1)^080h
  2149  0499  00AD               	bcf	status, 5	;RP0=0, select bank0
  2150  049A  1283               	bcf	status, 6	;RP1=0, select bank0
  2151  049B  1303               	movf	(0+(?___fldiv)),w
  2152  049C  0860               	bsf	status, 5	;RP0=1, select bank1
  2153  049D  1683               	bcf	status, 6	;RP1=0, select bank1
  2154  049E  1303               	movwf	(_sensorF1)^080h
  2155  049F  00AC               
  2156                           	line	87
  2157                           	
  2158                           l3133:	
  2159  04A0                     ;newmain.c: 87:         entero1 = (int) sensorF1;;newmain.c: 87:         entero1 = (int)
                                  sensorF1;
  2160                           	movf	(_sensorF1+3)^080h,w
  2161  04A0  082F               	movwf	(___fltol@f1+3)
  2162  04A1  00F6               	movf	(_sensorF1+2)^080h,w
  2163  04A2  082E               	movwf	(___fltol@f1+2)
  2164  04A3  00F5               	movf	(_sensorF1+1)^080h,w
  2165  04A4  082D               	movwf	(___fltol@f1+1)
  2166  04A5  00F4               	movf	(_sensorF1)^080h,w
  2167  04A6  082C               	movwf	(___fltol@f1)
  2168  04A7  00F3               
  2169                           	fcall	___fltol
  2170  04A8  120A  158A  2028  120A  118A  	movf	(0+(?___fltol)),w
  2171  04AD  0873               	bsf	status, 5	;RP0=1, select bank1
  2172  04AE  1683               	bcf	status, 6	;RP1=0, select bank1
  2173  04AF  1303               	movwf	(??_main+0)^080h+0
  2174  04B0  00C4               	movf	(??_main+0)^080h+0,w
  2175  04B1  0844               	bcf	status, 5	;RP0=0, select bank0
  2176  04B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2177  04B3  1303               	movwf	(_entero1)
  2178  04B4  00ED               	line	88
  2179                           	
  2180                           l3135:	
  2181  04B5                     ;newmain.c: 88:         float1 = (sensorF1 - entero1)*100;;newmain.c: 88:         float1
                                  = (sensorF1 - entero1)*100;
  2182                           	movlw	0x42
  2183  04B5  3042               	movwf	(___flmul@b+3)
  2184  04B6  00C9               	movlw	0xc8
  2185  04B7  30C8               	movwf	(___flmul@b+2)
  2186  04B8  00C8               	movlw	0x0
  2187  04B9  3000               	movwf	(___flmul@b+1)
  2188  04BA  00C7               	movlw	0x0
  2189  04BB  3000               	movwf	(___flmul@b)
  2190  04BC  00C6               
  2191                           	bsf	status, 5	;RP0=1, select bank1
  2192  04BD  1683               	bcf	status, 6	;RP1=0, select bank1
  2193  04BE  1303               	movf	(_sensorF1+3)^080h,w
  2194  04BF  082F               	bcf	status, 5	;RP0=0, select bank0
  2195  04C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2196  04C1  1303               	movwf	(___fladd@b+3)
  2197  04C2  00B1               	bsf	status, 5	;RP0=1, select bank1
  2198  04C3  1683               	bcf	status, 6	;RP1=0, select bank1
  2199  04C4  1303               	movf	(_sensorF1+2)^080h,w
  2200  04C5  082E               	bcf	status, 5	;RP0=0, select bank0
  2201  04C6  1283               	bcf	status, 6	;RP1=0, select bank0
  2202  04C7  1303               	movwf	(___fladd@b+2)
  2203  04C8  00B0               	bsf	status, 5	;RP0=1, select bank1
  2204  04C9  1683               	bcf	status, 6	;RP1=0, select bank1
  2205  04CA  1303               	movf	(_sensorF1+1)^080h,w
  2206  04CB  082D               	bcf	status, 5	;RP0=0, select bank0
  2207  04CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2208  04CD  1303               	movwf	(___fladd@b+1)
  2209  04CE  00AF               	bsf	status, 5	;RP0=1, select bank1
  2210  04CF  1683               	bcf	status, 6	;RP1=0, select bank1
  2211  04D0  1303               	movf	(_sensorF1)^080h,w
  2212  04D1  082C               	bcf	status, 5	;RP0=0, select bank0
  2213  04D2  1283               	bcf	status, 6	;RP1=0, select bank0
  2214  04D3  1303               	movwf	(___fladd@b)
  2215  04D4  00AE               
  2216                           	movf	(_entero1),w
  2217  04D5  086D               	bsf	status, 5	;RP0=1, select bank1
  2218  04D6  1683               	bcf	status, 6	;RP1=0, select bank1
  2219  04D7  1303               	movwf	(??_main+0)^080h+0
  2220  04D8  00C4               	clrf	(??_main+0)^080h+0+1
  2221  04D9  01C5               	clrf	(??_main+0)^080h+0+2
  2222  04DA  01C6               	clrf	(??_main+0)^080h+0+3
  2223  04DB  01C7               	movf	3+(??_main+0)^080h+0,w
  2224  04DC  0847               	movwf	(___xxtofl@val+3)
  2225  04DD  00F6               	movf	2+(??_main+0)^080h+0,w
  2226  04DE  0846               	movwf	(___xxtofl@val+2)
  2227  04DF  00F5               	movf	1+(??_main+0)^080h+0,w
  2228  04E0  0845               	movwf	(___xxtofl@val+1)
  2229  04E1  00F4               	movf	0+(??_main+0)^080h+0,w
  2230  04E2  0844               	movwf	(___xxtofl@val)
  2231  04E3  00F3               
  2232                           	movlw	low(01h)
  2233  04E4  3001               	fcall	___xxtofl
  2234  04E5  120A  158A  20C4  120A  118A  	movf	(3+(?___xxtofl)),w
  2235  04EA  0876               	bcf	status, 5	;RP0=0, select bank0
  2236  04EB  1283               	bcf	status, 6	;RP1=0, select bank0
  2237  04EC  1303               	movwf	(___flneg@f1+3)
  2238  04ED  00AD               	movf	(2+(?___xxtofl)),w
  2239  04EE  0875               	movwf	(___flneg@f1+2)
  2240  04EF  00AC               	movf	(1+(?___xxtofl)),w
  2241  04F0  0874               	movwf	(___flneg@f1+1)
  2242  04F1  00AB               	movf	(0+(?___xxtofl)),w
  2243  04F2  0873               	movwf	(___flneg@f1)
  2244  04F3  00AA               
  2245                           	fcall	___flneg
  2246  04F4  160A  118A  256D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2247  04F9  1283               	bcf	status, 6	;RP1=0, select bank0
  2248  04FA  1303               	movf	(3+(?___flneg)),w
  2249  04FB  082D               	movwf	(___fladd@a+3)
  2250  04FC  00B5               	movf	(2+(?___flneg)),w
  2251  04FD  082C               	movwf	(___fladd@a+2)
  2252  04FE  00B4               	movf	(1+(?___flneg)),w
  2253  04FF  082B               	movwf	(___fladd@a+1)
  2254  0500  00B3               	movf	(0+(?___flneg)),w
  2255  0501  082A               	movwf	(___fladd@a)
  2256  0502  00B2               
  2257                           	fcall	___fladd
  2258  0503  120A  158A  2276  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2259  0508  1283               	bcf	status, 6	;RP1=0, select bank0
  2260  0509  1303               	movf	(3+(?___fladd)),w
  2261  050A  0831               	movwf	(___flmul@a+3)
  2262  050B  00CD               	movf	(2+(?___fladd)),w
  2263  050C  0830               	movwf	(___flmul@a+2)
  2264  050D  00CC               	movf	(1+(?___fladd)),w
  2265  050E  082F               	movwf	(___flmul@a+1)
  2266  050F  00CB               	movf	(0+(?___fladd)),w
  2267  0510  082E               	movwf	(___flmul@a)
  2268  0511  00CA               
  2269                           	fcall	___flmul
  2270  0512  120A  118A  2024  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2271  0517  1283               	bcf	status, 6	;RP1=0, select bank0
  2272  0518  1303               	movf	(3+(?___flmul)),w
  2273  0519  0849               	bsf	status, 5	;RP0=1, select bank1
  2274  051A  1683               	bcf	status, 6	;RP1=0, select bank1
  2275  051B  1303               	movwf	(_float1+3)^080h
  2276  051C  00A7               	bcf	status, 5	;RP0=0, select bank0
  2277  051D  1283               	bcf	status, 6	;RP1=0, select bank0
  2278  051E  1303               	movf	(2+(?___flmul)),w
  2279  051F  0848               	bsf	status, 5	;RP0=1, select bank1
  2280  0520  1683               	bcf	status, 6	;RP1=0, select bank1
  2281  0521  1303               	movwf	(_float1+2)^080h
  2282  0522  00A6               	bcf	status, 5	;RP0=0, select bank0
  2283  0523  1283               	bcf	status, 6	;RP1=0, select bank0
  2284  0524  1303               	movf	(1+(?___flmul)),w
  2285  0525  0847               	bsf	status, 5	;RP0=1, select bank1
  2286  0526  1683               	bcf	status, 6	;RP1=0, select bank1
  2287  0527  1303               	movwf	(_float1+1)^080h
  2288  0528  00A5               	bcf	status, 5	;RP0=0, select bank0
  2289  0529  1283               	bcf	status, 6	;RP1=0, select bank0
  2290  052A  1303               	movf	(0+(?___flmul)),w
  2291  052B  0846               	bsf	status, 5	;RP0=1, select bank1
  2292  052C  1683               	bcf	status, 6	;RP1=0, select bank1
  2293  052D  1303               	movwf	(_float1)^080h
  2294  052E  00A4               
  2295                           	line	89
  2296                           	
  2297                           l3137:	
  2298  052F                     ;newmain.c: 89:         dec1 = (int) float1;;newmain.c: 89:         dec1 = (int) float1;
                                 
  2299                           	movf	(_float1+3)^080h,w
  2300  052F  0827               	movwf	(___fltol@f1+3)
  2301  0530  00F6               	movf	(_float1+2)^080h,w
  2302  0531  0826               	movwf	(___fltol@f1+2)
  2303  0532  00F5               	movf	(_float1+1)^080h,w
  2304  0533  0825               	movwf	(___fltol@f1+1)
  2305  0534  00F4               	movf	(_float1)^080h,w
  2306  0535  0824               	movwf	(___fltol@f1)
  2307  0536  00F3               
  2308                           	fcall	___fltol
  2309  0537  120A  158A  2028  120A  118A  	movf	(0+(?___fltol)),w
  2310  053C  0873               	bsf	status, 5	;RP0=1, select bank1
  2311  053D  1683               	bcf	status, 6	;RP1=0, select bank1
  2312  053E  1303               	movwf	(??_main+0)^080h+0
  2313  053F  00C4               	movf	(??_main+0)^080h+0,w
  2314  0540  0844               	movwf	(_dec1)^080h
  2315  0541  00B2               	line	91
  2316                           	
  2317                           l3139:	
  2318  0542                     ;newmain.c: 91:         sensorF2 = (float) sensor2 * 5/255;;newmain.c: 91:         senso
                                 rF2 = (float) sensor2 * 5/255;
  2319                           	movlw	0x43
  2320  0542  3043               	bcf	status, 5	;RP0=0, select bank0
  2321  0543  1283               	bcf	status, 6	;RP1=0, select bank0
  2322  0544  1303               	movwf	(___fldiv@a+3)
  2323  0545  00E3               	movlw	0x7f
  2324  0546  307F               	movwf	(___fldiv@a+2)
  2325  0547  00E2               	movlw	0x0
  2326  0548  3000               	movwf	(___fldiv@a+1)
  2327  0549  00E1               	movlw	0x0
  2328  054A  3000               	movwf	(___fldiv@a)
  2329  054B  00E0               
  2330                           	movlw	0x40
  2331  054C  3040               	movwf	(___flmul@b+3)
  2332  054D  00C9               	movlw	0xa0
  2333  054E  30A0               	movwf	(___flmul@b+2)
  2334  054F  00C8               	movlw	0x0
  2335  0550  3000               	movwf	(___flmul@b+1)
  2336  0551  00C7               	movlw	0x0
  2337  0552  3000               	movwf	(___flmul@b)
  2338  0553  00C6               
  2339                           	movf	(_sensor2),w
  2340  0554  086E               	bsf	status, 5	;RP0=1, select bank1
  2341  0555  1683               	bcf	status, 6	;RP1=0, select bank1
  2342  0556  1303               	movwf	(??_main+0)^080h+0
  2343  0557  00C4               	clrf	(??_main+0)^080h+0+1
  2344  0558  01C5               	clrf	(??_main+0)^080h+0+2
  2345  0559  01C6               	clrf	(??_main+0)^080h+0+3
  2346  055A  01C7               	movf	3+(??_main+0)^080h+0,w
  2347  055B  0847               	movwf	(___xxtofl@val+3)
  2348  055C  00F6               	movf	2+(??_main+0)^080h+0,w
  2349  055D  0846               	movwf	(___xxtofl@val+2)
  2350  055E  00F5               	movf	1+(??_main+0)^080h+0,w
  2351  055F  0845               	movwf	(___xxtofl@val+1)
  2352  0560  00F4               	movf	0+(??_main+0)^080h+0,w
  2353  0561  0844               	movwf	(___xxtofl@val)
  2354  0562  00F3               
  2355                           	movlw	low(0)
  2356  0563  3000               	fcall	___xxtofl
  2357  0564  120A  158A  20C4  120A  118A  	movf	(3+(?___xxtofl)),w
  2358  0569  0876               	bcf	status, 5	;RP0=0, select bank0
  2359  056A  1283               	bcf	status, 6	;RP1=0, select bank0
  2360  056B  1303               	movwf	(___flmul@a+3)
  2361  056C  00CD               	movf	(2+(?___xxtofl)),w
  2362  056D  0875               	movwf	(___flmul@a+2)
  2363  056E  00CC               	movf	(1+(?___xxtofl)),w
  2364  056F  0874               	movwf	(___flmul@a+1)
  2365  0570  00CB               	movf	(0+(?___xxtofl)),w
  2366  0571  0873               	movwf	(___flmul@a)
  2367  0572  00CA               
  2368                           	fcall	___flmul
  2369  0573  120A  118A  2024  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2370  0578  1283               	bcf	status, 6	;RP1=0, select bank0
  2371  0579  1303               	movf	(3+(?___flmul)),w
  2372  057A  0849               	movwf	(___fldiv@b+3)
  2373  057B  00E7               	movf	(2+(?___flmul)),w
  2374  057C  0848               	movwf	(___fldiv@b+2)
  2375  057D  00E6               	movf	(1+(?___flmul)),w
  2376  057E  0847               	movwf	(___fldiv@b+1)
  2377  057F  00E5               	movf	(0+(?___flmul)),w
  2378  0580  0846               	movwf	(___fldiv@b)
  2379  0581  00E4               
  2380                           	fcall	___fldiv
  2381  0582  120A  158A  2532  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2382  0587  1283               	bcf	status, 6	;RP1=0, select bank0
  2383  0588  1303               	movf	(3+(?___fldiv)),w
  2384  0589  0863               	bsf	status, 5	;RP0=1, select bank1
  2385  058A  1683               	bcf	status, 6	;RP1=0, select bank1
  2386  058B  1303               	movwf	(_sensorF2+3)^080h
  2387  058C  00AB               	bcf	status, 5	;RP0=0, select bank0
  2388  058D  1283               	bcf	status, 6	;RP1=0, select bank0
  2389  058E  1303               	movf	(2+(?___fldiv)),w
  2390  058F  0862               	bsf	status, 5	;RP0=1, select bank1
  2391  0590  1683               	bcf	status, 6	;RP1=0, select bank1
  2392  0591  1303               	movwf	(_sensorF2+2)^080h
  2393  0592  00AA               	bcf	status, 5	;RP0=0, select bank0
  2394  0593  1283               	bcf	status, 6	;RP1=0, select bank0
  2395  0594  1303               	movf	(1+(?___fldiv)),w
  2396  0595  0861               	bsf	status, 5	;RP0=1, select bank1
  2397  0596  1683               	bcf	status, 6	;RP1=0, select bank1
  2398  0597  1303               	movwf	(_sensorF2+1)^080h
  2399  0598  00A9               	bcf	status, 5	;RP0=0, select bank0
  2400  0599  1283               	bcf	status, 6	;RP1=0, select bank0
  2401  059A  1303               	movf	(0+(?___fldiv)),w
  2402  059B  0860               	bsf	status, 5	;RP0=1, select bank1
  2403  059C  1683               	bcf	status, 6	;RP1=0, select bank1
  2404  059D  1303               	movwf	(_sensorF2)^080h
  2405  059E  00A8               
  2406                           	line	92
  2407                           	
  2408                           l3141:	
  2409  059F                     ;newmain.c: 92:         entero2 = (int) sensorF2;;newmain.c: 92:         entero2 = (int)
                                  sensorF2;
  2410                           	movf	(_sensorF2+3)^080h,w
  2411  059F  082B               	movwf	(___fltol@f1+3)
  2412  05A0  00F6               	movf	(_sensorF2+2)^080h,w
  2413  05A1  082A               	movwf	(___fltol@f1+2)
  2414  05A2  00F5               	movf	(_sensorF2+1)^080h,w
  2415  05A3  0829               	movwf	(___fltol@f1+1)
  2416  05A4  00F4               	movf	(_sensorF2)^080h,w
  2417  05A5  0828               	movwf	(___fltol@f1)
  2418  05A6  00F3               
  2419                           	fcall	___fltol
  2420  05A7  120A  158A  2028  120A  118A  	movf	(0+(?___fltol)),w
  2421  05AC  0873               	bsf	status, 5	;RP0=1, select bank1
  2422  05AD  1683               	bcf	status, 6	;RP1=0, select bank1
  2423  05AE  1303               	movwf	(??_main+0)^080h+0
  2424  05AF  00C4               	movf	(??_main+0)^080h+0,w
  2425  05B0  0844               	movwf	(_entero2)
  2426  05B1  00F9               	line	93
  2427                           	
  2428                           l3143:	
  2429  05B2                     ;newmain.c: 93:         float2 = (sensorF2 - entero2) * 100;;newmain.c: 93:         floa
                                 t2 = (sensorF2 - entero2) * 100;
  2430                           	movlw	0x42
  2431  05B2  3042               	bcf	status, 5	;RP0=0, select bank0
  2432  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  2433  05B4  1303               	movwf	(___flmul@b+3)
  2434  05B5  00C9               	movlw	0xc8
  2435  05B6  30C8               	movwf	(___flmul@b+2)
  2436  05B7  00C8               	movlw	0x0
  2437  05B8  3000               	movwf	(___flmul@b+1)
  2438  05B9  00C7               	movlw	0x0
  2439  05BA  3000               	movwf	(___flmul@b)
  2440  05BB  00C6               
  2441                           	bsf	status, 5	;RP0=1, select bank1
  2442  05BC  1683               	bcf	status, 6	;RP1=0, select bank1
  2443  05BD  1303               	movf	(_sensorF2+3)^080h,w
  2444  05BE  082B               	bcf	status, 5	;RP0=0, select bank0
  2445  05BF  1283               	bcf	status, 6	;RP1=0, select bank0
  2446  05C0  1303               	movwf	(___fladd@b+3)
  2447  05C1  00B1               	bsf	status, 5	;RP0=1, select bank1
  2448  05C2  1683               	bcf	status, 6	;RP1=0, select bank1
  2449  05C3  1303               	movf	(_sensorF2+2)^080h,w
  2450  05C4  082A               	bcf	status, 5	;RP0=0, select bank0
  2451  05C5  1283               	bcf	status, 6	;RP1=0, select bank0
  2452  05C6  1303               	movwf	(___fladd@b+2)
  2453  05C7  00B0               	bsf	status, 5	;RP0=1, select bank1
  2454  05C8  1683               	bcf	status, 6	;RP1=0, select bank1
  2455  05C9  1303               	movf	(_sensorF2+1)^080h,w
  2456  05CA  0829               	bcf	status, 5	;RP0=0, select bank0
  2457  05CB  1283               	bcf	status, 6	;RP1=0, select bank0
  2458  05CC  1303               	movwf	(___fladd@b+1)
  2459  05CD  00AF               	bsf	status, 5	;RP0=1, select bank1
  2460  05CE  1683               	bcf	status, 6	;RP1=0, select bank1
  2461  05CF  1303               	movf	(_sensorF2)^080h,w
  2462  05D0  0828               	bcf	status, 5	;RP0=0, select bank0
  2463  05D1  1283               	bcf	status, 6	;RP1=0, select bank0
  2464  05D2  1303               	movwf	(___fladd@b)
  2465  05D3  00AE               
  2466                           	movf	(_entero2),w
  2467  05D4  0879               	bsf	status, 5	;RP0=1, select bank1
  2468  05D5  1683               	bcf	status, 6	;RP1=0, select bank1
  2469  05D6  1303               	movwf	(??_main+0)^080h+0
  2470  05D7  00C4               	clrf	(??_main+0)^080h+0+1
  2471  05D8  01C5               	clrf	(??_main+0)^080h+0+2
  2472  05D9  01C6               	clrf	(??_main+0)^080h+0+3
  2473  05DA  01C7               	movf	3+(??_main+0)^080h+0,w
  2474  05DB  0847               	movwf	(___xxtofl@val+3)
  2475  05DC  00F6               	movf	2+(??_main+0)^080h+0,w
  2476  05DD  0846               	movwf	(___xxtofl@val+2)
  2477  05DE  00F5               	movf	1+(??_main+0)^080h+0,w
  2478  05DF  0845               	movwf	(___xxtofl@val+1)
  2479  05E0  00F4               	movf	0+(??_main+0)^080h+0,w
  2480  05E1  0844               	movwf	(___xxtofl@val)
  2481  05E2  00F3               
  2482                           	movlw	low(01h)
  2483  05E3  3001               	fcall	___xxtofl
  2484  05E4  120A  158A  20C4  120A  118A  	movf	(3+(?___xxtofl)),w
  2485  05E9  0876               	bcf	status, 5	;RP0=0, select bank0
  2486  05EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2487  05EB  1303               	movwf	(___flneg@f1+3)
  2488  05EC  00AD               	movf	(2+(?___xxtofl)),w
  2489  05ED  0875               	movwf	(___flneg@f1+2)
  2490  05EE  00AC               	movf	(1+(?___xxtofl)),w
  2491  05EF  0874               	movwf	(___flneg@f1+1)
  2492  05F0  00AB               	movf	(0+(?___xxtofl)),w
  2493  05F1  0873               	movwf	(___flneg@f1)
  2494  05F2  00AA               
  2495                           	fcall	___flneg
  2496  05F3  160A  118A  256D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2497  05F8  1283               	bcf	status, 6	;RP1=0, select bank0
  2498  05F9  1303               	movf	(3+(?___flneg)),w
  2499  05FA  082D               	movwf	(___fladd@a+3)
  2500  05FB  00B5               	movf	(2+(?___flneg)),w
  2501  05FC  082C               	movwf	(___fladd@a+2)
  2502  05FD  00B4               	movf	(1+(?___flneg)),w
  2503  05FE  082B               	movwf	(___fladd@a+1)
  2504  05FF  00B3               	movf	(0+(?___flneg)),w
  2505  0600  082A               	movwf	(___fladd@a)
  2506  0601  00B2               
  2507                           	fcall	___fladd
  2508  0602  120A  158A  2276  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2509  0607  1283               	bcf	status, 6	;RP1=0, select bank0
  2510  0608  1303               	movf	(3+(?___fladd)),w
  2511  0609  0831               	movwf	(___flmul@a+3)
  2512  060A  00CD               	movf	(2+(?___fladd)),w
  2513  060B  0830               	movwf	(___flmul@a+2)
  2514  060C  00CC               	movf	(1+(?___fladd)),w
  2515  060D  082F               	movwf	(___flmul@a+1)
  2516  060E  00CB               	movf	(0+(?___fladd)),w
  2517  060F  082E               	movwf	(___flmul@a)
  2518  0610  00CA               
  2519                           	fcall	___flmul
  2520  0611  120A  118A  2024  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2521  0616  1283               	bcf	status, 6	;RP1=0, select bank0
  2522  0617  1303               	movf	(3+(?___flmul)),w
  2523  0618  0849               	bsf	status, 5	;RP0=1, select bank1
  2524  0619  1683               	bcf	status, 6	;RP1=0, select bank1
  2525  061A  1303               	movwf	(_float2+3)^080h
  2526  061B  00A3               	bcf	status, 5	;RP0=0, select bank0
  2527  061C  1283               	bcf	status, 6	;RP1=0, select bank0
  2528  061D  1303               	movf	(2+(?___flmul)),w
  2529  061E  0848               	bsf	status, 5	;RP0=1, select bank1
  2530  061F  1683               	bcf	status, 6	;RP1=0, select bank1
  2531  0620  1303               	movwf	(_float2+2)^080h
  2532  0621  00A2               	bcf	status, 5	;RP0=0, select bank0
  2533  0622  1283               	bcf	status, 6	;RP1=0, select bank0
  2534  0623  1303               	movf	(1+(?___flmul)),w
  2535  0624  0847               	bsf	status, 5	;RP0=1, select bank1
  2536  0625  1683               	bcf	status, 6	;RP1=0, select bank1
  2537  0626  1303               	movwf	(_float2+1)^080h
  2538  0627  00A1               	bcf	status, 5	;RP0=0, select bank0
  2539  0628  1283               	bcf	status, 6	;RP1=0, select bank0
  2540  0629  1303               	movf	(0+(?___flmul)),w
  2541  062A  0846               	bsf	status, 5	;RP0=1, select bank1
  2542  062B  1683               	bcf	status, 6	;RP1=0, select bank1
  2543  062C  1303               	movwf	(_float2)^080h
  2544  062D  00A0               
  2545                           	line	94
  2546                           	
  2547                           l3145:	
  2548  062E                     ;newmain.c: 94:         dec2 = (int) float2;;newmain.c: 94:         dec2 = (int) float2;
                                 
  2549                           	movf	(_float2+3)^080h,w
  2550  062E  0823               	movwf	(___fltol@f1+3)
  2551  062F  00F6               	movf	(_float2+2)^080h,w
  2552  0630  0822               	movwf	(___fltol@f1+2)
  2553  0631  00F5               	movf	(_float2+1)^080h,w
  2554  0632  0821               	movwf	(___fltol@f1+1)
  2555  0633  00F4               	movf	(_float2)^080h,w
  2556  0634  0820               	movwf	(___fltol@f1)
  2557  0635  00F3               
  2558                           	fcall	___fltol
  2559  0636  120A  158A  2028  120A  118A  	movf	(0+(?___fltol)),w
  2560  063B  0873               	bsf	status, 5	;RP0=1, select bank1
  2561  063C  1683               	bcf	status, 6	;RP1=0, select bank1
  2562  063D  1303               	movwf	(??_main+0)^080h+0
  2563  063E  00C4               	movf	(??_main+0)^080h+0,w
  2564  063F  0844               	movwf	(_dec2)^080h
  2565  0640  00B1               	line	97
  2566                           	
  2567                           l3147:	
  2568  0641                     ;newmain.c: 97:         writeFloat(entero1, dec1, 1);;newmain.c: 97:         writeFloat(
                                 entero1, dec1, 1);
  2569                           	movf	(_dec1)^080h,w
  2570  0641  0832               	movwf	(??_main+0)^080h+0
  2571  0642  00C4               	movf	(??_main+0)^080h+0,w
  2572  0643  0844               	bcf	status, 5	;RP0=0, select bank0
  2573  0644  1283               	bcf	status, 6	;RP1=0, select bank0
  2574  0645  1303               	movwf	(writeFloat@decimal)
  2575  0646  00BE               	clrf	(writeFloat@initPos)
  2576  0647  01BF               	incf	(writeFloat@initPos),f
  2577  0648  0ABF               	movf	(_entero1),w
  2578  0649  086D               	fcall	_writeFloat
  2579  064A  160A  118A  2727  120A  118A  	line	98
  2580                           	
  2581                           l3149:	
  2582  064F                     ;newmain.c: 98:         writeFloat(entero2, dec2, 7);;newmain.c: 98:         writeFloat(
                                 entero2, dec2, 7);
  2583                           	bsf	status, 5	;RP0=1, select bank1
  2584  064F  1683               	bcf	status, 6	;RP1=0, select bank1
  2585  0650  1303               	movf	(_dec2)^080h,w
  2586  0651  0831               	movwf	(??_main+0)^080h+0
  2587  0652  00C4               	movf	(??_main+0)^080h+0,w
  2588  0653  0844               	bcf	status, 5	;RP0=0, select bank0
  2589  0654  1283               	bcf	status, 6	;RP1=0, select bank0
  2590  0655  1303               	movwf	(writeFloat@decimal)
  2591  0656  00BE               	movlw	low(07h)
  2592  0657  3007               	bsf	status, 5	;RP0=1, select bank1
  2593  0658  1683               	bcf	status, 6	;RP1=0, select bank1
  2594  0659  1303               	movwf	(??_main+1)^080h+0
  2595  065A  00C5               	movf	(??_main+1)^080h+0,w
  2596  065B  0845               	bcf	status, 5	;RP0=0, select bank0
  2597  065C  1283               	bcf	status, 6	;RP1=0, select bank0
  2598  065D  1303               	movwf	(writeFloat@initPos)
  2599  065E  00BF               	movf	(_entero2),w
  2600  065F  0879               	fcall	_writeFloat
  2601  0660  160A  118A  2727  120A  118A  	line	99
  2602                           	
  2603                           l3151:	
  2604  0665                     ;newmain.c: 99:         setCursorLCD(2, 13);;newmain.c: 99:         setCursorLCD(2, 13);
                                 
  2605                           	movlw	low(0Dh)
  2606  0665  300D               	bsf	status, 5	;RP0=1, select bank1
  2607  0666  1683               	bcf	status, 6	;RP1=0, select bank1
  2608  0667  1303               	movwf	(??_main+0)^080h+0
  2609  0668  00C4               	movf	(??_main+0)^080h+0,w
  2610  0669  0844               	movwf	(setCursorLCD@x)
  2611  066A  00F6               	movlw	low(02h)
  2612  066B  3002               	fcall	_setCursorLCD
  2613  066C  120A  158A  2009  120A  118A  	line	100
  2614                           	
  2615                           l3153:	
  2616  0671                     ;newmain.c: 100:         writeIntLCD(cont);;newmain.c: 100:         writeIntLCD(cont);
  2617                           	bsf	status, 5	;RP0=1, select bank1
  2618  0671  1683               	bcf	status, 6	;RP1=0, select bank1
  2619  0672  1303               	movf	(_cont)^080h,w
  2620  0673  0833               	fcall	_writeIntLCD
  2621  0674  160A  118A  25AF  120A  118A  	line	101
  2622                           	
  2623                           l3155:	
  2624  0679                     ;newmain.c: 101:         writeStrLCD("  ");;newmain.c: 101:         writeStrLCD("  ");
  2625                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2626  0679  300F               	movwf	(writeStrLCD@string)
  2627  067A  00F5               	movlw	80h
  2628  067B  3080               	movwf	(writeStrLCD@string+1)
  2629  067C  00F6               	fcall	_writeStrLCD
  2630  067D  160A  118A  2692  120A  118A  	line	103
  2631                           	
  2632                           l3157:	
  2633  0682                     ;newmain.c: 103:         sendUSART(sensor1);;newmain.c: 103:         sendUSART(sensor1);
                                 
  2634                           	bcf	status, 5	;RP0=0, select bank0
  2635  0682  1283               	bcf	status, 6	;RP1=0, select bank0
  2636  0683  1303               	movf	(_sensor1),w
  2637  0684  086F               	fcall	_sendUSART
  2638  0685  160A  118A  255F  120A  118A  	line	104
  2639                           	
  2640                           l3159:	
  2641  068A                     ;newmain.c: 104:         sendUSART(sensor2);;newmain.c: 104:         sendUSART(sensor2);
                                 
  2642                           	bcf	status, 5	;RP0=0, select bank0
  2643  068A  1283               	bcf	status, 6	;RP1=0, select bank0
  2644  068B  1303               	movf	(_sensor2),w
  2645  068C  086E               	fcall	_sendUSART
  2646  068D  160A  118A  255F  120A  118A  	line	105
  2647                           	
  2648                           l3161:	
  2649  0692                     ;newmain.c: 105:         sendUSART(255);;newmain.c: 105:         sendUSART(255);
  2650                           	movlw	low(0FFh)
  2651  0692  30FF               	fcall	_sendUSART
  2652  0693  160A  118A  255F  120A  118A  	line	107
  2653                           	
  2654                           l3163:	
  2655  0698                     ;newmain.c: 107:         if(interrupcionUSART){;newmain.c: 107:         if(interrupcionU
                                 SART){
  2656                           	bsf	status, 5	;RP0=1, select bank1
  2657  0698  1683               	bcf	status, 6	;RP1=0, select bank1
  2658  0699  1303               	movf	((_interrupcionUSART)^080h),w
  2659  069A  0830               	btfsc	status,2
  2660  069B  1903               	goto	u4141
  2661  069C  2E9E               	goto	u4140
  2662  069D  2E9F               u4141:
  2663  069E                     	goto	l3175
  2664  069E  2EB6               u4140:
  2665  069F                     	line	108
  2666                           	
  2667                           l3165:	
  2668  069F                     ;newmain.c: 108:             if(receivingData == 43){;newmain.c: 108:             if(rec
                                 eivingData == 43){
  2669                           		movlw	43
  2670  069F  302B               	xorwf	((_receivingData)),w
  2671  06A0  0678               	btfss	status,2
  2672  06A1  1D03               	goto	u4151
  2673  06A2  2EA4               	goto	u4150
  2674  06A3  2EA5               u4151:
  2675  06A4                     	goto	l3169
  2676  06A4  2EAA               u4150:
  2677  06A5                     	line	109
  2678                           	
  2679                           l3167:	
  2680  06A5                     ;newmain.c: 109:                 cont++;;newmain.c: 109:                 cont++;
  2681                           	movlw	low(01h)
  2682  06A5  3001               	movwf	(??_main+0)^080h+0
  2683  06A6  00C4               	movf	(??_main+0)^080h+0,w
  2684  06A7  0844               	addwf	(_cont)^080h,f
  2685  06A8  07B3               	line	110
  2686                           ;newmain.c: 110:             }else if(receivingData == 45){;newmain.c: 110:             
                                 }else if(receivingData == 45){
  2687                           	goto	l3173
  2688  06A9  2EB4               	
  2689                           l209:	
  2690  06AA                     	
  2691                           l3169:	
  2692  06AA                     		movlw	45
  2693  06AA  302D               	xorwf	((_receivingData)),w
  2694  06AB  0678               	btfss	status,2
  2695  06AC  1D03               	goto	u4161
  2696  06AD  2EAF               	goto	u4160
  2697  06AE  2EB0               u4161:
  2698  06AF                     	goto	l3173
  2699  06AF  2EB4               u4160:
  2700  06B0                     	line	111
  2701                           	
  2702                           l3171:	
  2703  06B0                     ;newmain.c: 111:                 cont--;;newmain.c: 111:                 cont--;
  2704                           	movlw	01h
  2705  06B0  3001               	subwf	(_cont)^080h,f
  2706  06B1  02B3               	goto	l3173
  2707  06B2  2EB4               	line	112
  2708                           ;newmain.c: 112:             };newmain.c: 112:             }
  2709                           	
  2710                           l211:	
  2711  06B3                     	goto	l3173
  2712  06B3  2EB4               	
  2713                           l210:	
  2714  06B4                     	line	113
  2715                           	
  2716                           l3173:	
  2717  06B4                     ;newmain.c: 113:             interrupcionUSART = 0;;newmain.c: 113:             interrup
                                 cionUSART = 0;
  2718                           	clrf	(_interrupcionUSART)^080h
  2719  06B4  01B0               	goto	l3175
  2720  06B5  2EB6               	line	114
  2721                           ;newmain.c: 114:         };newmain.c: 114:         }
  2722                           	
  2723                           l208:	
  2724  06B6                     	line	116
  2725                           	
  2726                           l3175:	
  2727  06B6                     ;newmain.c: 116:         if(ADCON0bits.GO_DONE == 0){;newmain.c: 116:         if(ADCON0b
                                 its.GO_DONE == 0){
  2728                           	bcf	status, 5	;RP0=0, select bank0
  2729  06B6  1283               	bcf	status, 6	;RP1=0, select bank0
  2730  06B7  1303               	btfsc	(31),1	;volatile
  2731  06B8  189F               	goto	u4171
  2732  06B9  2EBB               	goto	u4170
  2733  06BA  2EBC               u4171:
  2734  06BB                     	goto	l3115
  2735  06BB  2C0C               u4170:
  2736  06BC                     	line	117
  2737                           	
  2738                           l3177:	
  2739  06BC                     ;newmain.c: 117:             ADCON0bits.GO_DONE = 1;;newmain.c: 117:             ADCON0b
                                 its.GO_DONE = 1;
  2740                           	bsf	(31),1	;volatile
  2741  06BC  149F               	goto	l3115
  2742  06BD  2C0C               	line	118
  2743                           ;newmain.c: 118:         };newmain.c: 118:         }
  2744                           	
  2745                           l212:	
  2746  06BE                     	goto	l3115
  2747  06BE  2C0C               	line	120
  2748                           ;newmain.c: 120:     };newmain.c: 120:     }
  2749                           	
  2750                           l213:	
  2751  06BF                     	goto	l3115
  2752  06BF  2C0C               	
  2753                           l214:	
  2754  06C0                     	line	121
  2755                           	
  2756                           l215:	
  2757  06C0                     	global	start
  2758                           	ljmp	start
  2759  06C0  120A  118A  280C   	opt stack 0
  2760                           GLOBAL	__end_of_main
  2761                           	__end_of_main:
  2762  06C3                     	signat	_main,89
  2763                           	global	_writeFloat
  2764                           
  2765 ;; *************** function _writeFloat *****************
  2766 ;; Defined at:
  2767 ;;		line 63 in file "LCD.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  integer         1    wreg     unsigned char 
  2770 ;;  decimal         1   30[BANK0 ] unsigned char 
  2771 ;;  initPos         1   31[BANK0 ] unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  integer         1   33[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       2       0       0       0
  2784 ;;      Locals:         0       1       0       0       0
  2785 ;;      Temps:          0       1       0       0       0
  2786 ;;      Totals:         0       4       0       0       0
  2787 ;;Total ram usage:        4 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		_setCursorLCD
  2792 ;;		_writeCharLCD
  2793 ;;		_writeIntLCD
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2799                           	file	"LCD.c"
  2800                           	line	63
  2801                           global __ptext1
  2802                           __ptext1:	;psect for function _writeFloat
  2803  1727                     psect	text1
  2804                           	file	"LCD.c"
  2805                           	line	63
  2806                           	global	__size_of_writeFloat
  2807                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2808  0060                     	
  2809                           _writeFloat:	
  2810  1727                     ;incstack = 0
  2811                           	opt	stack 3
  2812                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2813                           ;writeFloat@integer stored from wreg
  2814                           	bcf	status, 5	;RP0=0, select bank0
  2815  1727  1283               	bcf	status, 6	;RP1=0, select bank0
  2816  1728  1303               	movwf	(writeFloat@integer)
  2817  1729  00C1               	line	66
  2818                           	
  2819                           l2989:	
  2820  172A                     ;LCD.c: 66:     setCursorLCD(2, initPos);;LCD.c: 66:     setCursorLCD(2, initPos);
  2821                           	movf	(writeFloat@initPos),w
  2822  172A  083F               	movwf	(??_writeFloat+0)+0
  2823  172B  00C0               	movf	(??_writeFloat+0)+0,w
  2824  172C  0840               	movwf	(setCursorLCD@x)
  2825  172D  00F6               	movlw	low(02h)
  2826  172E  3002               	fcall	_setCursorLCD
  2827  172F  120A  158A  2009  160A  118A  	line	67
  2828                           	
  2829                           l2991:	
  2830  1734                     ;LCD.c: 67:     writeIntLCD(integer);;LCD.c: 67:     writeIntLCD(integer);
  2831                           	bcf	status, 5	;RP0=0, select bank0
  2832  1734  1283               	bcf	status, 6	;RP1=0, select bank0
  2833  1735  1303               	movf	(writeFloat@integer),w
  2834  1736  0841               	fcall	_writeIntLCD
  2835  1737  160A  118A  25AF  160A  118A  	line	68
  2836                           	
  2837                           l2993:	
  2838  173C                     ;LCD.c: 68:     setCursorLCD(2, initPos + 1);;LCD.c: 68:     setCursorLCD(2, initPos + 1
                                 );
  2839                           	bcf	status, 5	;RP0=0, select bank0
  2840  173C  1283               	bcf	status, 6	;RP1=0, select bank0
  2841  173D  1303               	movf	(writeFloat@initPos),w
  2842  173E  083F               	addlw	01h
  2843  173F  3E01               	movwf	(??_writeFloat+0)+0
  2844  1740  00C0               	movf	(??_writeFloat+0)+0,w
  2845  1741  0840               	movwf	(setCursorLCD@x)
  2846  1742  00F6               	movlw	low(02h)
  2847  1743  3002               	fcall	_setCursorLCD
  2848  1744  120A  158A  2009  160A  118A  	line	69
  2849                           	
  2850                           l2995:	
  2851  1749                     ;LCD.c: 69:     writeCharLCD('.');;LCD.c: 69:     writeCharLCD('.');
  2852                           	movlw	low(02Eh)
  2853  1749  302E               	fcall	_writeCharLCD
  2854  174A  160A  118A  257C  160A  118A  	line	70
  2855                           	
  2856                           l2997:	
  2857  174F                     ;LCD.c: 70:     setCursorLCD(2, initPos + 2);;LCD.c: 70:     setCursorLCD(2, initPos + 2
                                 );
  2858                           	bcf	status, 5	;RP0=0, select bank0
  2859  174F  1283               	bcf	status, 6	;RP1=0, select bank0
  2860  1750  1303               	movf	(writeFloat@initPos),w
  2861  1751  083F               	addlw	02h
  2862  1752  3E02               	movwf	(??_writeFloat+0)+0
  2863  1753  00C0               	movf	(??_writeFloat+0)+0,w
  2864  1754  0840               	movwf	(setCursorLCD@x)
  2865  1755  00F6               	movlw	low(02h)
  2866  1756  3002               	fcall	_setCursorLCD
  2867  1757  120A  158A  2009  160A  118A  	line	72
  2868                           	
  2869                           l2999:	
  2870  175C                     ;LCD.c: 72:     if(decimal < 10){;LCD.c: 72:     if(decimal < 10){
  2871                           	movlw	low(0Ah)
  2872  175C  300A               	bcf	status, 5	;RP0=0, select bank0
  2873  175D  1283               	bcf	status, 6	;RP1=0, select bank0
  2874  175E  1303               	subwf	(writeFloat@decimal),w
  2875  175F  023E               	skipnc
  2876  1760  1803               	goto	u3871
  2877  1761  2F63               	goto	u3870
  2878  1762  2F64               u3871:
  2879  1763                     	goto	l3003
  2880  1763  2F6B               u3870:
  2881  1764                     	line	73
  2882                           	
  2883                           l3001:	
  2884  1764                     ;LCD.c: 73:         writeCharLCD('0');;LCD.c: 73:         writeCharLCD('0');
  2885                           	movlw	low(030h)
  2886  1764  3030               	fcall	_writeCharLCD
  2887  1765  160A  118A  257C  160A  118A  	goto	l3003
  2888  176A  2F6B               	line	74
  2889                           ;LCD.c: 74:     };LCD.c: 74:     }
  2890                           	
  2891                           l105:	
  2892  176B                     	line	75
  2893                           	
  2894                           l3003:	
  2895  176B                     ;LCD.c: 75:     writeIntLCD(decimal);;LCD.c: 75:     writeIntLCD(decimal);
  2896                           	bcf	status, 5	;RP0=0, select bank0
  2897  176B  1283               	bcf	status, 6	;RP1=0, select bank0
  2898  176C  1303               	movf	(writeFloat@decimal),w
  2899  176D  083E               	fcall	_writeIntLCD
  2900  176E  160A  118A  25AF  160A  118A  	line	77
  2901                           	
  2902                           l3005:	
  2903  1773                     ;LCD.c: 77:     setCursorLCD(2, initPos + 4);;LCD.c: 77:     setCursorLCD(2, initPos + 4
                                 );
  2904                           	bcf	status, 5	;RP0=0, select bank0
  2905  1773  1283               	bcf	status, 6	;RP1=0, select bank0
  2906  1774  1303               	movf	(writeFloat@initPos),w
  2907  1775  083F               	addlw	04h
  2908  1776  3E04               	movwf	(??_writeFloat+0)+0
  2909  1777  00C0               	movf	(??_writeFloat+0)+0,w
  2910  1778  0840               	movwf	(setCursorLCD@x)
  2911  1779  00F6               	movlw	low(02h)
  2912  177A  3002               	fcall	_setCursorLCD
  2913  177B  120A  158A  2009  160A  118A  	line	78
  2914                           	
  2915                           l3007:	
  2916  1780                     ;LCD.c: 78:     writeCharLCD('V');;LCD.c: 78:     writeCharLCD('V');
  2917                           	movlw	low(056h)
  2918  1780  3056               	fcall	_writeCharLCD
  2919  1781  160A  118A  257C  160A  118A  	line	79
  2920                           	
  2921                           l106:	
  2922  1786                     	return
  2923  1786  0008               	opt stack 0
  2924                           GLOBAL	__end_of_writeFloat
  2925                           	__end_of_writeFloat:
  2926  1787                     	signat	_writeFloat,12409
  2927                           	global	_writeIntLCD
  2928                           
  2929 ;; *************** function _writeIntLCD *****************
  2930 ;; Defined at:
  2931 ;;		line 57 in file "LCD.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  numero          1    wreg     unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  numero          1   29[BANK0 ] unsigned char 
  2936 ;;  buffer          4   25[BANK0 ] unsigned char [4]
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       5       0       0       0
  2948 ;;      Temps:          0       3       0       0       0
  2949 ;;      Totals:         0       8       0       0       0
  2950 ;;Total ram usage:        8 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    3
  2953 ;; This function calls:
  2954 ;;		_sprintf
  2955 ;;		_writeStrLCD
  2956 ;; This function is called by:
  2957 ;;		_writeFloat
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2962                           	line	57
  2963                           global __ptext2
  2964                           __ptext2:	;psect for function _writeIntLCD
  2965  15AF                     psect	text2
  2966                           	file	"LCD.c"
  2967                           	line	57
  2968                           	global	__size_of_writeIntLCD
  2969                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2970  001E                     	
  2971                           _writeIntLCD:	
  2972  15AF                     ;incstack = 0
  2973                           	opt	stack 4
  2974                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2975                           ;writeIntLCD@numero stored from wreg
  2976                           	bcf	status, 5	;RP0=0, select bank0
  2977  15AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2978  15B0  1303               	movwf	(writeIntLCD@numero)
  2979  15B1  00BD               	line	59
  2980                           	
  2981                           l2967:	
  2982  15B2                     ;LCD.c: 58:     char buffer [4];;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf 
                                 (buffer, "%d", numero);;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2983                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2984  15B2  3018               	movwf	(??_writeIntLCD+0)+0
  2985  15B3  00B6               	movf	(??_writeIntLCD+0)+0,w
  2986  15B4  0836               	movwf	(sprintf@f)
  2987  15B5  00A9               	movf	(writeIntLCD@numero),w
  2988  15B6  083D               	movwf	(??_writeIntLCD+1)+0
  2989  15B7  00B7               	clrf	(??_writeIntLCD+1)+0+1
  2990  15B8  01B8               	movf	0+(??_writeIntLCD+1)+0,w
  2991  15B9  0837               	movwf	0+(?_sprintf)+01h
  2992  15BA  00AA               	movf	1+(??_writeIntLCD+1)+0,w
  2993  15BB  0838               	movwf	1+(?_sprintf)+01h
  2994  15BC  00AB               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2995  15BD  3039               	fcall	_sprintf
  2996  15BE  120A  118A  26C3  160A  118A  	line	60
  2997                           ;LCD.c: 60:     writeStrLCD(buffer);;LCD.c: 60:     writeStrLCD(buffer);
  2998                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2999  15C3  3039               	movwf	(writeStrLCD@string)
  3000  15C4  00F5               	movlw	(0x0)
  3001  15C5  3000               	movwf	(writeStrLCD@string+1)
  3002  15C6  00F6               	fcall	_writeStrLCD
  3003  15C7  160A  118A  2692  160A  118A  	line	61
  3004                           	
  3005                           l102:	
  3006  15CC                     	return
  3007  15CC  0008               	opt stack 0
  3008                           GLOBAL	__end_of_writeIntLCD
  3009                           	__end_of_writeIntLCD:
  3010  15CD                     	signat	_writeIntLCD,4217
  3011                           	global	_writeStrLCD
  3012                           
  3013 ;; *************** function _writeStrLCD *****************
  3014 ;; Defined at:
  3015 ;;		line 21 in file "LCD.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  string          2    5[COMMON] PTR unsigned char 
  3018 ;;		 -> STR_5(3), STR_4(4), STR_3(3), STR_2(3), 
  3019 ;;		 -> writeIntLCD@buffer(4), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  cont            2    3[BANK0 ] int 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         2       0       0       0       0
  3032 ;;      Locals:         0       2       0       0       0
  3033 ;;      Temps:          0       3       0       0       0
  3034 ;;      Totals:         2       5       0       0       0
  3035 ;;Total ram usage:        7 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    2
  3038 ;; This function calls:
  3039 ;;		_writeCharLCD
  3040 ;; This function is called by:
  3041 ;;		_writeIntLCD
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3046                           	line	21
  3047                           global __ptext3
  3048                           __ptext3:	;psect for function _writeStrLCD
  3049  1692                     psect	text3
  3050                           	file	"LCD.c"
  3051                           	line	21
  3052                           	global	__size_of_writeStrLCD
  3053                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3054  0048                     	
  3055                           _writeStrLCD:	
  3056  1692                     ;incstack = 0
  3057                           	opt	stack 5
  3058                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3059                           	line	23
  3060                           	
  3061                           l2889:	
  3062  1692                     ;LCD.c: 22:  int cont;;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';c
                                 ont++){;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3063                           	bcf	status, 5	;RP0=0, select bank0
  3064  1692  1283               	bcf	status, 6	;RP1=0, select bank0
  3065  1693  1303               	clrf	(writeStrLCD@cont)
  3066  1694  01A3               	clrf	(writeStrLCD@cont+1)
  3067  1695  01A4               	goto	l2895
  3068  1696  2EBC               	
  3069                           l88:	
  3070  1697                     	line	24
  3071                           	
  3072                           l2891:	
  3073  1697                     ;LCD.c: 24:         writeCharLCD(string[cont]);;LCD.c: 24:         writeCharLCD(string[c
                                 ont]);
  3074                           	movf	(writeStrLCD@cont),w
  3075  1697  0823               	addwf	(writeStrLCD@string),w
  3076  1698  0775               	movwf	(??_writeStrLCD+1)+0
  3077  1699  00A1               	movf	(writeStrLCD@string+1),w
  3078  169A  0876               	movwf	(??_writeStrLCD+0)+0
  3079  169B  00A0               	skipnc
  3080  169C  1803               	incf	(??_writeStrLCD+0)+0,f
  3081  169D  0AA0               	btfss	(writeStrLCD@cont),7
  3082  169E  1FA3               	goto	u3750
  3083  169F  2EA1               	decf	(??_writeStrLCD+0)+0,f
  3084  16A0  03A0               u3750:
  3085  16A1                     	bcf	status, 5	;RP0=0, select bank0
  3086  16A1  1283               	bcf	status, 6	;RP1=0, select bank0
  3087  16A2  1303               	movf	(??_writeStrLCD+0)+0,w
  3088  16A3  0820               	movwf	0+((??_writeStrLCD+1)+0)+1
  3089  16A4  00A2               	movf	1+(??_writeStrLCD+1)+0,w
  3090  16A5  0822               	movwf	btemp+1
  3091  16A6  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3092  16A7  0821               	movwf	fsr0
  3093  16A8  0084               	fcall	stringtab
  3094  16A9  160A  118A  2000  160A  118A  	fcall	_writeCharLCD
  3095  16AE  160A  118A  257C  160A  118A  	line	25
  3096                           	
  3097                           l2893:	
  3098  16B3                     ;LCD.c: 25:     };LCD.c: 25:     }
  3099                           	movlw	01h
  3100  16B3  3001               	bcf	status, 5	;RP0=0, select bank0
  3101  16B4  1283               	bcf	status, 6	;RP1=0, select bank0
  3102  16B5  1303               	addwf	(writeStrLCD@cont),f
  3103  16B6  07A3               	skipnc
  3104  16B7  1803               	incf	(writeStrLCD@cont+1),f
  3105  16B8  0AA4               	movlw	0
  3106  16B9  3000               	addwf	(writeStrLCD@cont+1),f
  3107  16BA  07A4               	goto	l2895
  3108  16BB  2EBC               	
  3109                           l87:	
  3110  16BC                     	
  3111                           l2895:	
  3112  16BC                     	movf	(writeStrLCD@cont),w
  3113  16BC  0823               	addwf	(writeStrLCD@string),w
  3114  16BD  0775               	movwf	(??_writeStrLCD+1)+0
  3115  16BE  00A1               	movf	(writeStrLCD@string+1),w
  3116  16BF  0876               	movwf	(??_writeStrLCD+0)+0
  3117  16C0  00A0               	skipnc
  3118  16C1  1803               	incf	(??_writeStrLCD+0)+0,f
  3119  16C2  0AA0               	btfss	(writeStrLCD@cont),7
  3120  16C3  1FA3               	goto	u3760
  3121  16C4  2EC6               	decf	(??_writeStrLCD+0)+0,f
  3122  16C5  03A0               u3760:
  3123  16C6                     	bcf	status, 5	;RP0=0, select bank0
  3124  16C6  1283               	bcf	status, 6	;RP1=0, select bank0
  3125  16C7  1303               	movf	(??_writeStrLCD+0)+0,w
  3126  16C8  0820               	movwf	0+((??_writeStrLCD+1)+0)+1
  3127  16C9  00A2               	movf	1+(??_writeStrLCD+1)+0,w
  3128  16CA  0822               	movwf	btemp+1
  3129  16CB  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3130  16CC  0821               	movwf	fsr0
  3131  16CD  0084               	fcall	stringtab
  3132  16CE  160A  118A  2000  160A  118A  	xorlw	0
  3133  16D3  3A00               	skipz
  3134  16D4  1D03               	goto	u3771
  3135  16D5  2ED7               	goto	u3770
  3136  16D6  2ED8               u3771:
  3137  16D7                     	goto	l2891
  3138  16D7  2E97               u3770:
  3139  16D8                     	goto	l90
  3140  16D8  2ED9               	
  3141                           l89:	
  3142  16D9                     	line	26
  3143                           	
  3144                           l90:	
  3145  16D9                     	return
  3146  16D9  0008               	opt stack 0
  3147                           GLOBAL	__end_of_writeStrLCD
  3148                           	__end_of_writeStrLCD:
  3149  16DA                     	signat	_writeStrLCD,4217
  3150                           	global	_writeCharLCD
  3151                           
  3152 ;; *************** function _writeCharLCD *****************
  3153 ;; Defined at:
  3154 ;;		line 28 in file "LCD.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  character       1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  character       1    4[COMMON] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         0       0       0       0       0
  3169 ;;      Locals:         1       0       0       0       0
  3170 ;;      Temps:          1       0       0       0       0
  3171 ;;      Totals:         2       0       0       0       0
  3172 ;;Total ram usage:        2 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_writeStrLCD
  3179 ;;		_writeFloat
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3183                           	line	28
  3184                           global __ptext4
  3185                           __ptext4:	;psect for function _writeCharLCD
  3186  157C                     psect	text4
  3187                           	file	"LCD.c"
  3188                           	line	28
  3189                           	global	__size_of_writeCharLCD
  3190                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3191  000F                     	
  3192                           _writeCharLCD:	
  3193  157C                     ;incstack = 0
  3194                           	opt	stack 5
  3195                           ; Regs used in _writeCharLCD: [wreg]
  3196                           ;writeCharLCD@character stored from wreg
  3197                           	movwf	(writeCharLCD@character)
  3198  157C  00F4               	line	29
  3199                           	
  3200                           l1857:	
  3201  157D                     ;LCD.c: 29:    RD0 = 1;;LCD.c: 29:    RD0 = 1;
  3202                           	bcf	status, 5	;RP0=0, select bank0
  3203  157D  1283               	bcf	status, 6	;RP1=0, select bank0
  3204  157E  1303               	bsf	(64/8),(64)&7	;volatile
  3205  157F  1408               	line	30
  3206                           	
  3207                           l1859:	
  3208  1580                     ;LCD.c: 30:    PORTB = character;;LCD.c: 30:    PORTB = character;
  3209                           	movf	(writeCharLCD@character),w
  3210  1580  0874               	movwf	(6)	;volatile
  3211  1581  0086               	line	31
  3212                           	
  3213                           l1861:	
  3214  1582                     ;LCD.c: 31:    RD1 = 1;;LCD.c: 31:    RD1 = 1;
  3215                           	bsf	(65/8),(65)&7	;volatile
  3216  1582  1488               	line	32
  3217                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));;LCD.c: 32:    _delay((
                                 unsigned long)((40)*(4000000/4000000.0)));
  3218                           	opt asmopt_push
  3219                           opt asmopt_off
  3220                           	movlw	13
  3221  1583  300D               movwf	((??_writeCharLCD+0)+0),f
  3222  1584  00F3               	u4187:
  3223  1585                     decfsz	(??_writeCharLCD+0)+0,f
  3224  1585  0BF3               	goto	u4187
  3225  1586  2D85               opt asmopt_pop
  3226                           
  3227                           	line	33
  3228                           	
  3229                           l1863:	
  3230  1587                     ;LCD.c: 33:    RD1 = 0;;LCD.c: 33:    RD1 = 0;
  3231                           	bcf	status, 5	;RP0=0, select bank0
  3232  1587  1283               	bcf	status, 6	;RP1=0, select bank0
  3233  1588  1303               	bcf	(65/8),(65)&7	;volatile
  3234  1589  1088               	line	34
  3235                           	
  3236                           l93:	
  3237  158A                     	return
  3238  158A  0008               	opt stack 0
  3239                           GLOBAL	__end_of_writeCharLCD
  3240                           	__end_of_writeCharLCD:
  3241  158B                     	signat	_writeCharLCD,4217
  3242                           	global	_sprintf
  3243                           
  3244 ;; *************** function _sprintf *****************
  3245 ;; Defined at:
  3246 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  sp              1    wreg     PTR unsigned char 
  3249 ;;		 -> writeIntLCD@buffer(4), 
  3250 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  3251 ;;		 -> STR_1(3), 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  3254 ;;		 -> writeIntLCD@buffer(4), 
  3255 ;;  tmpval          4    0        struct .
  3256 ;;  val             2   18[BANK0 ] unsigned int 
  3257 ;;  cp              2    0        PTR const unsigned char 
  3258 ;;  len             2    0        unsigned int 
  3259 ;;  c               1   21[BANK0 ] unsigned char 
  3260 ;;  prec            1   17[BANK0 ] char 
  3261 ;;  flag            1   16[BANK0 ] unsigned char 
  3262 ;;  ap              1   15[BANK0 ] PTR void [1]
  3263 ;;		 -> ?_sprintf(2), 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2    9[BANK0 ] int 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       3       0       0       0
  3274 ;;      Locals:         0       7       0       0       0
  3275 ;;      Temps:          0       3       0       0       0
  3276 ;;      Totals:         0      13       0       0       0
  3277 ;;Total ram usage:       13 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    2
  3280 ;; This function calls:
  3281 ;;		___lwdiv
  3282 ;;		___lwmod
  3283 ;; This function is called by:
  3284 ;;		_writeIntLCD
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3288                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  3289                           	line	500
  3290                           global __ptext5
  3291                           __ptext5:	;psect for function _sprintf
  3292  06C3                     psect	text5
  3293                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  3294                           	line	500
  3295                           	global	__size_of_sprintf
  3296                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3297  0102                     	
  3298                           _sprintf:	
  3299  06C3                     ;incstack = 0
  3300                           	opt	stack 4
  3301                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3302                           ;sprintf@sp stored from wreg
  3303                           	bcf	status, 5	;RP0=0, select bank0
  3304  06C3  1283               	bcf	status, 6	;RP1=0, select bank0
  3305  06C4  1303               	movwf	(sprintf@sp)
  3306  06C5  00B4               	line	545
  3307                           	
  3308                           l2897:	
  3309  06C6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 500: sprintf(char * sp, const char * f, ...);C:\Program Files (x86
                                 )\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchi
                                 p\xc8\v2.00\pic\sources\c90\common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Mi
                                 crochip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 502:  va_list ap;
  3310                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  3311  06C6  302A               	movwf	(??_sprintf+0)+0
  3312  06C7  00AC               	movf	(??_sprintf+0)+0,w
  3313  06C8  082C               	movwf	(sprintf@ap)
  3314  06C9  00AF               	line	548
  3315                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.
                                 c: 548:  while((c = *f++)) {
  3316                           	goto	l2949
  3317  06CA  2FAB               	
  3318                           l350:	
  3319  06CB                     	line	550
  3320                           	
  3321                           l2899:	
  3322  06CB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%');C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550
                                 :   if(c != '%')
  3323                           		movlw	37
  3324  06CB  3025               	xorwf	((sprintf@c)),w
  3325  06CC  0635               	btfsc	status,2
  3326  06CD  1903               	goto	u3781
  3327  06CE  2ED0               	goto	u3780
  3328  06CF  2ED1               u3781:
  3329  06D0                     	goto	l2905
  3330  06D0  2EDD               u3780:
  3331  06D1                     	line	553
  3332                           	
  3333                           l2901:	
  3334  06D1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:\Pr
                                 ogram Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp++ =
                                  (c)));;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:
                                     ((*sp++ = (c)));
  3335                           	movf	(sprintf@c),w
  3336  06D1  0835               	movwf	(??_sprintf+0)+0
  3337  06D2  00AC               	movf	(sprintf@sp),w
  3338  06D3  0834               	movwf	fsr0
  3339  06D4  0084               	movf	(??_sprintf+0)+0,w
  3340  06D5  082C               	bcf	status, 7	;select IRP bank0
  3341  06D6  1383               	movwf	indf
  3342  06D7  0080               	
  3343                           l2903:	
  3344  06D8                     	movlw	low(01h)
  3345  06D8  3001               	movwf	(??_sprintf+0)+0
  3346  06D9  00AC               	movf	(??_sprintf+0)+0,w
  3347  06DA  082C               	addwf	(sprintf@sp),f
  3348  06DB  07B4               	line	554
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554: 
                                    continue;
  3350                           	goto	l2949
  3351  06DC  2FAB               	line	555
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   };C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  3353                           	
  3354                           l351:	
  3355  06DD                     	line	560
  3356                           	
  3357                           l2905:	
  3358  06DD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:  
                                  flag = 0;
  3359                           	clrf	(sprintf@flag)
  3360  06DD  01B0               	line	654
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.
                                 c: 654:   switch(c = *f++) {
  3362                           	goto	l2909
  3363  06DE  2EE4               	line	656
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   c
                                 ase 0:
  3365                           	
  3366                           l353:	
  3367  06DF                     	line	657
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 6
                                 57:    goto alldone;
  3369                           	goto	l2951
  3370  06DF  2FBF               	line	716
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:  
                                  case 'd':
  3372                           	
  3373                           l355:	
  3374  06E0                     	goto	l2911
  3375  06E0  2F01               	line	717
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:  
                                  case 'i':
  3377                           	
  3378                           l356:	
  3379  06E1                     	line	718
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    
                                 break;
  3381                           	goto	l2911
  3382  06E1  2F01               	line	821
  3383                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   
                                 default:
  3384                           	
  3385                           l358:	
  3386  06E2                     	line	832
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832: 
                                    continue;
  3388                           	goto	l2949
  3389  06E2  2FAB               	line	841
  3390                           	
  3391                           l2907:	
  3392  06E3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   };C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  3393                           	goto	l2911
  3394  06E3  2F01               	
  3395                           l352:	
  3396  06E4                     	
  3397                           l2909:	
  3398  06E4                     	movlw	01h
  3399  06E4  3001               	addwf	(sprintf@f),f
  3400  06E5  07A9               	movlw	-01h
  3401  06E6  30FF               	addwf	(sprintf@f),w
  3402  06E7  0729               	movwf	fsr0
  3403  06E8  0084               	fcall	stringdir
  3404  06E9  160A  118A  200A  120A  118A  	movwf	(sprintf@c)
  3405  06EE  00B5               	movwf	(??_sprintf+0)+0
  3406  06EF  00AC               	clrf	(??_sprintf+0)+0+1
  3407  06F0  01AD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3408                           ; Switch size 1, requested type "space"
  3409                           ; Number of cases is 1, Range of values is 0 to 0
  3410                           ; switch strategies available:
  3411                           ; Name         Instructions Cycles
  3412                           ; simple_byte            4     3 (average)
  3413                           ; direct_byte           11     8 (fixed)
  3414                           ; jumptable            260     6 (fixed)
  3415                           ;	Chosen strategy is simple_byte
  3416                           
  3417                           	movf 1+(??_sprintf+0)+0,w
  3418  06F1  082D               	opt asmopt_push
  3419                           	opt asmopt_off
  3420                           	xorlw	0^0	; case 0
  3421  06F2  3A00               	skipnz
  3422  06F3  1903               	goto	l3239
  3423  06F4  2EF6               	goto	l2949
  3424  06F5  2FAB               	opt asmopt_pop
  3425                           	
  3426                           l3239:	
  3427  06F6                     ; Switch size 1, requested type "space"
  3428                           ; Number of cases is 3, Range of values is 0 to 105
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte           10     6 (average)
  3432                           ; jumptable            260     6 (fixed)
  3433                           ;	Chosen strategy is simple_byte
  3434                           
  3435                           	movf 0+(??_sprintf+0)+0,w
  3436  06F6  082C               	opt asmopt_push
  3437                           	opt asmopt_off
  3438                           	xorlw	0^0	; case 0
  3439  06F7  3A00               	skipnz
  3440  06F8  1903               	goto	l2951
  3441  06F9  2FBF               	xorlw	100^0	; case 100
  3442  06FA  3A64               	skipnz
  3443  06FB  1903               	goto	l2911
  3444  06FC  2F01               	xorlw	105^100	; case 105
  3445  06FD  3A0D               	skipnz
  3446  06FE  1903               	goto	l2911
  3447  06FF  2F01               	goto	l2949
  3448  0700  2FAB               	opt asmopt_pop
  3449                           
  3450                           	
  3451                           l357:	
  3452  0701                     	line	1278
  3453                           	
  3454                           l2911:	
  3455  0701                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C:\
                                 Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val =
                                  (int)(*(int *)__va_arg((*(int **)ap), (int)0));;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)ap
                                 ), (int)0));
  3456                           	movf	(sprintf@ap),w
  3457  0701  082F               	movwf	fsr0
  3458  0702  0084               	bcf	status, 7	;select IRP bank0
  3459  0703  1383               	movf	indf,w
  3460  0704  0800               	movwf	(sprintf@val)
  3461  0705  00B2               	incf	fsr0,f
  3462  0706  0A84               	movf	indf,w
  3463  0707  0800               	movwf	(sprintf@val+1)
  3464  0708  00B3               	
  3465                           l2913:	
  3466  0709                     	movlw	low(02h)
  3467  0709  3002               	movwf	(??_sprintf+0)+0
  3468  070A  00AC               	movf	(??_sprintf+0)+0,w
  3469  070B  082C               	addwf	(sprintf@ap),f
  3470  070C  07AF               	line	1280
  3471                           	
  3472                           l2915:	
  3473  070D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprn
                                 t.c: 1280:    if((int)val < 0) {
  3474                           	btfss	(sprintf@val+1),7
  3475  070D  1FB3               	goto	u3791
  3476  070E  2F10               	goto	u3790
  3477  070F  2F11               u3791:
  3478  0710                     	goto	l2921
  3479  0710  2F1B               u3790:
  3480  0711                     	line	1281
  3481                           	
  3482                           l2917:	
  3483  0711                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c:
                                  1281:     flag |= 0x03;
  3484                           	movlw	low(03h)
  3485  0711  3003               	movwf	(??_sprintf+0)+0
  3486  0712  00AC               	movf	(??_sprintf+0)+0,w
  3487  0713  082C               	iorwf	(sprintf@flag),f
  3488  0714  04B0               	line	1282
  3489                           	
  3490                           l2919:	
  3491  0715                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1
                                 282:     val = -val;
  3492                           	comf	(sprintf@val),f
  3493  0715  09B2               	comf	(sprintf@val+1),f
  3494  0716  09B3               	incf	(sprintf@val),f
  3495  0717  0AB2               	skipnz
  3496  0718  1903               	incf	(sprintf@val+1),f
  3497  0719  0AB3               	goto	l2921
  3498  071A  2F1B               	line	1283
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }
  3500                           	
  3501                           l359:	
  3502  071B                     	line	1324
  3503                           	
  3504                           l2921:	
  3505  071B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C:\
                                 Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(c 
                                 = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++);C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  3506                           	clrf	(sprintf@c)
  3507  071B  01B5               	incf	(sprintf@c),f
  3508  071C  0AB5               	
  3509                           l2923:	
  3510  071D                     		movlw	5
  3511  071D  3005               	xorwf	((sprintf@c)),w
  3512  071E  0635               	btfss	status,2
  3513  071F  1D03               	goto	u3801
  3514  0720  2F22               	goto	u3800
  3515  0721  2F23               u3801:
  3516  0722                     	goto	l2927
  3517  0722  2F25               u3800:
  3518  0723                     	goto	l2933
  3519  0723  2F4D               	
  3520                           l2925:	
  3521  0724                     	goto	l2933
  3522  0724  2F4D               	
  3523                           l360:	
  3524  0725                     	line	1325
  3525                           	
  3526                           l2927:	
  3527  0725                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c]);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\do
                                 prnt.c: 1325:     if(val < dpowers[c])
  3528                           	movf	(sprintf@c),w
  3529  0725  0835               	movwf	(??_sprintf+0)+0
  3530  0726  00AC               	addwf	(??_sprintf+0)+0,w
  3531  0727  072C               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3532  0728  3E01               	movwf	fsr0
  3533  0729  0084               	fcall	stringdir
  3534  072A  160A  118A  200A  120A  118A  	movwf	(??_sprintf+1)+0
  3535  072F  00AD               	fcall	stringdir
  3536  0730  160A  118A  200A  120A  118A  	movwf	(??_sprintf+1)+0+1
  3537  0735  00AE               	movf	1+(??_sprintf+1)+0,w
  3538  0736  082E               	subwf	(sprintf@val+1),w
  3539  0737  0233               	skipz
  3540  0738  1D03               	goto	u3815
  3541  0739  2F3C               	movf	0+(??_sprintf+1)+0,w
  3542  073A  082D               	subwf	(sprintf@val),w
  3543  073B  0232               u3815:
  3544  073C                     	skipnc
  3545  073C  1803               	goto	u3811
  3546  073D  2F3F               	goto	u3810
  3547  073E  2F40               u3811:
  3548  073F                     	goto	l2931
  3549  073F  2F42               u3810:
  3550  0740                     	goto	l2933
  3551  0740  2F4D               	line	1326
  3552                           	
  3553                           l2929:	
  3554  0741                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:
                                       break;
  3555                           	goto	l2933
  3556  0741  2F4D               	
  3557                           l362:	
  3558  0742                     	
  3559                           l2931:	
  3560  0742                     	movlw	low(01h)
  3561  0742  3001               	movwf	(??_sprintf+0)+0
  3562  0743  00AC               	movf	(??_sprintf+0)+0,w
  3563  0744  082C               	addwf	(sprintf@c),f
  3564  0745  07B5               		movlw	5
  3565  0746  3005               	xorwf	((sprintf@c)),w
  3566  0747  0635               	btfss	status,2
  3567  0748  1D03               	goto	u3821
  3568  0749  2F4B               	goto	u3820
  3569  074A  2F4C               u3821:
  3570  074B                     	goto	l2927
  3571  074B  2F25               u3820:
  3572  074C                     	goto	l2933
  3573  074C  2F4D               	
  3574                           l361:	
  3575  074D                     	line	1457
  3576                           	
  3577                           l2933:	
  3578  074D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C:\
                                 Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(fla
                                 g & 0x03);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 14
                                 57:    if(flag & 0x03)
  3579                           	movf	(sprintf@flag),w
  3580  074D  0830               	andlw	03h
  3581  074E  3903               	btfsc	status,2
  3582  074F  1903               	goto	u3831
  3583  0750  2F52               	goto	u3830
  3584  0751  2F53               u3831:
  3585  0752                     	goto	l2939
  3586  0752  2F5F               u3830:
  3587  0753                     	line	1458
  3588                           	
  3589                           l2935:	
  3590  0753                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\dopr
                                 nt.c: 1458:     ((*sp++ = ('-')));
  3591                           	movlw	low(02Dh)
  3592  0753  302D               	movwf	(??_sprintf+0)+0
  3593  0754  00AC               	movf	(sprintf@sp),w
  3594  0755  0834               	movwf	fsr0
  3595  0756  0084               	movf	(??_sprintf+0)+0,w
  3596  0757  082C               	bcf	status, 7	;select IRP bank0
  3597  0758  1383               	movwf	indf
  3598  0759  0080               	
  3599                           l2937:	
  3600  075A                     	movlw	low(01h)
  3601  075A  3001               	movwf	(??_sprintf+0)+0
  3602  075B  00AC               	movf	(??_sprintf+0)+0,w
  3603  075C  082C               	addwf	(sprintf@sp),f
  3604  075D  07B4               	goto	l2939
  3605  075E  2F5F               	
  3606                           l363:	
  3607  075F                     	line	1491
  3608                           	
  3609                           l2939:	
  3610  075F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C:\
                                 Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec = 
                                 c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   p
                                 rec = c;
  3611                           	movf	(sprintf@c),w
  3612  075F  0835               	movwf	(??_sprintf+0)+0
  3613  0760  00AC               	movf	(??_sprintf+0)+0,w
  3614  0761  082C               	movwf	(sprintf@prec)
  3615  0762  00B1               	line	1493
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c:
                                  1493:   while(prec--) {
  3617                           	goto	l2947
  3618  0763  2FA0               	
  3619                           l365:	
  3620  0764                     	line	1508
  3621                           	
  3622                           l2941:	
  3623  0764                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c =
                                  (val / dpowers[prec]) % 10 + '0';;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';
  3624                           	movlw	0Ah
  3625  0764  300A               	movwf	(___lwmod@divisor)
  3626  0765  00A3               	movlw	0
  3627  0766  3000               	movwf	((___lwmod@divisor))+1
  3628  0767  00A4               	movf	(sprintf@prec),w
  3629  0768  0831               	movwf	(??_sprintf+0)+0
  3630  0769  00AC               	addwf	(??_sprintf+0)+0,w
  3631  076A  072C               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3632  076B  3E01               	movwf	fsr0
  3633  076C  0084               	fcall	stringdir
  3634  076D  160A  118A  200A  120A  118A  	movwf	(___lwdiv@divisor)
  3635  0772  00F3               	fcall	stringdir
  3636  0773  160A  118A  200A  120A  118A  	movwf	(___lwdiv@divisor+1)
  3637  0778  00F4               	movf	(sprintf@val+1),w
  3638  0779  0833               	movwf	(___lwdiv@dividend+1)
  3639  077A  00F6               	movf	(sprintf@val),w
  3640  077B  0832               	movwf	(___lwdiv@dividend)
  3641  077C  00F5               	fcall	___lwdiv
  3642  077D  160A  118A  26DA  120A  118A  	movf	(1+(?___lwdiv)),w
  3643  0782  0874               	bcf	status, 5	;RP0=0, select bank0
  3644  0783  1283               	bcf	status, 6	;RP1=0, select bank0
  3645  0784  1303               	movwf	(___lwmod@dividend+1)
  3646  0785  00A6               	movf	(0+(?___lwdiv)),w
  3647  0786  0873               	movwf	(___lwmod@dividend)
  3648  0787  00A5               	fcall	___lwmod
  3649  0788  160A  118A  264F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3650  078D  1283               	bcf	status, 6	;RP1=0, select bank0
  3651  078E  1303               	movf	(0+(?___lwmod)),w
  3652  078F  0823               	addlw	030h
  3653  0790  3E30               	movwf	(??_sprintf+1)+0
  3654  0791  00AD               	movf	(??_sprintf+1)+0,w
  3655  0792  082D               	movwf	(sprintf@c)
  3656  0793  00B5               	line	1543
  3657                           	
  3658                           l2943:	
  3659  0794                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*s
                                 p++ = (c)));;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c:
                                  1543:    ((*sp++ = (c)));
  3660                           	movf	(sprintf@c),w
  3661  0794  0835               	movwf	(??_sprintf+0)+0
  3662  0795  00AC               	movf	(sprintf@sp),w
  3663  0796  0834               	movwf	fsr0
  3664  0797  0084               	movf	(??_sprintf+0)+0,w
  3665  0798  082C               	bcf	status, 7	;select IRP bank0
  3666  0799  1383               	movwf	indf
  3667  079A  0080               	
  3668                           l2945:	
  3669  079B                     	movlw	low(01h)
  3670  079B  3001               	movwf	(??_sprintf+0)+0
  3671  079C  00AC               	movf	(??_sprintf+0)+0,w
  3672  079D  082C               	addwf	(sprintf@sp),f
  3673  079E  07B4               	goto	l2947
  3674  079F  2FA0               	line	1544
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  3676                           	
  3677                           l364:	
  3678  07A0                     	line	1493
  3679                           	
  3680                           l2947:	
  3681  07A0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c:
                                  1493:   while(prec--) {
  3682                           	movlw	low(-1)
  3683  07A0  30FF               	movwf	(??_sprintf+0)+0
  3684  07A1  00AC               	movf	(??_sprintf+0)+0,w
  3685  07A2  082C               	addwf	(sprintf@prec),f
  3686  07A3  07B1               		incf	(((sprintf@prec))),w
  3687  07A4  0A31               	btfss	status,2
  3688  07A5  1D03               	goto	u3841
  3689  07A6  2FA8               	goto	u3840
  3690  07A7  2FA9               u3841:
  3691  07A8                     	goto	l2941
  3692  07A8  2F64               u3840:
  3693  07A9                     	goto	l2949
  3694  07A9  2FAB               	
  3695                           l366:	
  3696  07AA                     	goto	l2949
  3697  07AA  2FAB               	line	1552
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  };C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  3699                           	
  3700                           l349:	
  3701  07AB                     	line	548
  3702                           	
  3703                           l2949:	
  3704  07AB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.
                                 c: 548:  while((c = *f++)) {
  3705                           	movlw	01h
  3706  07AB  3001               	addwf	(sprintf@f),f
  3707  07AC  07A9               	movlw	-01h
  3708  07AD  30FF               	addwf	(sprintf@f),w
  3709  07AE  0729               	movwf	fsr0
  3710  07AF  0084               	fcall	stringdir
  3711  07B0  160A  118A  200A  120A  118A  	movwf	(??_sprintf+0)+0
  3712  07B5  00AC               	movf	(??_sprintf+0)+0,w
  3713  07B6  082C               	movwf	(sprintf@c)
  3714  07B7  00B5               	movf	(((sprintf@c))),w
  3715  07B8  0835               	btfss	status,2
  3716  07B9  1D03               	goto	u3851
  3717  07BA  2FBC               	goto	u3850
  3718  07BB  2FBD               u3851:
  3719  07BC                     	goto	l2899
  3720  07BC  2ECB               u3850:
  3721  07BD                     	goto	l2951
  3722  07BD  2FBF               	
  3723                           l367:	
  3724  07BE                     	goto	l2951
  3725  07BE  2FBF               	line	1554
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: al
                                 ldone:
  3727                           	
  3728                           l354:	
  3729  07BF                     	line	1557
  3730                           	
  3731                           l2951:	
  3732  07BF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  
                                 *sp = 0;
  3733                           	movf	(sprintf@sp),w
  3734  07BF  0834               	movwf	fsr0
  3735  07C0  0084               	bcf	status, 7	;select IRP bank0
  3736  07C1  1383               	clrf	indf
  3737  07C2  0180               	goto	l368
  3738  07C3  2FC4               	line	1559
  3739                           	
  3740                           l2953:	
  3741  07C4                     	line	1560
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559: 
                                  return 0;;	Return value of _sprintf is never used
  3743                           	
  3744                           l368:	
  3745  07C4                     	return
  3746  07C4  0008               	opt stack 0
  3747                           GLOBAL	__end_of_sprintf
  3748                           	__end_of_sprintf:
  3749  07C5                     	signat	_sprintf,4698
  3750                           	global	___lwmod
  3751                           
  3752 ;; *************** function ___lwmod *****************
  3753 ;; Defined at:
  3754 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  divisor         2    3[BANK0 ] unsigned int 
  3757 ;;  dividend        2    5[BANK0 ] unsigned int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  counter         1    8[BANK0 ] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2    3[BANK0 ] unsigned int 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3769 ;;      Params:         0       4       0       0       0
  3770 ;;      Locals:         0       1       0       0       0
  3771 ;;      Temps:          0       1       0       0       0
  3772 ;;      Totals:         0       6       0       0       0
  3773 ;;Total ram usage:        6 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_sprintf
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  3783                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3784                           	line	5
  3785                           global __ptext6
  3786                           __ptext6:	;psect for function ___lwmod
  3787  164F                     psect	text6
  3788                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3789                           	line	5
  3790                           	global	__size_of___lwmod
  3791                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3792  0043                     	
  3793                           ___lwmod:	
  3794  164F                     ;incstack = 0
  3795                           	opt	stack 4
  3796                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3797                           	line	12
  3798                           	
  3799                           l1891:	
  3800  164F                     	bcf	status, 5	;RP0=0, select bank0
  3801  164F  1283               	bcf	status, 6	;RP1=0, select bank0
  3802  1650  1303               	movf	((___lwmod@divisor)),w
  3803  1651  0823               iorwf	((___lwmod@divisor+1)),w
  3804  1652  0424               	btfsc	status,2
  3805  1653  1903               	goto	u1911
  3806  1654  2E56               	goto	u1910
  3807  1655  2E57               u1911:
  3808  1656                     	goto	l1909
  3809  1656  2E8C               u1910:
  3810  1657                     	line	13
  3811                           	
  3812                           l1893:	
  3813  1657                     	clrf	(___lwmod@counter)
  3814  1657  01A8               	incf	(___lwmod@counter),f
  3815  1658  0AA8               	line	14
  3816                           	goto	l1899
  3817  1659  2E66               	
  3818                           l649:	
  3819  165A                     	line	15
  3820                           	
  3821                           l1895:	
  3822  165A                     	movlw	01h
  3823  165A  3001               	
  3824                           u1925:
  3825  165B                     	clrc
  3826  165B  1003               	rlf	(___lwmod@divisor),f
  3827  165C  0DA3               	rlf	(___lwmod@divisor+1),f
  3828  165D  0DA4               	addlw	-1
  3829  165E  3EFF               	skipz
  3830  165F  1D03               	goto	u1925
  3831  1660  2E5B               	line	16
  3832                           	
  3833                           l1897:	
  3834  1661                     	movlw	low(01h)
  3835  1661  3001               	movwf	(??___lwmod+0)+0
  3836  1662  00A7               	movf	(??___lwmod+0)+0,w
  3837  1663  0827               	addwf	(___lwmod@counter),f
  3838  1664  07A8               	goto	l1899
  3839  1665  2E66               	line	17
  3840                           	
  3841                           l648:	
  3842  1666                     	line	14
  3843                           	
  3844                           l1899:	
  3845  1666                     	btfss	(___lwmod@divisor+1),(15)&7
  3846  1666  1FA4               	goto	u1931
  3847  1667  2E69               	goto	u1930
  3848  1668  2E6A               u1931:
  3849  1669                     	goto	l1895
  3850  1669  2E5A               u1930:
  3851  166A                     	goto	l1901
  3852  166A  2E6C               	
  3853                           l650:	
  3854  166B                     	goto	l1901
  3855  166B  2E6C               	line	18
  3856                           	
  3857                           l651:	
  3858  166C                     	line	19
  3859                           	
  3860                           l1901:	
  3861  166C                     	movf	(___lwmod@divisor+1),w
  3862  166C  0824               	subwf	(___lwmod@dividend+1),w
  3863  166D  0226               	skipz
  3864  166E  1D03               	goto	u1945
  3865  166F  2E72               	movf	(___lwmod@divisor),w
  3866  1670  0823               	subwf	(___lwmod@dividend),w
  3867  1671  0225               u1945:
  3868  1672                     	skipc
  3869  1672  1C03               	goto	u1941
  3870  1673  2E75               	goto	u1940
  3871  1674  2E76               u1941:
  3872  1675                     	goto	l1905
  3873  1675  2E7D               u1940:
  3874  1676                     	line	20
  3875                           	
  3876                           l1903:	
  3877  1676                     	movf	(___lwmod@divisor),w
  3878  1676  0823               	subwf	(___lwmod@dividend),f
  3879  1677  02A5               	movf	(___lwmod@divisor+1),w
  3880  1678  0824               	skipc
  3881  1679  1C03               	decf	(___lwmod@dividend+1),f
  3882  167A  03A6               	subwf	(___lwmod@dividend+1),f
  3883  167B  02A6               	goto	l1905
  3884  167C  2E7D               	
  3885                           l652:	
  3886  167D                     	line	21
  3887                           	
  3888                           l1905:	
  3889  167D                     	movlw	01h
  3890  167D  3001               	
  3891                           u1955:
  3892  167E                     	clrc
  3893  167E  1003               	rrf	(___lwmod@divisor+1),f
  3894  167F  0CA4               	rrf	(___lwmod@divisor),f
  3895  1680  0CA3               	addlw	-1
  3896  1681  3EFF               	skipz
  3897  1682  1D03               	goto	u1955
  3898  1683  2E7E               	line	22
  3899                           	
  3900                           l1907:	
  3901  1684                     	movlw	01h
  3902  1684  3001               	subwf	(___lwmod@counter),f
  3903  1685  02A8               	btfss	status,2
  3904  1686  1D03               	goto	u1961
  3905  1687  2E89               	goto	u1960
  3906  1688  2E8A               u1961:
  3907  1689                     	goto	l1901
  3908  1689  2E6C               u1960:
  3909  168A                     	goto	l1909
  3910  168A  2E8C               	
  3911                           l653:	
  3912  168B                     	goto	l1909
  3913  168B  2E8C               	line	23
  3914                           	
  3915                           l647:	
  3916  168C                     	line	24
  3917                           	
  3918                           l1909:	
  3919  168C                     	movf	(___lwmod@dividend+1),w
  3920  168C  0826               	movwf	(?___lwmod+1)
  3921  168D  00A4               	movf	(___lwmod@dividend),w
  3922  168E  0825               	movwf	(?___lwmod)
  3923  168F  00A3               	goto	l654
  3924  1690  2E91               	
  3925                           l1911:	
  3926  1691                     	line	25
  3927                           	
  3928                           l654:	
  3929  1691                     	return
  3930  1691  0008               	opt stack 0
  3931                           GLOBAL	__end_of___lwmod
  3932                           	__end_of___lwmod:
  3933  1692                     	signat	___lwmod,8314
  3934                           	global	___lwdiv
  3935                           
  3936 ;; *************** function ___lwdiv *****************
  3937 ;; Defined at:
  3938 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  divisor         2    3[COMMON] unsigned int 
  3941 ;;  dividend        2    5[COMMON] unsigned int 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  quotient        2    1[BANK0 ] unsigned int 
  3944 ;;  counter         1    0[BANK0 ] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  2    3[COMMON] unsigned int 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         4       0       0       0       0
  3955 ;;      Locals:         0       3       0       0       0
  3956 ;;      Temps:          1       0       0       0       0
  3957 ;;      Totals:         5       3       0       0       0
  3958 ;;Total ram usage:        8 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    1
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_sprintf
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  3968                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3969                           	line	5
  3970                           global __ptext7
  3971                           __ptext7:	;psect for function ___lwdiv
  3972  16DA                     psect	text7
  3973                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3974                           	line	5
  3975                           	global	__size_of___lwdiv
  3976                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3977  004D                     	
  3978                           ___lwdiv:	
  3979  16DA                     ;incstack = 0
  3980                           	opt	stack 4
  3981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3982                           	line	13
  3983                           	
  3984                           l2855:	
  3985  16DA                     	bcf	status, 5	;RP0=0, select bank0
  3986  16DA  1283               	bcf	status, 6	;RP1=0, select bank0
  3987  16DB  1303               	clrf	(___lwdiv@quotient)
  3988  16DC  01A1               	clrf	(___lwdiv@quotient+1)
  3989  16DD  01A2               	line	14
  3990                           	
  3991                           l2857:	
  3992  16DE                     	movf	((___lwdiv@divisor)),w
  3993  16DE  0873               iorwf	((___lwdiv@divisor+1)),w
  3994  16DF  0474               	btfsc	status,2
  3995  16E0  1903               	goto	u3681
  3996  16E1  2EE3               	goto	u3680
  3997  16E2  2EE4               u3681:
  3998  16E3                     	goto	l2877
  3999  16E3  2F21               u3680:
  4000  16E4                     	line	15
  4001                           	
  4002                           l2859:	
  4003  16E4                     	clrf	(___lwdiv@counter)
  4004  16E4  01A0               	incf	(___lwdiv@counter),f
  4005  16E5  0AA0               	line	16
  4006                           	goto	l2865
  4007  16E6  2EF3               	
  4008                           l639:	
  4009  16E7                     	line	17
  4010                           	
  4011                           l2861:	
  4012  16E7                     	movlw	01h
  4013  16E7  3001               	
  4014                           u3695:
  4015  16E8                     	clrc
  4016  16E8  1003               	rlf	(___lwdiv@divisor),f
  4017  16E9  0DF3               	rlf	(___lwdiv@divisor+1),f
  4018  16EA  0DF4               	addlw	-1
  4019  16EB  3EFF               	skipz
  4020  16EC  1D03               	goto	u3695
  4021  16ED  2EE8               	line	18
  4022                           	
  4023                           l2863:	
  4024  16EE                     	movlw	low(01h)
  4025  16EE  3001               	movwf	(??___lwdiv+0)+0
  4026  16EF  00F7               	movf	(??___lwdiv+0)+0,w
  4027  16F0  0877               	addwf	(___lwdiv@counter),f
  4028  16F1  07A0               	goto	l2865
  4029  16F2  2EF3               	line	19
  4030                           	
  4031                           l638:	
  4032  16F3                     	line	16
  4033                           	
  4034                           l2865:	
  4035  16F3                     	btfss	(___lwdiv@divisor+1),(15)&7
  4036  16F3  1FF4               	goto	u3701
  4037  16F4  2EF6               	goto	u3700
  4038  16F5  2EF7               u3701:
  4039  16F6                     	goto	l2861
  4040  16F6  2EE7               u3700:
  4041  16F7                     	goto	l2867
  4042  16F7  2EF9               	
  4043                           l640:	
  4044  16F8                     	goto	l2867
  4045  16F8  2EF9               	line	20
  4046                           	
  4047                           l641:	
  4048  16F9                     	line	21
  4049                           	
  4050                           l2867:	
  4051  16F9                     	movlw	01h
  4052  16F9  3001               	
  4053                           u3715:
  4054  16FA                     	clrc
  4055  16FA  1003               	rlf	(___lwdiv@quotient),f
  4056  16FB  0DA1               	rlf	(___lwdiv@quotient+1),f
  4057  16FC  0DA2               	addlw	-1
  4058  16FD  3EFF               	skipz
  4059  16FE  1D03               	goto	u3715
  4060  16FF  2EFA               	line	22
  4061                           	movf	(___lwdiv@divisor+1),w
  4062  1700  0874               	subwf	(___lwdiv@dividend+1),w
  4063  1701  0276               	skipz
  4064  1702  1D03               	goto	u3725
  4065  1703  2F06               	movf	(___lwdiv@divisor),w
  4066  1704  0873               	subwf	(___lwdiv@dividend),w
  4067  1705  0275               u3725:
  4068  1706                     	skipc
  4069  1706  1C03               	goto	u3721
  4070  1707  2F09               	goto	u3720
  4071  1708  2F0A               u3721:
  4072  1709                     	goto	l2873
  4073  1709  2F12               u3720:
  4074  170A                     	line	23
  4075                           	
  4076                           l2869:	
  4077  170A                     	movf	(___lwdiv@divisor),w
  4078  170A  0873               	subwf	(___lwdiv@dividend),f
  4079  170B  02F5               	movf	(___lwdiv@divisor+1),w
  4080  170C  0874               	skipc
  4081  170D  1C03               	decf	(___lwdiv@dividend+1),f
  4082  170E  03F6               	subwf	(___lwdiv@dividend+1),f
  4083  170F  02F6               	line	24
  4084                           	
  4085                           l2871:	
  4086  1710                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  4087  1710  1421               	goto	l2873
  4088  1711  2F12               	line	25
  4089                           	
  4090                           l642:	
  4091  1712                     	line	26
  4092                           	
  4093                           l2873:	
  4094  1712                     	movlw	01h
  4095  1712  3001               	
  4096                           u3735:
  4097  1713                     	clrc
  4098  1713  1003               	rrf	(___lwdiv@divisor+1),f
  4099  1714  0CF4               	rrf	(___lwdiv@divisor),f
  4100  1715  0CF3               	addlw	-1
  4101  1716  3EFF               	skipz
  4102  1717  1D03               	goto	u3735
  4103  1718  2F13               	line	27
  4104                           	
  4105                           l2875:	
  4106  1719                     	movlw	01h
  4107  1719  3001               	subwf	(___lwdiv@counter),f
  4108  171A  02A0               	btfss	status,2
  4109  171B  1D03               	goto	u3741
  4110  171C  2F1E               	goto	u3740
  4111  171D  2F1F               u3741:
  4112  171E                     	goto	l2867
  4113  171E  2EF9               u3740:
  4114  171F                     	goto	l2877
  4115  171F  2F21               	
  4116                           l643:	
  4117  1720                     	goto	l2877
  4118  1720  2F21               	line	28
  4119                           	
  4120                           l637:	
  4121  1721                     	line	29
  4122                           	
  4123                           l2877:	
  4124  1721                     	movf	(___lwdiv@quotient+1),w
  4125  1721  0822               	movwf	(?___lwdiv+1)
  4126  1722  00F4               	movf	(___lwdiv@quotient),w
  4127  1723  0821               	movwf	(?___lwdiv)
  4128  1724  00F3               	goto	l644
  4129  1725  2F26               	
  4130                           l2879:	
  4131  1726                     	line	30
  4132                           	
  4133                           l644:	
  4134  1726                     	return
  4135  1726  0008               	opt stack 0
  4136                           GLOBAL	__end_of___lwdiv
  4137                           	__end_of___lwdiv:
  4138  1727                     	signat	___lwdiv,8314
  4139                           	global	_setCursorLCD
  4140                           
  4141 ;; *************** function _setCursorLCD *****************
  4142 ;; Defined at:
  4143 ;;		line 8 in file "LCD.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  y               1    wreg     unsigned char 
  4146 ;;  x               1    6[COMMON] unsigned char 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  y               1    0[BANK0 ] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         1       0       0       0       0
  4159 ;;      Locals:         0       1       0       0       0
  4160 ;;      Temps:          1       0       0       0       0
  4161 ;;      Totals:         2       1       0       0       0
  4162 ;;Total ram usage:        3 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    2
  4165 ;; This function calls:
  4166 ;;		_cmdLCD
  4167 ;; This function is called by:
  4168 ;;		_writeFloat
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4173                           	file	"LCD.c"
  4174                           	line	8
  4175                           global __ptext8
  4176                           __ptext8:	;psect for function _setCursorLCD
  4177  0809                     psect	text8
  4178                           	file	"LCD.c"
  4179                           	line	8
  4180                           	global	__size_of_setCursorLCD
  4181                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  4182  001F                     	
  4183                           _setCursorLCD:	
  4184  0809                     ;incstack = 0
  4185                           	opt	stack 4
  4186                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4187                           ;setCursorLCD@y stored from wreg
  4188                           	bcf	status, 5	;RP0=0, select bank0
  4189  0809  1283               	bcf	status, 6	;RP1=0, select bank0
  4190  080A  1303               	movwf	(setCursorLCD@y)
  4191  080B  00A0               	line	9
  4192                           	
  4193                           l2959:	
  4194  080C                     ;LCD.c: 9:     if(y == 1){;LCD.c: 9:     if(y == 1){
  4195                           		decf	((setCursorLCD@y)),w
  4196  080C  0320               	btfss	status,2
  4197  080D  1D03               	goto	u3861
  4198  080E  2810               	goto	u3860
  4199  080F  2811               u3861:
  4200  0810                     	goto	l2963
  4201  0810  2819               u3860:
  4202  0811                     	line	10
  4203                           	
  4204                           l2961:	
  4205  0811                     ;LCD.c: 10:         cursor = 0x80 + x - 1;;LCD.c: 10:         cursor = 0x80 + x - 1;
  4206                           	movf	(setCursorLCD@x),w
  4207  0811  0876               	addlw	07Fh
  4208  0812  3E7F               	movwf	(??_setCursorLCD+0)+0
  4209  0813  00F7               	movf	(??_setCursorLCD+0)+0,w
  4210  0814  0877               	bsf	status, 5	;RP0=1, select bank1
  4211  0815  1683               	bcf	status, 6	;RP1=0, select bank1
  4212  0816  1303               	movwf	(_cursor)^080h
  4213  0817  00B5               	line	11
  4214                           ;LCD.c: 11:     }else{;LCD.c: 11:     }else{
  4215                           	goto	l2965
  4216  0818  2821               	
  4217                           l79:	
  4218  0819                     	line	12
  4219                           	
  4220                           l2963:	
  4221  0819                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;;LCD.c: 12:         cursor = 0xC0 + x - 1;
  4222                           	movf	(setCursorLCD@x),w
  4223  0819  0876               	addlw	0BFh
  4224  081A  3EBF               	movwf	(??_setCursorLCD+0)+0
  4225  081B  00F7               	movf	(??_setCursorLCD+0)+0,w
  4226  081C  0877               	bsf	status, 5	;RP0=1, select bank1
  4227  081D  1683               	bcf	status, 6	;RP1=0, select bank1
  4228  081E  1303               	movwf	(_cursor)^080h
  4229  081F  00B5               	goto	l2965
  4230  0820  2821               	line	13
  4231                           ;LCD.c: 13:     };LCD.c: 13:     }
  4232                           	
  4233                           l80:	
  4234  0821                     	line	14
  4235                           	
  4236                           l2965:	
  4237  0821                     ;LCD.c: 14:     cmdLCD(cursor);;LCD.c: 14:     cmdLCD(cursor);
  4238                           	movf	(_cursor)^080h,w
  4239  0821  0835               	fcall	_cmdLCD
  4240  0822  160A  118A  259B  120A  158A  	line	15
  4241                           	
  4242                           l81:	
  4243  0827                     	return
  4244  0827  0008               	opt stack 0
  4245                           GLOBAL	__end_of_setCursorLCD
  4246                           	__end_of_setCursorLCD:
  4247  0828                     	signat	_setCursorLCD,8313
  4248                           	global	_setup
  4249                           
  4250 ;; *************** function _setup *****************
  4251 ;; Defined at:
  4252 ;;		line 124 in file "newmain.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    1
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4280                           	file	"newmain.c"
  4281                           	line	124
  4282                           global __ptext9
  4283                           __ptext9:	;psect for function _setup
  4284  158B                     psect	text9
  4285                           	file	"newmain.c"
  4286                           	line	124
  4287                           	global	__size_of_setup
  4288                           	__size_of_setup	equ	__end_of_setup-_setup
  4289  0010                     	
  4290                           _setup:	
  4291  158B                     ;incstack = 0
  4292                           	opt	stack 6
  4293                           ; Regs used in _setup: [wreg+status,2]
  4294                           	line	126
  4295                           	
  4296                           l2083:	
  4297  158B                     ;newmain.c: 126:     PORTA = 0;;newmain.c: 126:     PORTA = 0;
  4298                           	bcf	status, 5	;RP0=0, select bank0
  4299  158B  1283               	bcf	status, 6	;RP1=0, select bank0
  4300  158C  1303               	clrf	(5)	;volatile
  4301  158D  0185               	line	127
  4302                           ;newmain.c: 127:     PORTB = 0;;newmain.c: 127:     PORTB = 0;
  4303                           	clrf	(6)	;volatile
  4304  158E  0186               	line	128
  4305                           ;newmain.c: 128:     PORTC = 0;;newmain.c: 128:     PORTC = 0;
  4306                           	clrf	(7)	;volatile
  4307  158F  0187               	line	129
  4308                           ;newmain.c: 129:     PORTD = 0;;newmain.c: 129:     PORTD = 0;
  4309                           	clrf	(8)	;volatile
  4310  1590  0188               	line	130
  4311                           ;newmain.c: 130:     PORTE = 0;;newmain.c: 130:     PORTE = 0;
  4312                           	clrf	(9)	;volatile
  4313  1591  0189               	line	131
  4314                           ;newmain.c: 131:     TRISA = 0;;newmain.c: 131:     TRISA = 0;
  4315                           	bsf	status, 5	;RP0=1, select bank1
  4316  1592  1683               	bcf	status, 6	;RP1=0, select bank1
  4317  1593  1303               	clrf	(133)^080h	;volatile
  4318  1594  0185               	line	132
  4319                           	
  4320                           l2085:	
  4321  1595                     ;newmain.c: 132:     TRISB = 0b10000000;;newmain.c: 132:     TRISB = 0b10000000;
  4322                           	movlw	low(080h)
  4323  1595  3080               	movwf	(134)^080h	;volatile
  4324  1596  0086               	line	133
  4325                           	
  4326                           l2087:	
  4327  1597                     ;newmain.c: 133:     TRISC = 0;;newmain.c: 133:     TRISC = 0;
  4328                           	clrf	(135)^080h	;volatile
  4329  1597  0187               	line	134
  4330                           	
  4331                           l2089:	
  4332  1598                     ;newmain.c: 134:     TRISD = 0;;newmain.c: 134:     TRISD = 0;
  4333                           	clrf	(136)^080h	;volatile
  4334  1598  0188               	line	135
  4335                           	
  4336                           l2091:	
  4337  1599                     ;newmain.c: 135:     TRISE = 0;;newmain.c: 135:     TRISE = 0;
  4338                           	clrf	(137)^080h	;volatile
  4339  1599  0189               	line	136
  4340                           	
  4341                           l218:	
  4342  159A                     	return
  4343  159A  0008               	opt stack 0
  4344                           GLOBAL	__end_of_setup
  4345                           	__end_of_setup:
  4346  159B                     	signat	_setup,89
  4347                           	global	_sendUSART
  4348                           
  4349 ;; *************** function _sendUSART *****************
  4350 ;; Defined at:
  4351 ;;		line 40 in file "USART.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  data            1    wreg     unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  data            1    3[COMMON] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4365 ;;      Params:         0       0       0       0       0
  4366 ;;      Locals:         1       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0
  4368 ;;      Totals:         1       0       0       0       0
  4369 ;;Total ram usage:        1 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4379                           	file	"USART.c"
  4380                           	line	40
  4381                           global __ptext10
  4382                           __ptext10:	;psect for function _sendUSART
  4383  155F                     psect	text10
  4384                           	file	"USART.c"
  4385                           	line	40
  4386                           	global	__size_of_sendUSART
  4387                           	__size_of_sendUSART	equ	__end_of_sendUSART-_sendUSART
  4388  000E                     	
  4389                           _sendUSART:	
  4390  155F                     ;incstack = 0
  4391                           	opt	stack 6
  4392                           ; Regs used in _sendUSART: [wreg]
  4393                           ;sendUSART@data stored from wreg
  4394                           	movwf	(sendUSART@data)
  4395  155F  00F3               	line	41
  4396                           	
  4397                           l2129:	
  4398  1560                     ;USART.c: 41:     while (TXSTAbits.TRMT == 0){};USART.c: 41:     while (TXSTAbits.TRMT =
                                 = 0){}
  4399                           	goto	l255
  4400  1560  2D61               	
  4401                           l256:	
  4402  1561                     	
  4403                           l255:	
  4404  1561                     	bsf	status, 5	;RP0=1, select bank1
  4405  1561  1683               	bcf	status, 6	;RP1=0, select bank1
  4406  1562  1303               	btfss	(152)^080h,1	;volatile
  4407  1563  1C98               	goto	u2211
  4408  1564  2D66               	goto	u2210
  4409  1565  2D67               u2211:
  4410  1566                     	goto	l255
  4411  1566  2D61               u2210:
  4412  1567                     	goto	l2131
  4413  1567  2D68               	
  4414                           l257:	
  4415  1568                     	line	42
  4416                           	
  4417                           l2131:	
  4418  1568                     ;USART.c: 42:     TXREG = data;;USART.c: 42:     TXREG = data;
  4419                           	movf	(sendUSART@data),w
  4420  1568  0873               	bcf	status, 5	;RP0=0, select bank0
  4421  1569  1283               	bcf	status, 6	;RP1=0, select bank0
  4422  156A  1303               	movwf	(25)	;volatile
  4423  156B  0099               	line	43
  4424                           	
  4425                           l258:	
  4426  156C                     	return
  4427  156C  0008               	opt stack 0
  4428                           GLOBAL	__end_of_sendUSART
  4429                           	__end_of_sendUSART:
  4430  156D                     	signat	_sendUSART,4217
  4431                           	global	_selCanal
  4432                           
  4433 ;; *************** function _selCanal *****************
  4434 ;; Defined at:
  4435 ;;		line 10 in file "ADC.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  channel         1    wreg     unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  channel         1    4[COMMON] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         1       0       0       0       0
  4451 ;;      Temps:          1       0       0       0       0
  4452 ;;      Totals:         2       0       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4463                           	file	"ADC.c"
  4464                           	line	10
  4465                           global __ptext11
  4466                           __ptext11:	;psect for function _selCanal
  4467  1551                     psect	text11
  4468                           	file	"ADC.c"
  4469                           	line	10
  4470                           	global	__size_of_selCanal
  4471                           	__size_of_selCanal	equ	__end_of_selCanal-_selCanal
  4472  000E                     	
  4473                           _selCanal:	
  4474  1551                     ;incstack = 0
  4475                           	opt	stack 6
  4476                           ; Regs used in _selCanal: [wreg+status,2+status,0]
  4477                           ;selCanal@channel stored from wreg
  4478                           	movwf	(selCanal@channel)
  4479  1551  00F4               	line	11
  4480                           	
  4481                           l2019:	
  4482  1552                     ;ADC.c: 11:     ADCON0bits.CHS = channel;;ADC.c: 11:     ADCON0bits.CHS = channel;
  4483                           	movf	(selCanal@channel),w
  4484  1552  0874               	movwf	(??_selCanal+0)+0
  4485  1553  00F3               	rlf	(??_selCanal+0)+0,f
  4486  1554  0DF3               	rlf	(??_selCanal+0)+0,f
  4487  1555  0DF3               	bcf	status, 5	;RP0=0, select bank0
  4488  1556  1283               	bcf	status, 6	;RP1=0, select bank0
  4489  1557  1303               	movf	(31),w	;volatile
  4490  1558  081F               	xorwf	(??_selCanal+0)+0,w
  4491  1559  0673               	andlw	not (((1<<4)-1)<<2)
  4492  155A  39C3               	xorwf	(??_selCanal+0)+0,w
  4493  155B  0673               	movwf	(31)	;volatile
  4494  155C  009F               	goto	l32
  4495  155D  2D5E               	line	12
  4496                           	
  4497                           l2021:	
  4498  155E                     	line	13
  4499                           ;ADC.c: 12:     return;;ADC.c: 12:     return;
  4500                           	
  4501                           l32:	
  4502  155E                     	return
  4503  155E  0008               	opt stack 0
  4504                           GLOBAL	__end_of_selCanal
  4505                           	__end_of_selCanal:
  4506  155F                     	signat	_selCanal,4217
  4507                           	global	_readADC
  4508                           
  4509 ;; *************** function _readADC *****************
  4510 ;; Defined at:
  4511 ;;		line 6 in file "ADC.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      unsigned char 
  4518 ;; Registers used:
  4519 ;;		wreg
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4539                           	line	6
  4540                           global __ptext12
  4541                           __ptext12:	;psect for function _readADC
  4542  1545                     psect	text12
  4543                           	file	"ADC.c"
  4544                           	line	6
  4545                           	global	__size_of_readADC
  4546                           	__size_of_readADC	equ	__end_of_readADC-_readADC
  4547  0005                     	
  4548                           _readADC:	
  4549  1545                     ;incstack = 0
  4550                           	opt	stack 6
  4551                           ; Regs used in _readADC: [wreg]
  4552                           	line	7
  4553                           	
  4554                           l2015:	
  4555  1545                     ;ADC.c: 7:     return ADRESH;;ADC.c: 7:     return ADRESH;
  4556                           	bcf	status, 5	;RP0=0, select bank0
  4557  1545  1283               	bcf	status, 6	;RP1=0, select bank0
  4558  1546  1303               	movf	(30),w	;volatile
  4559  1547  081E               	goto	l29
  4560  1548  2D49               	
  4561                           l2017:	
  4562  1549                     	line	8
  4563                           	
  4564                           l29:	
  4565  1549                     	return
  4566  1549  0008               	opt stack 0
  4567                           GLOBAL	__end_of_readADC
  4568                           	__end_of_readADC:
  4569  154A                     	signat	_readADC,89
  4570                           	global	_initUSART
  4571                           
  4572 ;; *************** function _initUSART *****************
  4573 ;; Defined at:
  4574 ;;		line 4 in file "USART.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  baudrate        2    3[COMMON] unsigned int 
  4577 ;;  txint           1    5[COMMON] unsigned char 
  4578 ;;  rcint           1    6[COMMON] unsigned char 
  4579 ;;  syncrono        1    7[COMMON] unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4591 ;;      Params:         5       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0
  4594 ;;      Totals:         5       0       0       0       0
  4595 ;;Total ram usage:        5 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4605                           	file	"USART.c"
  4606                           	line	4
  4607                           global __ptext13
  4608                           __ptext13:	;psect for function _initUSART
  4609  1787                     psect	text13
  4610                           	file	"USART.c"
  4611                           	line	4
  4612                           	global	__size_of_initUSART
  4613                           	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  4614  0079                     	
  4615                           _initUSART:	
  4616  1787                     ;incstack = 0
  4617                           	opt	stack 6
  4618                           ; Regs used in _initUSART: [wreg+status,2+status,0]
  4619                           	line	5
  4620                           	
  4621                           l2093:	
  4622  1787                     ;USART.c: 5:     TRISCbits.TRISC7 = 1;;USART.c: 5:     TRISCbits.TRISC7 = 1;
  4623                           	bsf	status, 5	;RP0=1, select bank1
  4624  1787  1683               	bcf	status, 6	;RP1=0, select bank1
  4625  1788  1303               	bsf	(135)^080h,7	;volatile
  4626  1789  1787               	line	7
  4627                           ;USART.c: 7:     PIE1bits.RCIE = 0;;USART.c: 7:     PIE1bits.RCIE = 0;
  4628                           	bcf	(140)^080h,5	;volatile
  4629  178A  128C               	line	9
  4630                           ;USART.c: 9:     RCSTAbits.SPEN = 1;;USART.c: 9:     RCSTAbits.SPEN = 1;
  4631                           	bcf	status, 5	;RP0=0, select bank0
  4632  178B  1283               	bcf	status, 6	;RP1=0, select bank0
  4633  178C  1303               	bsf	(24),7	;volatile
  4634  178D  1798               	line	10
  4635                           	
  4636                           l2095:	
  4637  178E                     ;USART.c: 10:     TXSTAbits.SYNC = syncrono;;USART.c: 10:     TXSTAbits.SYNC = syncrono;
                                 
  4638                           	rrf	(initUSART@syncrono),w
  4639  178E  0C77               	bsf	status, 5	;RP0=1, select bank1
  4640  178F  1683               	bcf	status, 6	;RP1=0, select bank1
  4641  1790  1303               	skipc
  4642  1791  1C03               	bcf	(152)^080h,4	;volatile
  4643  1792  1218               	skipnc
  4644  1793  1803               	bsf	(152)^080h,4	;volatile
  4645  1794  1618               	line	12
  4646                           	
  4647                           l2097:	
  4648  1795                     ;USART.c: 12:     if(rcint){;USART.c: 12:     if(rcint){
  4649                           	movf	((initUSART@rcint)),w
  4650  1795  0876               	btfsc	status,2
  4651  1796  1903               	goto	u2131
  4652  1797  2F99               	goto	u2130
  4653  1798  2F9A               u2131:
  4654  1799                     	goto	l2101
  4655  1799  2FA4               u2130:
  4656  179A                     	line	13
  4657                           	
  4658                           l2099:	
  4659  179A                     ;USART.c: 13:         RCSTAbits.CREN = 1;;USART.c: 13:         RCSTAbits.CREN = 1;
  4660                           	bcf	status, 5	;RP0=0, select bank0
  4661  179A  1283               	bcf	status, 6	;RP1=0, select bank0
  4662  179B  1303               	bsf	(24),4	;volatile
  4663  179C  1618               	line	14
  4664                           ;USART.c: 14:         PIE1bits.RCIE = 1;;USART.c: 14:         PIE1bits.RCIE = 1;
  4665                           	bsf	status, 5	;RP0=1, select bank1
  4666  179D  1683               	bcf	status, 6	;RP1=0, select bank1
  4667  179E  1303               	bsf	(140)^080h,5	;volatile
  4668  179F  168C               	line	15
  4669                           ;USART.c: 15:         PIR1bits.RCIF = 0;;USART.c: 15:         PIR1bits.RCIF = 0;
  4670                           	bcf	status, 5	;RP0=0, select bank0
  4671  17A0  1283               	bcf	status, 6	;RP1=0, select bank0
  4672  17A1  1303               	bcf	(12),5	;volatile
  4673  17A2  128C               	goto	l2101
  4674  17A3  2FA4               	line	16
  4675                           ;USART.c: 16:     };USART.c: 16:     }
  4676                           	
  4677                           l239:	
  4678  17A4                     	line	17
  4679                           	
  4680                           l2101:	
  4681  17A4                     ;USART.c: 17:     if(txint){;USART.c: 17:     if(txint){
  4682                           	movf	((initUSART@txint)),w
  4683  17A4  0875               	btfsc	status,2
  4684  17A5  1903               	goto	u2141
  4685  17A6  2FA8               	goto	u2140
  4686  17A7  2FA9               u2141:
  4687  17A8                     	goto	l240
  4688  17A8  2FAC               u2140:
  4689  17A9                     	line	18
  4690                           	
  4691                           l2103:	
  4692  17A9                     ;USART.c: 18:         TXSTAbits.TXEN = 1;;USART.c: 18:         TXSTAbits.TXEN = 1;
  4693                           	bsf	status, 5	;RP0=1, select bank1
  4694  17A9  1683               	bcf	status, 6	;RP1=0, select bank1
  4695  17AA  1303               	bsf	(152)^080h,5	;volatile
  4696  17AB  1698               	line	19
  4697                           ;USART.c: 19:     };USART.c: 19:     }
  4698                           	
  4699                           l240:	
  4700  17AC                     	line	21
  4701                           ;USART.c: 21:     BAUDCTLbits.BRG16 = 1;;USART.c: 21:     BAUDCTLbits.BRG16 = 1;
  4702                           	bsf	status, 5	;RP0=1, select bank3
  4703  17AC  1683               	bsf	status, 6	;RP1=1, select bank3
  4704  17AD  1703               	bsf	(391)^0180h,3	;volatile
  4705  17AE  1587               	line	22
  4706                           ;USART.c: 22:     TXSTAbits.BRGH = 0;;USART.c: 22:     TXSTAbits.BRGH = 0;
  4707                           	bsf	status, 5	;RP0=1, select bank1
  4708  17AF  1683               	bcf	status, 6	;RP1=0, select bank1
  4709  17B0  1303               	bcf	(152)^080h,2	;volatile
  4710  17B1  1118               	line	24
  4711                           	
  4712                           l2105:	
  4713  17B2                     ;USART.c: 24:     if(baudrate == 300){;USART.c: 24:     if(baudrate == 300){
  4714                           		movlw	44
  4715  17B2  302C               	xorwf	((initUSART@baudrate)),w
  4716  17B3  0673               	skipz
  4717  17B4  1D03               	goto	u2151
  4718  17B5  2FBA               	decf	((initUSART@baudrate+1)),w
  4719  17B6  0374               	btfss	status,2
  4720  17B7  1D03               	goto	u2151
  4721  17B8  2FBA               	goto	u2150
  4722  17B9  2FBB               u2151:
  4723  17BA                     	goto	l2109
  4724  17BA  2FC0               u2150:
  4725  17BB                     	line	25
  4726                           	
  4727                           l2107:	
  4728  17BB                     ;USART.c: 25:         SPBRG = 0x40;;USART.c: 25:         SPBRG = 0x40;
  4729                           	movlw	low(040h)
  4730  17BB  3040               	movwf	(153)^080h	;volatile
  4731  17BC  0099               	line	26
  4732                           ;USART.c: 26:         SPBRGH = 0x03;;USART.c: 26:         SPBRGH = 0x03;
  4733                           	movlw	low(03h)
  4734  17BD  3003               	movwf	(154)^080h	;volatile
  4735  17BE  009A               	line	27
  4736                           ;USART.c: 27:     } else if (baudrate == 1200){;USART.c: 27:     } else if (baudrate == 
                                 1200){
  4737                           	goto	l252
  4738  17BF  2FFF               	
  4739                           l241:	
  4740  17C0                     	
  4741                           l2109:	
  4742  17C0                     		movlw	176
  4743  17C0  30B0               	xorwf	((initUSART@baudrate)),w
  4744  17C1  0673               	movlw	4
  4745  17C2  3004               	skipnz
  4746  17C3  1903               	xorwf	((initUSART@baudrate+1)),w
  4747  17C4  0674               	btfss	status,2
  4748  17C5  1D03               	goto	u2161
  4749  17C6  2FC8               	goto	u2160
  4750  17C7  2FC9               u2161:
  4751  17C8                     	goto	l2113
  4752  17C8  2FCC               u2160:
  4753  17C9                     	line	28
  4754                           	
  4755                           l2111:	
  4756  17C9                     ;USART.c: 28:         SPBRG = 207;;USART.c: 28:         SPBRG = 207;
  4757                           	movlw	low(0CFh)
  4758  17C9  30CF               	movwf	(153)^080h	;volatile
  4759  17CA  0099               	line	29
  4760                           ;USART.c: 29:     } else if (baudrate == 2400){;USART.c: 29:     } else if (baudrate == 
                                 2400){
  4761                           	goto	l252
  4762  17CB  2FFF               	
  4763                           l243:	
  4764  17CC                     	
  4765                           l2113:	
  4766  17CC                     		movlw	96
  4767  17CC  3060               	xorwf	((initUSART@baudrate)),w
  4768  17CD  0673               	movlw	9
  4769  17CE  3009               	skipnz
  4770  17CF  1903               	xorwf	((initUSART@baudrate+1)),w
  4771  17D0  0674               	btfss	status,2
  4772  17D1  1D03               	goto	u2171
  4773  17D2  2FD4               	goto	u2170
  4774  17D3  2FD5               u2171:
  4775  17D4                     	goto	l2117
  4776  17D4  2FD8               u2170:
  4777  17D5                     	line	30
  4778                           	
  4779                           l2115:	
  4780  17D5                     ;USART.c: 30:         SPBRG = 103;;USART.c: 30:         SPBRG = 103;
  4781                           	movlw	low(067h)
  4782  17D5  3067               	movwf	(153)^080h	;volatile
  4783  17D6  0099               	line	31
  4784                           ;USART.c: 31:     } else if (baudrate == 9600){;USART.c: 31:     } else if (baudrate == 
                                 9600){
  4785                           	goto	l252
  4786  17D7  2FFF               	
  4787                           l245:	
  4788  17D8                     	
  4789                           l2117:	
  4790  17D8                     		movlw	128
  4791  17D8  3080               	xorwf	((initUSART@baudrate)),w
  4792  17D9  0673               	movlw	37
  4793  17DA  3025               	skipnz
  4794  17DB  1903               	xorwf	((initUSART@baudrate+1)),w
  4795  17DC  0674               	btfss	status,2
  4796  17DD  1D03               	goto	u2181
  4797  17DE  2FE0               	goto	u2180
  4798  17DF  2FE1               u2181:
  4799  17E0                     	goto	l2121
  4800  17E0  2FE4               u2180:
  4801  17E1                     	line	32
  4802                           	
  4803                           l2119:	
  4804  17E1                     ;USART.c: 32:         SPBRG = 25;;USART.c: 32:         SPBRG = 25;
  4805                           	movlw	low(019h)
  4806  17E1  3019               	movwf	(153)^080h	;volatile
  4807  17E2  0099               	line	33
  4808                           ;USART.c: 33:     } else if (baudrate == 10417){;USART.c: 33:     } else if (baudrate ==
                                  10417){
  4809                           	goto	l252
  4810  17E3  2FFF               	
  4811                           l247:	
  4812  17E4                     	
  4813                           l2121:	
  4814  17E4                     		movlw	177
  4815  17E4  30B1               	xorwf	((initUSART@baudrate)),w
  4816  17E5  0673               	movlw	40
  4817  17E6  3028               	skipnz
  4818  17E7  1903               	xorwf	((initUSART@baudrate+1)),w
  4819  17E8  0674               	btfss	status,2
  4820  17E9  1D03               	goto	u2191
  4821  17EA  2FEC               	goto	u2190
  4822  17EB  2FED               u2191:
  4823  17EC                     	goto	l2125
  4824  17EC  2FF0               u2190:
  4825  17ED                     	line	34
  4826                           	
  4827                           l2123:	
  4828  17ED                     ;USART.c: 34:         SPBRG = 23;;USART.c: 34:         SPBRG = 23;
  4829                           	movlw	low(017h)
  4830  17ED  3017               	movwf	(153)^080h	;volatile
  4831  17EE  0099               	line	35
  4832                           ;USART.c: 35:     } else if (baudrate == 19200){;USART.c: 35:     } else if (baudrate ==
                                  19200){
  4833                           	goto	l252
  4834  17EF  2FFF               	
  4835                           l249:	
  4836  17F0                     	
  4837                           l2125:	
  4838  17F0                     		movlw	75
  4839  17F0  304B               	xorwf	((initUSART@baudrate+1)),w
  4840  17F1  0674               iorwf	((initUSART@baudrate)),w
  4841  17F2  0473               	btfss	status,2
  4842  17F3  1D03               	goto	u2201
  4843  17F4  2FF6               	goto	u2200
  4844  17F5  2FF7               u2201:
  4845  17F6                     	goto	l252
  4846  17F6  2FFF               u2200:
  4847  17F7                     	line	36
  4848                           	
  4849                           l2127:	
  4850  17F7                     ;USART.c: 36:         SPBRG = 12;;USART.c: 36:         SPBRG = 12;
  4851                           	movlw	low(0Ch)
  4852  17F7  300C               	movwf	(153)^080h	;volatile
  4853  17F8  0099               	goto	l252
  4854  17F9  2FFF               	line	37
  4855                           ;USART.c: 37:     };USART.c: 37:     }
  4856                           	
  4857                           l251:	
  4858  17FA                     	goto	l252
  4859  17FA  2FFF               	
  4860                           l250:	
  4861  17FB                     	goto	l252
  4862  17FB  2FFF               	
  4863                           l248:	
  4864  17FC                     	goto	l252
  4865  17FC  2FFF               	
  4866                           l246:	
  4867  17FD                     	goto	l252
  4868  17FD  2FFF               	
  4869                           l244:	
  4870  17FE                     	goto	l252
  4871  17FE  2FFF               	
  4872                           l242:	
  4873  17FF                     	line	38
  4874                           	
  4875                           l252:	
  4876  17FF                     	return
  4877  17FF  0008               	opt stack 0
  4878                           GLOBAL	__end_of_initUSART
  4879                           	__end_of_initUSART:
  4880  1800                     	signat	_initUSART,16505
  4881                           	global	_initLCD
  4882                           
  4883 ;; *************** function _initLCD *****************
  4884 ;; Defined at:
  4885 ;;		line 36 in file "LCD.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4899 ;;      Params:         0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0
  4901 ;;      Temps:          2       0       0       0       0
  4902 ;;      Totals:         2       0       0       0       0
  4903 ;;Total ram usage:        2 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    2
  4906 ;; This function calls:
  4907 ;;		_cmdLCD
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4913                           	file	"LCD.c"
  4914                           	line	36
  4915                           global __ptext14
  4916                           __ptext14:	;psect for function _initLCD
  4917  07C5                     psect	text14
  4918                           	file	"LCD.c"
  4919                           	line	36
  4920                           	global	__size_of_initLCD
  4921                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  4922  003A                     	
  4923                           _initLCD:	
  4924  07C5                     ;incstack = 0
  4925                           	opt	stack 5
  4926                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4927                           	line	37
  4928                           	
  4929                           l2971:	
  4930  07C5                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));;LCD.c: 37:      _delay(
                                 (unsigned long)((15)*(4000000/4000.0)));
  4931                           	opt asmopt_push
  4932                           opt asmopt_off
  4933                           movlw	20
  4934  07C5  3014               movwf	((??_initLCD+0)+0+1),f
  4935  07C6  00F7               	movlw	121
  4936  07C7  3079               movwf	((??_initLCD+0)+0),f
  4937  07C8  00F6               	u4197:
  4938  07C9                     decfsz	((??_initLCD+0)+0),f
  4939  07C9  0BF6               	goto	u4197
  4940  07CA  2FC9               	decfsz	((??_initLCD+0)+0+1),f
  4941  07CB  0BF7               	goto	u4197
  4942  07CC  2FC9               	nop2
  4943  07CD  2FCE               opt asmopt_pop
  4944                           
  4945                           	line	38
  4946                           	
  4947                           l2973:	
  4948  07CE                     ;LCD.c: 38:     cmdLCD(0x030);;LCD.c: 38:     cmdLCD(0x030);
  4949                           	movlw	low(030h)
  4950  07CE  3030               	fcall	_cmdLCD
  4951  07CF  160A  118A  259B  120A  118A  	line	39
  4952                           	
  4953                           l2975:	
  4954  07D4                     ;LCD.c: 39:     cmdLCD(0x030);;LCD.c: 39:     cmdLCD(0x030);
  4955                           	movlw	low(030h)
  4956  07D4  3030               	fcall	_cmdLCD
  4957  07D5  160A  118A  259B  120A  118A  	line	40
  4958                           	
  4959                           l2977:	
  4960  07DA                     ;LCD.c: 40:     cmdLCD(0x030);;LCD.c: 40:     cmdLCD(0x030);
  4961                           	movlw	low(030h)
  4962  07DA  3030               	fcall	_cmdLCD
  4963  07DB  160A  118A  259B  120A  118A  	line	42
  4964                           	
  4965                           l2979:	
  4966  07E0                     ;LCD.c: 42:     cmdLCD(0x38);;LCD.c: 42:     cmdLCD(0x38);
  4967                           	movlw	low(038h)
  4968  07E0  3038               	fcall	_cmdLCD
  4969  07E1  160A  118A  259B  120A  118A  	line	43
  4970                           	
  4971                           l2981:	
  4972  07E6                     ;LCD.c: 43:     cmdLCD(0x10);;LCD.c: 43:     cmdLCD(0x10);
  4973                           	movlw	low(010h)
  4974  07E6  3010               	fcall	_cmdLCD
  4975  07E7  160A  118A  259B  120A  118A  	line	44
  4976                           	
  4977                           l2983:	
  4978  07EC                     ;LCD.c: 44:     cmdLCD(0x01);;LCD.c: 44:     cmdLCD(0x01);
  4979                           	movlw	low(01h)
  4980  07EC  3001               	fcall	_cmdLCD
  4981  07ED  160A  118A  259B  120A  118A  	line	45
  4982                           	
  4983                           l2985:	
  4984  07F2                     ;LCD.c: 45:     cmdLCD(0x06);;LCD.c: 45:     cmdLCD(0x06);
  4985                           	movlw	low(06h)
  4986  07F2  3006               	fcall	_cmdLCD
  4987  07F3  160A  118A  259B  120A  118A  	line	46
  4988                           	
  4989                           l2987:	
  4990  07F8                     ;LCD.c: 46:     cmdLCD(0x0E);;LCD.c: 46:     cmdLCD(0x0E);
  4991                           	movlw	low(0Eh)
  4992  07F8  300E               	fcall	_cmdLCD
  4993  07F9  160A  118A  259B  120A  118A  	line	47
  4994                           	
  4995                           l96:	
  4996  07FE                     	return
  4997  07FE  0008               	opt stack 0
  4998                           GLOBAL	__end_of_initLCD
  4999                           	__end_of_initLCD:
  5000  07FF                     	signat	_initLCD,89
  5001                           	global	_configCanal
  5002                           
  5003 ;; *************** function _configCanal *****************
  5004 ;; Defined at:
  5005 ;;		line 15 in file "ADC.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  channel         1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  channel         1    5[COMMON] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5019 ;;      Params:         0       0       0       0       0
  5020 ;;      Locals:         1       0       0       0       0
  5021 ;;      Temps:          2       0       0       0       0
  5022 ;;      Totals:         3       0       0       0       0
  5023 ;;Total ram usage:        3 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5033                           	file	"ADC.c"
  5034                           	line	15
  5035                           global __ptext15
  5036                           __ptext15:	;psect for function _configCanal
  5037  0988                     psect	text15
  5038                           	file	"ADC.c"
  5039                           	line	15
  5040                           	global	__size_of_configCanal
  5041                           	__size_of_configCanal	equ	__end_of_configCanal-_configCanal
  5042  00EE                     	
  5043                           _configCanal:	
  5044  0988                     ;incstack = 0
  5045                           	opt	stack 6
  5046                           ; Regs used in _configCanal: [wreg-fsr0h+status,2+status,0]
  5047                           ;configCanal@channel stored from wreg
  5048                           	movwf	(configCanal@channel)
  5049  0988  00F5               	line	16
  5050                           	
  5051                           l2023:	
  5052  0989                     ;ADC.c: 16:     switch (channel){;ADC.c: 16:     switch (channel){
  5053                           	goto	l2027
  5054  0989  2A41               	line	17
  5055                           ;ADC.c: 17:         case 0:;ADC.c: 17:         case 0:
  5056                           	
  5057                           l36:	
  5058  098A                     	line	18
  5059                           ;ADC.c: 18:             ADCON0bits.CHS0 = 0;;ADC.c: 18:             ADCON0bits.CHS0 = 0;
                                 
  5060                           	bcf	status, 5	;RP0=0, select bank0
  5061  098A  1283               	bcf	status, 6	;RP1=0, select bank0
  5062  098B  1303               	bcf	(31),2	;volatile
  5063  098C  111F               	line	19
  5064                           ;ADC.c: 19:             ADCON0bits.CHS1 = 0;;ADC.c: 19:             ADCON0bits.CHS1 = 0;
                                 
  5065                           	bcf	(31),3	;volatile
  5066  098D  119F               	line	20
  5067                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;;ADC.c: 20:             ADCON0bits.CHS2 = 0;
                                 
  5068                           	bcf	(31),4	;volatile
  5069  098E  121F               	line	21
  5070                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;;ADC.c: 21:             ADCON0bits.CHS3 = 0;
                                 
  5071                           	bcf	(31),5	;volatile
  5072  098F  129F               	line	22
  5073                           ;ADC.c: 22:             ANSELbits.ANS0 = 1;;ADC.c: 22:             ANSELbits.ANS0 = 1;
  5074                           	bsf	status, 5	;RP0=1, select bank3
  5075  0990  1683               	bsf	status, 6	;RP1=1, select bank3
  5076  0991  1703               	bsf	(392)^0180h,0	;volatile
  5077  0992  1408               	line	23
  5078                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;;ADC.c: 23:             TRISAbits.TRISA0 = 
                                 1;
  5079                           	bsf	status, 5	;RP0=1, select bank1
  5080  0993  1683               	bcf	status, 6	;RP1=0, select bank1
  5081  0994  1303               	bsf	(133)^080h,0	;volatile
  5082  0995  1405               	line	24
  5083                           ;ADC.c: 24:             break;;ADC.c: 24:             break;
  5084                           	goto	l51
  5085  0996  2A75               	line	25
  5086                           ;ADC.c: 25:         case 1:;ADC.c: 25:         case 1:
  5087                           	
  5088                           l38:	
  5089  0997                     	line	26
  5090                           ;ADC.c: 26:             ADCON0bits.CHS0 = 1;;ADC.c: 26:             ADCON0bits.CHS0 = 1;
                                 
  5091                           	bcf	status, 5	;RP0=0, select bank0
  5092  0997  1283               	bcf	status, 6	;RP1=0, select bank0
  5093  0998  1303               	bsf	(31),2	;volatile
  5094  0999  151F               	line	27
  5095                           ;ADC.c: 27:             ADCON0bits.CHS1 = 0;;ADC.c: 27:             ADCON0bits.CHS1 = 0;
                                 
  5096                           	bcf	(31),3	;volatile
  5097  099A  119F               	line	28
  5098                           ;ADC.c: 28:             ADCON0bits.CHS2 = 0;;ADC.c: 28:             ADCON0bits.CHS2 = 0;
                                 
  5099                           	bcf	(31),4	;volatile
  5100  099B  121F               	line	29
  5101                           ;ADC.c: 29:             ADCON0bits.CHS3 = 0;;ADC.c: 29:             ADCON0bits.CHS3 = 0;
                                 
  5102                           	bcf	(31),5	;volatile
  5103  099C  129F               	line	30
  5104                           ;ADC.c: 30:             ANSELbits.ANS1 = 1;;ADC.c: 30:             ANSELbits.ANS1 = 1;
  5105                           	bsf	status, 5	;RP0=1, select bank3
  5106  099D  1683               	bsf	status, 6	;RP1=1, select bank3
  5107  099E  1703               	bsf	(392)^0180h,1	;volatile
  5108  099F  1488               	line	31
  5109                           ;ADC.c: 31:             TRISAbits.TRISA1 = 1;;ADC.c: 31:             TRISAbits.TRISA1 = 
                                 1;
  5110                           	bsf	status, 5	;RP0=1, select bank1
  5111  09A0  1683               	bcf	status, 6	;RP1=0, select bank1
  5112  09A1  1303               	bsf	(133)^080h,1	;volatile
  5113  09A2  1485               	line	32
  5114                           ;ADC.c: 32:             break;;ADC.c: 32:             break;
  5115                           	goto	l51
  5116  09A3  2A75               	line	33
  5117                           ;ADC.c: 33:         case 2:;ADC.c: 33:         case 2:
  5118                           	
  5119                           l39:	
  5120  09A4                     	line	34
  5121                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;;ADC.c: 34:             ADCON0bits.CHS0 = 0;
                                 
  5122                           	bcf	status, 5	;RP0=0, select bank0
  5123  09A4  1283               	bcf	status, 6	;RP1=0, select bank0
  5124  09A5  1303               	bcf	(31),2	;volatile
  5125  09A6  111F               	line	35
  5126                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;;ADC.c: 35:             ADCON0bits.CHS1 = 1;
                                 
  5127                           	bsf	(31),3	;volatile
  5128  09A7  159F               	line	36
  5129                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;;ADC.c: 36:             ADCON0bits.CHS2 = 0;
                                 
  5130                           	bcf	(31),4	;volatile
  5131  09A8  121F               	line	37
  5132                           ;ADC.c: 37:             ADCON0bits.CHS3 = 0;;ADC.c: 37:             ADCON0bits.CHS3 = 0;
                                 
  5133                           	bcf	(31),5	;volatile
  5134  09A9  129F               	line	38
  5135                           ;ADC.c: 38:             ANSELbits.ANS2 = 1;;ADC.c: 38:             ANSELbits.ANS2 = 1;
  5136                           	bsf	status, 5	;RP0=1, select bank3
  5137  09AA  1683               	bsf	status, 6	;RP1=1, select bank3
  5138  09AB  1703               	bsf	(392)^0180h,2	;volatile
  5139  09AC  1508               	line	39
  5140                           ;ADC.c: 39:             TRISAbits.TRISA2 = 1;;ADC.c: 39:             TRISAbits.TRISA2 = 
                                 1;
  5141                           	bsf	status, 5	;RP0=1, select bank1
  5142  09AD  1683               	bcf	status, 6	;RP1=0, select bank1
  5143  09AE  1303               	bsf	(133)^080h,2	;volatile
  5144  09AF  1505               	line	40
  5145                           ;ADC.c: 40:             break;;ADC.c: 40:             break;
  5146                           	goto	l51
  5147  09B0  2A75               	line	41
  5148                           ;ADC.c: 41:         case 3:;ADC.c: 41:         case 3:
  5149                           	
  5150                           l40:	
  5151  09B1                     	line	42
  5152                           ;ADC.c: 42:             ADCON0bits.CHS0 = 1;;ADC.c: 42:             ADCON0bits.CHS0 = 1;
                                 
  5153                           	bcf	status, 5	;RP0=0, select bank0
  5154  09B1  1283               	bcf	status, 6	;RP1=0, select bank0
  5155  09B2  1303               	bsf	(31),2	;volatile
  5156  09B3  151F               	line	43
  5157                           ;ADC.c: 43:             ADCON0bits.CHS1 = 1;;ADC.c: 43:             ADCON0bits.CHS1 = 1;
                                 
  5158                           	bsf	(31),3	;volatile
  5159  09B4  159F               	line	44
  5160                           ;ADC.c: 44:             ADCON0bits.CHS2 = 0;;ADC.c: 44:             ADCON0bits.CHS2 = 0;
                                 
  5161                           	bcf	(31),4	;volatile
  5162  09B5  121F               	line	45
  5163                           ;ADC.c: 45:             ADCON0bits.CHS3 = 0;;ADC.c: 45:             ADCON0bits.CHS3 = 0;
                                 
  5164                           	bcf	(31),5	;volatile
  5165  09B6  129F               	line	46
  5166                           ;ADC.c: 46:             ANSELbits.ANS3 = 1;;ADC.c: 46:             ANSELbits.ANS3 = 1;
  5167                           	bsf	status, 5	;RP0=1, select bank3
  5168  09B7  1683               	bsf	status, 6	;RP1=1, select bank3
  5169  09B8  1703               	bsf	(392)^0180h,3	;volatile
  5170  09B9  1588               	line	47
  5171                           ;ADC.c: 47:             TRISAbits.TRISA3 = 1;;ADC.c: 47:             TRISAbits.TRISA3 = 
                                 1;
  5172                           	bsf	status, 5	;RP0=1, select bank1
  5173  09BA  1683               	bcf	status, 6	;RP1=0, select bank1
  5174  09BB  1303               	bsf	(133)^080h,3	;volatile
  5175  09BC  1585               	line	48
  5176                           ;ADC.c: 48:             break;;ADC.c: 48:             break;
  5177                           	goto	l51
  5178  09BD  2A75               	line	49
  5179                           ;ADC.c: 49:         case 4:;ADC.c: 49:         case 4:
  5180                           	
  5181                           l41:	
  5182  09BE                     	line	50
  5183                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;;ADC.c: 50:             ADCON0bits.CHS0 = 0;
                                 
  5184                           	bcf	status, 5	;RP0=0, select bank0
  5185  09BE  1283               	bcf	status, 6	;RP1=0, select bank0
  5186  09BF  1303               	bcf	(31),2	;volatile
  5187  09C0  111F               	line	51
  5188                           ;ADC.c: 51:             ADCON0bits.CHS1 = 0;;ADC.c: 51:             ADCON0bits.CHS1 = 0;
                                 
  5189                           	bcf	(31),3	;volatile
  5190  09C1  119F               	line	52
  5191                           ;ADC.c: 52:             ADCON0bits.CHS2 = 1;;ADC.c: 52:             ADCON0bits.CHS2 = 1;
                                 
  5192                           	bsf	(31),4	;volatile
  5193  09C2  161F               	line	53
  5194                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;;ADC.c: 53:             ADCON0bits.CHS3 = 0;
                                 
  5195                           	bcf	(31),5	;volatile
  5196  09C3  129F               	line	54
  5197                           ;ADC.c: 54:             ANSELbits.ANS4 = 1;;ADC.c: 54:             ANSELbits.ANS4 = 1;
  5198                           	bsf	status, 5	;RP0=1, select bank3
  5199  09C4  1683               	bsf	status, 6	;RP1=1, select bank3
  5200  09C5  1703               	bsf	(392)^0180h,4	;volatile
  5201  09C6  1608               	line	55
  5202                           ;ADC.c: 55:             TRISAbits.TRISA5 = 1;;ADC.c: 55:             TRISAbits.TRISA5 = 
                                 1;
  5203                           	bsf	status, 5	;RP0=1, select bank1
  5204  09C7  1683               	bcf	status, 6	;RP1=0, select bank1
  5205  09C8  1303               	bsf	(133)^080h,5	;volatile
  5206  09C9  1685               	line	56
  5207                           ;ADC.c: 56:             break;;ADC.c: 56:             break;
  5208                           	goto	l51
  5209  09CA  2A75               	line	57
  5210                           ;ADC.c: 57:         case 5:;ADC.c: 57:         case 5:
  5211                           	
  5212                           l42:	
  5213  09CB                     	line	58
  5214                           ;ADC.c: 58:             ADCON0bits.CHS0 = 1;;ADC.c: 58:             ADCON0bits.CHS0 = 1;
                                 
  5215                           	bcf	status, 5	;RP0=0, select bank0
  5216  09CB  1283               	bcf	status, 6	;RP1=0, select bank0
  5217  09CC  1303               	bsf	(31),2	;volatile
  5218  09CD  151F               	line	59
  5219                           ;ADC.c: 59:             ADCON0bits.CHS1 = 0;;ADC.c: 59:             ADCON0bits.CHS1 = 0;
                                 
  5220                           	bcf	(31),3	;volatile
  5221  09CE  119F               	line	60
  5222                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;;ADC.c: 60:             ADCON0bits.CHS2 = 1;
                                 
  5223                           	bsf	(31),4	;volatile
  5224  09CF  161F               	line	61
  5225                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;;ADC.c: 61:             ADCON0bits.CHS3 = 0;
                                 
  5226                           	bcf	(31),5	;volatile
  5227  09D0  129F               	line	62
  5228                           ;ADC.c: 62:             ANSELbits.ANS5 = 1;;ADC.c: 62:             ANSELbits.ANS5 = 1;
  5229                           	bsf	status, 5	;RP0=1, select bank3
  5230  09D1  1683               	bsf	status, 6	;RP1=1, select bank3
  5231  09D2  1703               	bsf	(392)^0180h,5	;volatile
  5232  09D3  1688               	line	63
  5233                           ;ADC.c: 63:             TRISEbits.TRISE0 = 1;;ADC.c: 63:             TRISEbits.TRISE0 = 
                                 1;
  5234                           	bsf	status, 5	;RP0=1, select bank1
  5235  09D4  1683               	bcf	status, 6	;RP1=0, select bank1
  5236  09D5  1303               	bsf	(137)^080h,0	;volatile
  5237  09D6  1409               	line	64
  5238                           ;ADC.c: 64:             break;;ADC.c: 64:             break;
  5239                           	goto	l51
  5240  09D7  2A75               	line	65
  5241                           ;ADC.c: 65:         case 6:;ADC.c: 65:         case 6:
  5242                           	
  5243                           l43:	
  5244  09D8                     	line	66
  5245                           ;ADC.c: 66:             ADCON0bits.CHS0 = 0;;ADC.c: 66:             ADCON0bits.CHS0 = 0;
                                 
  5246                           	bcf	status, 5	;RP0=0, select bank0
  5247  09D8  1283               	bcf	status, 6	;RP1=0, select bank0
  5248  09D9  1303               	bcf	(31),2	;volatile
  5249  09DA  111F               	line	67
  5250                           ;ADC.c: 67:             ADCON0bits.CHS1 = 1;;ADC.c: 67:             ADCON0bits.CHS1 = 1;
                                 
  5251                           	bsf	(31),3	;volatile
  5252  09DB  159F               	line	68
  5253                           ;ADC.c: 68:             ADCON0bits.CHS2 = 1;;ADC.c: 68:             ADCON0bits.CHS2 = 1;
                                 
  5254                           	bsf	(31),4	;volatile
  5255  09DC  161F               	line	69
  5256                           ;ADC.c: 69:             ADCON0bits.CHS3 = 0;;ADC.c: 69:             ADCON0bits.CHS3 = 0;
                                 
  5257                           	bcf	(31),5	;volatile
  5258  09DD  129F               	line	70
  5259                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;;ADC.c: 70:             ANSELbits.ANS6 = 1;
  5260                           	bsf	status, 5	;RP0=1, select bank3
  5261  09DE  1683               	bsf	status, 6	;RP1=1, select bank3
  5262  09DF  1703               	bsf	(392)^0180h,6	;volatile
  5263  09E0  1708               	line	71
  5264                           ;ADC.c: 71:             TRISEbits.TRISE1 = 1;;ADC.c: 71:             TRISEbits.TRISE1 = 
                                 1;
  5265                           	bsf	status, 5	;RP0=1, select bank1
  5266  09E1  1683               	bcf	status, 6	;RP1=0, select bank1
  5267  09E2  1303               	bsf	(137)^080h,1	;volatile
  5268  09E3  1489               	line	72
  5269                           ;ADC.c: 72:             break;;ADC.c: 72:             break;
  5270                           	goto	l51
  5271  09E4  2A75               	line	73
  5272                           ;ADC.c: 73:         case 7:;ADC.c: 73:         case 7:
  5273                           	
  5274                           l44:	
  5275  09E5                     	line	74
  5276                           ;ADC.c: 74:             ADCON0bits.CHS0 = 1;;ADC.c: 74:             ADCON0bits.CHS0 = 1;
                                 
  5277                           	bcf	status, 5	;RP0=0, select bank0
  5278  09E5  1283               	bcf	status, 6	;RP1=0, select bank0
  5279  09E6  1303               	bsf	(31),2	;volatile
  5280  09E7  151F               	line	75
  5281                           ;ADC.c: 75:             ADCON0bits.CHS1 = 1;;ADC.c: 75:             ADCON0bits.CHS1 = 1;
                                 
  5282                           	bsf	(31),3	;volatile
  5283  09E8  159F               	line	76
  5284                           ;ADC.c: 76:             ADCON0bits.CHS2 = 1;;ADC.c: 76:             ADCON0bits.CHS2 = 1;
                                 
  5285                           	bsf	(31),4	;volatile
  5286  09E9  161F               	line	77
  5287                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;;ADC.c: 77:             ADCON0bits.CHS3 = 0;
                                 
  5288                           	bcf	(31),5	;volatile
  5289  09EA  129F               	line	78
  5290                           ;ADC.c: 78:             ANSELbits.ANS7 = 1;;ADC.c: 78:             ANSELbits.ANS7 = 1;
  5291                           	bsf	status, 5	;RP0=1, select bank3
  5292  09EB  1683               	bsf	status, 6	;RP1=1, select bank3
  5293  09EC  1703               	bsf	(392)^0180h,7	;volatile
  5294  09ED  1788               	line	79
  5295                           ;ADC.c: 79:             TRISEbits.TRISE2 = 1;;ADC.c: 79:             TRISEbits.TRISE2 = 
                                 1;
  5296                           	bsf	status, 5	;RP0=1, select bank1
  5297  09EE  1683               	bcf	status, 6	;RP1=0, select bank1
  5298  09EF  1303               	bsf	(137)^080h,2	;volatile
  5299  09F0  1509               	line	80
  5300                           ;ADC.c: 80:             break;;ADC.c: 80:             break;
  5301                           	goto	l51
  5302  09F1  2A75               	line	81
  5303                           ;ADC.c: 81:         case 8:;ADC.c: 81:         case 8:
  5304                           	
  5305                           l45:	
  5306  09F2                     	line	82
  5307                           ;ADC.c: 82:             ADCON0bits.CHS0 = 0;;ADC.c: 82:             ADCON0bits.CHS0 = 0;
                                 
  5308                           	bcf	status, 5	;RP0=0, select bank0
  5309  09F2  1283               	bcf	status, 6	;RP1=0, select bank0
  5310  09F3  1303               	bcf	(31),2	;volatile
  5311  09F4  111F               	line	83
  5312                           ;ADC.c: 83:             ADCON0bits.CHS1 = 0;;ADC.c: 83:             ADCON0bits.CHS1 = 0;
                                 
  5313                           	bcf	(31),3	;volatile
  5314  09F5  119F               	line	84
  5315                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;;ADC.c: 84:             ADCON0bits.CHS2 = 0;
                                 
  5316                           	bcf	(31),4	;volatile
  5317  09F6  121F               	line	85
  5318                           ;ADC.c: 85:             ADCON0bits.CHS3 = 1;;ADC.c: 85:             ADCON0bits.CHS3 = 1;
                                 
  5319                           	bsf	(31),5	;volatile
  5320  09F7  169F               	line	86
  5321                           ;ADC.c: 86:             ANSELHbits.ANS8 = 1;;ADC.c: 86:             ANSELHbits.ANS8 = 1;
                                 
  5322                           	bsf	status, 5	;RP0=1, select bank3
  5323  09F8  1683               	bsf	status, 6	;RP1=1, select bank3
  5324  09F9  1703               	bsf	(393)^0180h,0	;volatile
  5325  09FA  1409               	line	87
  5326                           ;ADC.c: 87:             TRISBbits.TRISB2 = 1;;ADC.c: 87:             TRISBbits.TRISB2 = 
                                 1;
  5327                           	bsf	status, 5	;RP0=1, select bank1
  5328  09FB  1683               	bcf	status, 6	;RP1=0, select bank1
  5329  09FC  1303               	bsf	(134)^080h,2	;volatile
  5330  09FD  1506               	line	88
  5331                           ;ADC.c: 88:             break;;ADC.c: 88:             break;
  5332                           	goto	l51
  5333  09FE  2A75               	line	89
  5334                           ;ADC.c: 89:         case 9:;ADC.c: 89:         case 9:
  5335                           	
  5336                           l46:	
  5337  09FF                     	line	90
  5338                           ;ADC.c: 90:             ADCON0bits.CHS0 = 1;;ADC.c: 90:             ADCON0bits.CHS0 = 1;
                                 
  5339                           	bcf	status, 5	;RP0=0, select bank0
  5340  09FF  1283               	bcf	status, 6	;RP1=0, select bank0
  5341  0A00  1303               	bsf	(31),2	;volatile
  5342  0A01  151F               	line	91
  5343                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;;ADC.c: 91:             ADCON0bits.CHS1 = 0;
                                 
  5344                           	bcf	(31),3	;volatile
  5345  0A02  119F               	line	92
  5346                           ;ADC.c: 92:             ADCON0bits.CHS2 = 0;;ADC.c: 92:             ADCON0bits.CHS2 = 0;
                                 
  5347                           	bcf	(31),4	;volatile
  5348  0A03  121F               	line	93
  5349                           ;ADC.c: 93:             ADCON0bits.CHS3 = 1;;ADC.c: 93:             ADCON0bits.CHS3 = 1;
                                 
  5350                           	bsf	(31),5	;volatile
  5351  0A04  169F               	line	94
  5352                           ;ADC.c: 94:             ANSELHbits.ANS9 = 1;;ADC.c: 94:             ANSELHbits.ANS9 = 1;
                                 
  5353                           	bsf	status, 5	;RP0=1, select bank3
  5354  0A05  1683               	bsf	status, 6	;RP1=1, select bank3
  5355  0A06  1703               	bsf	(393)^0180h,1	;volatile
  5356  0A07  1489               	line	95
  5357                           ;ADC.c: 95:             TRISBbits.TRISB3 = 1;;ADC.c: 95:             TRISBbits.TRISB3 = 
                                 1;
  5358                           	bsf	status, 5	;RP0=1, select bank1
  5359  0A08  1683               	bcf	status, 6	;RP1=0, select bank1
  5360  0A09  1303               	bsf	(134)^080h,3	;volatile
  5361  0A0A  1586               	line	96
  5362                           ;ADC.c: 96:             break;;ADC.c: 96:             break;
  5363                           	goto	l51
  5364  0A0B  2A75               	line	97
  5365                           ;ADC.c: 97:         case 10:;ADC.c: 97:         case 10:
  5366                           	
  5367                           l47:	
  5368  0A0C                     	line	98
  5369                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;;ADC.c: 98:             ADCON0bits.CHS0 = 0;
                                 
  5370                           	bcf	status, 5	;RP0=0, select bank0
  5371  0A0C  1283               	bcf	status, 6	;RP1=0, select bank0
  5372  0A0D  1303               	bcf	(31),2	;volatile
  5373  0A0E  111F               	line	99
  5374                           ;ADC.c: 99:             ADCON0bits.CHS1 = 1;;ADC.c: 99:             ADCON0bits.CHS1 = 1;
                                 
  5375                           	bsf	(31),3	;volatile
  5376  0A0F  159F               	line	100
  5377                           ;ADC.c: 100:             ADCON0bits.CHS2 = 0;;ADC.c: 100:             ADCON0bits.CHS2 = 
                                 0;
  5378                           	bcf	(31),4	;volatile
  5379  0A10  121F               	line	101
  5380                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;;ADC.c: 101:             ADCON0bits.CHS3 = 
                                 1;
  5381                           	bsf	(31),5	;volatile
  5382  0A11  169F               	line	102
  5383                           ;ADC.c: 102:             ANSELHbits.ANS10 = 1;;ADC.c: 102:             ANSELHbits.ANS10 
                                 = 1;
  5384                           	bsf	status, 5	;RP0=1, select bank3
  5385  0A12  1683               	bsf	status, 6	;RP1=1, select bank3
  5386  0A13  1703               	bsf	(393)^0180h,2	;volatile
  5387  0A14  1509               	line	103
  5388                           ;ADC.c: 103:             TRISBbits.TRISB1 = 1;;ADC.c: 103:             TRISBbits.TRISB1 
                                 = 1;
  5389                           	bsf	status, 5	;RP0=1, select bank1
  5390  0A15  1683               	bcf	status, 6	;RP1=0, select bank1
  5391  0A16  1303               	bsf	(134)^080h,1	;volatile
  5392  0A17  1486               	line	104
  5393                           ;ADC.c: 104:             break;;ADC.c: 104:             break;
  5394                           	goto	l51
  5395  0A18  2A75               	line	105
  5396                           ;ADC.c: 105:         case 11:;ADC.c: 105:         case 11:
  5397                           	
  5398                           l48:	
  5399  0A19                     	line	106
  5400                           ;ADC.c: 106:             ADCON0bits.CHS0 = 1;;ADC.c: 106:             ADCON0bits.CHS0 = 
                                 1;
  5401                           	bcf	status, 5	;RP0=0, select bank0
  5402  0A19  1283               	bcf	status, 6	;RP1=0, select bank0
  5403  0A1A  1303               	bsf	(31),2	;volatile
  5404  0A1B  151F               	line	107
  5405                           ;ADC.c: 107:             ADCON0bits.CHS1 = 1;;ADC.c: 107:             ADCON0bits.CHS1 = 
                                 1;
  5406                           	bsf	(31),3	;volatile
  5407  0A1C  159F               	line	108
  5408                           ;ADC.c: 108:             ADCON0bits.CHS2 = 0;;ADC.c: 108:             ADCON0bits.CHS2 = 
                                 0;
  5409                           	bcf	(31),4	;volatile
  5410  0A1D  121F               	line	109
  5411                           ;ADC.c: 109:             ADCON0bits.CHS3 = 1;;ADC.c: 109:             ADCON0bits.CHS3 = 
                                 1;
  5412                           	bsf	(31),5	;volatile
  5413  0A1E  169F               	line	110
  5414                           ;ADC.c: 110:             ANSELHbits.ANS11 = 1;;ADC.c: 110:             ANSELHbits.ANS11 
                                 = 1;
  5415                           	bsf	status, 5	;RP0=1, select bank3
  5416  0A1F  1683               	bsf	status, 6	;RP1=1, select bank3
  5417  0A20  1703               	bsf	(393)^0180h,3	;volatile
  5418  0A21  1589               	line	111
  5419                           ;ADC.c: 111:             TRISBbits.TRISB4 = 1;;ADC.c: 111:             TRISBbits.TRISB4 
                                 = 1;
  5420                           	bsf	status, 5	;RP0=1, select bank1
  5421  0A22  1683               	bcf	status, 6	;RP1=0, select bank1
  5422  0A23  1303               	bsf	(134)^080h,4	;volatile
  5423  0A24  1606               	line	112
  5424                           ;ADC.c: 112:             break;;ADC.c: 112:             break;
  5425                           	goto	l51
  5426  0A25  2A75               	line	113
  5427                           ;ADC.c: 113:         case 12:;ADC.c: 113:         case 12:
  5428                           	
  5429                           l49:	
  5430  0A26                     	line	114
  5431                           ;ADC.c: 114:             ADCON0bits.CHS0 = 0;;ADC.c: 114:             ADCON0bits.CHS0 = 
                                 0;
  5432                           	bcf	status, 5	;RP0=0, select bank0
  5433  0A26  1283               	bcf	status, 6	;RP1=0, select bank0
  5434  0A27  1303               	bcf	(31),2	;volatile
  5435  0A28  111F               	line	115
  5436                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;;ADC.c: 115:             ADCON0bits.CHS1 = 
                                 0;
  5437                           	bcf	(31),3	;volatile
  5438  0A29  119F               	line	116
  5439                           ;ADC.c: 116:             ADCON0bits.CHS2 = 1;;ADC.c: 116:             ADCON0bits.CHS2 = 
                                 1;
  5440                           	bsf	(31),4	;volatile
  5441  0A2A  161F               	line	117
  5442                           ;ADC.c: 117:             ADCON0bits.CHS3 = 1;;ADC.c: 117:             ADCON0bits.CHS3 = 
                                 1;
  5443                           	bsf	(31),5	;volatile
  5444  0A2B  169F               	line	118
  5445                           ;ADC.c: 118:             ANSELHbits.ANS12 = 1;;ADC.c: 118:             ANSELHbits.ANS12 
                                 = 1;
  5446                           	bsf	status, 5	;RP0=1, select bank3
  5447  0A2C  1683               	bsf	status, 6	;RP1=1, select bank3
  5448  0A2D  1703               	bsf	(393)^0180h,4	;volatile
  5449  0A2E  1609               	line	119
  5450                           ;ADC.c: 119:             TRISBbits.TRISB0 = 1;;ADC.c: 119:             TRISBbits.TRISB0 
                                 = 1;
  5451                           	bsf	status, 5	;RP0=1, select bank1
  5452  0A2F  1683               	bcf	status, 6	;RP1=0, select bank1
  5453  0A30  1303               	bsf	(134)^080h,0	;volatile
  5454  0A31  1406               	line	120
  5455                           ;ADC.c: 120:             break;;ADC.c: 120:             break;
  5456                           	goto	l51
  5457  0A32  2A75               	line	121
  5458                           ;ADC.c: 121:         case 13:;ADC.c: 121:         case 13:
  5459                           	
  5460                           l50:	
  5461  0A33                     	line	122
  5462                           ;ADC.c: 122:             ADCON0bits.CHS0 = 1;;ADC.c: 122:             ADCON0bits.CHS0 = 
                                 1;
  5463                           	bcf	status, 5	;RP0=0, select bank0
  5464  0A33  1283               	bcf	status, 6	;RP1=0, select bank0
  5465  0A34  1303               	bsf	(31),2	;volatile
  5466  0A35  151F               	line	123
  5467                           ;ADC.c: 123:             ADCON0bits.CHS1 = 0;;ADC.c: 123:             ADCON0bits.CHS1 = 
                                 0;
  5468                           	bcf	(31),3	;volatile
  5469  0A36  119F               	line	124
  5470                           ;ADC.c: 124:             ADCON0bits.CHS2 = 1;;ADC.c: 124:             ADCON0bits.CHS2 = 
                                 1;
  5471                           	bsf	(31),4	;volatile
  5472  0A37  161F               	line	125
  5473                           ;ADC.c: 125:             ADCON0bits.CHS3 = 1;;ADC.c: 125:             ADCON0bits.CHS3 = 
                                 1;
  5474                           	bsf	(31),5	;volatile
  5475  0A38  169F               	line	126
  5476                           ;ADC.c: 126:             ANSELHbits.ANS13 = 1;;ADC.c: 126:             ANSELHbits.ANS13 
                                 = 1;
  5477                           	bsf	status, 5	;RP0=1, select bank3
  5478  0A39  1683               	bsf	status, 6	;RP1=1, select bank3
  5479  0A3A  1703               	bsf	(393)^0180h,5	;volatile
  5480  0A3B  1689               	line	127
  5481                           ;ADC.c: 127:             TRISBbits.TRISB5 = 1;;ADC.c: 127:             TRISBbits.TRISB5 
                                 = 1;
  5482                           	bsf	status, 5	;RP0=1, select bank1
  5483  0A3C  1683               	bcf	status, 6	;RP1=0, select bank1
  5484  0A3D  1303               	bsf	(134)^080h,5	;volatile
  5485  0A3E  1686               	line	128
  5486                           ;ADC.c: 128:             break;;ADC.c: 128:             break;
  5487                           	goto	l51
  5488  0A3F  2A75               	line	129
  5489                           	
  5490                           l2025:	
  5491  0A40                     ;ADC.c: 129:     };ADC.c: 129:     }
  5492                           	goto	l51
  5493  0A40  2A75               	
  5494                           l35:	
  5495  0A41                     	
  5496                           l2027:	
  5497  0A41                     	movf	(configCanal@channel),w
  5498  0A41  0875               	movwf	(??_configCanal+0)+0
  5499  0A42  00F3               	clrf	(??_configCanal+0)+0+1
  5500  0A43  01F4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5501                           ; Switch size 1, requested type "space"
  5502                           ; Number of cases is 1, Range of values is 0 to 0
  5503                           ; switch strategies available:
  5504                           ; Name         Instructions Cycles
  5505                           ; simple_byte            4     3 (average)
  5506                           ; direct_byte           11     8 (fixed)
  5507                           ; jumptable            260     6 (fixed)
  5508                           ;	Chosen strategy is simple_byte
  5509                           
  5510                           	movf 1+(??_configCanal+0)+0,w
  5511  0A44  0874               	opt asmopt_push
  5512                           	opt asmopt_off
  5513                           	xorlw	0^0	; case 0
  5514  0A45  3A00               	skipnz
  5515  0A46  1903               	goto	l3241
  5516  0A47  2A49               	goto	l51
  5517  0A48  2A75               	opt asmopt_pop
  5518                           	
  5519                           l3241:	
  5520  0A49                     ; Switch size 1, requested type "space"
  5521                           ; Number of cases is 14, Range of values is 0 to 13
  5522                           ; switch strategies available:
  5523                           ; Name         Instructions Cycles
  5524                           ; simple_byte           43    22 (average)
  5525                           ; direct_byte           50     8 (fixed)
  5526                           ; jumptable            260     6 (fixed)
  5527                           ;	Chosen strategy is simple_byte
  5528                           
  5529                           	movf 0+(??_configCanal+0)+0,w
  5530  0A49  0873               	opt asmopt_push
  5531                           	opt asmopt_off
  5532                           	xorlw	0^0	; case 0
  5533  0A4A  3A00               	skipnz
  5534  0A4B  1903               	goto	l36
  5535  0A4C  298A               	xorlw	1^0	; case 1
  5536  0A4D  3A01               	skipnz
  5537  0A4E  1903               	goto	l38
  5538  0A4F  2997               	xorlw	2^1	; case 2
  5539  0A50  3A03               	skipnz
  5540  0A51  1903               	goto	l39
  5541  0A52  29A4               	xorlw	3^2	; case 3
  5542  0A53  3A01               	skipnz
  5543  0A54  1903               	goto	l40
  5544  0A55  29B1               	xorlw	4^3	; case 4
  5545  0A56  3A07               	skipnz
  5546  0A57  1903               	goto	l41
  5547  0A58  29BE               	xorlw	5^4	; case 5
  5548  0A59  3A01               	skipnz
  5549  0A5A  1903               	goto	l42
  5550  0A5B  29CB               	xorlw	6^5	; case 6
  5551  0A5C  3A03               	skipnz
  5552  0A5D  1903               	goto	l43
  5553  0A5E  29D8               	xorlw	7^6	; case 7
  5554  0A5F  3A01               	skipnz
  5555  0A60  1903               	goto	l44
  5556  0A61  29E5               	xorlw	8^7	; case 8
  5557  0A62  3A0F               	skipnz
  5558  0A63  1903               	goto	l45
  5559  0A64  29F2               	xorlw	9^8	; case 9
  5560  0A65  3A01               	skipnz
  5561  0A66  1903               	goto	l46
  5562  0A67  29FF               	xorlw	10^9	; case 10
  5563  0A68  3A03               	skipnz
  5564  0A69  1903               	goto	l47
  5565  0A6A  2A0C               	xorlw	11^10	; case 11
  5566  0A6B  3A01               	skipnz
  5567  0A6C  1903               	goto	l48
  5568  0A6D  2A19               	xorlw	12^11	; case 12
  5569  0A6E  3A07               	skipnz
  5570  0A6F  1903               	goto	l49
  5571  0A70  2A26               	xorlw	13^12	; case 13
  5572  0A71  3A01               	skipnz
  5573  0A72  1903               	goto	l50
  5574  0A73  2A33               	goto	l51
  5575  0A74  2A75               	opt asmopt_pop
  5576                           
  5577                           	
  5578                           l37:	
  5579  0A75                     	line	131
  5580                           ;ADC.c: 130:     return;;ADC.c: 130:     return;
  5581                           	
  5582                           l51:	
  5583  0A75                     	return
  5584  0A75  0008               	opt stack 0
  5585                           GLOBAL	__end_of_configCanal
  5586                           	__end_of_configCanal:
  5587  0A76                     	signat	_configCanal,4217
  5588                           	global	_configADC
  5589                           
  5590 ;; *************** function _configADC *****************
  5591 ;; Defined at:
  5592 ;;		line 133 in file "ADC.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  FOSC            1    wreg     unsigned char 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  FOSC            1    5[COMMON] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      void 
  5599 ;; Registers used:
  5600 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5606 ;;      Params:         0       0       0       0       0
  5607 ;;      Locals:         1       0       0       0       0
  5608 ;;      Temps:          2       0       0       0       0
  5609 ;;      Totals:         3       0       0       0       0
  5610 ;;Total ram usage:        3 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_main
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5620                           	line	133
  5621                           global __ptext16
  5622                           __ptext16:	;psect for function _configADC
  5623  1618                     psect	text16
  5624                           	file	"ADC.c"
  5625                           	line	133
  5626                           	global	__size_of_configADC
  5627                           	__size_of_configADC	equ	__end_of_configADC-_configADC
  5628  0037                     	
  5629                           _configADC:	
  5630  1618                     ;incstack = 0
  5631                           	opt	stack 6
  5632                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  5633                           ;configADC@FOSC stored from wreg
  5634                           	movwf	(configADC@FOSC)
  5635  1618  00F5               	line	135
  5636                           	
  5637                           l2033:	
  5638  1619                     ;ADC.c: 135:     INTCONbits.PEIE=1;;ADC.c: 135:     INTCONbits.PEIE=1;
  5639                           	bsf	(11),6	;volatile
  5640  1619  170B               	line	136
  5641                           ;ADC.c: 136:     PIE1bits.ADIE = 1;;ADC.c: 136:     PIE1bits.ADIE = 1;
  5642                           	bsf	status, 5	;RP0=1, select bank1
  5643  161A  1683               	bcf	status, 6	;RP1=0, select bank1
  5644  161B  1303               	bsf	(140)^080h,6	;volatile
  5645  161C  170C               	line	137
  5646                           ;ADC.c: 137:     PIR1bits.ADIF=0;;ADC.c: 137:     PIR1bits.ADIF=0;
  5647                           	bcf	status, 5	;RP0=0, select bank0
  5648  161D  1283               	bcf	status, 6	;RP1=0, select bank0
  5649  161E  1303               	bcf	(12),6	;volatile
  5650  161F  130C               	line	138
  5651                           ;ADC.c: 138:     ADCON1bits.ADFM=0;;ADC.c: 138:     ADCON1bits.ADFM=0;
  5652                           	bsf	status, 5	;RP0=1, select bank1
  5653  1620  1683               	bcf	status, 6	;RP1=0, select bank1
  5654  1621  1303               	bcf	(159)^080h,7	;volatile
  5655  1622  139F               	line	139
  5656                           ;ADC.c: 139:     ADCON1bits.VCFG1=0;;ADC.c: 139:     ADCON1bits.VCFG1=0;
  5657                           	bcf	(159)^080h,5	;volatile
  5658  1623  129F               	line	140
  5659                           ;ADC.c: 140:     ADCON1bits.VCFG0=0;;ADC.c: 140:     ADCON1bits.VCFG0=0;
  5660                           	bcf	(159)^080h,4	;volatile
  5661  1624  121F               	line	141
  5662                           ;ADC.c: 141:     ADCON0bits.ADON=1;;ADC.c: 141:     ADCON0bits.ADON=1;
  5663                           	bcf	status, 5	;RP0=0, select bank0
  5664  1625  1283               	bcf	status, 6	;RP1=0, select bank0
  5665  1626  1303               	bsf	(31),0	;volatile
  5666  1627  141F               	line	143
  5667                           ;ADC.c: 143:     switch (FOSC){;ADC.c: 143:     switch (FOSC){
  5668                           	goto	l2037
  5669  1628  2E36               	line	144
  5670                           ;ADC.c: 144:         case 0:;ADC.c: 144:         case 0:
  5671                           	
  5672                           l55:	
  5673  1629                     	line	145
  5674                           ;ADC.c: 145:             ADCON0bits.ADCS1=0;;ADC.c: 145:             ADCON0bits.ADCS1=0;
                                 
  5675                           	bcf	(31),7	;volatile
  5676  1629  139F               	line	146
  5677                           ;ADC.c: 146:             ADCON0bits.ADCS0=0;;ADC.c: 146:             ADCON0bits.ADCS0=0;
                                 
  5678                           	bcf	(31),6	;volatile
  5679  162A  131F               	line	147
  5680                           ;ADC.c: 147:             break;;ADC.c: 147:             break;
  5681                           	goto	l56
  5682  162B  2E4C               	line	148
  5683                           ;ADC.c: 148:         case 1:;ADC.c: 148:         case 1:
  5684                           	
  5685                           l57:	
  5686  162C                     	line	149
  5687                           ;ADC.c: 149:             ADCON0bits.ADCS1=0;;ADC.c: 149:             ADCON0bits.ADCS1=0;
                                 
  5688                           	bcf	(31),7	;volatile
  5689  162C  139F               	line	150
  5690                           ;ADC.c: 150:             ADCON0bits.ADCS0=1;;ADC.c: 150:             ADCON0bits.ADCS0=1;
                                 
  5691                           	bsf	(31),6	;volatile
  5692  162D  171F               	line	151
  5693                           ;ADC.c: 151:             break;;ADC.c: 151:             break;
  5694                           	goto	l56
  5695  162E  2E4C               	line	152
  5696                           ;ADC.c: 152:         case 2:;ADC.c: 152:         case 2:
  5697                           	
  5698                           l58:	
  5699  162F                     	line	153
  5700                           ;ADC.c: 153:             ADCON0bits.ADCS1=1;;ADC.c: 153:             ADCON0bits.ADCS1=1;
                                 
  5701                           	bsf	(31),7	;volatile
  5702  162F  179F               	line	154
  5703                           ;ADC.c: 154:             ADCON0bits.ADCS0=0;;ADC.c: 154:             ADCON0bits.ADCS0=0;
                                 
  5704                           	bcf	(31),6	;volatile
  5705  1630  131F               	line	155
  5706                           ;ADC.c: 155:             break;;ADC.c: 155:             break;
  5707                           	goto	l56
  5708  1631  2E4C               	line	156
  5709                           ;ADC.c: 156:         case 3:;ADC.c: 156:         case 3:
  5710                           	
  5711                           l59:	
  5712  1632                     	line	157
  5713                           ;ADC.c: 157:             ADCON0bits.ADCS1=1;;ADC.c: 157:             ADCON0bits.ADCS1=1;
                                 
  5714                           	bsf	(31),7	;volatile
  5715  1632  179F               	line	158
  5716                           ;ADC.c: 158:             ADCON0bits.ADCS0=1;;ADC.c: 158:             ADCON0bits.ADCS0=1;
                                 
  5717                           	bsf	(31),6	;volatile
  5718  1633  171F               	line	159
  5719                           ;ADC.c: 159:             break;;ADC.c: 159:             break;
  5720                           	goto	l56
  5721  1634  2E4C               	line	160
  5722                           	
  5723                           l2035:	
  5724  1635                     ;ADC.c: 160:     };ADC.c: 160:     }
  5725                           	goto	l56
  5726  1635  2E4C               	
  5727                           l54:	
  5728  1636                     	
  5729                           l2037:	
  5730  1636                     	movf	(configADC@FOSC),w
  5731  1636  0875               	movwf	(??_configADC+0)+0
  5732  1637  00F3               	clrf	(??_configADC+0)+0+1
  5733  1638  01F4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5734                           ; Switch size 1, requested type "space"
  5735                           ; Number of cases is 1, Range of values is 0 to 0
  5736                           ; switch strategies available:
  5737                           ; Name         Instructions Cycles
  5738                           ; simple_byte            4     3 (average)
  5739                           ; direct_byte           11     8 (fixed)
  5740                           ; jumptable            260     6 (fixed)
  5741                           ;	Chosen strategy is simple_byte
  5742                           
  5743                           	movf 1+(??_configADC+0)+0,w
  5744  1639  0874               	opt asmopt_push
  5745                           	opt asmopt_off
  5746                           	xorlw	0^0	; case 0
  5747  163A  3A00               	skipnz
  5748  163B  1903               	goto	l3243
  5749  163C  2E3E               	goto	l56
  5750  163D  2E4C               	opt asmopt_pop
  5751                           	
  5752                           l3243:	
  5753  163E                     ; Switch size 1, requested type "space"
  5754                           ; Number of cases is 4, Range of values is 0 to 3
  5755                           ; switch strategies available:
  5756                           ; Name         Instructions Cycles
  5757                           ; simple_byte           13     7 (average)
  5758                           ; direct_byte           20     8 (fixed)
  5759                           ; jumptable            260     6 (fixed)
  5760                           ;	Chosen strategy is simple_byte
  5761                           
  5762                           	movf 0+(??_configADC+0)+0,w
  5763  163E  0873               	opt asmopt_push
  5764                           	opt asmopt_off
  5765                           	xorlw	0^0	; case 0
  5766  163F  3A00               	skipnz
  5767  1640  1903               	goto	l55
  5768  1641  2E29               	xorlw	1^0	; case 1
  5769  1642  3A01               	skipnz
  5770  1643  1903               	goto	l57
  5771  1644  2E2C               	xorlw	2^1	; case 2
  5772  1645  3A03               	skipnz
  5773  1646  1903               	goto	l58
  5774  1647  2E2F               	xorlw	3^2	; case 3
  5775  1648  3A01               	skipnz
  5776  1649  1903               	goto	l59
  5777  164A  2E32               	goto	l56
  5778  164B  2E4C               	opt asmopt_pop
  5779                           
  5780                           	
  5781                           l56:	
  5782  164C                     	line	162
  5783                           ;ADC.c: 162:     ADCON0bits.GO_DONE=1;;ADC.c: 162:     ADCON0bits.GO_DONE=1;
  5784                           	bsf	(31),1	;volatile
  5785  164C  149F               	line	163
  5786                           ;ADC.c: 163:     INTCONbits.GIE = 1;;ADC.c: 163:     INTCONbits.GIE = 1;
  5787                           	bsf	(11),7	;volatile
  5788  164D  178B               	line	165
  5789                           ;ADC.c: 164:     return;;ADC.c: 164:     return;
  5790                           	
  5791                           l60:	
  5792  164E                     	return
  5793  164E  0008               	opt stack 0
  5794                           GLOBAL	__end_of_configADC
  5795                           	__end_of_configADC:
  5796  164F                     	signat	_configADC,4217
  5797                           	global	_clcLCD
  5798                           
  5799 ;; *************** function _clcLCD *****************
  5800 ;; Defined at:
  5801 ;;		line 17 in file "LCD.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5815 ;;      Params:         0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0
  5818 ;;      Totals:         0       0       0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    2
  5822 ;; This function calls:
  5823 ;;		_cmdLCD
  5824 ;; This function is called by:
  5825 ;;		_main
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5829                           	file	"LCD.c"
  5830                           	line	17
  5831                           global __ptext17
  5832                           __ptext17:	;psect for function _clcLCD
  5833  154A                     psect	text17
  5834                           	file	"LCD.c"
  5835                           	line	17
  5836                           	global	__size_of_clcLCD
  5837                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  5838  0007                     	
  5839                           _clcLCD:	
  5840  154A                     ;incstack = 0
  5841                           	opt	stack 5
  5842                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  5843                           	line	18
  5844                           	
  5845                           l2969:	
  5846  154A                     ;LCD.c: 18:     cmdLCD(0x01);;LCD.c: 18:     cmdLCD(0x01);
  5847                           	movlw	low(01h)
  5848  154A  3001               	fcall	_cmdLCD
  5849  154B  160A  118A  259B  160A  118A  	line	19
  5850                           	
  5851                           l84:	
  5852  1550                     	return
  5853  1550  0008               	opt stack 0
  5854                           GLOBAL	__end_of_clcLCD
  5855                           	__end_of_clcLCD:
  5856  1551                     	signat	_clcLCD,89
  5857                           	global	_cmdLCD
  5858                           
  5859 ;; *************** function _cmdLCD *****************
  5860 ;; Defined at:
  5861 ;;		line 49 in file "LCD.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  cmd             1    wreg     unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  cmd             1    5[COMMON] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       0       0       0       0
  5876 ;;      Locals:         1       0       0       0       0
  5877 ;;      Temps:          2       0       0       0       0
  5878 ;;      Totals:         3       0       0       0       0
  5879 ;;Total ram usage:        3 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    1
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_setCursorLCD
  5886 ;;		_clcLCD
  5887 ;;		_initLCD
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5891                           	line	49
  5892                           global __ptext18
  5893                           __ptext18:	;psect for function _cmdLCD
  5894  159B                     psect	text18
  5895                           	file	"LCD.c"
  5896                           	line	49
  5897                           	global	__size_of_cmdLCD
  5898                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  5899  0014                     	
  5900                           _cmdLCD:	
  5901  159B                     ;incstack = 0
  5902                           	opt	stack 4
  5903                           ; Regs used in _cmdLCD: [wreg]
  5904                           ;cmdLCD@cmd stored from wreg
  5905                           	movwf	(cmdLCD@cmd)
  5906  159B  00F5               	line	50
  5907                           	
  5908                           l2881:	
  5909  159C                     ;LCD.c: 50:     RD0 = 0;;LCD.c: 50:     RD0 = 0;
  5910                           	bcf	status, 5	;RP0=0, select bank0
  5911  159C  1283               	bcf	status, 6	;RP1=0, select bank0
  5912  159D  1303               	bcf	(64/8),(64)&7	;volatile
  5913  159E  1008               	line	51
  5914                           	
  5915                           l2883:	
  5916  159F                     ;LCD.c: 51:  PORTB = cmd;;LCD.c: 51:  PORTB = cmd;
  5917                           	movf	(cmdLCD@cmd),w
  5918  159F  0875               	movwf	(6)	;volatile
  5919  15A0  0086               	line	52
  5920                           	
  5921                           l2885:	
  5922  15A1                     ;LCD.c: 52:  RD1 = 1;;LCD.c: 52:  RD1 = 1;
  5923                           	bsf	(65/8),(65)&7	;volatile
  5924  15A1  1488               	line	53
  5925                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));;LCD.c: 53:     _delay((un
                                 signed long)((4)*(4000000/4000.0)));
  5926                           	opt asmopt_push
  5927                           opt asmopt_off
  5928                           movlw	6
  5929  15A2  3006               movwf	((??_cmdLCD+0)+0+1),f
  5930  15A3  00F4               	movlw	48
  5931  15A4  3030               movwf	((??_cmdLCD+0)+0),f
  5932  15A5  00F3               	u4207:
  5933  15A6                     decfsz	((??_cmdLCD+0)+0),f
  5934  15A6  0BF3               	goto	u4207
  5935  15A7  2DA6               	decfsz	((??_cmdLCD+0)+0+1),f
  5936  15A8  0BF4               	goto	u4207
  5937  15A9  2DA6               	nop
  5938  15AA  0000               opt asmopt_pop
  5939                           
  5940                           	line	54
  5941                           	
  5942                           l2887:	
  5943  15AB                     ;LCD.c: 54:     RD1 = 0;;LCD.c: 54:     RD1 = 0;
  5944                           	bcf	status, 5	;RP0=0, select bank0
  5945  15AB  1283               	bcf	status, 6	;RP1=0, select bank0
  5946  15AC  1303               	bcf	(65/8),(65)&7	;volatile
  5947  15AD  1088               	line	55
  5948                           	
  5949                           l99:	
  5950  15AE                     	return
  5951  15AE  0008               	opt stack 0
  5952                           GLOBAL	__end_of_cmdLCD
  5953                           	__end_of_cmdLCD:
  5954  15AF                     	signat	_cmdLCD,4217
  5955                           	global	___xxtofl
  5956                           
  5957 ;; *************** function ___xxtofl *****************
  5958 ;; Defined at:
  5959 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  sign            1    wreg     unsigned char 
  5962 ;;  val             4    3[COMMON] long 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  sign            1    4[BANK0 ] unsigned char 
  5965 ;;  arg             4    6[BANK0 ] unsigned long 
  5966 ;;  exp             1    5[BANK0 ] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  4    3[COMMON] unsigned char 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         4       0       0       0       0
  5977 ;;      Locals:         0       6       0       0       0
  5978 ;;      Temps:          0       4       0       0       0
  5979 ;;      Totals:         4      10       0       0       0
  5980 ;;Total ram usage:       14 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    1
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_main
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  5990                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5991                           	line	10
  5992                           global __ptext19
  5993                           __ptext19:	;psect for function ___xxtofl
  5994  08C4                     psect	text19
  5995                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5996                           	line	10
  5997                           	global	__size_of___xxtofl
  5998                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  5999  00C4                     	
  6000                           ___xxtofl:	
  6001  08C4                     ;incstack = 0
  6002                           	opt	stack 6
  6003                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6004                           ;___xxtofl@sign stored from wreg
  6005                           	bcf	status, 5	;RP0=0, select bank0
  6006  08C4  1283               	bcf	status, 6	;RP1=0, select bank0
  6007  08C5  1303               	movwf	(___xxtofl@sign)
  6008  08C6  00A4               	line	15
  6009                           	
  6010                           l3045:	
  6011  08C7                     	movf	((___xxtofl@sign)),w
  6012  08C7  0824               	btfsc	status,2
  6013  08C8  1903               	goto	u3981
  6014  08C9  28CB               	goto	u3980
  6015  08CA  28CC               u3981:
  6016  08CB                     	goto	l3051
  6017  08CB  28E0               u3980:
  6018  08CC                     	
  6019                           l3047:	
  6020  08CC                     	btfss	(___xxtofl@val+3),7
  6021  08CC  1FF6               	goto	u3991
  6022  08CD  28CF               	goto	u3990
  6023  08CE  28D0               u3991:
  6024  08CF                     	goto	l3051
  6025  08CF  28E0               u3990:
  6026  08D0                     	line	16
  6027                           	
  6028                           l3049:	
  6029  08D0                     	comf	(___xxtofl@val)+0,w
  6030  08D0  0973               	movwf	(___xxtofl@arg)
  6031  08D1  00A6               	comf	(___xxtofl@val)+1,w
  6032  08D2  0974               	movwf	(___xxtofl@arg+1)
  6033  08D3  00A7               	comf	(___xxtofl@val)+2,w
  6034  08D4  0975               	movwf	(___xxtofl@arg+2)
  6035  08D5  00A8               	comf	(___xxtofl@val)+3,w
  6036  08D6  0976               	movwf	(___xxtofl@arg+3)
  6037  08D7  00A9               	incf	(___xxtofl@arg),f
  6038  08D8  0AA6               	skipnz
  6039  08D9  1903               	incf	(___xxtofl@arg+1),f
  6040  08DA  0AA7               	skipnz
  6041  08DB  1903               	incf	(___xxtofl@arg+2),f
  6042  08DC  0AA8               	skipnz
  6043  08DD  1903               	incf	(___xxtofl@arg+3),f
  6044  08DE  0AA9               	line	17
  6045                           	goto	l780
  6046  08DF  28E8               	line	18
  6047                           	
  6048                           l779:	
  6049  08E0                     	line	19
  6050                           	
  6051                           l3051:	
  6052  08E0                     	movf	(___xxtofl@val+3),w
  6053  08E0  0876               	movwf	(___xxtofl@arg+3)
  6054  08E1  00A9               	movf	(___xxtofl@val+2),w
  6055  08E2  0875               	movwf	(___xxtofl@arg+2)
  6056  08E3  00A8               	movf	(___xxtofl@val+1),w
  6057  08E4  0874               	movwf	(___xxtofl@arg+1)
  6058  08E5  00A7               	movf	(___xxtofl@val),w
  6059  08E6  0873               	movwf	(___xxtofl@arg)
  6060  08E7  00A6               
  6061                           	line	20
  6062                           	
  6063                           l780:	
  6064  08E8                     	line	21
  6065                           	movf	(___xxtofl@val+3),w
  6066  08E8  0876               	iorwf	(___xxtofl@val+2),w
  6067  08E9  0475               	iorwf	(___xxtofl@val+1),w
  6068  08EA  0474               	iorwf	(___xxtofl@val),w
  6069  08EB  0473               	skipz
  6070  08EC  1D03               	goto	u4001
  6071  08ED  28EF               	goto	u4000
  6072  08EE  28F0               u4001:
  6073  08EF                     	goto	l3057
  6074  08EF  28FA               u4000:
  6075  08F0                     	line	22
  6076                           	
  6077                           l3053:	
  6078  08F0                     	movlw	0x0
  6079  08F0  3000               	movwf	(?___xxtofl+3)
  6080  08F1  00F6               	movlw	0x0
  6081  08F2  3000               	movwf	(?___xxtofl+2)
  6082  08F3  00F5               	movlw	0x0
  6083  08F4  3000               	movwf	(?___xxtofl+1)
  6084  08F5  00F4               	movlw	0x0
  6085  08F6  3000               	movwf	(?___xxtofl)
  6086  08F7  00F3               
  6087                           	goto	l782
  6088  08F8  2987               	
  6089                           l3055:	
  6090  08F9                     	goto	l782
  6091  08F9  2987               	
  6092                           l781:	
  6093  08FA                     	line	23
  6094                           	
  6095                           l3057:	
  6096  08FA                     	movlw	low(096h)
  6097  08FA  3096               	movwf	(??___xxtofl+0)+0
  6098  08FB  00A0               	movf	(??___xxtofl+0)+0,w
  6099  08FC  0820               	movwf	(___xxtofl@exp)
  6100  08FD  00A5               	line	24
  6101                           	goto	l3061
  6102  08FE  290D               	
  6103                           l784:	
  6104  08FF                     	line	25
  6105                           	
  6106                           l3059:	
  6107  08FF                     	movlw	low(01h)
  6108  08FF  3001               	movwf	(??___xxtofl+0)+0
  6109  0900  00A0               	movf	(??___xxtofl+0)+0,w
  6110  0901  0820               	addwf	(___xxtofl@exp),f
  6111  0902  07A5               	line	26
  6112                           	movlw	01h
  6113  0903  3001               u4015:
  6114  0904                     	clrc
  6115  0904  1003               	rrf	(___xxtofl@arg+3),f
  6116  0905  0CA9               	rrf	(___xxtofl@arg+2),f
  6117  0906  0CA8               	rrf	(___xxtofl@arg+1),f
  6118  0907  0CA7               	rrf	(___xxtofl@arg),f
  6119  0908  0CA6               	addlw	-1
  6120  0909  3EFF               	skipz
  6121  090A  1D03               	goto	u4015
  6122  090B  2904               
  6123                           	goto	l3061
  6124  090C  290D               	line	27
  6125                           	
  6126                           l783:	
  6127  090D                     	line	24
  6128                           	
  6129                           l3061:	
  6130  090D                     	movlw	high highword(0FE000000h)
  6131  090D  30FE               	andwf	(___xxtofl@arg+3),w
  6132  090E  0529               	btfss	status,2
  6133  090F  1D03               	goto	u4021
  6134  0910  2912               	goto	u4020
  6135  0911  2913               u4021:
  6136  0912                     	goto	l3059
  6137  0912  28FF               u4020:
  6138  0913                     	goto	l786
  6139  0913  2930               	
  6140                           l785:	
  6141  0914                     	line	28
  6142                           	goto	l786
  6143  0914  2930               	
  6144                           l787:	
  6145  0915                     	line	29
  6146                           	
  6147                           l3063:	
  6148  0915                     	movlw	low(01h)
  6149  0915  3001               	movwf	(??___xxtofl+0)+0
  6150  0916  00A0               	movf	(??___xxtofl+0)+0,w
  6151  0917  0820               	addwf	(___xxtofl@exp),f
  6152  0918  07A5               	line	30
  6153                           	
  6154                           l3065:	
  6155  0919                     	movlw	01h
  6156  0919  3001               	addwf	(___xxtofl@arg),f
  6157  091A  07A6               	movlw	0
  6158  091B  3000               	skipnc
  6159  091C  1803               movlw 1
  6160  091D  3001               	addwf	(___xxtofl@arg+1),f
  6161  091E  07A7               	movlw	0
  6162  091F  3000               	skipnc
  6163  0920  1803               movlw 1
  6164  0921  3001               	addwf	(___xxtofl@arg+2),f
  6165  0922  07A8               	movlw	0
  6166  0923  3000               	skipnc
  6167  0924  1803               movlw 1
  6168  0925  3001               	addwf	(___xxtofl@arg+3),f
  6169  0926  07A9               	line	31
  6170                           	
  6171                           l3067:	
  6172  0927                     	movlw	01h
  6173  0927  3001               u4035:
  6174  0928                     	clrc
  6175  0928  1003               	rrf	(___xxtofl@arg+3),f
  6176  0929  0CA9               	rrf	(___xxtofl@arg+2),f
  6177  092A  0CA8               	rrf	(___xxtofl@arg+1),f
  6178  092B  0CA7               	rrf	(___xxtofl@arg),f
  6179  092C  0CA6               	addlw	-1
  6180  092D  3EFF               	skipz
  6181  092E  1D03               	goto	u4035
  6182  092F  2928               
  6183                           	line	32
  6184                           	
  6185                           l786:	
  6186  0930                     	line	28
  6187                           	movlw	high highword(0FF000000h)
  6188  0930  30FF               	andwf	(___xxtofl@arg+3),w
  6189  0931  0529               	btfss	status,2
  6190  0932  1D03               	goto	u4041
  6191  0933  2935               	goto	u4040
  6192  0934  2936               u4041:
  6193  0935                     	goto	l3063
  6194  0935  2915               u4040:
  6195  0936                     	goto	l3071
  6196  0936  2944               	
  6197                           l788:	
  6198  0937                     	line	33
  6199                           	goto	l3071
  6200  0937  2944               	
  6201                           l790:	
  6202  0938                     	line	34
  6203                           	
  6204                           l3069:	
  6205  0938                     	movlw	01h
  6206  0938  3001               	subwf	(___xxtofl@exp),f
  6207  0939  02A5               	line	35
  6208                           	movlw	01h
  6209  093A  3001               	movwf	(??___xxtofl+0)+0
  6210  093B  00A0               u4055:
  6211  093C                     	clrc
  6212  093C  1003               	rlf	(___xxtofl@arg),f
  6213  093D  0DA6               	rlf	(___xxtofl@arg+1),f
  6214  093E  0DA7               	rlf	(___xxtofl@arg+2),f
  6215  093F  0DA8               	rlf	(___xxtofl@arg+3),f
  6216  0940  0DA9               	decfsz	(??___xxtofl+0)+0
  6217  0941  0BA0               	goto	u4055
  6218  0942  293C               	goto	l3071
  6219  0943  2944               	line	36
  6220                           	
  6221                           l789:	
  6222  0944                     	line	33
  6223                           	
  6224                           l3071:	
  6225  0944                     	btfsc	(___xxtofl@arg+2),(23)&7
  6226  0944  1BA8               	goto	u4061
  6227  0945  2947               	goto	u4060
  6228  0946  2948               u4061:
  6229  0947                     	goto	l793
  6230  0947  294F               u4060:
  6231  0948                     	
  6232                           l3073:	
  6233  0948                     	movlw	low(02h)
  6234  0948  3002               	subwf	(___xxtofl@exp),w
  6235  0949  0225               	skipnc
  6236  094A  1803               	goto	u4071
  6237  094B  294D               	goto	u4070
  6238  094C  294E               u4071:
  6239  094D                     	goto	l3069
  6240  094D  2938               u4070:
  6241  094E                     	goto	l793
  6242  094E  294F               	
  6243                           l792:	
  6244  094F                     	
  6245                           l793:	
  6246  094F                     	line	37
  6247                           	btfsc	(___xxtofl@exp),(0)&7
  6248  094F  1825               	goto	u4081
  6249  0950  2952               	goto	u4080
  6250  0951  2953               u4081:
  6251  0952                     	goto	l794
  6252  0952  295B               u4080:
  6253  0953                     	line	38
  6254                           	
  6255                           l3075:	
  6256  0953                     	movlw	0FFh
  6257  0953  30FF               	andwf	(___xxtofl@arg),f
  6258  0954  05A6               	movlw	0FFh
  6259  0955  30FF               	andwf	(___xxtofl@arg+1),f
  6260  0956  05A7               	movlw	07Fh
  6261  0957  307F               	andwf	(___xxtofl@arg+2),f
  6262  0958  05A8               	movlw	0FFh
  6263  0959  30FF               	andwf	(___xxtofl@arg+3),f
  6264  095A  05A9               	
  6265                           l794:	
  6266  095B                     	line	39
  6267                           	clrc
  6268  095B  1003               	rrf	(___xxtofl@exp),f
  6269  095C  0CA5               
  6270                           	line	40
  6271                           	
  6272                           l3077:	
  6273  095D                     	movf	(___xxtofl@exp),w
  6274  095D  0825               	movwf	(??___xxtofl+0)+0
  6275  095E  00A0               	clrf	(??___xxtofl+0)+0+1
  6276  095F  01A1               	clrf	(??___xxtofl+0)+0+2
  6277  0960  01A2               	clrf	(??___xxtofl+0)+0+3
  6278  0961  01A3               	movlw	018h
  6279  0962  3018               u4095:
  6280  0963                     	clrc
  6281  0963  1003               	rlf	(??___xxtofl+0)+0,f
  6282  0964  0DA0               	rlf	(??___xxtofl+0)+1,f
  6283  0965  0DA1               	rlf	(??___xxtofl+0)+2,f
  6284  0966  0DA2               	rlf	(??___xxtofl+0)+3,f
  6285  0967  0DA3               u4090:
  6286  0968                     	addlw	-1
  6287  0968  3EFF               	skipz
  6288  0969  1D03               	goto	u4095
  6289  096A  2963               	movf	0+(??___xxtofl+0)+0,w
  6290  096B  0820               	iorwf	(___xxtofl@arg),f
  6291  096C  04A6               	movf	1+(??___xxtofl+0)+0,w
  6292  096D  0821               	iorwf	(___xxtofl@arg+1),f
  6293  096E  04A7               	movf	2+(??___xxtofl+0)+0,w
  6294  096F  0822               	iorwf	(___xxtofl@arg+2),f
  6295  0970  04A8               	movf	3+(??___xxtofl+0)+0,w
  6296  0971  0823               	iorwf	(___xxtofl@arg+3),f
  6297  0972  04A9               	line	41
  6298                           	
  6299                           l3079:	
  6300  0973                     	movf	((___xxtofl@sign)),w
  6301  0973  0824               	btfsc	status,2
  6302  0974  1903               	goto	u4101
  6303  0975  2977               	goto	u4100
  6304  0976  2978               u4101:
  6305  0977                     	goto	l3085
  6306  0977  297E               u4100:
  6307  0978                     	
  6308                           l3081:	
  6309  0978                     	btfss	(___xxtofl@val+3),7
  6310  0978  1FF6               	goto	u4111
  6311  0979  297B               	goto	u4110
  6312  097A  297C               u4111:
  6313  097B                     	goto	l3085
  6314  097B  297E               u4110:
  6315  097C                     	line	42
  6316                           	
  6317                           l3083:	
  6318  097C                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  6319  097C  17A9               	goto	l3085
  6320  097D  297E               	
  6321                           l795:	
  6322  097E                     	line	43
  6323                           	
  6324                           l3085:	
  6325  097E                     	movf	(___xxtofl@arg+3),w
  6326  097E  0829               	movwf	(?___xxtofl+3)
  6327  097F  00F6               	movf	(___xxtofl@arg+2),w
  6328  0980  0828               	movwf	(?___xxtofl+2)
  6329  0981  00F5               	movf	(___xxtofl@arg+1),w
  6330  0982  0827               	movwf	(?___xxtofl+1)
  6331  0983  00F4               	movf	(___xxtofl@arg),w
  6332  0984  0826               	movwf	(?___xxtofl)
  6333  0985  00F3               
  6334                           	goto	l782
  6335  0986  2987               	
  6336                           l3087:	
  6337  0987                     	line	44
  6338                           	
  6339                           l782:	
  6340  0987                     	return
  6341  0987  0008               	opt stack 0
  6342                           GLOBAL	__end_of___xxtofl
  6343                           	__end_of___xxtofl:
  6344  0988                     	signat	___xxtofl,8316
  6345                           	global	___fltol
  6346                           
  6347 ;; *************** function ___fltol *****************
  6348 ;; Defined at:
  6349 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  f1              4    3[COMMON] unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  exp1            1    6[BANK0 ] unsigned char 
  6354 ;;  sign1           1    5[BANK0 ] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  4    3[COMMON] long 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6364 ;;      Params:         4       0       0       0       0
  6365 ;;      Locals:         0       2       0       0       0
  6366 ;;      Temps:          0       5       0       0       0
  6367 ;;      Totals:         4       7       0       0       0
  6368 ;;Total ram usage:       11 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:    1
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_main
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6378                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  6379                           	line	43
  6380                           global __ptext20
  6381                           __ptext20:	;psect for function ___fltol
  6382  0828                     psect	text20
  6383                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  6384                           	line	43
  6385                           	global	__size_of___fltol
  6386                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  6387  009C                     	
  6388                           ___fltol:	
  6389  0828                     ;incstack = 0
  6390                           	opt	stack 6
  6391                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6392                           	line	47
  6393                           	
  6394                           l3009:	
  6395  0828                     	movf	(___fltol@f1),w
  6396  0828  0873               	bcf	status, 5	;RP0=0, select bank0
  6397  0829  1283               	bcf	status, 6	;RP1=0, select bank0
  6398  082A  1303               	movwf	(??___fltol+0)+0
  6399  082B  00A0               	movf	(___fltol@f1+1),w
  6400  082C  0874               	movwf	((??___fltol+0)+0+1)
  6401  082D  00A1               	movf	(___fltol@f1+2),w
  6402  082E  0875               	movwf	((??___fltol+0)+0+2)
  6403  082F  00A2               	movf	(___fltol@f1+3),w
  6404  0830  0876               	movwf	((??___fltol+0)+0+3)
  6405  0831  00A3               	clrc
  6406  0832  1003               	rlf	(??___fltol+0)+2,w
  6407  0833  0D22               	rlf	(??___fltol+0)+3,w
  6408  0834  0D23               	movwf	(??___fltol+4)+0
  6409  0835  00A4               	movf	(??___fltol+4)+0,w
  6410  0836  0824               	movwf	(___fltol@exp1)
  6411  0837  00A6               	movf	(((___fltol@exp1))),w
  6412  0838  0826               	btfss	status,2
  6413  0839  1D03               	goto	u3881
  6414  083A  283C               	goto	u3880
  6415  083B  283D               u3881:
  6416  083C                     	goto	l3015
  6417  083C  2847               u3880:
  6418  083D                     	line	48
  6419                           	
  6420                           l3011:	
  6421  083D                     	movlw	high highword(0)
  6422  083D  3000               	movwf	(?___fltol+3)
  6423  083E  00F6               	movlw	low highword(0)
  6424  083F  3000               	movwf	(?___fltol+2)
  6425  0840  00F5               	movlw	high(0)
  6426  0841  3000               	movwf	(?___fltol+1)
  6427  0842  00F4               	movlw	low(0)
  6428  0843  3000               	movwf	(?___fltol)
  6429  0844  00F3               
  6430                           	goto	l558
  6431  0845  28C3               	
  6432                           l3013:	
  6433  0846                     	goto	l558
  6434  0846  28C3               	
  6435                           l557:	
  6436  0847                     	line	49
  6437                           	
  6438                           l3015:	
  6439  0847                     	movf	(___fltol@f1),w
  6440  0847  0873               	movwf	(??___fltol+0)+0
  6441  0848  00A0               	movf	(___fltol@f1+1),w
  6442  0849  0874               	movwf	((??___fltol+0)+0+1)
  6443  084A  00A1               	movf	(___fltol@f1+2),w
  6444  084B  0875               	movwf	((??___fltol+0)+0+2)
  6445  084C  00A2               	movf	(___fltol@f1+3),w
  6446  084D  0876               	movwf	((??___fltol+0)+0+3)
  6447  084E  00A3               	movlw	01Fh
  6448  084F  301F               u3895:
  6449  0850                     	clrc
  6450  0850  1003               	rrf	(??___fltol+0)+3,f
  6451  0851  0CA3               	rrf	(??___fltol+0)+2,f
  6452  0852  0CA2               	rrf	(??___fltol+0)+1,f
  6453  0853  0CA1               	rrf	(??___fltol+0)+0,f
  6454  0854  0CA0               u3890:
  6455  0855                     	addlw	-1
  6456  0855  3EFF               	skipz
  6457  0856  1D03               	goto	u3895
  6458  0857  2850               	movf	0+(??___fltol+0)+0,w
  6459  0858  0820               	movwf	(??___fltol+4)+0
  6460  0859  00A4               	movf	(??___fltol+4)+0,w
  6461  085A  0824               	movwf	(___fltol@sign1)
  6462  085B  00A5               	line	50
  6463                           	
  6464                           l3017:	
  6465  085C                     	bsf	(___fltol@f1)+(23/8),(23)&7
  6466  085C  17F5               	line	51
  6467                           	
  6468                           l3019:	
  6469  085D                     	movlw	0FFh
  6470  085D  30FF               	andwf	(___fltol@f1),f
  6471  085E  05F3               	movlw	0FFh
  6472  085F  30FF               	andwf	(___fltol@f1+1),f
  6473  0860  05F4               	movlw	0FFh
  6474  0861  30FF               	andwf	(___fltol@f1+2),f
  6475  0862  05F5               	movlw	0
  6476  0863  3000               	andwf	(___fltol@f1+3),f
  6477  0864  05F6               	line	52
  6478                           	
  6479                           l3021:	
  6480  0865                     	movlw	096h
  6481  0865  3096               	subwf	(___fltol@exp1),f
  6482  0866  02A6               	line	53
  6483                           	
  6484                           l3023:	
  6485  0867                     	btfss	(___fltol@exp1),7
  6486  0867  1FA6               	goto	u3901
  6487  0868  286A               	goto	u3900
  6488  0869  286B               u3901:
  6489  086A                     	goto	l3033
  6490  086A  2890               u3900:
  6491  086B                     	line	54
  6492                           	
  6493                           l3025:	
  6494  086B                     	movf	(___fltol@exp1),w
  6495  086B  0826               	xorlw	80h
  6496  086C  3A80               	addlw	-((-23)^80h)
  6497  086D  3E97               	skipnc
  6498  086E  1803               	goto	u3911
  6499  086F  2871               	goto	u3910
  6500  0870  2872               u3911:
  6501  0871                     	goto	l3031
  6502  0871  287D               u3910:
  6503  0872                     	line	55
  6504                           	
  6505                           l3027:	
  6506  0872                     	movlw	high highword(0)
  6507  0872  3000               	movwf	(?___fltol+3)
  6508  0873  00F6               	movlw	low highword(0)
  6509  0874  3000               	movwf	(?___fltol+2)
  6510  0875  00F5               	movlw	high(0)
  6511  0876  3000               	movwf	(?___fltol+1)
  6512  0877  00F4               	movlw	low(0)
  6513  0878  3000               	movwf	(?___fltol)
  6514  0879  00F3               
  6515                           	goto	l558
  6516  087A  28C3               	
  6517                           l3029:	
  6518  087B                     	goto	l558
  6519  087B  28C3               	
  6520                           l560:	
  6521  087C                     	goto	l3031
  6522  087C  287D               	line	56
  6523                           	
  6524                           l561:	
  6525  087D                     	line	57
  6526                           	
  6527                           l3031:	
  6528  087D                     	movlw	01h
  6529  087D  3001               u3925:
  6530  087E                     	clrc
  6531  087E  1003               	rrf	(___fltol@f1+3),f
  6532  087F  0CF6               	rrf	(___fltol@f1+2),f
  6533  0880  0CF5               	rrf	(___fltol@f1+1),f
  6534  0881  0CF4               	rrf	(___fltol@f1),f
  6535  0882  0CF3               	addlw	-1
  6536  0883  3EFF               	skipz
  6537  0884  1D03               	goto	u3925
  6538  0885  287E               
  6539                           	line	58
  6540                           	movlw	low(01h)
  6541  0886  3001               	movwf	(??___fltol+0)+0
  6542  0887  00A0               	movf	(??___fltol+0)+0,w
  6543  0888  0820               	addwf	(___fltol@exp1),f
  6544  0889  07A6               	btfss	status,2
  6545  088A  1D03               	goto	u3931
  6546  088B  288D               	goto	u3930
  6547  088C  288E               u3931:
  6548  088D                     	goto	l3031
  6549  088D  287D               u3930:
  6550  088E                     	goto	l3041
  6551  088E  28B3               	
  6552                           l562:	
  6553  088F                     	line	59
  6554                           	goto	l3041
  6555  088F  28B3               	
  6556                           l559:	
  6557  0890                     	line	60
  6558                           	
  6559                           l3033:	
  6560  0890                     	movlw	low(020h)
  6561  0890  3020               	subwf	(___fltol@exp1),w
  6562  0891  0226               	skipc
  6563  0892  1C03               	goto	u3941
  6564  0893  2895               	goto	u3940
  6565  0894  2896               u3941:
  6566  0895                     	goto	l565
  6567  0895  28AC               u3940:
  6568  0896                     	line	61
  6569                           	
  6570                           l3035:	
  6571  0896                     	movlw	high highword(0)
  6572  0896  3000               	movwf	(?___fltol+3)
  6573  0897  00F6               	movlw	low highword(0)
  6574  0898  3000               	movwf	(?___fltol+2)
  6575  0899  00F5               	movlw	high(0)
  6576  089A  3000               	movwf	(?___fltol+1)
  6577  089B  00F4               	movlw	low(0)
  6578  089C  3000               	movwf	(?___fltol)
  6579  089D  00F3               
  6580                           	goto	l558
  6581  089E  28C3               	
  6582                           l3037:	
  6583  089F                     	goto	l558
  6584  089F  28C3               	
  6585                           l564:	
  6586  08A0                     	line	62
  6587                           	goto	l565
  6588  08A0  28AC               	
  6589                           l566:	
  6590  08A1                     	line	63
  6591                           	
  6592                           l3039:	
  6593  08A1                     	movlw	01h
  6594  08A1  3001               	movwf	(??___fltol+0)+0
  6595  08A2  00A0               u3955:
  6596  08A3                     	clrc
  6597  08A3  1003               	rlf	(___fltol@f1),f
  6598  08A4  0DF3               	rlf	(___fltol@f1+1),f
  6599  08A5  0DF4               	rlf	(___fltol@f1+2),f
  6600  08A6  0DF5               	rlf	(___fltol@f1+3),f
  6601  08A7  0DF6               	decfsz	(??___fltol+0)+0
  6602  08A8  0BA0               	goto	u3955
  6603  08A9  28A3               	line	64
  6604                           	movlw	01h
  6605  08AA  3001               	subwf	(___fltol@exp1),f
  6606  08AB  02A6               	line	65
  6607                           	
  6608                           l565:	
  6609  08AC                     	line	62
  6610                           	movf	((___fltol@exp1)),w
  6611  08AC  0826               	btfss	status,2
  6612  08AD  1D03               	goto	u3961
  6613  08AE  28B0               	goto	u3960
  6614  08AF  28B1               u3961:
  6615  08B0                     	goto	l3039
  6616  08B0  28A1               u3960:
  6617  08B1                     	goto	l3041
  6618  08B1  28B3               	
  6619                           l567:	
  6620  08B2                     	goto	l3041
  6621  08B2  28B3               	line	66
  6622                           	
  6623                           l563:	
  6624  08B3                     	line	67
  6625                           	
  6626                           l3041:	
  6627  08B3                     	movf	((___fltol@sign1)),w
  6628  08B3  0825               	btfsc	status,2
  6629  08B4  1903               	goto	u3971
  6630  08B5  28B7               	goto	u3970
  6631  08B6  28B8               u3971:
  6632  08B7                     	goto	l568
  6633  08B7  28C3               u3970:
  6634  08B8                     	line	68
  6635                           	
  6636                           l3043:	
  6637  08B8                     	comf	(___fltol@f1),f
  6638  08B8  09F3               	comf	(___fltol@f1+1),f
  6639  08B9  09F4               	comf	(___fltol@f1+2),f
  6640  08BA  09F5               	comf	(___fltol@f1+3),f
  6641  08BB  09F6               	incf	(___fltol@f1),f
  6642  08BC  0AF3               	skipnz
  6643  08BD  1903               	incf	(___fltol@f1+1),f
  6644  08BE  0AF4               	skipnz
  6645  08BF  1903               	incf	(___fltol@f1+2),f
  6646  08C0  0AF5               	skipnz
  6647  08C1  1903               	incf	(___fltol@f1+3),f
  6648  08C2  0AF6               	
  6649                           l568:	
  6650  08C3                     	line	69
  6651                           	line	70
  6652                           	
  6653                           l558:	
  6654  08C3                     	return
  6655  08C3  0008               	opt stack 0
  6656                           GLOBAL	__end_of___fltol
  6657                           	__end_of___fltol:
  6658  08C4                     	signat	___fltol,4220
  6659                           	global	___flneg
  6660                           
  6661 ;; *************** function ___flneg *****************
  6662 ;; Defined at:
  6663 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  f1              4   10[BANK0 ] long 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  4   10[BANK0 ] long 
  6670 ;; Registers used:
  6671 ;;		wreg
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6677 ;;      Params:         0       4       0       0       0
  6678 ;;      Locals:         0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0
  6680 ;;      Totals:         0       4       0       0       0
  6681 ;;Total ram usage:        4 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    1
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_main
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  6691                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  6692                           	line	15
  6693                           global __ptext21
  6694                           __ptext21:	;psect for function ___flneg
  6695  156D                     psect	text21
  6696                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  6697                           	line	15
  6698                           	global	__size_of___flneg
  6699                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  6700  000F                     	
  6701                           ___flneg:	
  6702  156D                     ;incstack = 0
  6703                           	opt	stack 6
  6704                           ; Regs used in ___flneg: [wreg]
  6705                           	line	17
  6706                           	
  6707                           l2133:	
  6708  156D                     	bcf	status, 5	;RP0=0, select bank0
  6709  156D  1283               	bcf	status, 6	;RP1=0, select bank0
  6710  156E  1303               	movf	(___flneg@f1+3),w
  6711  156F  082D               	iorwf	(___flneg@f1+2),w
  6712  1570  042C               	iorwf	(___flneg@f1+1),w
  6713  1571  042B               	iorwf	(___flneg@f1),w
  6714  1572  042A               	skipnz
  6715  1573  1903               	goto	u2221
  6716  1574  2D76               	goto	u2220
  6717  1575  2D77               u2221:
  6718  1576                     	goto	l2137
  6719  1576  2D7A               u2220:
  6720  1577                     	line	18
  6721                           	
  6722                           l2135:	
  6723  1577                     	movlw	080h
  6724  1577  3080               	xorwf	(___flneg@f1+3),f
  6725  1578  06AD               	goto	l2137
  6726  1579  2D7A               	
  6727                           l553:	
  6728  157A                     	line	19
  6729                           	
  6730                           l2137:	
  6731  157A                     	goto	l554
  6732  157A  2D7B               	
  6733                           l2139:	
  6734  157B                     	line	20
  6735                           	
  6736                           l554:	
  6737  157B                     	return
  6738  157B  0008               	opt stack 0
  6739                           GLOBAL	__end_of___flneg
  6740                           	__end_of___flneg:
  6741  157C                     	signat	___flneg,4220
  6742                           	global	___flmul
  6743                           
  6744 ;; *************** function ___flmul *****************
  6745 ;; Defined at:
  6746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  b               4   38[BANK0 ] long 
  6749 ;;  a               4   42[BANK0 ] long 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  prod            4   58[BANK0 ] struct .
  6752 ;;  grs             4   52[BANK0 ] unsigned long 
  6753 ;;  temp            2   62[BANK0 ] struct .
  6754 ;;  bexp            1   57[BANK0 ] unsigned char 
  6755 ;;  aexp            1   56[BANK0 ] unsigned char 
  6756 ;;  sign            1   51[BANK0 ] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  4   38[BANK0 ] unsigned char 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6766 ;;      Params:         0       8       0       0       0
  6767 ;;      Locals:         0      13       0       0       0
  6768 ;;      Temps:          0       5       0       0       0
  6769 ;;      Totals:         0      26       0       0       0
  6770 ;;Total ram usage:       26 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    2
  6773 ;; This function calls:
  6774 ;;		__Umul8_16
  6775 ;; This function is called by:
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
  6780                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6781                           	line	8
  6782                           global __ptext22
  6783                           __ptext22:	;psect for function ___flmul
  6784  0024                     psect	text22
  6785                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6786                           	line	8
  6787                           	global	__size_of___flmul
  6788                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  6789  0375                     	
  6790                           ___flmul:	
  6791  0024                     ;incstack = 0
  6792                           	opt	stack 5
  6793                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6794                           	line	17
  6795                           	
  6796                           l2513:	
  6797  0024                     	bcf	status, 5	;RP0=0, select bank0
  6798  0024  1283               	bcf	status, 6	;RP1=0, select bank0
  6799  0025  1303               	movf	0+(___flmul@b)+03h,w
  6800  0026  0849               	andlw	080h
  6801  0027  3980               	movwf	(??___flmul+0)+0
  6802  0028  00CE               	movf	(??___flmul+0)+0,w
  6803  0029  084E               	movwf	(___flmul@sign)
  6804  002A  00D3               	line	18
  6805                           	
  6806                           l2515:	
  6807  002B                     	movf	0+(___flmul@b)+03h,w
  6808  002B  0849               	movwf	(??___flmul+0)+0
  6809  002C  00CE               	addwf	(??___flmul+0)+0,w
  6810  002D  074E               	movwf	(??___flmul+1)+0
  6811  002E  00CF               	movf	(??___flmul+1)+0,w
  6812  002F  084F               	movwf	(___flmul@bexp)
  6813  0030  00D9               	line	19
  6814                           	
  6815                           l2517:	
  6816  0031                     	btfss	0+(___flmul@b)+02h,(7)&7
  6817  0031  1FC8               	goto	u3091
  6818  0032  2834               	goto	u3090
  6819  0033  2835               u3091:
  6820  0034                     	goto	l2521
  6821  0034  2837               u3090:
  6822  0035                     	line	20
  6823                           	
  6824                           l2519:	
  6825  0035                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  6826  0035  1459               	goto	l2521
  6827  0036  2837               	line	21
  6828                           	
  6829                           l750:	
  6830  0037                     	line	24
  6831                           	
  6832                           l2521:	
  6833  0037                     	movf	((___flmul@bexp)),w
  6834  0037  0859               	btfsc	status,2
  6835  0038  1903               	goto	u3101
  6836  0039  283B               	goto	u3100
  6837  003A  283C               u3101:
  6838  003B                     	goto	l2529
  6839  003B  284C               u3100:
  6840  003C                     	line	26
  6841                           	
  6842                           l2523:	
  6843  003C                     		incf	((___flmul@bexp)),w
  6844  003C  0A59               	btfss	status,2
  6845  003D  1D03               	goto	u3111
  6846  003E  2840               	goto	u3110
  6847  003F  2841               u3111:
  6848  0040                     	goto	l2527
  6849  0040  284A               u3110:
  6850  0041                     	line	28
  6851                           	
  6852                           l2525:	
  6853  0041                     	movlw	0x0
  6854  0041  3000               	movwf	(___flmul@b+3)
  6855  0042  00C9               	movlw	0x0
  6856  0043  3000               	movwf	(___flmul@b+2)
  6857  0044  00C8               	movlw	0x0
  6858  0045  3000               	movwf	(___flmul@b+1)
  6859  0046  00C7               	movlw	0x0
  6860  0047  3000               	movwf	(___flmul@b)
  6861  0048  00C6               
  6862                           	goto	l2527
  6863  0049  284A               	line	29
  6864                           	
  6865                           l752:	
  6866  004A                     	line	31
  6867                           	
  6868                           l2527:	
  6869  004A                     	bsf	(___flmul@b)+(23/8),(23)&7
  6870  004A  17C8               	line	33
  6871                           	goto	l2531
  6872  004B  2855               	line	34
  6873                           	
  6874                           l751:	
  6875  004C                     	line	36
  6876                           	
  6877                           l2529:	
  6878  004C                     	movlw	0x0
  6879  004C  3000               	movwf	(___flmul@b+3)
  6880  004D  00C9               	movlw	0x0
  6881  004E  3000               	movwf	(___flmul@b+2)
  6882  004F  00C8               	movlw	0x0
  6883  0050  3000               	movwf	(___flmul@b+1)
  6884  0051  00C7               	movlw	0x0
  6885  0052  3000               	movwf	(___flmul@b)
  6886  0053  00C6               
  6887                           	goto	l2531
  6888  0054  2855               	line	37
  6889                           	
  6890                           l753:	
  6891  0055                     	line	39
  6892                           	
  6893                           l2531:	
  6894  0055                     	movf	0+(___flmul@a)+03h,w
  6895  0055  084D               	andlw	080h
  6896  0056  3980               	movwf	(??___flmul+0)+0
  6897  0057  00CE               	movf	(??___flmul+0)+0,w
  6898  0058  084E               	xorwf	(___flmul@sign),f
  6899  0059  06D3               	line	40
  6900                           	
  6901                           l2533:	
  6902  005A                     	movf	0+(___flmul@a)+03h,w
  6903  005A  084D               	movwf	(??___flmul+0)+0
  6904  005B  00CE               	addwf	(??___flmul+0)+0,w
  6905  005C  074E               	movwf	(??___flmul+1)+0
  6906  005D  00CF               	movf	(??___flmul+1)+0,w
  6907  005E  084F               	movwf	(___flmul@aexp)
  6908  005F  00D8               	line	41
  6909                           	
  6910                           l2535:	
  6911  0060                     	btfss	0+(___flmul@a)+02h,(7)&7
  6912  0060  1FCC               	goto	u3121
  6913  0061  2863               	goto	u3120
  6914  0062  2864               u3121:
  6915  0063                     	goto	l2539
  6916  0063  2866               u3120:
  6917  0064                     	line	42
  6918                           	
  6919                           l2537:	
  6920  0064                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  6921  0064  1458               	goto	l2539
  6922  0065  2866               	line	43
  6923                           	
  6924                           l754:	
  6925  0066                     	line	45
  6926                           	
  6927                           l2539:	
  6928  0066                     	movf	((___flmul@aexp)),w
  6929  0066  0858               	btfsc	status,2
  6930  0067  1903               	goto	u3131
  6931  0068  286A               	goto	u3130
  6932  0069  286B               u3131:
  6933  006A                     	goto	l2547
  6934  006A  287B               u3130:
  6935  006B                     	line	48
  6936                           	
  6937                           l2541:	
  6938  006B                     		incf	((___flmul@aexp)),w
  6939  006B  0A58               	btfss	status,2
  6940  006C  1D03               	goto	u3141
  6941  006D  286F               	goto	u3140
  6942  006E  2870               u3141:
  6943  006F                     	goto	l2545
  6944  006F  2879               u3140:
  6945  0070                     	line	50
  6946                           	
  6947                           l2543:	
  6948  0070                     	movlw	0x0
  6949  0070  3000               	movwf	(___flmul@a+3)
  6950  0071  00CD               	movlw	0x0
  6951  0072  3000               	movwf	(___flmul@a+2)
  6952  0073  00CC               	movlw	0x0
  6953  0074  3000               	movwf	(___flmul@a+1)
  6954  0075  00CB               	movlw	0x0
  6955  0076  3000               	movwf	(___flmul@a)
  6956  0077  00CA               
  6957                           	goto	l2545
  6958  0078  2879               	line	51
  6959                           	
  6960                           l756:	
  6961  0079                     	line	53
  6962                           	
  6963                           l2545:	
  6964  0079                     	bsf	(___flmul@a)+(23/8),(23)&7
  6965  0079  17CC               	line	54
  6966                           	goto	l2549
  6967  007A  2884               	line	55
  6968                           	
  6969                           l755:	
  6970  007B                     	line	57
  6971                           	
  6972                           l2547:	
  6973  007B                     	movlw	0x0
  6974  007B  3000               	movwf	(___flmul@a+3)
  6975  007C  00CD               	movlw	0x0
  6976  007D  3000               	movwf	(___flmul@a+2)
  6977  007E  00CC               	movlw	0x0
  6978  007F  3000               	movwf	(___flmul@a+1)
  6979  0080  00CB               	movlw	0x0
  6980  0081  3000               	movwf	(___flmul@a)
  6981  0082  00CA               
  6982                           	goto	l2549
  6983  0083  2884               	line	58
  6984                           	
  6985                           l757:	
  6986  0084                     	line	65
  6987                           	
  6988                           l2549:	
  6989  0084                     	movf	((___flmul@aexp)),w
  6990  0084  0858               	btfsc	status,2
  6991  0085  1903               	goto	u3151
  6992  0086  2888               	goto	u3150
  6993  0087  2889               u3151:
  6994  0088                     	goto	l2553
  6995  0088  288F               u3150:
  6996  0089                     	
  6997                           l2551:	
  6998  0089                     	movf	((___flmul@bexp)),w
  6999  0089  0859               	btfss	status,2
  7000  008A  1D03               	goto	u3161
  7001  008B  288D               	goto	u3160
  7002  008C  288E               u3161:
  7003  008D                     	goto	l2557
  7004  008D  2899               u3160:
  7005  008E                     	goto	l2553
  7006  008E  288F               	
  7007                           l760:	
  7008  008F                     	line	66
  7009                           	
  7010                           l2553:	
  7011  008F                     	movlw	0x0
  7012  008F  3000               	movwf	(?___flmul+3)
  7013  0090  00C9               	movlw	0x0
  7014  0091  3000               	movwf	(?___flmul+2)
  7015  0092  00C8               	movlw	0x0
  7016  0093  3000               	movwf	(?___flmul+1)
  7017  0094  00C7               	movlw	0x0
  7018  0095  3000               	movwf	(?___flmul)
  7019  0096  00C6               
  7020                           	goto	l761
  7021  0097  2B98               	
  7022                           l2555:	
  7023  0098                     	goto	l761
  7024  0098  2B98               	line	67
  7025                           	
  7026                           l758:	
  7027  0099                     	line	119
  7028                           	
  7029                           l2557:	
  7030  0099                     	movf	(___flmul@b),w
  7031  0099  0846               	movwf	(??___flmul+0)+0
  7032  009A  00CE               	movf	(??___flmul+0)+0,w
  7033  009B  084E               	movwf	(__Umul8_16@multiplicand)
  7034  009C  00F3               	movf	0+(___flmul@a)+02h,w
  7035  009D  084C               	fcall	__Umul8_16
  7036  009E  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7037  00A3  0874               	bcf	status, 5	;RP0=0, select bank0
  7038  00A4  1283               	bcf	status, 6	;RP1=0, select bank0
  7039  00A5  1303               	movwf	(___flmul@temp+1)
  7040  00A6  00DF               	movf	(0+(?__Umul8_16)),w
  7041  00A7  0873               	movwf	(___flmul@temp)
  7042  00A8  00DE               	line	120
  7043                           	
  7044                           l2559:	
  7045  00A9                     	movf	(___flmul@temp),w
  7046  00A9  085E               	movwf	(??___flmul+0)+0
  7047  00AA  00CE               	clrf	(??___flmul+0)+0+1
  7048  00AB  01CF               	clrf	(??___flmul+0)+0+2
  7049  00AC  01D0               	clrf	(??___flmul+0)+0+3
  7050  00AD  01D1               	movf	3+(??___flmul+0)+0,w
  7051  00AE  0851               	movwf	(___flmul@grs+3)
  7052  00AF  00D7               	movf	2+(??___flmul+0)+0,w
  7053  00B0  0850               	movwf	(___flmul@grs+2)
  7054  00B1  00D6               	movf	1+(??___flmul+0)+0,w
  7055  00B2  084F               	movwf	(___flmul@grs+1)
  7056  00B3  00D5               	movf	0+(??___flmul+0)+0,w
  7057  00B4  084E               	movwf	(___flmul@grs)
  7058  00B5  00D4               
  7059                           	line	121
  7060                           	
  7061                           l2561:	
  7062  00B6                     	movf	0+(___flmul@temp)+01h,w
  7063  00B6  085F               	movwf	(??___flmul+0)+0
  7064  00B7  00CE               	clrf	(??___flmul+0)+0+1
  7065  00B8  01CF               	clrf	(??___flmul+0)+0+2
  7066  00B9  01D0               	clrf	(??___flmul+0)+0+3
  7067  00BA  01D1               	movf	3+(??___flmul+0)+0,w
  7068  00BB  0851               	movwf	(___flmul@prod+3)
  7069  00BC  00DD               	movf	2+(??___flmul+0)+0,w
  7070  00BD  0850               	movwf	(___flmul@prod+2)
  7071  00BE  00DC               	movf	1+(??___flmul+0)+0,w
  7072  00BF  084F               	movwf	(___flmul@prod+1)
  7073  00C0  00DB               	movf	0+(??___flmul+0)+0,w
  7074  00C1  084E               	movwf	(___flmul@prod)
  7075  00C2  00DA               
  7076                           	line	122
  7077                           	movf	0+(___flmul@b)+01h,w
  7078  00C3  0847               	movwf	(??___flmul+0)+0
  7079  00C4  00CE               	movf	(??___flmul+0)+0,w
  7080  00C5  084E               	movwf	(__Umul8_16@multiplicand)
  7081  00C6  00F3               	movf	0+(___flmul@a)+01h,w
  7082  00C7  084B               	fcall	__Umul8_16
  7083  00C8  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7084  00CD  0874               	bcf	status, 5	;RP0=0, select bank0
  7085  00CE  1283               	bcf	status, 6	;RP1=0, select bank0
  7086  00CF  1303               	movwf	(___flmul@temp+1)
  7087  00D0  00DF               	movf	(0+(?__Umul8_16)),w
  7088  00D1  0873               	movwf	(___flmul@temp)
  7089  00D2  00DE               	line	123
  7090                           	
  7091                           l2563:	
  7092  00D3                     	movf	(___flmul@temp),w
  7093  00D3  085E               	movwf	(??___flmul+0)+0
  7094  00D4  00CE               	clrf	(??___flmul+0)+0+1
  7095  00D5  01CF               	clrf	(??___flmul+0)+0+2
  7096  00D6  01D0               	clrf	(??___flmul+0)+0+3
  7097  00D7  01D1               	movf	0+(??___flmul+0)+0,w
  7098  00D8  084E               	addwf	(___flmul@grs),f
  7099  00D9  07D4               	movf	1+(??___flmul+0)+0,w
  7100  00DA  084F               	clrz
  7101  00DB  1103               	skipnc
  7102  00DC  1803               	addlw	1
  7103  00DD  3E01               	skipnz
  7104  00DE  1903               	goto	u3171
  7105  00DF  28E1               	addwf	(___flmul@grs+1),f
  7106  00E0  07D5               u3171:
  7107  00E1                     	movf	2+(??___flmul+0)+0,w
  7108  00E1  0850               	clrz
  7109  00E2  1103               	skipnc
  7110  00E3  1803               	addlw	1
  7111  00E4  3E01               	skipnz
  7112  00E5  1903               	goto	u3172
  7113  00E6  28E8               	addwf	(___flmul@grs+2),f
  7114  00E7  07D6               u3172:
  7115  00E8                     	movf	3+(??___flmul+0)+0,w
  7116  00E8  0851               	clrz
  7117  00E9  1103               	skipnc
  7118  00EA  1803               	addlw	1
  7119  00EB  3E01               	skipnz
  7120  00EC  1903               	goto	u3173
  7121  00ED  28EF               	addwf	(___flmul@grs+3),f
  7122  00EE  07D7               u3173:
  7123  00EF                     
  7124                           	line	124
  7125                           	
  7126                           l2565:	
  7127  00EF                     	movf	0+(___flmul@temp)+01h,w
  7128  00EF  085F               	movwf	(??___flmul+0)+0
  7129  00F0  00CE               	clrf	(??___flmul+0)+0+1
  7130  00F1  01CF               	clrf	(??___flmul+0)+0+2
  7131  00F2  01D0               	clrf	(??___flmul+0)+0+3
  7132  00F3  01D1               	movf	0+(??___flmul+0)+0,w
  7133  00F4  084E               	addwf	(___flmul@prod),f
  7134  00F5  07DA               	movf	1+(??___flmul+0)+0,w
  7135  00F6  084F               	clrz
  7136  00F7  1103               	skipnc
  7137  00F8  1803               	addlw	1
  7138  00F9  3E01               	skipnz
  7139  00FA  1903               	goto	u3181
  7140  00FB  28FD               	addwf	(___flmul@prod+1),f
  7141  00FC  07DB               u3181:
  7142  00FD                     	movf	2+(??___flmul+0)+0,w
  7143  00FD  0850               	clrz
  7144  00FE  1103               	skipnc
  7145  00FF  1803               	addlw	1
  7146  0100  3E01               	skipnz
  7147  0101  1903               	goto	u3182
  7148  0102  2904               	addwf	(___flmul@prod+2),f
  7149  0103  07DC               u3182:
  7150  0104                     	movf	3+(??___flmul+0)+0,w
  7151  0104  0851               	clrz
  7152  0105  1103               	skipnc
  7153  0106  1803               	addlw	1
  7154  0107  3E01               	skipnz
  7155  0108  1903               	goto	u3183
  7156  0109  290B               	addwf	(___flmul@prod+3),f
  7157  010A  07DD               u3183:
  7158  010B                     
  7159                           	line	125
  7160                           	movf	0+(___flmul@b)+02h,w
  7161  010B  0848               	movwf	(??___flmul+0)+0
  7162  010C  00CE               	movf	(??___flmul+0)+0,w
  7163  010D  084E               	movwf	(__Umul8_16@multiplicand)
  7164  010E  00F3               	movf	(___flmul@a),w
  7165  010F  084A               	fcall	__Umul8_16
  7166  0110  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7167  0115  0874               	bcf	status, 5	;RP0=0, select bank0
  7168  0116  1283               	bcf	status, 6	;RP1=0, select bank0
  7169  0117  1303               	movwf	(___flmul@temp+1)
  7170  0118  00DF               	movf	(0+(?__Umul8_16)),w
  7171  0119  0873               	movwf	(___flmul@temp)
  7172  011A  00DE               	line	126
  7173                           	
  7174                           l2567:	
  7175  011B                     	movf	(___flmul@temp),w
  7176  011B  085E               	movwf	(??___flmul+0)+0
  7177  011C  00CE               	clrf	(??___flmul+0)+0+1
  7178  011D  01CF               	clrf	(??___flmul+0)+0+2
  7179  011E  01D0               	clrf	(??___flmul+0)+0+3
  7180  011F  01D1               	movf	0+(??___flmul+0)+0,w
  7181  0120  084E               	addwf	(___flmul@grs),f
  7182  0121  07D4               	movf	1+(??___flmul+0)+0,w
  7183  0122  084F               	clrz
  7184  0123  1103               	skipnc
  7185  0124  1803               	addlw	1
  7186  0125  3E01               	skipnz
  7187  0126  1903               	goto	u3191
  7188  0127  2929               	addwf	(___flmul@grs+1),f
  7189  0128  07D5               u3191:
  7190  0129                     	movf	2+(??___flmul+0)+0,w
  7191  0129  0850               	clrz
  7192  012A  1103               	skipnc
  7193  012B  1803               	addlw	1
  7194  012C  3E01               	skipnz
  7195  012D  1903               	goto	u3192
  7196  012E  2930               	addwf	(___flmul@grs+2),f
  7197  012F  07D6               u3192:
  7198  0130                     	movf	3+(??___flmul+0)+0,w
  7199  0130  0851               	clrz
  7200  0131  1103               	skipnc
  7201  0132  1803               	addlw	1
  7202  0133  3E01               	skipnz
  7203  0134  1903               	goto	u3193
  7204  0135  2937               	addwf	(___flmul@grs+3),f
  7205  0136  07D7               u3193:
  7206  0137                     
  7207                           	line	127
  7208                           	
  7209                           l2569:	
  7210  0137                     	movf	0+(___flmul@temp)+01h,w
  7211  0137  085F               	movwf	(??___flmul+0)+0
  7212  0138  00CE               	clrf	(??___flmul+0)+0+1
  7213  0139  01CF               	clrf	(??___flmul+0)+0+2
  7214  013A  01D0               	clrf	(??___flmul+0)+0+3
  7215  013B  01D1               	movf	0+(??___flmul+0)+0,w
  7216  013C  084E               	addwf	(___flmul@prod),f
  7217  013D  07DA               	movf	1+(??___flmul+0)+0,w
  7218  013E  084F               	clrz
  7219  013F  1103               	skipnc
  7220  0140  1803               	addlw	1
  7221  0141  3E01               	skipnz
  7222  0142  1903               	goto	u3201
  7223  0143  2945               	addwf	(___flmul@prod+1),f
  7224  0144  07DB               u3201:
  7225  0145                     	movf	2+(??___flmul+0)+0,w
  7226  0145  0850               	clrz
  7227  0146  1103               	skipnc
  7228  0147  1803               	addlw	1
  7229  0148  3E01               	skipnz
  7230  0149  1903               	goto	u3202
  7231  014A  294C               	addwf	(___flmul@prod+2),f
  7232  014B  07DC               u3202:
  7233  014C                     	movf	3+(??___flmul+0)+0,w
  7234  014C  0851               	clrz
  7235  014D  1103               	skipnc
  7236  014E  1803               	addlw	1
  7237  014F  3E01               	skipnz
  7238  0150  1903               	goto	u3203
  7239  0151  2953               	addwf	(___flmul@prod+3),f
  7240  0152  07DD               u3203:
  7241  0153                     
  7242                           	line	128
  7243                           	
  7244                           l2571:	
  7245  0153                     	movlw	08h
  7246  0153  3008               	movwf	(??___flmul+0)+0
  7247  0154  00CE               u3215:
  7248  0155                     	clrc
  7249  0155  1003               	rlf	(___flmul@grs),f
  7250  0156  0DD4               	rlf	(___flmul@grs+1),f
  7251  0157  0DD5               	rlf	(___flmul@grs+2),f
  7252  0158  0DD6               	rlf	(___flmul@grs+3),f
  7253  0159  0DD7               	decfsz	(??___flmul+0)+0
  7254  015A  0BCE               	goto	u3215
  7255  015B  2955               	line	129
  7256                           	
  7257                           l2573:	
  7258  015C                     	movf	0+(___flmul@b)+01h,w
  7259  015C  0847               	movwf	(??___flmul+0)+0
  7260  015D  00CE               	movf	(??___flmul+0)+0,w
  7261  015E  084E               	movwf	(__Umul8_16@multiplicand)
  7262  015F  00F3               	movf	(___flmul@a),w
  7263  0160  084A               	fcall	__Umul8_16
  7264  0161  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7265  0166  0874               	bcf	status, 5	;RP0=0, select bank0
  7266  0167  1283               	bcf	status, 6	;RP1=0, select bank0
  7267  0168  1303               	movwf	(___flmul@temp+1)
  7268  0169  00DF               	movf	(0+(?__Umul8_16)),w
  7269  016A  0873               	movwf	(___flmul@temp)
  7270  016B  00DE               	line	130
  7271                           	
  7272                           l2575:	
  7273  016C                     	movf	(___flmul@temp),w
  7274  016C  085E               	movwf	((??___flmul+0)+0)
  7275  016D  00CE               	movf	(___flmul@temp+1),w
  7276  016E  085F               	movwf	((??___flmul+0)+0+1)
  7277  016F  00CF               	clrf	((??___flmul+0)+0+2)
  7278  0170  01D0               	clrf	((??___flmul+0)+0+3)
  7279  0171  01D1               	movf	0+(??___flmul+0)+0,w
  7280  0172  084E               	addwf	(___flmul@grs),f
  7281  0173  07D4               	movf	1+(??___flmul+0)+0,w
  7282  0174  084F               	clrz
  7283  0175  1103               	skipnc
  7284  0176  1803               	addlw	1
  7285  0177  3E01               	skipnz
  7286  0178  1903               	goto	u3221
  7287  0179  297B               	addwf	(___flmul@grs+1),f
  7288  017A  07D5               u3221:
  7289  017B                     	movf	2+(??___flmul+0)+0,w
  7290  017B  0850               	clrz
  7291  017C  1103               	skipnc
  7292  017D  1803               	addlw	1
  7293  017E  3E01               	skipnz
  7294  017F  1903               	goto	u3222
  7295  0180  2982               	addwf	(___flmul@grs+2),f
  7296  0181  07D6               u3222:
  7297  0182                     	movf	3+(??___flmul+0)+0,w
  7298  0182  0851               	clrz
  7299  0183  1103               	skipnc
  7300  0184  1803               	addlw	1
  7301  0185  3E01               	skipnz
  7302  0186  1903               	goto	u3223
  7303  0187  2989               	addwf	(___flmul@grs+3),f
  7304  0188  07D7               u3223:
  7305  0189                     
  7306                           	line	131
  7307                           	
  7308                           l2577:	
  7309  0189                     	movf	(___flmul@b),w
  7310  0189  0846               	movwf	(??___flmul+0)+0
  7311  018A  00CE               	movf	(??___flmul+0)+0,w
  7312  018B  084E               	movwf	(__Umul8_16@multiplicand)
  7313  018C  00F3               	movf	0+(___flmul@a)+01h,w
  7314  018D  084B               	fcall	__Umul8_16
  7315  018E  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7316  0193  0874               	bcf	status, 5	;RP0=0, select bank0
  7317  0194  1283               	bcf	status, 6	;RP1=0, select bank0
  7318  0195  1303               	movwf	(___flmul@temp+1)
  7319  0196  00DF               	movf	(0+(?__Umul8_16)),w
  7320  0197  0873               	movwf	(___flmul@temp)
  7321  0198  00DE               	line	132
  7322                           	
  7323                           l2579:	
  7324  0199                     	movf	(___flmul@temp),w
  7325  0199  085E               	movwf	((??___flmul+0)+0)
  7326  019A  00CE               	movf	(___flmul@temp+1),w
  7327  019B  085F               	movwf	((??___flmul+0)+0+1)
  7328  019C  00CF               	clrf	((??___flmul+0)+0+2)
  7329  019D  01D0               	clrf	((??___flmul+0)+0+3)
  7330  019E  01D1               	movf	0+(??___flmul+0)+0,w
  7331  019F  084E               	addwf	(___flmul@grs),f
  7332  01A0  07D4               	movf	1+(??___flmul+0)+0,w
  7333  01A1  084F               	clrz
  7334  01A2  1103               	skipnc
  7335  01A3  1803               	addlw	1
  7336  01A4  3E01               	skipnz
  7337  01A5  1903               	goto	u3231
  7338  01A6  29A8               	addwf	(___flmul@grs+1),f
  7339  01A7  07D5               u3231:
  7340  01A8                     	movf	2+(??___flmul+0)+0,w
  7341  01A8  0850               	clrz
  7342  01A9  1103               	skipnc
  7343  01AA  1803               	addlw	1
  7344  01AB  3E01               	skipnz
  7345  01AC  1903               	goto	u3232
  7346  01AD  29AF               	addwf	(___flmul@grs+2),f
  7347  01AE  07D6               u3232:
  7348  01AF                     	movf	3+(??___flmul+0)+0,w
  7349  01AF  0851               	clrz
  7350  01B0  1103               	skipnc
  7351  01B1  1803               	addlw	1
  7352  01B2  3E01               	skipnz
  7353  01B3  1903               	goto	u3233
  7354  01B4  29B6               	addwf	(___flmul@grs+3),f
  7355  01B5  07D7               u3233:
  7356  01B6                     
  7357                           	line	133
  7358                           	
  7359                           l2581:	
  7360  01B6                     	movlw	08h
  7361  01B6  3008               	movwf	(??___flmul+0)+0
  7362  01B7  00CE               u3245:
  7363  01B8                     	clrc
  7364  01B8  1003               	rlf	(___flmul@grs),f
  7365  01B9  0DD4               	rlf	(___flmul@grs+1),f
  7366  01BA  0DD5               	rlf	(___flmul@grs+2),f
  7367  01BB  0DD6               	rlf	(___flmul@grs+3),f
  7368  01BC  0DD7               	decfsz	(??___flmul+0)+0
  7369  01BD  0BCE               	goto	u3245
  7370  01BE  29B8               	line	134
  7371                           	movf	(___flmul@b),w
  7372  01BF  0846               	movwf	(??___flmul+0)+0
  7373  01C0  00CE               	movf	(??___flmul+0)+0,w
  7374  01C1  084E               	movwf	(__Umul8_16@multiplicand)
  7375  01C2  00F3               	movf	(___flmul@a),w
  7376  01C3  084A               	fcall	__Umul8_16
  7377  01C4  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7378  01C9  0874               	bcf	status, 5	;RP0=0, select bank0
  7379  01CA  1283               	bcf	status, 6	;RP1=0, select bank0
  7380  01CB  1303               	movwf	(___flmul@temp+1)
  7381  01CC  00DF               	movf	(0+(?__Umul8_16)),w
  7382  01CD  0873               	movwf	(___flmul@temp)
  7383  01CE  00DE               	line	135
  7384                           	
  7385                           l2583:	
  7386  01CF                     	movf	(___flmul@temp),w
  7387  01CF  085E               	movwf	((??___flmul+0)+0)
  7388  01D0  00CE               	movf	(___flmul@temp+1),w
  7389  01D1  085F               	movwf	((??___flmul+0)+0+1)
  7390  01D2  00CF               	clrf	((??___flmul+0)+0+2)
  7391  01D3  01D0               	clrf	((??___flmul+0)+0+3)
  7392  01D4  01D1               	movf	0+(??___flmul+0)+0,w
  7393  01D5  084E               	addwf	(___flmul@grs),f
  7394  01D6  07D4               	movf	1+(??___flmul+0)+0,w
  7395  01D7  084F               	clrz
  7396  01D8  1103               	skipnc
  7397  01D9  1803               	addlw	1
  7398  01DA  3E01               	skipnz
  7399  01DB  1903               	goto	u3251
  7400  01DC  29DE               	addwf	(___flmul@grs+1),f
  7401  01DD  07D5               u3251:
  7402  01DE                     	movf	2+(??___flmul+0)+0,w
  7403  01DE  0850               	clrz
  7404  01DF  1103               	skipnc
  7405  01E0  1803               	addlw	1
  7406  01E1  3E01               	skipnz
  7407  01E2  1903               	goto	u3252
  7408  01E3  29E5               	addwf	(___flmul@grs+2),f
  7409  01E4  07D6               u3252:
  7410  01E5                     	movf	3+(??___flmul+0)+0,w
  7411  01E5  0851               	clrz
  7412  01E6  1103               	skipnc
  7413  01E7  1803               	addlw	1
  7414  01E8  3E01               	skipnz
  7415  01E9  1903               	goto	u3253
  7416  01EA  29EC               	addwf	(___flmul@grs+3),f
  7417  01EB  07D7               u3253:
  7418  01EC                     
  7419                           	line	136
  7420                           	
  7421                           l2585:	
  7422  01EC                     	movf	0+(___flmul@b)+01h,w
  7423  01EC  0847               	movwf	(??___flmul+0)+0
  7424  01ED  00CE               	movf	(??___flmul+0)+0,w
  7425  01EE  084E               	movwf	(__Umul8_16@multiplicand)
  7426  01EF  00F3               	movf	0+(___flmul@a)+02h,w
  7427  01F0  084C               	fcall	__Umul8_16
  7428  01F1  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7429  01F6  0874               	bcf	status, 5	;RP0=0, select bank0
  7430  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  7431  01F8  1303               	movwf	(___flmul@temp+1)
  7432  01F9  00DF               	movf	(0+(?__Umul8_16)),w
  7433  01FA  0873               	movwf	(___flmul@temp)
  7434  01FB  00DE               	line	137
  7435                           	movf	(___flmul@temp),w
  7436  01FC  085E               	movwf	((??___flmul+0)+0)
  7437  01FD  00CE               	movf	(___flmul@temp+1),w
  7438  01FE  085F               	movwf	((??___flmul+0)+0+1)
  7439  01FF  00CF               	clrf	((??___flmul+0)+0+2)
  7440  0200  01D0               	clrf	((??___flmul+0)+0+3)
  7441  0201  01D1               	movf	0+(??___flmul+0)+0,w
  7442  0202  084E               	addwf	(___flmul@prod),f
  7443  0203  07DA               	movf	1+(??___flmul+0)+0,w
  7444  0204  084F               	clrz
  7445  0205  1103               	skipnc
  7446  0206  1803               	addlw	1
  7447  0207  3E01               	skipnz
  7448  0208  1903               	goto	u3261
  7449  0209  2A0B               	addwf	(___flmul@prod+1),f
  7450  020A  07DB               u3261:
  7451  020B                     	movf	2+(??___flmul+0)+0,w
  7452  020B  0850               	clrz
  7453  020C  1103               	skipnc
  7454  020D  1803               	addlw	1
  7455  020E  3E01               	skipnz
  7456  020F  1903               	goto	u3262
  7457  0210  2A12               	addwf	(___flmul@prod+2),f
  7458  0211  07DC               u3262:
  7459  0212                     	movf	3+(??___flmul+0)+0,w
  7460  0212  0851               	clrz
  7461  0213  1103               	skipnc
  7462  0214  1803               	addlw	1
  7463  0215  3E01               	skipnz
  7464  0216  1903               	goto	u3263
  7465  0217  2A19               	addwf	(___flmul@prod+3),f
  7466  0218  07DD               u3263:
  7467  0219                     
  7468                           	line	138
  7469                           	
  7470                           l2587:	
  7471  0219                     	movf	0+(___flmul@b)+02h,w
  7472  0219  0848               	movwf	(??___flmul+0)+0
  7473  021A  00CE               	movf	(??___flmul+0)+0,w
  7474  021B  084E               	movwf	(__Umul8_16@multiplicand)
  7475  021C  00F3               	movf	0+(___flmul@a)+01h,w
  7476  021D  084B               	fcall	__Umul8_16
  7477  021E  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7478  0223  0874               	bcf	status, 5	;RP0=0, select bank0
  7479  0224  1283               	bcf	status, 6	;RP1=0, select bank0
  7480  0225  1303               	movwf	(___flmul@temp+1)
  7481  0226  00DF               	movf	(0+(?__Umul8_16)),w
  7482  0227  0873               	movwf	(___flmul@temp)
  7483  0228  00DE               	line	139
  7484                           	
  7485                           l2589:	
  7486  0229                     	movf	(___flmul@temp),w
  7487  0229  085E               	movwf	((??___flmul+0)+0)
  7488  022A  00CE               	movf	(___flmul@temp+1),w
  7489  022B  085F               	movwf	((??___flmul+0)+0+1)
  7490  022C  00CF               	clrf	((??___flmul+0)+0+2)
  7491  022D  01D0               	clrf	((??___flmul+0)+0+3)
  7492  022E  01D1               	movf	0+(??___flmul+0)+0,w
  7493  022F  084E               	addwf	(___flmul@prod),f
  7494  0230  07DA               	movf	1+(??___flmul+0)+0,w
  7495  0231  084F               	clrz
  7496  0232  1103               	skipnc
  7497  0233  1803               	addlw	1
  7498  0234  3E01               	skipnz
  7499  0235  1903               	goto	u3271
  7500  0236  2A38               	addwf	(___flmul@prod+1),f
  7501  0237  07DB               u3271:
  7502  0238                     	movf	2+(??___flmul+0)+0,w
  7503  0238  0850               	clrz
  7504  0239  1103               	skipnc
  7505  023A  1803               	addlw	1
  7506  023B  3E01               	skipnz
  7507  023C  1903               	goto	u3272
  7508  023D  2A3F               	addwf	(___flmul@prod+2),f
  7509  023E  07DC               u3272:
  7510  023F                     	movf	3+(??___flmul+0)+0,w
  7511  023F  0851               	clrz
  7512  0240  1103               	skipnc
  7513  0241  1803               	addlw	1
  7514  0242  3E01               	skipnz
  7515  0243  1903               	goto	u3273
  7516  0244  2A46               	addwf	(___flmul@prod+3),f
  7517  0245  07DD               u3273:
  7518  0246                     
  7519                           	line	140
  7520                           	movf	0+(___flmul@b)+02h,w
  7521  0246  0848               	movwf	(??___flmul+0)+0
  7522  0247  00CE               	movf	(??___flmul+0)+0,w
  7523  0248  084E               	movwf	(__Umul8_16@multiplicand)
  7524  0249  00F3               	movf	0+(___flmul@a)+02h,w
  7525  024A  084C               	fcall	__Umul8_16
  7526  024B  160A  118A  25EC  120A  118A  	movf	(1+(?__Umul8_16)),w
  7527  0250  0874               	bcf	status, 5	;RP0=0, select bank0
  7528  0251  1283               	bcf	status, 6	;RP1=0, select bank0
  7529  0252  1303               	movwf	(___flmul@temp+1)
  7530  0253  00DF               	movf	(0+(?__Umul8_16)),w
  7531  0254  0873               	movwf	(___flmul@temp)
  7532  0255  00DE               	line	141
  7533                           	
  7534                           l2591:	
  7535  0256                     	movf	(___flmul@temp),w
  7536  0256  085E               	movwf	((??___flmul+0)+0)
  7537  0257  00CE               	movf	(___flmul@temp+1),w
  7538  0258  085F               	movwf	((??___flmul+0)+0+1)
  7539  0259  00CF               	clrf	((??___flmul+0)+0+2)
  7540  025A  01D0               	clrf	((??___flmul+0)+0+3)
  7541  025B  01D1               	movlw	08h
  7542  025C  3008               u3285:
  7543  025D                     	clrc
  7544  025D  1003               	rlf	(??___flmul+0)+0,f
  7545  025E  0DCE               	rlf	(??___flmul+0)+1,f
  7546  025F  0DCF               	rlf	(??___flmul+0)+2,f
  7547  0260  0DD0               	rlf	(??___flmul+0)+3,f
  7548  0261  0DD1               u3280:
  7549  0262                     	addlw	-1
  7550  0262  3EFF               	skipz
  7551  0263  1D03               	goto	u3285
  7552  0264  2A5D               	movf	0+(??___flmul+0)+0,w
  7553  0265  084E               	addwf	(___flmul@prod),f
  7554  0266  07DA               	movf	1+(??___flmul+0)+0,w
  7555  0267  084F               	clrz
  7556  0268  1103               	skipnc
  7557  0269  1803               	addlw	1
  7558  026A  3E01               	skipnz
  7559  026B  1903               	goto	u3291
  7560  026C  2A6E               	addwf	(___flmul@prod+1),f
  7561  026D  07DB               u3291:
  7562  026E                     	movf	2+(??___flmul+0)+0,w
  7563  026E  0850               	clrz
  7564  026F  1103               	skipnc
  7565  0270  1803               	addlw	1
  7566  0271  3E01               	skipnz
  7567  0272  1903               	goto	u3292
  7568  0273  2A75               	addwf	(___flmul@prod+2),f
  7569  0274  07DC               u3292:
  7570  0275                     	movf	3+(??___flmul+0)+0,w
  7571  0275  0851               	clrz
  7572  0276  1103               	skipnc
  7573  0277  1803               	addlw	1
  7574  0278  3E01               	skipnz
  7575  0279  1903               	goto	u3293
  7576  027A  2A7C               	addwf	(___flmul@prod+3),f
  7577  027B  07DD               u3293:
  7578  027C                     
  7579                           	line	145
  7580                           	
  7581                           l2593:	
  7582  027C                     	movf	(___flmul@grs),w
  7583  027C  0854               	movwf	(??___flmul+0)+0
  7584  027D  00CE               	movf	(___flmul@grs+1),w
  7585  027E  0855               	movwf	((??___flmul+0)+0+1)
  7586  027F  00CF               	movf	(___flmul@grs+2),w
  7587  0280  0856               	movwf	((??___flmul+0)+0+2)
  7588  0281  00D0               	movf	(___flmul@grs+3),w
  7589  0282  0857               	movwf	((??___flmul+0)+0+3)
  7590  0283  00D1               	movlw	018h
  7591  0284  3018               u3305:
  7592  0285                     	clrc
  7593  0285  1003               	rrf	(??___flmul+0)+3,f
  7594  0286  0CD1               	rrf	(??___flmul+0)+2,f
  7595  0287  0CD0               	rrf	(??___flmul+0)+1,f
  7596  0288  0CCF               	rrf	(??___flmul+0)+0,f
  7597  0289  0CCE               u3300:
  7598  028A                     	addlw	-1
  7599  028A  3EFF               	skipz
  7600  028B  1D03               	goto	u3305
  7601  028C  2A85               	movf	0+(??___flmul+0)+0,w
  7602  028D  084E               	addwf	(___flmul@prod),f
  7603  028E  07DA               	movf	1+(??___flmul+0)+0,w
  7604  028F  084F               	clrz
  7605  0290  1103               	skipnc
  7606  0291  1803               	addlw	1
  7607  0292  3E01               	skipnz
  7608  0293  1903               	goto	u3311
  7609  0294  2A96               	addwf	(___flmul@prod+1),f
  7610  0295  07DB               u3311:
  7611  0296                     	movf	2+(??___flmul+0)+0,w
  7612  0296  0850               	clrz
  7613  0297  1103               	skipnc
  7614  0298  1803               	addlw	1
  7615  0299  3E01               	skipnz
  7616  029A  1903               	goto	u3312
  7617  029B  2A9D               	addwf	(___flmul@prod+2),f
  7618  029C  07DC               u3312:
  7619  029D                     	movf	3+(??___flmul+0)+0,w
  7620  029D  0851               	clrz
  7621  029E  1103               	skipnc
  7622  029F  1803               	addlw	1
  7623  02A0  3E01               	skipnz
  7624  02A1  1903               	goto	u3313
  7625  02A2  2AA4               	addwf	(___flmul@prod+3),f
  7626  02A3  07DD               u3313:
  7627  02A4                     
  7628                           	line	146
  7629                           	
  7630                           l2595:	
  7631  02A4                     	movlw	08h
  7632  02A4  3008               	movwf	(??___flmul+0)+0
  7633  02A5  00CE               u3325:
  7634  02A6                     	clrc
  7635  02A6  1003               	rlf	(___flmul@grs),f
  7636  02A7  0DD4               	rlf	(___flmul@grs+1),f
  7637  02A8  0DD5               	rlf	(___flmul@grs+2),f
  7638  02A9  0DD6               	rlf	(___flmul@grs+3),f
  7639  02AA  0DD7               	decfsz	(??___flmul+0)+0
  7640  02AB  0BCE               	goto	u3325
  7641  02AC  2AA6               	line	149
  7642                           	
  7643                           l2597:	
  7644  02AD                     	movf	(___flmul@bexp),w
  7645  02AD  0859               	addwf	(___flmul@aexp),w
  7646  02AE  0758               	movwf	(??___flmul+0)+0
  7647  02AF  00CE               	clrf	(??___flmul+0)+0+1
  7648  02B0  01CF               	rlf	1+(??___flmul+0)+0,f
  7649  02B1  0DCF               	
  7650                           	movf	0+(??___flmul+0)+0,w
  7651  02B2  084E               	addlw	low(-126)
  7652  02B3  3E82               	movwf	(___flmul@temp)
  7653  02B4  00DE               	movf	1+(??___flmul+0)+0,w
  7654  02B5  084F               	skipnc
  7655  02B6  1803               	addlw	1
  7656  02B7  3E01               	addlw	high(-126)
  7657  02B8  3EFF               	movwf	1+(___flmul@temp)
  7658  02B9  00DF               	line	152
  7659                           	goto	l2609
  7660  02BA  2ADA               	
  7661                           l763:	
  7662  02BB                     	line	153
  7663                           	
  7664                           l2599:	
  7665  02BB                     	movlw	01h
  7666  02BB  3001               	movwf	(??___flmul+0)+0
  7667  02BC  00CE               u3335:
  7668  02BD                     	clrc
  7669  02BD  1003               	rlf	(___flmul@prod),f
  7670  02BE  0DDA               	rlf	(___flmul@prod+1),f
  7671  02BF  0DDB               	rlf	(___flmul@prod+2),f
  7672  02C0  0DDC               	rlf	(___flmul@prod+3),f
  7673  02C1  0DDD               	decfsz	(??___flmul+0)+0
  7674  02C2  0BCE               	goto	u3335
  7675  02C3  2ABD               	line	154
  7676                           	
  7677                           l2601:	
  7678  02C4                     	btfss	(___flmul@grs+3),(31)&7
  7679  02C4  1FD7               	goto	u3341
  7680  02C5  2AC7               	goto	u3340
  7681  02C6  2AC8               u3341:
  7682  02C7                     	goto	l2605
  7683  02C7  2ACA               u3340:
  7684  02C8                     	line	155
  7685                           	
  7686                           l2603:	
  7687  02C8                     	bsf	(___flmul@prod)+(0/8),(0)&7
  7688  02C8  145A               	goto	l2605
  7689  02C9  2ACA               	line	156
  7690                           	
  7691                           l764:	
  7692  02CA                     	line	157
  7693                           	
  7694                           l2605:	
  7695  02CA                     	movlw	01h
  7696  02CA  3001               	movwf	(??___flmul+0)+0
  7697  02CB  00CE               u3355:
  7698  02CC                     	clrc
  7699  02CC  1003               	rlf	(___flmul@grs),f
  7700  02CD  0DD4               	rlf	(___flmul@grs+1),f
  7701  02CE  0DD5               	rlf	(___flmul@grs+2),f
  7702  02CF  0DD6               	rlf	(___flmul@grs+3),f
  7703  02D0  0DD7               	decfsz	(??___flmul+0)+0
  7704  02D1  0BCE               	goto	u3355
  7705  02D2  2ACC               	line	158
  7706                           	
  7707                           l2607:	
  7708  02D3                     	movlw	0FFh
  7709  02D3  30FF               	addwf	(___flmul@temp),f
  7710  02D4  07DE               	skipnc
  7711  02D5  1803               	incf	(___flmul@temp+1),f
  7712  02D6  0ADF               	movlw	0FFh
  7713  02D7  30FF               	addwf	(___flmul@temp+1),f
  7714  02D8  07DF               	goto	l2609
  7715  02D9  2ADA               	line	159
  7716                           	
  7717                           l762:	
  7718  02DA                     	line	152
  7719                           	
  7720                           l2609:	
  7721  02DA                     	btfss	(___flmul@prod+2),(23)&7
  7722  02DA  1FDC               	goto	u3361
  7723  02DB  2ADD               	goto	u3360
  7724  02DC  2ADE               u3361:
  7725  02DD                     	goto	l2599
  7726  02DD  2ABB               u3360:
  7727  02DE                     	goto	l2611
  7728  02DE  2ADF               	
  7729                           l765:	
  7730  02DF                     	line	163
  7731                           	
  7732                           l2611:	
  7733  02DF                     	clrf	(___flmul@aexp)
  7734  02DF  01D8               	line	164
  7735                           	
  7736                           l2613:	
  7737  02E0                     	btfss	(___flmul@grs+3),(31)&7
  7738  02E0  1FD7               	goto	u3371
  7739  02E1  2AE3               	goto	u3370
  7740  02E2  2AE4               u3371:
  7741  02E3                     	goto	l2621
  7742  02E3  2B04               u3370:
  7743  02E4                     	line	165
  7744                           	
  7745                           l2615:	
  7746  02E4                     	movlw	0FFh
  7747  02E4  30FF               	andwf	(___flmul@grs),w
  7748  02E5  0554               	movwf	(??___flmul+0)+0
  7749  02E6  00CE               	movlw	0FFh
  7750  02E7  30FF               	andwf	(___flmul@grs+1),w
  7751  02E8  0555               	movwf	((??___flmul+0)+0+1)
  7752  02E9  00CF               	movlw	0FFh
  7753  02EA  30FF               	andwf	(___flmul@grs+2),w
  7754  02EB  0556               	movwf	((??___flmul+0)+0+2)
  7755  02EC  00D0               	movlw	07Fh
  7756  02ED  307F               	andwf	(___flmul@grs+3),w
  7757  02EE  0557               	movwf	((??___flmul+0)+0+3)
  7758  02EF  00D1               	movf	3+(??___flmul+0)+0,w
  7759  02F0  0851               	iorwf	2+(??___flmul+0)+0,w
  7760  02F1  0450               	iorwf	1+(??___flmul+0)+0,w
  7761  02F2  044F               	iorwf	0+(??___flmul+0)+0,w
  7762  02F3  044E               	skipnz
  7763  02F4  1903               	goto	u3381
  7764  02F5  2AF7               	goto	u3380
  7765  02F6  2AF8               u3381:
  7766  02F7                     	goto	l767
  7767  02F7  2AFB               u3380:
  7768  02F8                     	line	166
  7769                           	
  7770                           l2617:	
  7771  02F8                     	clrf	(___flmul@aexp)
  7772  02F8  01D8               	incf	(___flmul@aexp),f
  7773  02F9  0AD8               	line	167
  7774                           	goto	l2621
  7775  02FA  2B04               	line	168
  7776                           	
  7777                           l767:	
  7778  02FB                     	line	169
  7779                           	btfss	(___flmul@prod),(0)&7
  7780  02FB  1C5A               	goto	u3391
  7781  02FC  2AFE               	goto	u3390
  7782  02FD  2AFF               u3391:
  7783  02FE                     	goto	l2621
  7784  02FE  2B04               u3390:
  7785  02FF                     	line	170
  7786                           	
  7787                           l2619:	
  7788  02FF                     	clrf	(___flmul@aexp)
  7789  02FF  01D8               	incf	(___flmul@aexp),f
  7790  0300  0AD8               	goto	l2621
  7791  0301  2B04               	line	171
  7792                           	
  7793                           l769:	
  7794  0302                     	goto	l2621
  7795  0302  2B04               	line	172
  7796                           	
  7797                           l768:	
  7798  0303                     	goto	l2621
  7799  0303  2B04               	line	173
  7800                           	
  7801                           l766:	
  7802  0304                     	line	174
  7803                           	
  7804                           l2621:	
  7805  0304                     	movf	((___flmul@aexp)),w
  7806  0304  0858               	btfsc	status,2
  7807  0305  1903               	goto	u3401
  7808  0306  2B08               	goto	u3400
  7809  0307  2B09               u3401:
  7810  0308                     	goto	l2631
  7811  0308  2B3C               u3400:
  7812  0309                     	line	175
  7813                           	
  7814                           l2623:	
  7815  0309                     	movlw	01h
  7816  0309  3001               	addwf	(___flmul@prod),f
  7817  030A  07DA               	movlw	0
  7818  030B  3000               	skipnc
  7819  030C  1803               movlw 1
  7820  030D  3001               	addwf	(___flmul@prod+1),f
  7821  030E  07DB               	movlw	0
  7822  030F  3000               	skipnc
  7823  0310  1803               movlw 1
  7824  0311  3001               	addwf	(___flmul@prod+2),f
  7825  0312  07DC               	movlw	0
  7826  0313  3000               	skipnc
  7827  0314  1803               movlw 1
  7828  0315  3001               	addwf	(___flmul@prod+3),f
  7829  0316  07DD               	line	176
  7830                           	
  7831                           l2625:	
  7832  0317                     	btfss	(___flmul@prod+3),(24)&7
  7833  0317  1C5D               	goto	u3411
  7834  0318  2B1A               	goto	u3410
  7835  0319  2B1B               u3411:
  7836  031A                     	goto	l2631
  7837  031A  2B3C               u3410:
  7838  031B                     	line	177
  7839                           	
  7840                           l2627:	
  7841  031B                     	movf	(___flmul@prod),w
  7842  031B  085A               	movwf	(??___flmul+0)+0
  7843  031C  00CE               	movf	(___flmul@prod+1),w
  7844  031D  085B               	movwf	((??___flmul+0)+0+1)
  7845  031E  00CF               	movf	(___flmul@prod+2),w
  7846  031F  085C               	movwf	((??___flmul+0)+0+2)
  7847  0320  00D0               	movf	(___flmul@prod+3),w
  7848  0321  085D               	movwf	((??___flmul+0)+0+3)
  7849  0322  00D1               	movlw	01h
  7850  0323  3001               	movwf	(??___flmul+4)+0
  7851  0324  00D2               u3425:
  7852  0325                     	rlf	(??___flmul+0)+3,w
  7853  0325  0D51               	rrf	(??___flmul+0)+3,f
  7854  0326  0CD1               	rrf	(??___flmul+0)+2,f
  7855  0327  0CD0               	rrf	(??___flmul+0)+1,f
  7856  0328  0CCF               	rrf	(??___flmul+0)+0,f
  7857  0329  0CCE               u3420:
  7858  032A                     	decfsz	(??___flmul+4)+0,f
  7859  032A  0BD2               	goto	u3425
  7860  032B  2B25               	movf	3+(??___flmul+0)+0,w
  7861  032C  0851               	movwf	(___flmul@prod+3)
  7862  032D  00DD               	movf	2+(??___flmul+0)+0,w
  7863  032E  0850               	movwf	(___flmul@prod+2)
  7864  032F  00DC               	movf	1+(??___flmul+0)+0,w
  7865  0330  084F               	movwf	(___flmul@prod+1)
  7866  0331  00DB               	movf	0+(??___flmul+0)+0,w
  7867  0332  084E               	movwf	(___flmul@prod)
  7868  0333  00DA               
  7869                           	line	178
  7870                           	
  7871                           l2629:	
  7872  0334                     	movlw	01h
  7873  0334  3001               	addwf	(___flmul@temp),f
  7874  0335  07DE               	skipnc
  7875  0336  1803               	incf	(___flmul@temp+1),f
  7876  0337  0ADF               	movlw	0
  7877  0338  3000               	addwf	(___flmul@temp+1),f
  7878  0339  07DF               	goto	l2631
  7879  033A  2B3C               	line	179
  7880                           	
  7881                           l771:	
  7882  033B                     	goto	l2631
  7883  033B  2B3C               	line	180
  7884                           	
  7885                           l770:	
  7886  033C                     	line	183
  7887                           	
  7888                           l2631:	
  7889  033C                     	movf	(___flmul@temp+1),w
  7890  033C  085F               	xorlw	80h
  7891  033D  3A80               	movwf	btemp+1
  7892  033E  00FF               	movlw	(0)^80h
  7893  033F  3080               	subwf	btemp+1,w
  7894  0340  027F               	skipz
  7895  0341  1D03               	goto	u3435
  7896  0342  2B45               	movlw	0FFh
  7897  0343  30FF               	subwf	(___flmul@temp),w
  7898  0344  025E               u3435:
  7899  0345                     
  7900                           	skipc
  7901  0345  1C03               	goto	u3431
  7902  0346  2B48               	goto	u3430
  7903  0347  2B49               u3431:
  7904  0348                     	goto	l2635
  7905  0348  2B54               u3430:
  7906  0349                     	line	184
  7907                           	
  7908                           l2633:	
  7909  0349                     	movlw	07Fh
  7910  0349  307F               	bcf	status, 5	;RP0=0, select bank0
  7911  034A  1283               	bcf	status, 6	;RP1=0, select bank0
  7912  034B  1303               	movwf	(___flmul@prod+3)
  7913  034C  00DD               	movlw	080h
  7914  034D  3080               	movwf	(___flmul@prod+2)
  7915  034E  00DC               	movlw	0
  7916  034F  3000               	movwf	(___flmul@prod+1)
  7917  0350  00DB               	movlw	0
  7918  0351  3000               	movwf	(___flmul@prod)
  7919  0352  00DA               
  7920                           	line	185
  7921                           	goto	l773
  7922  0353  2B8B               	line	187
  7923                           	
  7924                           l772:	
  7925  0354                     	
  7926                           l2635:	
  7927  0354                     	bcf	status, 5	;RP0=0, select bank0
  7928  0354  1283               	bcf	status, 6	;RP1=0, select bank0
  7929  0355  1303               	movf	(___flmul@temp+1),w
  7930  0356  085F               	xorlw	80h
  7931  0357  3A80               	movwf	btemp+1
  7932  0358  00FF               	movlw	(0)^80h
  7933  0359  3080               	subwf	btemp+1,w
  7934  035A  027F               	skipz
  7935  035B  1D03               	goto	u3445
  7936  035C  2B5F               	movlw	01h
  7937  035D  3001               	subwf	(___flmul@temp),w
  7938  035E  025E               u3445:
  7939  035F                     
  7940                           	skipnc
  7941  035F  1803               	goto	u3441
  7942  0360  2B62               	goto	u3440
  7943  0361  2B63               u3441:
  7944  0362                     	goto	l2641
  7945  0362  2B6F               u3440:
  7946  0363                     	line	188
  7947                           	
  7948                           l2637:	
  7949  0363                     	movlw	high highword(0)
  7950  0363  3000               	bcf	status, 5	;RP0=0, select bank0
  7951  0364  1283               	bcf	status, 6	;RP1=0, select bank0
  7952  0365  1303               	movwf	(___flmul@prod+3)
  7953  0366  00DD               	movlw	low highword(0)
  7954  0367  3000               	movwf	(___flmul@prod+2)
  7955  0368  00DC               	movlw	high(0)
  7956  0369  3000               	movwf	(___flmul@prod+1)
  7957  036A  00DB               	movlw	low(0)
  7958  036B  3000               	movwf	(___flmul@prod)
  7959  036C  00DA               
  7960                           	line	190
  7961                           	
  7962                           l2639:	
  7963  036D                     	clrf	(___flmul@sign)
  7964  036D  01D3               	line	191
  7965                           	goto	l773
  7966  036E  2B8B               	line	192
  7967                           	
  7968                           l774:	
  7969  036F                     	line	194
  7970                           	
  7971                           l2641:	
  7972  036F                     	bcf	status, 5	;RP0=0, select bank0
  7973  036F  1283               	bcf	status, 6	;RP1=0, select bank0
  7974  0370  1303               	movf	(___flmul@temp),w
  7975  0371  085E               	movwf	(??___flmul+0)+0
  7976  0372  00CE               	movf	(??___flmul+0)+0,w
  7977  0373  084E               	movwf	(___flmul@bexp)
  7978  0374  00D9               	line	195
  7979                           	movlw	0FFh
  7980  0375  30FF               	andwf	(___flmul@prod),f
  7981  0376  05DA               	movlw	0FFh
  7982  0377  30FF               	andwf	(___flmul@prod+1),f
  7983  0378  05DB               	movlw	07Fh
  7984  0379  307F               	andwf	(___flmul@prod+2),f
  7985  037A  05DC               	movlw	0
  7986  037B  3000               	andwf	(___flmul@prod+3),f
  7987  037C  05DD               	line	196
  7988                           	
  7989                           l2643:	
  7990  037D                     	btfss	(___flmul@bexp),(0)&7
  7991  037D  1C59               	goto	u3451
  7992  037E  2B80               	goto	u3450
  7993  037F  2B81               u3451:
  7994  0380                     	goto	l2647
  7995  0380  2B83               u3450:
  7996  0381                     	line	197
  7997                           	
  7998                           l2645:	
  7999  0381                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  8000  0381  17DC               	goto	l2647
  8001  0382  2B83               	line	198
  8002                           	
  8003                           l776:	
  8004  0383                     	line	199
  8005                           	
  8006                           l2647:	
  8007  0383                     	movf	(___flmul@bexp),w
  8008  0383  0859               	movwf	(??___flmul+0)+0
  8009  0384  00CE               	clrc
  8010  0385  1003               	rrf	(??___flmul+0)+0,w
  8011  0386  0C4E               	movwf	(??___flmul+1)+0
  8012  0387  00CF               	movf	(??___flmul+1)+0,w
  8013  0388  084F               	movwf	0+(___flmul@prod)+03h
  8014  0389  00DD               	goto	l773
  8015  038A  2B8B               	line	200
  8016                           	
  8017                           l775:	
  8018  038B                     	
  8019                           l773:	
  8020  038B                     	line	201
  8021                           	movf	(___flmul@sign),w
  8022  038B  0853               	movwf	(??___flmul+0)+0
  8023  038C  00CE               	movf	(??___flmul+0)+0,w
  8024  038D  084E               	iorwf	0+(___flmul@prod)+03h,f
  8025  038E  04DD               	line	203
  8026                           	
  8027                           l2649:	
  8028  038F                     	movf	(___flmul@prod+3),w
  8029  038F  085D               	movwf	(?___flmul+3)
  8030  0390  00C9               	movf	(___flmul@prod+2),w
  8031  0391  085C               	movwf	(?___flmul+2)
  8032  0392  00C8               	movf	(___flmul@prod+1),w
  8033  0393  085B               	movwf	(?___flmul+1)
  8034  0394  00C7               	movf	(___flmul@prod),w
  8035  0395  085A               	movwf	(?___flmul)
  8036  0396  00C6               
  8037                           	goto	l761
  8038  0397  2B98               	
  8039                           l2651:	
  8040  0398                     	line	205
  8041                           	
  8042                           l761:	
  8043  0398                     	return
  8044  0398  0008               	opt stack 0
  8045                           GLOBAL	__end_of___flmul
  8046                           	__end_of___flmul:
  8047  0399                     	signat	___flmul,8316
  8048                           	global	__Umul8_16
  8049                           
  8050 ;; *************** function __Umul8_16 *****************
  8051 ;; Defined at:
  8052 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  multiplier      1    wreg     unsigned char 
  8055 ;;  multiplicand    1    3[COMMON] unsigned char 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8058 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8059 ;;  product         2    0[BANK0 ] unsigned int 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  2    3[COMMON] unsigned int 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8069 ;;      Params:         2       0       0       0       0
  8070 ;;      Locals:         0       5       0       0       0
  8071 ;;      Temps:          2       0       0       0       0
  8072 ;;      Totals:         4       5       0       0       0
  8073 ;;Total ram usage:        9 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    1
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		___flmul
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
  8083                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8084                           	line	4
  8085                           global __ptext23
  8086                           __ptext23:	;psect for function __Umul8_16
  8087  15EC                     psect	text23
  8088                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8089                           	line	4
  8090                           	global	__size_of__Umul8_16
  8091                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  8092  002C                     	
  8093                           __Umul8_16:	
  8094  15EC                     ;incstack = 0
  8095                           	opt	stack 5
  8096                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8097                           ;__Umul8_16@multiplier stored from wreg
  8098                           	bcf	status, 5	;RP0=0, select bank0
  8099  15EC  1283               	bcf	status, 6	;RP1=0, select bank0
  8100  15ED  1303               	movwf	(__Umul8_16@multiplier)
  8101  15EE  00A4               	line	5
  8102                           	
  8103                           l2001:	
  8104  15EF                     	clrf	(__Umul8_16@product)
  8105  15EF  01A0               	clrf	(__Umul8_16@product+1)
  8106  15F0  01A1               	line	6
  8107                           	
  8108                           l2003:	
  8109  15F1                     	movf	(__Umul8_16@multiplicand),w
  8110  15F1  0873               	movwf	(??__Umul8_16+0)+0
  8111  15F2  00F5               	clrf	(??__Umul8_16+0)+0+1
  8112  15F3  01F6               	movf	0+(??__Umul8_16+0)+0,w
  8113  15F4  0875               	movwf	(__Umul8_16@word_mpld)
  8114  15F5  00A2               	movf	1+(??__Umul8_16+0)+0,w
  8115  15F6  0876               	movwf	(__Umul8_16@word_mpld+1)
  8116  15F7  00A3               	goto	l2005
  8117  15F8  2DF9               	line	50
  8118                           	
  8119                           l798:	
  8120  15F9                     	line	51
  8121                           	
  8122                           l2005:	
  8123  15F9                     	btfss	(__Umul8_16@multiplier),(0)&7
  8124  15F9  1C24               	goto	u2091
  8125  15FA  2DFC               	goto	u2090
  8126  15FB  2DFD               u2091:
  8127  15FC                     	goto	l799
  8128  15FC  2E03               u2090:
  8129  15FD                     	line	52
  8130                           	
  8131                           l2007:	
  8132  15FD                     	movf	(__Umul8_16@word_mpld),w
  8133  15FD  0822               	addwf	(__Umul8_16@product),f
  8134  15FE  07A0               	skipnc
  8135  15FF  1803               	incf	(__Umul8_16@product+1),f
  8136  1600  0AA1               	movf	(__Umul8_16@word_mpld+1),w
  8137  1601  0823               	addwf	(__Umul8_16@product+1),f
  8138  1602  07A1               	line	53
  8139                           	
  8140                           l799:	
  8141  1603                     	line	54
  8142                           	movlw	01h
  8143  1603  3001               	
  8144                           u2105:
  8145  1604                     	clrc
  8146  1604  1003               	rlf	(__Umul8_16@word_mpld),f
  8147  1605  0DA2               	rlf	(__Umul8_16@word_mpld+1),f
  8148  1606  0DA3               	addlw	-1
  8149  1607  3EFF               	skipz
  8150  1608  1D03               	goto	u2105
  8151  1609  2E04               	line	55
  8152                           	clrc
  8153  160A  1003               	rrf	(__Umul8_16@multiplier),f
  8154  160B  0CA4               
  8155                           	line	56
  8156                           	
  8157                           l2009:	
  8158  160C                     	movf	((__Umul8_16@multiplier)),w
  8159  160C  0824               	btfss	status,2
  8160  160D  1D03               	goto	u2111
  8161  160E  2E10               	goto	u2110
  8162  160F  2E11               u2111:
  8163  1610                     	goto	l2005
  8164  1610  2DF9               u2110:
  8165  1611                     	goto	l2011
  8166  1611  2E12               	
  8167                           l800:	
  8168  1612                     	line	59
  8169                           	
  8170                           l2011:	
  8171  1612                     	movf	(__Umul8_16@product+1),w
  8172  1612  0821               	movwf	(?__Umul8_16+1)
  8173  1613  00F4               	movf	(__Umul8_16@product),w
  8174  1614  0820               	movwf	(?__Umul8_16)
  8175  1615  00F3               	goto	l801
  8176  1616  2E17               	
  8177                           l2013:	
  8178  1617                     	line	60
  8179                           	
  8180                           l801:	
  8181  1617                     	return
  8182  1617  0008               	opt stack 0
  8183                           GLOBAL	__end_of__Umul8_16
  8184                           	__end_of__Umul8_16:
  8185  1618                     	signat	__Umul8_16,8314
  8186                           	global	___fldiv
  8187                           
  8188 ;; *************** function ___fldiv *****************
  8189 ;; Defined at:
  8190 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  a               4   64[BANK0 ] unsigned int 
  8193 ;;  b               4   68[BANK0 ] unsigned int 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  grs             4    7[BANK1 ] unsigned long 
  8196 ;;  rem             4    0[BANK1 ] unsigned long 
  8197 ;;  new_exp         2    5[BANK1 ] int 
  8198 ;;  aexp            1   12[BANK1 ] unsigned char 
  8199 ;;  bexp            1   11[BANK1 ] unsigned char 
  8200 ;;  sign            1    4[BANK1 ] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  4   64[BANK0 ] unsigned char 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, btemp+1
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8210 ;;      Params:         0       8       0       0       0
  8211 ;;      Locals:         0       0      13       0       0
  8212 ;;      Temps:          0       5       0       0       0
  8213 ;;      Totals:         0      13      13       0       0
  8214 ;;Total ram usage:       26 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_main
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
  8224                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  8225                           	line	8
  8226                           global __ptext24
  8227                           __ptext24:	;psect for function ___fldiv
  8228  0D32                     psect	text24
  8229                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  8230                           	line	8
  8231                           	global	__size_of___fldiv
  8232                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  8233  02CE                     	
  8234                           ___fldiv:	
  8235  0D32                     ;incstack = 0
  8236                           	opt	stack 6
  8237                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8238                           	line	26
  8239                           	
  8240                           l2371:	
  8241  0D32                     	bcf	status, 5	;RP0=0, select bank0
  8242  0D32  1283               	bcf	status, 6	;RP1=0, select bank0
  8243  0D33  1303               	movf	0+(___fldiv@b)+03h,w
  8244  0D34  0867               	andlw	080h
  8245  0D35  3980               	movwf	(??___fldiv+0)+0
  8246  0D36  00E8               	movf	(??___fldiv+0)+0,w
  8247  0D37  0868               	bsf	status, 5	;RP0=1, select bank1
  8248  0D38  1683               	bcf	status, 6	;RP1=0, select bank1
  8249  0D39  1303               	movwf	(___fldiv@sign)^080h
  8250  0D3A  00BB               	line	27
  8251                           	
  8252                           l2373:	
  8253  0D3B                     	bcf	status, 5	;RP0=0, select bank0
  8254  0D3B  1283               	bcf	status, 6	;RP1=0, select bank0
  8255  0D3C  1303               	movf	0+(___fldiv@b)+03h,w
  8256  0D3D  0867               	movwf	(??___fldiv+0)+0
  8257  0D3E  00E8               	addwf	(??___fldiv+0)+0,w
  8258  0D3F  0768               	movwf	(??___fldiv+1)+0
  8259  0D40  00E9               	movf	(??___fldiv+1)+0,w
  8260  0D41  0869               	bsf	status, 5	;RP0=1, select bank1
  8261  0D42  1683               	bcf	status, 6	;RP1=0, select bank1
  8262  0D43  1303               	movwf	(___fldiv@bexp)^080h
  8263  0D44  00C2               	line	28
  8264                           	
  8265                           l2375:	
  8266  0D45                     	bcf	status, 5	;RP0=0, select bank0
  8267  0D45  1283               	bcf	status, 6	;RP1=0, select bank0
  8268  0D46  1303               	btfss	0+(___fldiv@b)+02h,(7)&7
  8269  0D47  1FE6               	goto	u2791
  8270  0D48  2D4A               	goto	u2790
  8271  0D49  2D4B               u2791:
  8272  0D4A                     	goto	l2379
  8273  0D4A  2D4F               u2790:
  8274  0D4B                     	line	29
  8275                           	
  8276                           l2377:	
  8277  0D4B                     	bsf	status, 5	;RP0=1, select bank1
  8278  0D4B  1683               	bcf	status, 6	;RP1=0, select bank1
  8279  0D4C  1303               	bsf	(___fldiv@bexp)^080h+(0/8),(0)&7
  8280  0D4D  1442               	goto	l2379
  8281  0D4E  2D4F               	line	30
  8282                           	
  8283                           l714:	
  8284  0D4F                     	line	33
  8285                           	
  8286                           l2379:	
  8287  0D4F                     	bsf	status, 5	;RP0=1, select bank1
  8288  0D4F  1683               	bcf	status, 6	;RP1=0, select bank1
  8289  0D50  1303               	movf	((___fldiv@bexp)^080h),w
  8290  0D51  0842               	btfsc	status,2
  8291  0D52  1903               	goto	u2801
  8292  0D53  2D55               	goto	u2800
  8293  0D54  2D56               u2801:
  8294  0D55                     	goto	l2389
  8295  0D55  2D6A               u2800:
  8296  0D56                     	line	35
  8297                           	
  8298                           l2381:	
  8299  0D56                     		incf	((___fldiv@bexp)^080h),w
  8300  0D56  0A42               	btfss	status,2
  8301  0D57  1D03               	goto	u2811
  8302  0D58  2D5A               	goto	u2810
  8303  0D59  2D5B               u2811:
  8304  0D5A                     	goto	l2385
  8305  0D5A  2D66               u2810:
  8306  0D5B                     	line	37
  8307                           	
  8308                           l2383:	
  8309  0D5B                     	movlw	0x0
  8310  0D5B  3000               	bcf	status, 5	;RP0=0, select bank0
  8311  0D5C  1283               	bcf	status, 6	;RP1=0, select bank0
  8312  0D5D  1303               	movwf	(___fldiv@b+3)
  8313  0D5E  00E7               	movlw	0x0
  8314  0D5F  3000               	movwf	(___fldiv@b+2)
  8315  0D60  00E6               	movlw	0x0
  8316  0D61  3000               	movwf	(___fldiv@b+1)
  8317  0D62  00E5               	movlw	0x0
  8318  0D63  3000               	movwf	(___fldiv@b)
  8319  0D64  00E4               
  8320                           	goto	l2385
  8321  0D65  2D66               	line	38
  8322                           	
  8323                           l716:	
  8324  0D66                     	line	40
  8325                           	
  8326                           l2385:	
  8327  0D66                     	bcf	status, 5	;RP0=0, select bank0
  8328  0D66  1283               	bsf	(___fldiv@b)+(23/8),(23)&7
  8329  0D67  17E6               	line	42
  8330                           	
  8331                           l2387:	
  8332  0D68                     	clrf	0+(___fldiv@b)+03h
  8333  0D68  01E7               	line	43
  8334                           	goto	l2391
  8335  0D69  2D74               	line	44
  8336                           	
  8337                           l715:	
  8338  0D6A                     	line	46
  8339                           	
  8340                           l2389:	
  8341  0D6A                     	movlw	0x0
  8342  0D6A  3000               	bcf	status, 5	;RP0=0, select bank0
  8343  0D6B  1283               	movwf	(___fldiv@b+3)
  8344  0D6C  00E7               	movlw	0x0
  8345  0D6D  3000               	movwf	(___fldiv@b+2)
  8346  0D6E  00E6               	movlw	0x0
  8347  0D6F  3000               	movwf	(___fldiv@b+1)
  8348  0D70  00E5               	movlw	0x0
  8349  0D71  3000               	movwf	(___fldiv@b)
  8350  0D72  00E4               
  8351                           	goto	l2391
  8352  0D73  2D74               	line	47
  8353                           	
  8354                           l717:	
  8355  0D74                     	line	49
  8356                           	
  8357                           l2391:	
  8358  0D74                     	movf	0+(___fldiv@a)+03h,w
  8359  0D74  0863               	andlw	080h
  8360  0D75  3980               	movwf	(??___fldiv+0)+0
  8361  0D76  00E8               	movf	(??___fldiv+0)+0,w
  8362  0D77  0868               	bsf	status, 5	;RP0=1, select bank1
  8363  0D78  1683               	bcf	status, 6	;RP1=0, select bank1
  8364  0D79  1303               	xorwf	(___fldiv@sign)^080h,f
  8365  0D7A  06BB               	line	50
  8366                           	
  8367                           l2393:	
  8368  0D7B                     	bcf	status, 5	;RP0=0, select bank0
  8369  0D7B  1283               	bcf	status, 6	;RP1=0, select bank0
  8370  0D7C  1303               	movf	0+(___fldiv@a)+03h,w
  8371  0D7D  0863               	movwf	(??___fldiv+0)+0
  8372  0D7E  00E8               	addwf	(??___fldiv+0)+0,w
  8373  0D7F  0768               	movwf	(??___fldiv+1)+0
  8374  0D80  00E9               	movf	(??___fldiv+1)+0,w
  8375  0D81  0869               	bsf	status, 5	;RP0=1, select bank1
  8376  0D82  1683               	bcf	status, 6	;RP1=0, select bank1
  8377  0D83  1303               	movwf	(___fldiv@aexp)^080h
  8378  0D84  00C3               	line	51
  8379                           	
  8380                           l2395:	
  8381  0D85                     	bcf	status, 5	;RP0=0, select bank0
  8382  0D85  1283               	bcf	status, 6	;RP1=0, select bank0
  8383  0D86  1303               	btfss	0+(___fldiv@a)+02h,(7)&7
  8384  0D87  1FE2               	goto	u2821
  8385  0D88  2D8A               	goto	u2820
  8386  0D89  2D8B               u2821:
  8387  0D8A                     	goto	l2399
  8388  0D8A  2D8F               u2820:
  8389  0D8B                     	line	52
  8390                           	
  8391                           l2397:	
  8392  0D8B                     	bsf	status, 5	;RP0=1, select bank1
  8393  0D8B  1683               	bcf	status, 6	;RP1=0, select bank1
  8394  0D8C  1303               	bsf	(___fldiv@aexp)^080h+(0/8),(0)&7
  8395  0D8D  1443               	goto	l2399
  8396  0D8E  2D8F               	line	53
  8397                           	
  8398                           l718:	
  8399  0D8F                     	line	56
  8400                           	
  8401                           l2399:	
  8402  0D8F                     	bsf	status, 5	;RP0=1, select bank1
  8403  0D8F  1683               	bcf	status, 6	;RP1=0, select bank1
  8404  0D90  1303               	movf	((___fldiv@aexp)^080h),w
  8405  0D91  0843               	btfsc	status,2
  8406  0D92  1903               	goto	u2831
  8407  0D93  2D95               	goto	u2830
  8408  0D94  2D96               u2831:
  8409  0D95                     	goto	l2409
  8410  0D95  2DAA               u2830:
  8411  0D96                     	line	58
  8412                           	
  8413                           l2401:	
  8414  0D96                     		incf	((___fldiv@aexp)^080h),w
  8415  0D96  0A43               	btfss	status,2
  8416  0D97  1D03               	goto	u2841
  8417  0D98  2D9A               	goto	u2840
  8418  0D99  2D9B               u2841:
  8419  0D9A                     	goto	l2405
  8420  0D9A  2DA6               u2840:
  8421  0D9B                     	line	60
  8422                           	
  8423                           l2403:	
  8424  0D9B                     	movlw	0x0
  8425  0D9B  3000               	bcf	status, 5	;RP0=0, select bank0
  8426  0D9C  1283               	bcf	status, 6	;RP1=0, select bank0
  8427  0D9D  1303               	movwf	(___fldiv@a+3)
  8428  0D9E  00E3               	movlw	0x0
  8429  0D9F  3000               	movwf	(___fldiv@a+2)
  8430  0DA0  00E2               	movlw	0x0
  8431  0DA1  3000               	movwf	(___fldiv@a+1)
  8432  0DA2  00E1               	movlw	0x0
  8433  0DA3  3000               	movwf	(___fldiv@a)
  8434  0DA4  00E0               
  8435                           	goto	l2405
  8436  0DA5  2DA6               	line	61
  8437                           	
  8438                           l720:	
  8439  0DA6                     	line	63
  8440                           	
  8441                           l2405:	
  8442  0DA6                     	bcf	status, 5	;RP0=0, select bank0
  8443  0DA6  1283               	bsf	(___fldiv@a)+(23/8),(23)&7
  8444  0DA7  17E2               	line	65
  8445                           	
  8446                           l2407:	
  8447  0DA8                     	clrf	0+(___fldiv@a)+03h
  8448  0DA8  01E3               	line	66
  8449                           	goto	l721
  8450  0DA9  2DB3               	line	67
  8451                           	
  8452                           l719:	
  8453  0DAA                     	line	69
  8454                           	
  8455                           l2409:	
  8456  0DAA                     	movlw	0x0
  8457  0DAA  3000               	bcf	status, 5	;RP0=0, select bank0
  8458  0DAB  1283               	movwf	(___fldiv@a+3)
  8459  0DAC  00E3               	movlw	0x0
  8460  0DAD  3000               	movwf	(___fldiv@a+2)
  8461  0DAE  00E2               	movlw	0x0
  8462  0DAF  3000               	movwf	(___fldiv@a+1)
  8463  0DB0  00E1               	movlw	0x0
  8464  0DB1  3000               	movwf	(___fldiv@a)
  8465  0DB2  00E0               
  8466                           	line	70
  8467                           	
  8468                           l721:	
  8469  0DB3                     	line	75
  8470                           	movf	(___fldiv@a+3),w
  8471  0DB3  0863               	iorwf	(___fldiv@a+2),w
  8472  0DB4  0462               	iorwf	(___fldiv@a+1),w
  8473  0DB5  0461               	iorwf	(___fldiv@a),w
  8474  0DB6  0460               	skipz
  8475  0DB7  1D03               	goto	u2851
  8476  0DB8  2DBA               	goto	u2850
  8477  0DB9  2DBB               u2851:
  8478  0DBA                     	goto	l2419
  8479  0DBA  2DD9               u2850:
  8480  0DBB                     	line	76
  8481                           	
  8482                           l2411:	
  8483  0DBB                     	movlw	high highword(0)
  8484  0DBB  3000               	movwf	(___fldiv@b+3)
  8485  0DBC  00E7               	movlw	low highword(0)
  8486  0DBD  3000               	movwf	(___fldiv@b+2)
  8487  0DBE  00E6               	movlw	high(0)
  8488  0DBF  3000               	movwf	(___fldiv@b+1)
  8489  0DC0  00E5               	movlw	low(0)
  8490  0DC1  3000               	movwf	(___fldiv@b)
  8491  0DC2  00E4               
  8492                           	line	77
  8493                           	movlw	080h
  8494  0DC3  3080               	iorwf	0+(___fldiv@b)+02h,f
  8495  0DC4  04E6               	movlw	07Fh
  8496  0DC5  307F               	iorwf	1+(___fldiv@b)+02h,f
  8497  0DC6  04E7               	line	78
  8498                           	
  8499                           l2413:	
  8500  0DC7                     	bsf	status, 5	;RP0=1, select bank1
  8501  0DC7  1683               	bcf	status, 6	;RP1=0, select bank1
  8502  0DC8  1303               	movf	(___fldiv@sign)^080h,w
  8503  0DC9  083B               	bcf	status, 5	;RP0=0, select bank0
  8504  0DCA  1283               	bcf	status, 6	;RP1=0, select bank0
  8505  0DCB  1303               	movwf	(??___fldiv+0)+0
  8506  0DCC  00E8               	movf	(??___fldiv+0)+0,w
  8507  0DCD  0868               	iorwf	0+(___fldiv@b)+03h,f
  8508  0DCE  04E7               	line	79
  8509                           	
  8510                           l2415:	
  8511  0DCF                     	movf	(___fldiv@b+3),w
  8512  0DCF  0867               	movwf	(?___fldiv+3)
  8513  0DD0  00E3               	movf	(___fldiv@b+2),w
  8514  0DD1  0866               	movwf	(?___fldiv+2)
  8515  0DD2  00E2               	movf	(___fldiv@b+1),w
  8516  0DD3  0865               	movwf	(?___fldiv+1)
  8517  0DD4  00E1               	movf	(___fldiv@b),w
  8518  0DD5  0864               	movwf	(?___fldiv)
  8519  0DD6  00E0               
  8520                           	goto	l723
  8521  0DD7  2FFF               	
  8522                           l2417:	
  8523  0DD8                     	goto	l723
  8524  0DD8  2FFF               	line	80
  8525                           	
  8526                           l722:	
  8527  0DD9                     	line	83
  8528                           	
  8529                           l2419:	
  8530  0DD9                     	bsf	status, 5	;RP0=1, select bank1
  8531  0DD9  1683               	bcf	status, 6	;RP1=0, select bank1
  8532  0DDA  1303               	movf	((___fldiv@bexp)^080h),w
  8533  0DDB  0842               	btfss	status,2
  8534  0DDC  1D03               	goto	u2861
  8535  0DDD  2DDF               	goto	u2860
  8536  0DDE  2DE0               u2861:
  8537  0DDF                     	goto	l2425
  8538  0DDF  2DF4               u2860:
  8539  0DE0                     	line	84
  8540                           	
  8541                           l2421:	
  8542  0DE0                     	movlw	high highword(0)
  8543  0DE0  3000               	bcf	status, 5	;RP0=0, select bank0
  8544  0DE1  1283               	bcf	status, 6	;RP1=0, select bank0
  8545  0DE2  1303               	movwf	(___fldiv@b+3)
  8546  0DE3  00E7               	movlw	low highword(0)
  8547  0DE4  3000               	movwf	(___fldiv@b+2)
  8548  0DE5  00E6               	movlw	high(0)
  8549  0DE6  3000               	movwf	(___fldiv@b+1)
  8550  0DE7  00E5               	movlw	low(0)
  8551  0DE8  3000               	movwf	(___fldiv@b)
  8552  0DE9  00E4               
  8553                           	line	85
  8554                           	movf	(___fldiv@b+3),w
  8555  0DEA  0867               	movwf	(?___fldiv+3)
  8556  0DEB  00E3               	movf	(___fldiv@b+2),w
  8557  0DEC  0866               	movwf	(?___fldiv+2)
  8558  0DED  00E2               	movf	(___fldiv@b+1),w
  8559  0DEE  0865               	movwf	(?___fldiv+1)
  8560  0DEF  00E1               	movf	(___fldiv@b),w
  8561  0DF0  0864               	movwf	(?___fldiv)
  8562  0DF1  00E0               
  8563                           	goto	l723
  8564  0DF2  2FFF               	
  8565                           l2423:	
  8566  0DF3                     	goto	l723
  8567  0DF3  2FFF               	line	86
  8568                           	
  8569                           l724:	
  8570  0DF4                     	line	89
  8571                           	
  8572                           l2425:	
  8573  0DF4                     	bsf	status, 5	;RP0=1, select bank1
  8574  0DF4  1683               	bcf	status, 6	;RP1=0, select bank1
  8575  0DF5  1303               	movf	(___fldiv@aexp)^080h,w
  8576  0DF6  0843               	bcf	status, 5	;RP0=0, select bank0
  8577  0DF7  1283               	bcf	status, 6	;RP1=0, select bank0
  8578  0DF8  1303               	movwf	(??___fldiv+0)+0
  8579  0DF9  00E8               	clrf	(??___fldiv+0)+0+1
  8580  0DFA  01E9               	comf	(??___fldiv+0)+0,f
  8581  0DFB  09E8               	comf	(??___fldiv+0)+1,f
  8582  0DFC  09E9               	incf	(??___fldiv+0)+0,f
  8583  0DFD  0AE8               	skipnz
  8584  0DFE  1903               	incf	(??___fldiv+0)+1,f
  8585  0DFF  0AE9               	bsf	status, 5	;RP0=1, select bank1
  8586  0E00  1683               	bcf	status, 6	;RP1=0, select bank1
  8587  0E01  1303               	movf	(___fldiv@bexp)^080h,w
  8588  0E02  0842               	bcf	status, 5	;RP0=0, select bank0
  8589  0E03  1283               	bcf	status, 6	;RP1=0, select bank0
  8590  0E04  1303               	addwf	0+(??___fldiv+0)+0,w
  8591  0E05  0768               	movwf	(??___fldiv+2)+0
  8592  0E06  00EA               	movf	1+(??___fldiv+0)+0,w
  8593  0E07  0869               	skipnc
  8594  0E08  1803               	incf	1+(??___fldiv+0)+0,w
  8595  0E09  0A69               	movwf	((??___fldiv+2)+0)+1
  8596  0E0A  00EB               	movf	0+(??___fldiv+2)+0,w
  8597  0E0B  086A               	addlw	low(07Fh)
  8598  0E0C  3E7F               	bsf	status, 5	;RP0=1, select bank1
  8599  0E0D  1683               	bcf	status, 6	;RP1=0, select bank1
  8600  0E0E  1303               	movwf	(___fldiv@new_exp)^080h
  8601  0E0F  00BC               	bcf	status, 5	;RP0=0, select bank0
  8602  0E10  1283               	bcf	status, 6	;RP1=0, select bank0
  8603  0E11  1303               	movf	1+(??___fldiv+2)+0,w
  8604  0E12  086B               	skipnc
  8605  0E13  1803               	addlw	1
  8606  0E14  3E01               	addlw	high(07Fh)
  8607  0E15  3E00               	bsf	status, 5	;RP0=1, select bank1
  8608  0E16  1683               	bcf	status, 6	;RP1=0, select bank1
  8609  0E17  1303               	movwf	1+(___fldiv@new_exp)^080h
  8610  0E18  00BD               	line	92
  8611                           	
  8612                           l2427:	
  8613  0E19                     	bcf	status, 5	;RP0=0, select bank0
  8614  0E19  1283               	bcf	status, 6	;RP1=0, select bank0
  8615  0E1A  1303               	movf	(___fldiv@b+3),w
  8616  0E1B  0867               	bsf	status, 5	;RP0=1, select bank1
  8617  0E1C  1683               	bcf	status, 6	;RP1=0, select bank1
  8618  0E1D  1303               	movwf	(___fldiv@rem+3)^080h
  8619  0E1E  00BA               	bcf	status, 5	;RP0=0, select bank0
  8620  0E1F  1283               	bcf	status, 6	;RP1=0, select bank0
  8621  0E20  1303               	movf	(___fldiv@b+2),w
  8622  0E21  0866               	bsf	status, 5	;RP0=1, select bank1
  8623  0E22  1683               	bcf	status, 6	;RP1=0, select bank1
  8624  0E23  1303               	movwf	(___fldiv@rem+2)^080h
  8625  0E24  00B9               	bcf	status, 5	;RP0=0, select bank0
  8626  0E25  1283               	bcf	status, 6	;RP1=0, select bank0
  8627  0E26  1303               	movf	(___fldiv@b+1),w
  8628  0E27  0865               	bsf	status, 5	;RP0=1, select bank1
  8629  0E28  1683               	bcf	status, 6	;RP1=0, select bank1
  8630  0E29  1303               	movwf	(___fldiv@rem+1)^080h
  8631  0E2A  00B8               	bcf	status, 5	;RP0=0, select bank0
  8632  0E2B  1283               	bcf	status, 6	;RP1=0, select bank0
  8633  0E2C  1303               	movf	(___fldiv@b),w
  8634  0E2D  0864               	bsf	status, 5	;RP0=1, select bank1
  8635  0E2E  1683               	bcf	status, 6	;RP1=0, select bank1
  8636  0E2F  1303               	movwf	(___fldiv@rem)^080h
  8637  0E30  00B7               
  8638                           	line	93
  8639                           	
  8640                           l2429:	
  8641  0E31                     	movlw	high highword(0)
  8642  0E31  3000               	bcf	status, 5	;RP0=0, select bank0
  8643  0E32  1283               	bcf	status, 6	;RP1=0, select bank0
  8644  0E33  1303               	movwf	(___fldiv@b+3)
  8645  0E34  00E7               	movlw	low highword(0)
  8646  0E35  3000               	movwf	(___fldiv@b+2)
  8647  0E36  00E6               	movlw	high(0)
  8648  0E37  3000               	movwf	(___fldiv@b+1)
  8649  0E38  00E5               	movlw	low(0)
  8650  0E39  3000               	movwf	(___fldiv@b)
  8651  0E3A  00E4               
  8652                           	line	94
  8653                           	
  8654                           l2431:	
  8655  0E3B                     	movlw	high highword(0)
  8656  0E3B  3000               	bsf	status, 5	;RP0=1, select bank1
  8657  0E3C  1683               	bcf	status, 6	;RP1=0, select bank1
  8658  0E3D  1303               	movwf	(___fldiv@grs+3)^080h
  8659  0E3E  00C1               	movlw	low highword(0)
  8660  0E3F  3000               	movwf	(___fldiv@grs+2)^080h
  8661  0E40  00C0               	movlw	high(0)
  8662  0E41  3000               	movwf	(___fldiv@grs+1)^080h
  8663  0E42  00BF               	movlw	low(0)
  8664  0E43  3000               	movwf	(___fldiv@grs)^080h
  8665  0E44  00BE               
  8666                           	line	96
  8667                           	
  8668                           l2433:	
  8669  0E45                     	clrf	(___fldiv@aexp)^080h
  8670  0E45  01C3               	line	97
  8671                           	goto	l2453
  8672  0E46  2ED1               	
  8673                           l726:	
  8674  0E47                     	line	100
  8675                           	
  8676                           l2435:	
  8677  0E47                     	movf	((___fldiv@aexp)^080h),w
  8678  0E47  0843               	btfsc	status,2
  8679  0E48  1903               	goto	u2871
  8680  0E49  2E4B               	goto	u2870
  8681  0E4A  2E4C               u2871:
  8682  0E4B                     	goto	l2445
  8683  0E4B  2E7D               u2870:
  8684  0E4C                     	line	101
  8685                           	
  8686                           l2437:	
  8687  0E4C                     	movlw	01h
  8688  0E4C  3001               	bcf	status, 5	;RP0=0, select bank0
  8689  0E4D  1283               	bcf	status, 6	;RP1=0, select bank0
  8690  0E4E  1303               	movwf	(??___fldiv+0)+0
  8691  0E4F  00E8               u2885:
  8692  0E50                     	clrc
  8693  0E50  1003               	bsf	status, 5	;RP0=1, select bank1
  8694  0E51  1683               	bcf	status, 6	;RP1=0, select bank1
  8695  0E52  1303               	rlf	(___fldiv@rem)^080h,f
  8696  0E53  0DB7               	rlf	(___fldiv@rem+1)^080h,f
  8697  0E54  0DB8               	rlf	(___fldiv@rem+2)^080h,f
  8698  0E55  0DB9               	rlf	(___fldiv@rem+3)^080h,f
  8699  0E56  0DBA               	bcf	status, 5	;RP0=0, select bank0
  8700  0E57  1283               	bcf	status, 6	;RP1=0, select bank0
  8701  0E58  1303               	decfsz	(??___fldiv+0)+0
  8702  0E59  0BE8               	goto	u2885
  8703  0E5A  2E50               	line	102
  8704                           	movlw	01h
  8705  0E5B  3001               	movwf	(??___fldiv+0)+0
  8706  0E5C  00E8               u2895:
  8707  0E5D                     	clrc
  8708  0E5D  1003               	rlf	(___fldiv@b),f
  8709  0E5E  0DE4               	rlf	(___fldiv@b+1),f
  8710  0E5F  0DE5               	rlf	(___fldiv@b+2),f
  8711  0E60  0DE6               	rlf	(___fldiv@b+3),f
  8712  0E61  0DE7               	decfsz	(??___fldiv+0)+0
  8713  0E62  0BE8               	goto	u2895
  8714  0E63  2E5D               	line	103
  8715                           	
  8716                           l2439:	
  8717  0E64                     	bsf	status, 5	;RP0=1, select bank1
  8718  0E64  1683               	bcf	status, 6	;RP1=0, select bank1
  8719  0E65  1303               	btfss	(___fldiv@grs+3)^080h,(31)&7
  8720  0E66  1FC1               	goto	u2901
  8721  0E67  2E69               	goto	u2900
  8722  0E68  2E6A               u2901:
  8723  0E69                     	goto	l2443
  8724  0E69  2E6E               u2900:
  8725  0E6A                     	line	104
  8726                           	
  8727                           l2441:	
  8728  0E6A                     	bcf	status, 5	;RP0=0, select bank0
  8729  0E6A  1283               	bcf	status, 6	;RP1=0, select bank0
  8730  0E6B  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  8731  0E6C  1464               	goto	l2443
  8732  0E6D  2E6E               	line	105
  8733                           	
  8734                           l728:	
  8735  0E6E                     	line	106
  8736                           	
  8737                           l2443:	
  8738  0E6E                     	movlw	01h
  8739  0E6E  3001               	bcf	status, 5	;RP0=0, select bank0
  8740  0E6F  1283               	movwf	(??___fldiv+0)+0
  8741  0E70  00E8               u2915:
  8742  0E71                     	clrc
  8743  0E71  1003               	bsf	status, 5	;RP0=1, select bank1
  8744  0E72  1683               	bcf	status, 6	;RP1=0, select bank1
  8745  0E73  1303               	rlf	(___fldiv@grs)^080h,f
  8746  0E74  0DBE               	rlf	(___fldiv@grs+1)^080h,f
  8747  0E75  0DBF               	rlf	(___fldiv@grs+2)^080h,f
  8748  0E76  0DC0               	rlf	(___fldiv@grs+3)^080h,f
  8749  0E77  0DC1               	bcf	status, 5	;RP0=0, select bank0
  8750  0E78  1283               	bcf	status, 6	;RP1=0, select bank0
  8751  0E79  1303               	decfsz	(??___fldiv+0)+0
  8752  0E7A  0BE8               	goto	u2915
  8753  0E7B  2E71               	goto	l2445
  8754  0E7C  2E7D               	line	107
  8755                           	
  8756                           l727:	
  8757  0E7D                     	line	112
  8758                           	
  8759                           l2445:	
  8760  0E7D                     	bcf	status, 5	;RP0=0, select bank0
  8761  0E7D  1283               	movf	(___fldiv@a+3),w
  8762  0E7E  0863               	bsf	status, 5	;RP0=1, select bank1
  8763  0E7F  1683               	bcf	status, 6	;RP1=0, select bank1
  8764  0E80  1303               	subwf	(___fldiv@rem+3)^080h,w
  8765  0E81  023A               	skipz
  8766  0E82  1D03               	goto	u2925
  8767  0E83  2E9A               	bcf	status, 5	;RP0=0, select bank0
  8768  0E84  1283               	bcf	status, 6	;RP1=0, select bank0
  8769  0E85  1303               	movf	(___fldiv@a+2),w
  8770  0E86  0862               	bsf	status, 5	;RP0=1, select bank1
  8771  0E87  1683               	bcf	status, 6	;RP1=0, select bank1
  8772  0E88  1303               	subwf	(___fldiv@rem+2)^080h,w
  8773  0E89  0239               	skipz
  8774  0E8A  1D03               	goto	u2925
  8775  0E8B  2E9A               	bcf	status, 5	;RP0=0, select bank0
  8776  0E8C  1283               	bcf	status, 6	;RP1=0, select bank0
  8777  0E8D  1303               	movf	(___fldiv@a+1),w
  8778  0E8E  0861               	bsf	status, 5	;RP0=1, select bank1
  8779  0E8F  1683               	bcf	status, 6	;RP1=0, select bank1
  8780  0E90  1303               	subwf	(___fldiv@rem+1)^080h,w
  8781  0E91  0238               	skipz
  8782  0E92  1D03               	goto	u2925
  8783  0E93  2E9A               	bcf	status, 5	;RP0=0, select bank0
  8784  0E94  1283               	bcf	status, 6	;RP1=0, select bank0
  8785  0E95  1303               	movf	(___fldiv@a),w
  8786  0E96  0860               	bsf	status, 5	;RP0=1, select bank1
  8787  0E97  1683               	bcf	status, 6	;RP1=0, select bank1
  8788  0E98  1303               	subwf	(___fldiv@rem)^080h,w
  8789  0E99  0237               u2925:
  8790  0E9A                     	skipc
  8791  0E9A  1C03               	goto	u2921
  8792  0E9B  2E9D               	goto	u2920
  8793  0E9C  2E9E               u2921:
  8794  0E9D                     	goto	l2451
  8795  0E9D  2EC8               u2920:
  8796  0E9E                     	line	115
  8797                           	
  8798                           l2447:	
  8799  0E9E                     	bsf	(___fldiv@grs)^080h+(30/8),(30)&7
  8800  0E9E  1741               	line	116
  8801                           	
  8802                           l2449:	
  8803  0E9F                     	bcf	status, 5	;RP0=0, select bank0
  8804  0E9F  1283               	bcf	status, 6	;RP1=0, select bank0
  8805  0EA0  1303               	movf	(___fldiv@a),w
  8806  0EA1  0860               	bsf	status, 5	;RP0=1, select bank1
  8807  0EA2  1683               	bcf	status, 6	;RP1=0, select bank1
  8808  0EA3  1303               	subwf	(___fldiv@rem)^080h,f
  8809  0EA4  02B7               	bcf	status, 5	;RP0=0, select bank0
  8810  0EA5  1283               	bcf	status, 6	;RP1=0, select bank0
  8811  0EA6  1303               	movf	(___fldiv@a+1),w
  8812  0EA7  0861               	skipc
  8813  0EA8  1C03               	incfsz	(___fldiv@a+1),w
  8814  0EA9  0F61               	goto	u2935
  8815  0EAA  2EAC               	goto	u2936
  8816  0EAB  2EAF               u2935:
  8817  0EAC                     	bsf	status, 5	;RP0=1, select bank1
  8818  0EAC  1683               	bcf	status, 6	;RP1=0, select bank1
  8819  0EAD  1303               	subwf	(___fldiv@rem+1)^080h,f
  8820  0EAE  02B8               u2936:
  8821  0EAF                     	bcf	status, 5	;RP0=0, select bank0
  8822  0EAF  1283               	bcf	status, 6	;RP1=0, select bank0
  8823  0EB0  1303               	movf	(___fldiv@a+2),w
  8824  0EB1  0862               	skipc
  8825  0EB2  1C03               	incfsz	(___fldiv@a+2),w
  8826  0EB3  0F62               	goto	u2937
  8827  0EB4  2EB6               	goto	u2938
  8828  0EB5  2EB9               u2937:
  8829  0EB6                     	bsf	status, 5	;RP0=1, select bank1
  8830  0EB6  1683               	bcf	status, 6	;RP1=0, select bank1
  8831  0EB7  1303               	subwf	(___fldiv@rem+2)^080h,f
  8832  0EB8  02B9               u2938:
  8833  0EB9                     	bcf	status, 5	;RP0=0, select bank0
  8834  0EB9  1283               	bcf	status, 6	;RP1=0, select bank0
  8835  0EBA  1303               	movf	(___fldiv@a+3),w
  8836  0EBB  0863               	skipc
  8837  0EBC  1C03               	incfsz	(___fldiv@a+3),w
  8838  0EBD  0F63               	goto	u2939
  8839  0EBE  2EC0               	goto	u2930
  8840  0EBF  2EC3               u2939:
  8841  0EC0                     	bsf	status, 5	;RP0=1, select bank1
  8842  0EC0  1683               	bcf	status, 6	;RP1=0, select bank1
  8843  0EC1  1303               	subwf	(___fldiv@rem+3)^080h,f
  8844  0EC2  02BA               u2930:
  8845  0EC3                     	bcf	status, 5	;RP0=0, select bank0
  8846  0EC3  1283               	bcf	status, 6	;RP1=0, select bank0
  8847  0EC4  1303               	bsf	status, 5	;RP0=1, select bank1
  8848  0EC5  1683               	bcf	status, 6	;RP1=0, select bank1
  8849  0EC6  1303               
  8850                           	goto	l2451
  8851  0EC7  2EC8               	line	117
  8852                           	
  8853                           l729:	
  8854  0EC8                     	line	118
  8855                           	
  8856                           l2451:	
  8857  0EC8                     	movlw	low(01h)
  8858  0EC8  3001               	bcf	status, 5	;RP0=0, select bank0
  8859  0EC9  1283               	bcf	status, 6	;RP1=0, select bank0
  8860  0ECA  1303               	movwf	(??___fldiv+0)+0
  8861  0ECB  00E8               	movf	(??___fldiv+0)+0,w
  8862  0ECC  0868               	bsf	status, 5	;RP0=1, select bank1
  8863  0ECD  1683               	bcf	status, 6	;RP1=0, select bank1
  8864  0ECE  1303               	addwf	(___fldiv@aexp)^080h,f
  8865  0ECF  07C3               	goto	l2453
  8866  0ED0  2ED1               	line	119
  8867                           	
  8868                           l725:	
  8869  0ED1                     	line	97
  8870                           	
  8871                           l2453:	
  8872  0ED1                     	movlw	low(01Ah)
  8873  0ED1  301A               	subwf	(___fldiv@aexp)^080h,w
  8874  0ED2  0243               	skipc
  8875  0ED3  1C03               	goto	u2941
  8876  0ED4  2ED6               	goto	u2940
  8877  0ED5  2ED7               u2941:
  8878  0ED6                     	goto	l2435
  8879  0ED6  2E47               u2940:
  8880  0ED7                     	goto	l2455
  8881  0ED7  2ED8               	
  8882                           l730:	
  8883  0ED8                     	line	122
  8884                           	
  8885                           l2455:	
  8886  0ED8                     	movf	(___fldiv@rem+3)^080h,w
  8887  0ED8  083A               	iorwf	(___fldiv@rem+2)^080h,w
  8888  0ED9  0439               	iorwf	(___fldiv@rem+1)^080h,w
  8889  0EDA  0438               	iorwf	(___fldiv@rem)^080h,w
  8890  0EDB  0437               	skipnz
  8891  0EDC  1903               	goto	u2951
  8892  0EDD  2EDF               	goto	u2950
  8893  0EDE  2EE0               u2951:
  8894  0EDF                     	goto	l2469
  8895  0EDF  2F0E               u2950:
  8896  0EE0                     	line	123
  8897                           	
  8898                           l2457:	
  8899  0EE0                     	bsf	(___fldiv@grs)^080h+(0/8),(0)&7
  8900  0EE0  143E               	goto	l2469
  8901  0EE1  2F0E               	line	124
  8902                           	
  8903                           l731:	
  8904  0EE2                     	line	127
  8905                           	goto	l2469
  8906  0EE2  2F0E               	
  8907                           l733:	
  8908  0EE3                     	line	128
  8909                           	
  8910                           l2459:	
  8911  0EE3                     	movlw	01h
  8912  0EE3  3001               	bcf	status, 5	;RP0=0, select bank0
  8913  0EE4  1283               	movwf	(??___fldiv+0)+0
  8914  0EE5  00E8               u2965:
  8915  0EE6                     	clrc
  8916  0EE6  1003               	rlf	(___fldiv@b),f
  8917  0EE7  0DE4               	rlf	(___fldiv@b+1),f
  8918  0EE8  0DE5               	rlf	(___fldiv@b+2),f
  8919  0EE9  0DE6               	rlf	(___fldiv@b+3),f
  8920  0EEA  0DE7               	decfsz	(??___fldiv+0)+0
  8921  0EEB  0BE8               	goto	u2965
  8922  0EEC  2EE6               	line	129
  8923                           	
  8924                           l2461:	
  8925  0EED                     	bsf	status, 5	;RP0=1, select bank1
  8926  0EED  1683               	bcf	status, 6	;RP1=0, select bank1
  8927  0EEE  1303               	btfss	(___fldiv@grs+3)^080h,(31)&7
  8928  0EEF  1FC1               	goto	u2971
  8929  0EF0  2EF2               	goto	u2970
  8930  0EF1  2EF3               u2971:
  8931  0EF2                     	goto	l2465
  8932  0EF2  2EF7               u2970:
  8933  0EF3                     	line	130
  8934                           	
  8935                           l2463:	
  8936  0EF3                     	bcf	status, 5	;RP0=0, select bank0
  8937  0EF3  1283               	bcf	status, 6	;RP1=0, select bank0
  8938  0EF4  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  8939  0EF5  1464               	goto	l2465
  8940  0EF6  2EF7               	line	131
  8941                           	
  8942                           l734:	
  8943  0EF7                     	line	132
  8944                           	
  8945                           l2465:	
  8946  0EF7                     	movlw	01h
  8947  0EF7  3001               	bcf	status, 5	;RP0=0, select bank0
  8948  0EF8  1283               	movwf	(??___fldiv+0)+0
  8949  0EF9  00E8               u2985:
  8950  0EFA                     	clrc
  8951  0EFA  1003               	bsf	status, 5	;RP0=1, select bank1
  8952  0EFB  1683               	bcf	status, 6	;RP1=0, select bank1
  8953  0EFC  1303               	rlf	(___fldiv@grs)^080h,f
  8954  0EFD  0DBE               	rlf	(___fldiv@grs+1)^080h,f
  8955  0EFE  0DBF               	rlf	(___fldiv@grs+2)^080h,f
  8956  0EFF  0DC0               	rlf	(___fldiv@grs+3)^080h,f
  8957  0F00  0DC1               	bcf	status, 5	;RP0=0, select bank0
  8958  0F01  1283               	bcf	status, 6	;RP1=0, select bank0
  8959  0F02  1303               	decfsz	(??___fldiv+0)+0
  8960  0F03  0BE8               	goto	u2985
  8961  0F04  2EFA               	line	133
  8962                           	
  8963                           l2467:	
  8964  0F05                     	movlw	0FFh
  8965  0F05  30FF               	bsf	status, 5	;RP0=1, select bank1
  8966  0F06  1683               	bcf	status, 6	;RP1=0, select bank1
  8967  0F07  1303               	addwf	(___fldiv@new_exp)^080h,f
  8968  0F08  07BC               	skipnc
  8969  0F09  1803               	incf	(___fldiv@new_exp+1)^080h,f
  8970  0F0A  0ABD               	movlw	0FFh
  8971  0F0B  30FF               	addwf	(___fldiv@new_exp+1)^080h,f
  8972  0F0C  07BD               	goto	l2469
  8973  0F0D  2F0E               	line	134
  8974                           	
  8975                           l732:	
  8976  0F0E                     	line	127
  8977                           	
  8978                           l2469:	
  8979  0F0E                     	bcf	status, 5	;RP0=0, select bank0
  8980  0F0E  1283               	bcf	status, 6	;RP1=0, select bank0
  8981  0F0F  1303               	btfss	(___fldiv@b+2),(23)&7
  8982  0F10  1FE6               	goto	u2991
  8983  0F11  2F13               	goto	u2990
  8984  0F12  2F14               u2991:
  8985  0F13                     	goto	l2459
  8986  0F13  2EE3               u2990:
  8987  0F14                     	goto	l2471
  8988  0F14  2F15               	
  8989                           l735:	
  8990  0F15                     	line	139
  8991                           	
  8992                           l2471:	
  8993  0F15                     	bsf	status, 5	;RP0=1, select bank1
  8994  0F15  1683               	bcf	status, 6	;RP1=0, select bank1
  8995  0F16  1303               	clrf	(___fldiv@aexp)^080h
  8996  0F17  01C3               	line	140
  8997                           	
  8998                           l2473:	
  8999  0F18                     	btfss	(___fldiv@grs+3)^080h,(31)&7
  9000  0F18  1FC1               	goto	u3001
  9001  0F19  2F1B               	goto	u3000
  9002  0F1A  2F1C               u3001:
  9003  0F1B                     	goto	l2481
  9004  0F1B  2F4E               u3000:
  9005  0F1C                     	line	141
  9006                           	
  9007                           l2475:	
  9008  0F1C                     	movlw	0FFh
  9009  0F1C  30FF               	andwf	(___fldiv@grs)^080h,w
  9010  0F1D  053E               	bcf	status, 5	;RP0=0, select bank0
  9011  0F1E  1283               	bcf	status, 6	;RP1=0, select bank0
  9012  0F1F  1303               	movwf	(??___fldiv+0)+0
  9013  0F20  00E8               	movlw	0FFh
  9014  0F21  30FF               	bsf	status, 5	;RP0=1, select bank1
  9015  0F22  1683               	bcf	status, 6	;RP1=0, select bank1
  9016  0F23  1303               	andwf	(___fldiv@grs+1)^080h,w
  9017  0F24  053F               	bcf	status, 5	;RP0=0, select bank0
  9018  0F25  1283               	bcf	status, 6	;RP1=0, select bank0
  9019  0F26  1303               	movwf	((??___fldiv+0)+0+1)
  9020  0F27  00E9               	movlw	0FFh
  9021  0F28  30FF               	bsf	status, 5	;RP0=1, select bank1
  9022  0F29  1683               	bcf	status, 6	;RP1=0, select bank1
  9023  0F2A  1303               	andwf	(___fldiv@grs+2)^080h,w
  9024  0F2B  0540               	bcf	status, 5	;RP0=0, select bank0
  9025  0F2C  1283               	bcf	status, 6	;RP1=0, select bank0
  9026  0F2D  1303               	movwf	((??___fldiv+0)+0+2)
  9027  0F2E  00EA               	movlw	07Fh
  9028  0F2F  307F               	bsf	status, 5	;RP0=1, select bank1
  9029  0F30  1683               	bcf	status, 6	;RP1=0, select bank1
  9030  0F31  1303               	andwf	(___fldiv@grs+3)^080h,w
  9031  0F32  0541               	bcf	status, 5	;RP0=0, select bank0
  9032  0F33  1283               	bcf	status, 6	;RP1=0, select bank0
  9033  0F34  1303               	movwf	((??___fldiv+0)+0+3)
  9034  0F35  00EB               	movf	3+(??___fldiv+0)+0,w
  9035  0F36  086B               	iorwf	2+(??___fldiv+0)+0,w
  9036  0F37  046A               	iorwf	1+(??___fldiv+0)+0,w
  9037  0F38  0469               	iorwf	0+(??___fldiv+0)+0,w
  9038  0F39  0468               	skipnz
  9039  0F3A  1903               	goto	u3011
  9040  0F3B  2F3D               	goto	u3010
  9041  0F3C  2F3E               u3011:
  9042  0F3D                     	goto	l737
  9043  0F3D  2F43               u3010:
  9044  0F3E                     	line	142
  9045                           	
  9046                           l2477:	
  9047  0F3E                     	bsf	status, 5	;RP0=1, select bank1
  9048  0F3E  1683               	bcf	status, 6	;RP1=0, select bank1
  9049  0F3F  1303               	clrf	(___fldiv@aexp)^080h
  9050  0F40  01C3               	incf	(___fldiv@aexp)^080h,f
  9051  0F41  0AC3               	line	143
  9052                           	goto	l2481
  9053  0F42  2F4E               	line	144
  9054                           	
  9055                           l737:	
  9056  0F43                     	line	145
  9057                           	btfss	(___fldiv@b),(0)&7
  9058  0F43  1C64               	goto	u3021
  9059  0F44  2F46               	goto	u3020
  9060  0F45  2F47               u3021:
  9061  0F46                     	goto	l2481
  9062  0F46  2F4E               u3020:
  9063  0F47                     	line	146
  9064                           	
  9065                           l2479:	
  9066  0F47                     	bsf	status, 5	;RP0=1, select bank1
  9067  0F47  1683               	bcf	status, 6	;RP1=0, select bank1
  9068  0F48  1303               	clrf	(___fldiv@aexp)^080h
  9069  0F49  01C3               	incf	(___fldiv@aexp)^080h,f
  9070  0F4A  0AC3               	goto	l2481
  9071  0F4B  2F4E               	line	147
  9072                           	
  9073                           l739:	
  9074  0F4C                     	goto	l2481
  9075  0F4C  2F4E               	line	148
  9076                           	
  9077                           l738:	
  9078  0F4D                     	goto	l2481
  9079  0F4D  2F4E               	line	149
  9080                           	
  9081                           l736:	
  9082  0F4E                     	line	150
  9083                           	
  9084                           l2481:	
  9085  0F4E                     	bsf	status, 5	;RP0=1, select bank1
  9086  0F4E  1683               	bcf	status, 6	;RP1=0, select bank1
  9087  0F4F  1303               	movf	((___fldiv@aexp)^080h),w
  9088  0F50  0843               	btfsc	status,2
  9089  0F51  1903               	goto	u3031
  9090  0F52  2F54               	goto	u3030
  9091  0F53  2F55               u3031:
  9092  0F54                     	goto	l2491
  9093  0F54  2F8C               u3030:
  9094  0F55                     	line	151
  9095                           	
  9096                           l2483:	
  9097  0F55                     	movlw	01h
  9098  0F55  3001               	bcf	status, 5	;RP0=0, select bank0
  9099  0F56  1283               	bcf	status, 6	;RP1=0, select bank0
  9100  0F57  1303               	addwf	(___fldiv@b),f
  9101  0F58  07E4               	movlw	0
  9102  0F59  3000               	skipnc
  9103  0F5A  1803               movlw 1
  9104  0F5B  3001               	addwf	(___fldiv@b+1),f
  9105  0F5C  07E5               	movlw	0
  9106  0F5D  3000               	skipnc
  9107  0F5E  1803               movlw 1
  9108  0F5F  3001               	addwf	(___fldiv@b+2),f
  9109  0F60  07E6               	movlw	0
  9110  0F61  3000               	skipnc
  9111  0F62  1803               movlw 1
  9112  0F63  3001               	addwf	(___fldiv@b+3),f
  9113  0F64  07E7               	line	152
  9114                           	
  9115                           l2485:	
  9116  0F65                     	btfss	(___fldiv@b+3),(24)&7
  9117  0F65  1C67               	goto	u3041
  9118  0F66  2F68               	goto	u3040
  9119  0F67  2F69               u3041:
  9120  0F68                     	goto	l2491
  9121  0F68  2F8C               u3040:
  9122  0F69                     	line	153
  9123                           	
  9124                           l2487:	
  9125  0F69                     	movf	(___fldiv@b),w
  9126  0F69  0864               	movwf	(??___fldiv+0)+0
  9127  0F6A  00E8               	movf	(___fldiv@b+1),w
  9128  0F6B  0865               	movwf	((??___fldiv+0)+0+1)
  9129  0F6C  00E9               	movf	(___fldiv@b+2),w
  9130  0F6D  0866               	movwf	((??___fldiv+0)+0+2)
  9131  0F6E  00EA               	movf	(___fldiv@b+3),w
  9132  0F6F  0867               	movwf	((??___fldiv+0)+0+3)
  9133  0F70  00EB               	movlw	01h
  9134  0F71  3001               	movwf	(??___fldiv+4)+0
  9135  0F72  00EC               u3055:
  9136  0F73                     	rlf	(??___fldiv+0)+3,w
  9137  0F73  0D6B               	rrf	(??___fldiv+0)+3,f
  9138  0F74  0CEB               	rrf	(??___fldiv+0)+2,f
  9139  0F75  0CEA               	rrf	(??___fldiv+0)+1,f
  9140  0F76  0CE9               	rrf	(??___fldiv+0)+0,f
  9141  0F77  0CE8               u3050:
  9142  0F78                     	decfsz	(??___fldiv+4)+0,f
  9143  0F78  0BEC               	goto	u3055
  9144  0F79  2F73               	movf	3+(??___fldiv+0)+0,w
  9145  0F7A  086B               	movwf	(___fldiv@b+3)
  9146  0F7B  00E7               	movf	2+(??___fldiv+0)+0,w
  9147  0F7C  086A               	movwf	(___fldiv@b+2)
  9148  0F7D  00E6               	movf	1+(??___fldiv+0)+0,w
  9149  0F7E  0869               	movwf	(___fldiv@b+1)
  9150  0F7F  00E5               	movf	0+(??___fldiv+0)+0,w
  9151  0F80  0868               	movwf	(___fldiv@b)
  9152  0F81  00E4               
  9153                           	line	154
  9154                           	
  9155                           l2489:	
  9156  0F82                     	movlw	01h
  9157  0F82  3001               	bsf	status, 5	;RP0=1, select bank1
  9158  0F83  1683               	bcf	status, 6	;RP1=0, select bank1
  9159  0F84  1303               	addwf	(___fldiv@new_exp)^080h,f
  9160  0F85  07BC               	skipnc
  9161  0F86  1803               	incf	(___fldiv@new_exp+1)^080h,f
  9162  0F87  0ABD               	movlw	0
  9163  0F88  3000               	addwf	(___fldiv@new_exp+1)^080h,f
  9164  0F89  07BD               	goto	l2491
  9165  0F8A  2F8C               	line	155
  9166                           	
  9167                           l741:	
  9168  0F8B                     	goto	l2491
  9169  0F8B  2F8C               	line	156
  9170                           	
  9171                           l740:	
  9172  0F8C                     	line	159
  9173                           	
  9174                           l2491:	
  9175  0F8C                     	bsf	status, 5	;RP0=1, select bank1
  9176  0F8C  1683               	bcf	status, 6	;RP1=0, select bank1
  9177  0F8D  1303               	movf	(___fldiv@new_exp+1)^080h,w
  9178  0F8E  083D               	xorlw	80h
  9179  0F8F  3A80               	movwf	btemp+1
  9180  0F90  00FF               	movlw	(0)^80h
  9181  0F91  3080               	subwf	btemp+1,w
  9182  0F92  027F               	skipz
  9183  0F93  1D03               	goto	u3065
  9184  0F94  2F97               	movlw	0FFh
  9185  0F95  30FF               	subwf	(___fldiv@new_exp)^080h,w
  9186  0F96  023C               u3065:
  9187  0F97                     
  9188                           	skipc
  9189  0F97  1C03               	goto	u3061
  9190  0F98  2F9A               	goto	u3060
  9191  0F99  2F9B               u3061:
  9192  0F9A                     	goto	l2495
  9193  0F9A  2FAC               u3060:
  9194  0F9B                     	line	160
  9195                           	
  9196                           l2493:	
  9197  0F9B                     	movlw	0FFh
  9198  0F9B  30FF               	bsf	status, 5	;RP0=1, select bank1
  9199  0F9C  1683               	bcf	status, 6	;RP1=0, select bank1
  9200  0F9D  1303               	movwf	(___fldiv@new_exp)^080h
  9201  0F9E  00BC               	movlw	0
  9202  0F9F  3000               	movwf	((___fldiv@new_exp)^080h)+1
  9203  0FA0  00BD               	line	161
  9204                           	movlw	high highword(0)
  9205  0FA1  3000               	bcf	status, 5	;RP0=0, select bank0
  9206  0FA2  1283               	bcf	status, 6	;RP1=0, select bank0
  9207  0FA3  1303               	movwf	(___fldiv@b+3)
  9208  0FA4  00E7               	movlw	low highword(0)
  9209  0FA5  3000               	movwf	(___fldiv@b+2)
  9210  0FA6  00E6               	movlw	high(0)
  9211  0FA7  3000               	movwf	(___fldiv@b+1)
  9212  0FA8  00E5               	movlw	low(0)
  9213  0FA9  3000               	movwf	(___fldiv@b)
  9214  0FAA  00E4               
  9215                           	goto	l2495
  9216  0FAB  2FAC               	line	162
  9217                           	
  9218                           l742:	
  9219  0FAC                     	line	165
  9220                           	
  9221                           l2495:	
  9222  0FAC                     	bsf	status, 5	;RP0=1, select bank1
  9223  0FAC  1683               	bcf	status, 6	;RP1=0, select bank1
  9224  0FAD  1303               	movf	(___fldiv@new_exp+1)^080h,w
  9225  0FAE  083D               	xorlw	80h
  9226  0FAF  3A80               	movwf	btemp+1
  9227  0FB0  00FF               	movlw	(0)^80h
  9228  0FB1  3080               	subwf	btemp+1,w
  9229  0FB2  027F               	skipz
  9230  0FB3  1D03               	goto	u3075
  9231  0FB4  2FB7               	movlw	01h
  9232  0FB5  3001               	subwf	(___fldiv@new_exp)^080h,w
  9233  0FB6  023C               u3075:
  9234  0FB7                     
  9235                           	skipnc
  9236  0FB7  1803               	goto	u3071
  9237  0FB8  2FBA               	goto	u3070
  9238  0FB9  2FBB               u3071:
  9239  0FBA                     	goto	l743
  9240  0FBA  2FCC               u3070:
  9241  0FBB                     	line	166
  9242                           	
  9243                           l2497:	
  9244  0FBB                     	bsf	status, 5	;RP0=1, select bank1
  9245  0FBB  1683               	bcf	status, 6	;RP1=0, select bank1
  9246  0FBC  1303               	clrf	(___fldiv@new_exp)^080h
  9247  0FBD  01BC               	clrf	(___fldiv@new_exp+1)^080h
  9248  0FBE  01BD               	line	167
  9249                           	
  9250                           l2499:	
  9251  0FBF                     	movlw	high highword(0)
  9252  0FBF  3000               	bcf	status, 5	;RP0=0, select bank0
  9253  0FC0  1283               	bcf	status, 6	;RP1=0, select bank0
  9254  0FC1  1303               	movwf	(___fldiv@b+3)
  9255  0FC2  00E7               	movlw	low highword(0)
  9256  0FC3  3000               	movwf	(___fldiv@b+2)
  9257  0FC4  00E6               	movlw	high(0)
  9258  0FC5  3000               	movwf	(___fldiv@b+1)
  9259  0FC6  00E5               	movlw	low(0)
  9260  0FC7  3000               	movwf	(___fldiv@b)
  9261  0FC8  00E4               
  9262                           	line	169
  9263                           	
  9264                           l2501:	
  9265  0FC9                     	bsf	status, 5	;RP0=1, select bank1
  9266  0FC9  1683               	bcf	status, 6	;RP1=0, select bank1
  9267  0FCA  1303               	clrf	(___fldiv@sign)^080h
  9268  0FCB  01BB               	line	170
  9269                           	
  9270                           l743:	
  9271  0FCC                     	line	173
  9272                           	bsf	status, 5	;RP0=1, select bank1
  9273  0FCC  1683               	bcf	status, 6	;RP1=0, select bank1
  9274  0FCD  1303               	movf	(___fldiv@new_exp)^080h,w
  9275  0FCE  083C               	bcf	status, 5	;RP0=0, select bank0
  9276  0FCF  1283               	bcf	status, 6	;RP1=0, select bank0
  9277  0FD0  1303               	movwf	(??___fldiv+0)+0
  9278  0FD1  00E8               	movf	(??___fldiv+0)+0,w
  9279  0FD2  0868               	bsf	status, 5	;RP0=1, select bank1
  9280  0FD3  1683               	bcf	status, 6	;RP1=0, select bank1
  9281  0FD4  1303               	movwf	(___fldiv@bexp)^080h
  9282  0FD5  00C2               	line	175
  9283                           	
  9284                           l2503:	
  9285  0FD6                     	btfss	(___fldiv@bexp)^080h,(0)&7
  9286  0FD6  1C42               	goto	u3081
  9287  0FD7  2FD9               	goto	u3080
  9288  0FD8  2FDA               u3081:
  9289  0FD9                     	goto	l2507
  9290  0FD9  2FDE               u3080:
  9291  0FDA                     	line	176
  9292                           	
  9293                           l2505:	
  9294  0FDA                     	bcf	status, 5	;RP0=0, select bank0
  9295  0FDA  1283               	bcf	status, 6	;RP1=0, select bank0
  9296  0FDB  1303               	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  9297  0FDC  17E6               	line	177
  9298                           	goto	l745
  9299  0FDD  2FE3               	line	179
  9300                           	
  9301                           l744:	
  9302  0FDE                     	line	180
  9303                           	
  9304                           l2507:	
  9305  0FDE                     	movlw	low(07Fh)
  9306  0FDE  307F               	bcf	status, 5	;RP0=0, select bank0
  9307  0FDF  1283               	movwf	(??___fldiv+0)+0
  9308  0FE0  00E8               	movf	(??___fldiv+0)+0,w
  9309  0FE1  0868               	andwf	0+(___fldiv@b)+02h,f
  9310  0FE2  05E6               	line	181
  9311                           	
  9312                           l745:	
  9313  0FE3                     	line	182
  9314                           	bsf	status, 5	;RP0=1, select bank1
  9315  0FE3  1683               	bcf	status, 6	;RP1=0, select bank1
  9316  0FE4  1303               	movf	(___fldiv@bexp)^080h,w
  9317  0FE5  0842               	bcf	status, 5	;RP0=0, select bank0
  9318  0FE6  1283               	bcf	status, 6	;RP1=0, select bank0
  9319  0FE7  1303               	movwf	(??___fldiv+0)+0
  9320  0FE8  00E8               	clrc
  9321  0FE9  1003               	rrf	(??___fldiv+0)+0,w
  9322  0FEA  0C68               	movwf	(??___fldiv+1)+0
  9323  0FEB  00E9               	movf	(??___fldiv+1)+0,w
  9324  0FEC  0869               	movwf	0+(___fldiv@b)+03h
  9325  0FED  00E7               	line	183
  9326                           	bsf	status, 5	;RP0=1, select bank1
  9327  0FEE  1683               	bcf	status, 6	;RP1=0, select bank1
  9328  0FEF  1303               	movf	(___fldiv@sign)^080h,w
  9329  0FF0  083B               	bcf	status, 5	;RP0=0, select bank0
  9330  0FF1  1283               	bcf	status, 6	;RP1=0, select bank0
  9331  0FF2  1303               	movwf	(??___fldiv+0)+0
  9332  0FF3  00E8               	movf	(??___fldiv+0)+0,w
  9333  0FF4  0868               	iorwf	0+(___fldiv@b)+03h,f
  9334  0FF5  04E7               	line	184
  9335                           	
  9336                           l2509:	
  9337  0FF6                     	movf	(___fldiv@b+3),w
  9338  0FF6  0867               	movwf	(?___fldiv+3)
  9339  0FF7  00E3               	movf	(___fldiv@b+2),w
  9340  0FF8  0866               	movwf	(?___fldiv+2)
  9341  0FF9  00E2               	movf	(___fldiv@b+1),w
  9342  0FFA  0865               	movwf	(?___fldiv+1)
  9343  0FFB  00E1               	movf	(___fldiv@b),w
  9344  0FFC  0864               	movwf	(?___fldiv)
  9345  0FFD  00E0               
  9346                           	goto	l723
  9347  0FFE  2FFF               	
  9348                           l2511:	
  9349  0FFF                     	line	185
  9350                           	
  9351                           l723:	
  9352  0FFF                     	return
  9353  0FFF  0008               	opt stack 0
  9354                           GLOBAL	__end_of___fldiv
  9355                           	__end_of___fldiv:
  9356  1000                     	signat	___fldiv,8316
  9357                           	global	___fladd
  9358                           
  9359 ;; *************** function ___fladd *****************
  9360 ;; Defined at:
  9361 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  b               4   14[BANK0 ] unsigned char 
  9364 ;;  a               4   18[BANK0 ] unsigned char 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  grs             1   37[BANK0 ] unsigned char 
  9367 ;;  bexp            1   36[BANK0 ] unsigned char 
  9368 ;;  aexp            1   35[BANK0 ] unsigned char 
  9369 ;;  signs           1   34[BANK0 ] unsigned char 
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  4   14[BANK0 ] unsigned char 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0, btemp+1
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9379 ;;      Params:         0       8       0       0       0
  9380 ;;      Locals:         0       4       0       0       0
  9381 ;;      Temps:          0      12       0       0       0
  9382 ;;      Totals:         0      24       0       0       0
  9383 ;;Total ram usage:       24 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    1
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_main
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
  9393                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  9394                           	line	10
  9395                           global __ptext25
  9396                           __ptext25:	;psect for function ___fladd
  9397  0A76                     psect	text25
  9398                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  9399                           	line	10
  9400                           	global	__size_of___fladd
  9401                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  9402  02BC                     	
  9403                           ___fladd:	
  9404  0A76                     ;incstack = 0
  9405                           	opt	stack 6
  9406                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9407                           	line	21
  9408                           	
  9409                           l2177:	
  9410  0A76                     	bcf	status, 5	;RP0=0, select bank0
  9411  0A76  1283               	bcf	status, 6	;RP1=0, select bank0
  9412  0A77  1303               	movf	0+(___fladd@b)+03h,w
  9413  0A78  0831               	andlw	080h
  9414  0A79  3980               	movwf	(??___fladd+0)+0
  9415  0A7A  00B6               	movf	(??___fladd+0)+0,w
  9416  0A7B  0836               	movwf	(___fladd@signs)
  9417  0A7C  00C2               	line	22
  9418                           	
  9419                           l2179:	
  9420  0A7D                     	movf	0+(___fladd@b)+03h,w
  9421  0A7D  0831               	movwf	(??___fladd+0)+0
  9422  0A7E  00B6               	addwf	(??___fladd+0)+0,w
  9423  0A7F  0736               	movwf	(??___fladd+1)+0
  9424  0A80  00B7               	movf	(??___fladd+1)+0,w
  9425  0A81  0837               	movwf	(___fladd@bexp)
  9426  0A82  00C4               	line	23
  9427                           	
  9428                           l2181:	
  9429  0A83                     	btfss	0+(___fladd@b)+02h,(7)&7
  9430  0A83  1FB0               	goto	u2331
  9431  0A84  2A86               	goto	u2330
  9432  0A85  2A87               u2331:
  9433  0A86                     	goto	l2185
  9434  0A86  2A89               u2330:
  9435  0A87                     	line	24
  9436                           	
  9437                           l2183:	
  9438  0A87                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  9439  0A87  1444               	goto	l2185
  9440  0A88  2A89               	line	25
  9441                           	
  9442                           l657:	
  9443  0A89                     	line	28
  9444                           	
  9445                           l2185:	
  9446  0A89                     	movf	((___fladd@bexp)),w
  9447  0A89  0844               	btfsc	status,2
  9448  0A8A  1903               	goto	u2341
  9449  0A8B  2A8D               	goto	u2340
  9450  0A8C  2A8E               u2341:
  9451  0A8D                     	goto	l2195
  9452  0A8D  2A9F               u2340:
  9453  0A8E                     	line	30
  9454                           	
  9455                           l2187:	
  9456  0A8E                     		incf	((___fladd@bexp)),w
  9457  0A8E  0A44               	btfss	status,2
  9458  0A8F  1D03               	goto	u2351
  9459  0A90  2A92               	goto	u2350
  9460  0A91  2A93               u2351:
  9461  0A92                     	goto	l2191
  9462  0A92  2A9C               u2350:
  9463  0A93                     	line	32
  9464                           	
  9465                           l2189:	
  9466  0A93                     	movlw	0x0
  9467  0A93  3000               	movwf	(___fladd@b+3)
  9468  0A94  00B1               	movlw	0x0
  9469  0A95  3000               	movwf	(___fladd@b+2)
  9470  0A96  00B0               	movlw	0x0
  9471  0A97  3000               	movwf	(___fladd@b+1)
  9472  0A98  00AF               	movlw	0x0
  9473  0A99  3000               	movwf	(___fladd@b)
  9474  0A9A  00AE               
  9475                           	goto	l2191
  9476  0A9B  2A9C               	line	33
  9477                           	
  9478                           l659:	
  9479  0A9C                     	line	35
  9480                           	
  9481                           l2191:	
  9482  0A9C                     	bsf	(___fladd@b)+(23/8),(23)&7
  9483  0A9C  17B0               	line	37
  9484                           	
  9485                           l2193:	
  9486  0A9D                     	clrf	0+(___fladd@b)+03h
  9487  0A9D  01B1               	line	38
  9488                           	goto	l2197
  9489  0A9E  2AA8               	line	39
  9490                           	
  9491                           l658:	
  9492  0A9F                     	line	41
  9493                           	
  9494                           l2195:	
  9495  0A9F                     	movlw	0x0
  9496  0A9F  3000               	movwf	(___fladd@b+3)
  9497  0AA0  00B1               	movlw	0x0
  9498  0AA1  3000               	movwf	(___fladd@b+2)
  9499  0AA2  00B0               	movlw	0x0
  9500  0AA3  3000               	movwf	(___fladd@b+1)
  9501  0AA4  00AF               	movlw	0x0
  9502  0AA5  3000               	movwf	(___fladd@b)
  9503  0AA6  00AE               
  9504                           	goto	l2197
  9505  0AA7  2AA8               	line	42
  9506                           	
  9507                           l660:	
  9508  0AA8                     	line	44
  9509                           	
  9510                           l2197:	
  9511  0AA8                     	movf	0+(___fladd@a)+03h,w
  9512  0AA8  0835               	andlw	080h
  9513  0AA9  3980               	movwf	(??___fladd+0)+0
  9514  0AAA  00B6               	movf	(??___fladd+0)+0,w
  9515  0AAB  0836               	movwf	(___fladd@aexp)
  9516  0AAC  00C3               	line	46
  9517                           	
  9518                           l2199:	
  9519  0AAD                     	movf	(___fladd@aexp),w
  9520  0AAD  0843               	xorwf	(___fladd@signs),w
  9521  0AAE  0642               	skipnz
  9522  0AAF  1903               	goto	u2361
  9523  0AB0  2AB2               	goto	u2360
  9524  0AB1  2AB3               u2361:
  9525  0AB2                     	goto	l2203
  9526  0AB2  2AB5               u2360:
  9527  0AB3                     	line	47
  9528                           	
  9529                           l2201:	
  9530  0AB3                     	bsf	(___fladd@signs)+(6/8),(6)&7
  9531  0AB3  1742               	goto	l2203
  9532  0AB4  2AB5               	line	48
  9533                           	
  9534                           l661:	
  9535  0AB5                     	line	49
  9536                           	
  9537                           l2203:	
  9538  0AB5                     	movf	0+(___fladd@a)+03h,w
  9539  0AB5  0835               	movwf	(??___fladd+0)+0
  9540  0AB6  00B6               	addwf	(??___fladd+0)+0,w
  9541  0AB7  0736               	movwf	(??___fladd+1)+0
  9542  0AB8  00B7               	movf	(??___fladd+1)+0,w
  9543  0AB9  0837               	movwf	(___fladd@aexp)
  9544  0ABA  00C3               	line	50
  9545                           	
  9546                           l2205:	
  9547  0ABB                     	btfss	0+(___fladd@a)+02h,(7)&7
  9548  0ABB  1FB4               	goto	u2371
  9549  0ABC  2ABE               	goto	u2370
  9550  0ABD  2ABF               u2371:
  9551  0ABE                     	goto	l2209
  9552  0ABE  2AC1               u2370:
  9553  0ABF                     	line	51
  9554                           	
  9555                           l2207:	
  9556  0ABF                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  9557  0ABF  1443               	goto	l2209
  9558  0AC0  2AC1               	line	52
  9559                           	
  9560                           l662:	
  9561  0AC1                     	line	55
  9562                           	
  9563                           l2209:	
  9564  0AC1                     	movf	((___fladd@aexp)),w
  9565  0AC1  0843               	btfsc	status,2
  9566  0AC2  1903               	goto	u2381
  9567  0AC3  2AC5               	goto	u2380
  9568  0AC4  2AC6               u2381:
  9569  0AC5                     	goto	l2219
  9570  0AC5  2AD7               u2380:
  9571  0AC6                     	line	57
  9572                           	
  9573                           l2211:	
  9574  0AC6                     		incf	((___fladd@aexp)),w
  9575  0AC6  0A43               	btfss	status,2
  9576  0AC7  1D03               	goto	u2391
  9577  0AC8  2ACA               	goto	u2390
  9578  0AC9  2ACB               u2391:
  9579  0ACA                     	goto	l2215
  9580  0ACA  2AD4               u2390:
  9581  0ACB                     	line	59
  9582                           	
  9583                           l2213:	
  9584  0ACB                     	movlw	0x0
  9585  0ACB  3000               	movwf	(___fladd@a+3)
  9586  0ACC  00B5               	movlw	0x0
  9587  0ACD  3000               	movwf	(___fladd@a+2)
  9588  0ACE  00B4               	movlw	0x0
  9589  0ACF  3000               	movwf	(___fladd@a+1)
  9590  0AD0  00B3               	movlw	0x0
  9591  0AD1  3000               	movwf	(___fladd@a)
  9592  0AD2  00B2               
  9593                           	goto	l2215
  9594  0AD3  2AD4               	line	60
  9595                           	
  9596                           l664:	
  9597  0AD4                     	line	62
  9598                           	
  9599                           l2215:	
  9600  0AD4                     	bsf	(___fladd@a)+(23/8),(23)&7
  9601  0AD4  17B4               	line	64
  9602                           	
  9603                           l2217:	
  9604  0AD5                     	clrf	0+(___fladd@a)+03h
  9605  0AD5  01B5               	line	65
  9606                           	goto	l665
  9607  0AD6  2ADF               	line	66
  9608                           	
  9609                           l663:	
  9610  0AD7                     	line	68
  9611                           	
  9612                           l2219:	
  9613  0AD7                     	movlw	0x0
  9614  0AD7  3000               	movwf	(___fladd@a+3)
  9615  0AD8  00B5               	movlw	0x0
  9616  0AD9  3000               	movwf	(___fladd@a+2)
  9617  0ADA  00B4               	movlw	0x0
  9618  0ADB  3000               	movwf	(___fladd@a+1)
  9619  0ADC  00B3               	movlw	0x0
  9620  0ADD  3000               	movwf	(___fladd@a)
  9621  0ADE  00B2               
  9622                           	line	69
  9623                           	
  9624                           l665:	
  9625  0ADF                     	line	75
  9626                           	movf	(___fladd@bexp),w
  9627  0ADF  0844               	subwf	(___fladd@aexp),w
  9628  0AE0  0243               	skipnc
  9629  0AE1  1803               	goto	u2401
  9630  0AE2  2AE4               	goto	u2400
  9631  0AE3  2AE5               u2401:
  9632  0AE4                     	goto	l2255
  9633  0AE4  2B2B               u2400:
  9634  0AE5                     	line	77
  9635                           	
  9636                           l2221:	
  9637  0AE5                     	btfss	(___fladd@signs),(6)&7
  9638  0AE5  1F42               	goto	u2411
  9639  0AE6  2AE8               	goto	u2410
  9640  0AE7  2AE9               u2411:
  9641  0AE8                     	goto	l2225
  9642  0AE8  2AEE               u2410:
  9643  0AE9                     	line	78
  9644                           	
  9645                           l2223:	
  9646  0AE9                     	movlw	low(080h)
  9647  0AE9  3080               	movwf	(??___fladd+0)+0
  9648  0AEA  00B6               	movf	(??___fladd+0)+0,w
  9649  0AEB  0836               	xorwf	(___fladd@signs),f
  9650  0AEC  06C2               	goto	l2225
  9651  0AED  2AEE               	line	79
  9652                           	
  9653                           l667:	
  9654  0AEE                     	line	81
  9655                           	
  9656                           l2225:	
  9657  0AEE                     	movf	(___fladd@bexp),w
  9658  0AEE  0844               	movwf	(??___fladd+0)+0
  9659  0AEF  00B6               	movf	(??___fladd+0)+0,w
  9660  0AF0  0836               	movwf	(___fladd@grs)
  9661  0AF1  00C5               	line	82
  9662                           	
  9663                           l2227:	
  9664  0AF2                     	movf	(___fladd@aexp),w
  9665  0AF2  0843               	movwf	(??___fladd+0)+0
  9666  0AF3  00B6               	movf	(??___fladd+0)+0,w
  9667  0AF4  0836               	movwf	(___fladd@bexp)
  9668  0AF5  00C4               	line	83
  9669                           	
  9670                           l2229:	
  9671  0AF6                     	movf	(___fladd@grs),w
  9672  0AF6  0845               	movwf	(??___fladd+0)+0
  9673  0AF7  00B6               	movf	(??___fladd+0)+0,w
  9674  0AF8  0836               	movwf	(___fladd@aexp)
  9675  0AF9  00C3               	line	84
  9676                           	
  9677                           l2231:	
  9678  0AFA                     	movf	(___fladd@b),w
  9679  0AFA  082E               	movwf	(??___fladd+0)+0
  9680  0AFB  00B6               	movf	(??___fladd+0)+0,w
  9681  0AFC  0836               	movwf	(___fladd@grs)
  9682  0AFD  00C5               	line	85
  9683                           	
  9684                           l2233:	
  9685  0AFE                     	movf	(___fladd@a),w
  9686  0AFE  0832               	movwf	(??___fladd+0)+0
  9687  0AFF  00B6               	movf	(??___fladd+0)+0,w
  9688  0B00  0836               	movwf	(___fladd@b)
  9689  0B01  00AE               	line	86
  9690                           	
  9691                           l2235:	
  9692  0B02                     	movf	(___fladd@grs),w
  9693  0B02  0845               	movwf	(??___fladd+0)+0
  9694  0B03  00B6               	movf	(??___fladd+0)+0,w
  9695  0B04  0836               	movwf	(___fladd@a)
  9696  0B05  00B2               	line	87
  9697                           	
  9698                           l2237:	
  9699  0B06                     	movf	0+(___fladd@b)+01h,w
  9700  0B06  082F               	movwf	(??___fladd+0)+0
  9701  0B07  00B6               	movf	(??___fladd+0)+0,w
  9702  0B08  0836               	movwf	(___fladd@grs)
  9703  0B09  00C5               	line	88
  9704                           	
  9705                           l2239:	
  9706  0B0A                     	movf	0+(___fladd@a)+01h,w
  9707  0B0A  0833               	movwf	(??___fladd+0)+0
  9708  0B0B  00B6               	movf	(??___fladd+0)+0,w
  9709  0B0C  0836               	movwf	0+(___fladd@b)+01h
  9710  0B0D  00AF               	line	89
  9711                           	
  9712                           l2241:	
  9713  0B0E                     	movf	(___fladd@grs),w
  9714  0B0E  0845               	movwf	(??___fladd+0)+0
  9715  0B0F  00B6               	movf	(??___fladd+0)+0,w
  9716  0B10  0836               	movwf	0+(___fladd@a)+01h
  9717  0B11  00B3               	line	90
  9718                           	
  9719                           l2243:	
  9720  0B12                     	movf	0+(___fladd@b)+02h,w
  9721  0B12  0830               	movwf	(??___fladd+0)+0
  9722  0B13  00B6               	movf	(??___fladd+0)+0,w
  9723  0B14  0836               	movwf	(___fladd@grs)
  9724  0B15  00C5               	line	91
  9725                           	
  9726                           l2245:	
  9727  0B16                     	movf	0+(___fladd@a)+02h,w
  9728  0B16  0834               	movwf	(??___fladd+0)+0
  9729  0B17  00B6               	movf	(??___fladd+0)+0,w
  9730  0B18  0836               	movwf	0+(___fladd@b)+02h
  9731  0B19  00B0               	line	92
  9732                           	
  9733                           l2247:	
  9734  0B1A                     	movf	(___fladd@grs),w
  9735  0B1A  0845               	movwf	(??___fladd+0)+0
  9736  0B1B  00B6               	movf	(??___fladd+0)+0,w
  9737  0B1C  0836               	movwf	0+(___fladd@a)+02h
  9738  0B1D  00B4               	line	93
  9739                           	
  9740                           l2249:	
  9741  0B1E                     	movf	0+(___fladd@b)+03h,w
  9742  0B1E  0831               	movwf	(??___fladd+0)+0
  9743  0B1F  00B6               	movf	(??___fladd+0)+0,w
  9744  0B20  0836               	movwf	(___fladd@grs)
  9745  0B21  00C5               	line	94
  9746                           	
  9747                           l2251:	
  9748  0B22                     	movf	0+(___fladd@a)+03h,w
  9749  0B22  0835               	movwf	(??___fladd+0)+0
  9750  0B23  00B6               	movf	(??___fladd+0)+0,w
  9751  0B24  0836               	movwf	0+(___fladd@b)+03h
  9752  0B25  00B1               	line	95
  9753                           	
  9754                           l2253:	
  9755  0B26                     	movf	(___fladd@grs),w
  9756  0B26  0845               	movwf	(??___fladd+0)+0
  9757  0B27  00B6               	movf	(??___fladd+0)+0,w
  9758  0B28  0836               	movwf	0+(___fladd@a)+03h
  9759  0B29  00B5               	goto	l2255
  9760  0B2A  2B2B               	line	96
  9761                           	
  9762                           l666:	
  9763  0B2B                     	line	98
  9764                           	
  9765                           l2255:	
  9766  0B2B                     	clrf	(___fladd@grs)
  9767  0B2B  01C5               	line	100
  9768                           	
  9769                           l2257:	
  9770  0B2C                     	movf	(___fladd@bexp),w
  9771  0B2C  0844               	movwf	(??___fladd+0)+0
  9772  0B2D  00B6               	clrf	(??___fladd+0)+0+1
  9773  0B2E  01B7               	comf	(??___fladd+0)+0,f
  9774  0B2F  09B6               	comf	(??___fladd+0)+1,f
  9775  0B30  09B7               	incf	(??___fladd+0)+0,f
  9776  0B31  0AB6               	skipnz
  9777  0B32  1903               	incf	(??___fladd+0)+1,f
  9778  0B33  0AB7               	movf	(___fladd@aexp),w
  9779  0B34  0843               	addwf	0+(??___fladd+0)+0,w
  9780  0B35  0736               	movwf	(??___fladd+2)+0
  9781  0B36  00B8               	movf	1+(??___fladd+0)+0,w
  9782  0B37  0837               	skipnc
  9783  0B38  1803               	incf	1+(??___fladd+0)+0,w
  9784  0B39  0A37               	movwf	((??___fladd+2)+0)+1
  9785  0B3A  00B9               	movf	1+(??___fladd+2)+0,w
  9786  0B3B  0839               	xorlw	80h
  9787  0B3C  3A80               	movwf	btemp+1
  9788  0B3D  00FF               	movlw	(0)^80h
  9789  0B3E  3080               	subwf	btemp+1,w
  9790  0B3F  027F               	skipz
  9791  0B40  1D03               	goto	u2425
  9792  0B41  2B44               	movlw	01Ah
  9793  0B42  301A               	subwf	0+(??___fladd+2)+0,w
  9794  0B43  0238               u2425:
  9795  0B44                     
  9796                           	skipc
  9797  0B44  1C03               	goto	u2421
  9798  0B45  2B47               	goto	u2420
  9799  0B46  2B48               u2421:
  9800  0B47                     	goto	l2273
  9801  0B47  2B89               u2420:
  9802  0B48                     	line	101
  9803                           	
  9804                           l2259:	
  9805  0B48                     	bcf	status, 5	;RP0=0, select bank0
  9806  0B48  1283               	bcf	status, 6	;RP1=0, select bank0
  9807  0B49  1303               	movf	(___fladd@b+3),w
  9808  0B4A  0831               	iorwf	(___fladd@b+2),w
  9809  0B4B  0430               	iorwf	(___fladd@b+1),w
  9810  0B4C  042F               	iorwf	(___fladd@b),w
  9811  0B4D  042E               	skipz
  9812  0B4E  1D03               	goto	u2431
  9813  0B4F  2B51               	goto	u2430
  9814  0B50  2B53               u2431:
  9815  0B51                     	movlw	1
  9816  0B51  3001               	goto	u2440
  9817  0B52  2B54               u2430:
  9818  0B53                     	movlw	0
  9819  0B53  3000               u2440:
  9820  0B54                     	movwf	(??___fladd+0)+0
  9821  0B54  00B6               	movf	(??___fladd+0)+0,w
  9822  0B55  0836               	movwf	(___fladd@grs)
  9823  0B56  00C5               	line	102
  9824                           	movlw	high highword(0)
  9825  0B57  3000               	movwf	(___fladd@b+3)
  9826  0B58  00B1               	movlw	low highword(0)
  9827  0B59  3000               	movwf	(___fladd@b+2)
  9828  0B5A  00B0               	movlw	high(0)
  9829  0B5B  3000               	movwf	(___fladd@b+1)
  9830  0B5C  00AF               	movlw	low(0)
  9831  0B5D  3000               	movwf	(___fladd@b)
  9832  0B5E  00AE               
  9833                           	line	103
  9834                           	movf	(___fladd@aexp),w
  9835  0B5F  0843               	movwf	(??___fladd+0)+0
  9836  0B60  00B6               	movf	(??___fladd+0)+0,w
  9837  0B61  0836               	movwf	(___fladd@bexp)
  9838  0B62  00C4               	line	104
  9839                           	goto	l669
  9840  0B63  2B92               	line	105
  9841                           	
  9842                           l668:	
  9843  0B64                     	line	106
  9844                           	goto	l2273
  9845  0B64  2B89               	
  9846                           l671:	
  9847  0B65                     	line	109
  9848                           	btfss	(___fladd@grs),(0)&7
  9849  0B65  1C45               	goto	u2451
  9850  0B66  2B68               	goto	u2450
  9851  0B67  2B69               u2451:
  9852  0B68                     	goto	l2263
  9853  0B68  2B72               u2450:
  9854  0B69                     	line	110
  9855                           	
  9856                           l2261:	
  9857  0B69                     	movf	(___fladd@grs),w
  9858  0B69  0845               	movwf	(??___fladd+0)+0
  9859  0B6A  00B6               	clrc
  9860  0B6B  1003               	rrf	(??___fladd+0)+0,w
  9861  0B6C  0C36               	iorlw	01h
  9862  0B6D  3801               	movwf	(??___fladd+1)+0
  9863  0B6E  00B7               	movf	(??___fladd+1)+0,w
  9864  0B6F  0837               	movwf	(___fladd@grs)
  9865  0B70  00C5               	line	111
  9866                           	goto	l2265
  9867  0B71  2B75               	line	112
  9868                           	
  9869                           l672:	
  9870  0B72                     	line	113
  9871                           	
  9872                           l2263:	
  9873  0B72                     	clrc
  9874  0B72  1003               	rrf	(___fladd@grs),f
  9875  0B73  0CC5               
  9876                           	goto	l2265
  9877  0B74  2B75               	line	114
  9878                           	
  9879                           l673:	
  9880  0B75                     	line	115
  9881                           	
  9882                           l2265:	
  9883  0B75                     	btfss	(___fladd@b),(0)&7
  9884  0B75  1C2E               	goto	u2461
  9885  0B76  2B78               	goto	u2460
  9886  0B77  2B79               u2461:
  9887  0B78                     	goto	l2269
  9888  0B78  2B7B               u2460:
  9889  0B79                     	line	116
  9890                           	
  9891                           l2267:	
  9892  0B79                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9893  0B79  17C5               	goto	l2269
  9894  0B7A  2B7B               	line	117
  9895                           	
  9896                           l674:	
  9897  0B7B                     	line	118
  9898                           	
  9899                           l2269:	
  9900  0B7B                     	movlw	01h
  9901  0B7B  3001               	movwf	(??___fladd+0)+0
  9902  0B7C  00B6               u2475:
  9903  0B7D                     	rlf	(___fladd@b+3),w
  9904  0B7D  0D31               	rrf	(___fladd@b+3),f
  9905  0B7E  0CB1               	rrf	(___fladd@b+2),f
  9906  0B7F  0CB0               	rrf	(___fladd@b+1),f
  9907  0B80  0CAF               	rrf	(___fladd@b),f
  9908  0B81  0CAE               	decfsz	(??___fladd+0)+0&07fh,f
  9909  0B82  0BB6               	goto	u2475
  9910  0B83  2B7D               
  9911                           	line	119
  9912                           	
  9913                           l2271:	
  9914  0B84                     	movlw	low(01h)
  9915  0B84  3001               	movwf	(??___fladd+0)+0
  9916  0B85  00B6               	movf	(??___fladd+0)+0,w
  9917  0B86  0836               	addwf	(___fladd@bexp),f
  9918  0B87  07C4               	goto	l2273
  9919  0B88  2B89               	line	120
  9920                           	
  9921                           l670:	
  9922  0B89                     	line	106
  9923                           	
  9924                           l2273:	
  9925  0B89                     	bcf	status, 5	;RP0=0, select bank0
  9926  0B89  1283               	bcf	status, 6	;RP1=0, select bank0
  9927  0B8A  1303               	movf	(___fladd@aexp),w
  9928  0B8B  0843               	subwf	(___fladd@bexp),w
  9929  0B8C  0244               	skipc
  9930  0B8D  1C03               	goto	u2481
  9931  0B8E  2B90               	goto	u2480
  9932  0B8F  2B91               u2481:
  9933  0B90                     	goto	l671
  9934  0B90  2B65               u2480:
  9935  0B91                     	goto	l669
  9936  0B91  2B92               	
  9937                           l675:	
  9938  0B92                     	line	121
  9939                           	
  9940                           l669:	
  9941  0B92                     	line	124
  9942                           	btfsc	(___fladd@signs),(6)&7
  9943  0B92  1B42               	goto	u2491
  9944  0B93  2B95               	goto	u2490
  9945  0B94  2B96               u2491:
  9946  0B95                     	goto	l2299
  9947  0B95  2BE5               u2490:
  9948  0B96                     	line	127
  9949                           	
  9950                           l2275:	
  9951  0B96                     	movf	((___fladd@bexp)),w
  9952  0B96  0844               	btfss	status,2
  9953  0B97  1D03               	goto	u2501
  9954  0B98  2B9A               	goto	u2500
  9955  0B99  2B9B               u2501:
  9956  0B9A                     	goto	l2281
  9957  0B9A  2BA5               u2500:
  9958  0B9B                     	line	128
  9959                           	
  9960                           l2277:	
  9961  0B9B                     	movlw	0x0
  9962  0B9B  3000               	movwf	(?___fladd+3)
  9963  0B9C  00B1               	movlw	0x0
  9964  0B9D  3000               	movwf	(?___fladd+2)
  9965  0B9E  00B0               	movlw	0x0
  9966  0B9F  3000               	movwf	(?___fladd+1)
  9967  0BA0  00AF               	movlw	0x0
  9968  0BA1  3000               	movwf	(?___fladd)
  9969  0BA2  00AE               
  9970                           	goto	l678
  9971  0BA3  2D31               	
  9972                           l2279:	
  9973  0BA4                     	goto	l678
  9974  0BA4  2D31               	line	129
  9975                           	
  9976                           l677:	
  9977  0BA5                     	line	132
  9978                           	
  9979                           l2281:	
  9980  0BA5                     	movf	(___fladd@a),w
  9981  0BA5  0832               	addwf	(___fladd@b),f
  9982  0BA6  07AE               	movf	(___fladd@a+1),w
  9983  0BA7  0833               	clrz
  9984  0BA8  1103               	skipnc
  9985  0BA9  1803               	addlw	1
  9986  0BAA  3E01               	skipnz
  9987  0BAB  1903               	goto	u2511
  9988  0BAC  2BAE               	addwf	(___fladd@b+1),f
  9989  0BAD  07AF               u2511:
  9990  0BAE                     	movf	(___fladd@a+2),w
  9991  0BAE  0834               	clrz
  9992  0BAF  1103               	skipnc
  9993  0BB0  1803               	addlw	1
  9994  0BB1  3E01               	skipnz
  9995  0BB2  1903               	goto	u2512
  9996  0BB3  2BB5               	addwf	(___fladd@b+2),f
  9997  0BB4  07B0               u2512:
  9998  0BB5                     	movf	(___fladd@a+3),w
  9999  0BB5  0835               	clrz
 10000  0BB6  1103               	skipnc
 10001  0BB7  1803               	addlw	1
 10002  0BB8  3E01               	skipnz
 10003  0BB9  1903               	goto	u2513
 10004  0BBA  2BBC               	addwf	(___fladd@b+3),f
 10005  0BBB  07B1               u2513:
 10006  0BBC                     
 10007                           	line	134
 10008                           	
 10009                           l2283:	
 10010  0BBC                     	btfss	(___fladd@b+3),(24)&7
 10011  0BBC  1C31               	goto	u2521
 10012  0BBD  2BBF               	goto	u2520
 10013  0BBE  2BC0               u2521:
 10014  0BBF                     	goto	l2333
 10015  0BBF  2CAE               u2520:
 10016  0BC0                     	line	135
 10017                           	
 10018                           l2285:	
 10019  0BC0                     	btfss	(___fladd@grs),(0)&7
 10020  0BC0  1C45               	goto	u2531
 10021  0BC1  2BC3               	goto	u2530
 10022  0BC2  2BC4               u2531:
 10023  0BC3                     	goto	l2289
 10024  0BC3  2BCD               u2530:
 10025  0BC4                     	line	136
 10026                           	
 10027                           l2287:	
 10028  0BC4                     	movf	(___fladd@grs),w
 10029  0BC4  0845               	movwf	(??___fladd+0)+0
 10030  0BC5  00B6               	clrc
 10031  0BC6  1003               	rrf	(??___fladd+0)+0,w
 10032  0BC7  0C36               	iorlw	01h
 10033  0BC8  3801               	movwf	(??___fladd+1)+0
 10034  0BC9  00B7               	movf	(??___fladd+1)+0,w
 10035  0BCA  0837               	movwf	(___fladd@grs)
 10036  0BCB  00C5               	line	137
 10037                           	goto	l2291
 10038  0BCC  2BD0               	line	138
 10039                           	
 10040                           l680:	
 10041  0BCD                     	line	139
 10042                           	
 10043                           l2289:	
 10044  0BCD                     	clrc
 10045  0BCD  1003               	rrf	(___fladd@grs),f
 10046  0BCE  0CC5               
 10047                           	goto	l2291
 10048  0BCF  2BD0               	line	140
 10049                           	
 10050                           l681:	
 10051  0BD0                     	line	141
 10052                           	
 10053                           l2291:	
 10054  0BD0                     	btfss	(___fladd@b),(0)&7
 10055  0BD0  1C2E               	goto	u2541
 10056  0BD1  2BD3               	goto	u2540
 10057  0BD2  2BD4               u2541:
 10058  0BD3                     	goto	l2295
 10059  0BD3  2BD6               u2540:
 10060  0BD4                     	line	142
 10061                           	
 10062                           l2293:	
 10063  0BD4                     	bsf	(___fladd@grs)+(7/8),(7)&7
 10064  0BD4  17C5               	goto	l2295
 10065  0BD5  2BD6               	line	143
 10066                           	
 10067                           l682:	
 10068  0BD6                     	line	144
 10069                           	
 10070                           l2295:	
 10071  0BD6                     	movlw	01h
 10072  0BD6  3001               	movwf	(??___fladd+0)+0
 10073  0BD7  00B6               u2555:
 10074  0BD8                     	rlf	(___fladd@b+3),w
 10075  0BD8  0D31               	rrf	(___fladd@b+3),f
 10076  0BD9  0CB1               	rrf	(___fladd@b+2),f
 10077  0BDA  0CB0               	rrf	(___fladd@b+1),f
 10078  0BDB  0CAF               	rrf	(___fladd@b),f
 10079  0BDC  0CAE               	decfsz	(??___fladd+0)+0&07fh,f
 10080  0BDD  0BB6               	goto	u2555
 10081  0BDE  2BD8               
 10082                           	line	145
 10083                           	
 10084                           l2297:	
 10085  0BDF                     	movlw	low(01h)
 10086  0BDF  3001               	movwf	(??___fladd+0)+0
 10087  0BE0  00B6               	movf	(??___fladd+0)+0,w
 10088  0BE1  0836               	addwf	(___fladd@bexp),f
 10089  0BE2  07C4               	goto	l2333
 10090  0BE3  2CAE               	line	146
 10091                           	
 10092                           l679:	
 10093  0BE4                     	line	148
 10094                           	goto	l2333
 10095  0BE4  2CAE               	line	149
 10096                           	
 10097                           l676:	
 10098  0BE5                     	line	153
 10099                           	
 10100                           l2299:	
 10101  0BE5                     	movf	(___fladd@b+3),w
 10102  0BE5  0831               	xorlw	80h
 10103  0BE6  3A80               	movwf	btemp+1
 10104  0BE7  00FF               	movf	(___fladd@a+3),w
 10105  0BE8  0835               	xorlw	80h
 10106  0BE9  3A80               	subwf	btemp+1,w
 10107  0BEA  027F               	
 10108                           	skipz
 10109  0BEB  1D03               	goto	u2563
 10110  0BEC  2BF7               	movf	(___fladd@a+2),w
 10111  0BED  0834               	subwf	(___fladd@b+2),w
 10112  0BEE  0230               	skipz
 10113  0BEF  1D03               	goto	u2563
 10114  0BF0  2BF7               	movf	(___fladd@a+1),w
 10115  0BF1  0833               	subwf	(___fladd@b+1),w
 10116  0BF2  022F               	skipz
 10117  0BF3  1D03               	goto	u2563
 10118  0BF4  2BF7               	movf	(___fladd@a),w
 10119  0BF5  0832               	subwf	(___fladd@b),w
 10120  0BF6  022E               u2563:
 10121  0BF7                     	skipnc
 10122  0BF7  1803               	goto	u2561
 10123  0BF8  2BFA               	goto	u2560
 10124  0BF9  2BFB               u2561:
 10125  0BFA                     	goto	l2309
 10126  0BFA  2C61               u2560:
 10127  0BFB                     	line	154
 10128                           	
 10129                           l2301:	
 10130  0BFB                     	movlw	0FFh
 10131  0BFB  30FF               	movwf	((??___fladd+0)+0)
 10132  0BFC  00B6               	movlw	0FFh
 10133  0BFD  30FF               	movwf	((??___fladd+0)+0+1)
 10134  0BFE  00B7               	movlw	0FFh
 10135  0BFF  30FF               	movwf	((??___fladd+0)+0+2)
 10136  0C00  00B8               	movlw	0FFh
 10137  0C01  30FF               	movwf	((??___fladd+0)+0+3)
 10138  0C02  00B9               	movf	(___fladd@a),w
 10139  0C03  0832               	movwf	(??___fladd+4)+0
 10140  0C04  00BA               	movf	(___fladd@a+1),w
 10141  0C05  0833               	movwf	((??___fladd+4)+0+1)
 10142  0C06  00BB               	movf	(___fladd@a+2),w
 10143  0C07  0834               	movwf	((??___fladd+4)+0+2)
 10144  0C08  00BC               	movf	(___fladd@a+3),w
 10145  0C09  0835               	movwf	((??___fladd+4)+0+3)
 10146  0C0A  00BD               	comf	(___fladd@b),w
 10147  0C0B  092E               	movwf	(??___fladd+8)+0
 10148  0C0C  00BE               	comf	(___fladd@b+1),w
 10149  0C0D  092F               	movwf	((??___fladd+8)+0+1)
 10150  0C0E  00BF               	comf	(___fladd@b+2),w
 10151  0C0F  0930               	movwf	((??___fladd+8)+0+2)
 10152  0C10  00C0               	comf	(___fladd@b+3),w
 10153  0C11  0931               	movwf	((??___fladd+8)+0+3)
 10154  0C12  00C1               	incf	(??___fladd+8)+0,f
 10155  0C13  0ABE               	skipnz
 10156  0C14  1903               	incf	((??___fladd+8)+0+1),f
 10157  0C15  0ABF               	skipnz
 10158  0C16  1903               	incf	((??___fladd+8)+0+2),f
 10159  0C17  0AC0               	skipnz
 10160  0C18  1903               	incf	((??___fladd+8)+0+3),f
 10161  0C19  0AC1               	movf	0+(??___fladd+8)+0,w
 10162  0C1A  083E               	addwf	(??___fladd+4)+0,f
 10163  0C1B  07BA               	movf	1+(??___fladd+8)+0,w
 10164  0C1C  083F               	skipnc
 10165  0C1D  1803               	incfsz	1+(??___fladd+8)+0,w
 10166  0C1E  0F3F               	goto	u2570
 10167  0C1F  2C21               	goto	u2571
 10168  0C20  2C22               u2570:
 10169  0C21                     	addwf	(??___fladd+4)+1,f
 10170  0C21  07BB               u2571:
 10171  0C22                     	movf	2+(??___fladd+8)+0,w
 10172  0C22  0840               	skipnc
 10173  0C23  1803               	incfsz	2+(??___fladd+8)+0,w
 10174  0C24  0F40               	goto	u2572
 10175  0C25  2C27               	goto	u2573
 10176  0C26  2C28               u2572:
 10177  0C27                     	addwf	(??___fladd+4)+2,f
 10178  0C27  07BC               u2573:
 10179  0C28                     	movf	3+(??___fladd+8)+0,w
 10180  0C28  0841               	skipnc
 10181  0C29  1803               	incf	3+(??___fladd+8)+0,w
 10182  0C2A  0A41               	addwf	(??___fladd+4)+3,f
 10183  0C2B  07BD               	movf	0+(??___fladd+4)+0,w
 10184  0C2C  083A               	addwf	(??___fladd+0)+0,f
 10185  0C2D  07B6               	movf	1+(??___fladd+4)+0,w
 10186  0C2E  083B               	skipnc
 10187  0C2F  1803               	incfsz	1+(??___fladd+4)+0,w
 10188  0C30  0F3B               	goto	u2580
 10189  0C31  2C33               	goto	u2581
 10190  0C32  2C34               u2580:
 10191  0C33                     	addwf	(??___fladd+0)+1,f
 10192  0C33  07B7               u2581:
 10193  0C34                     	movf	2+(??___fladd+4)+0,w
 10194  0C34  083C               	skipnc
 10195  0C35  1803               	incfsz	2+(??___fladd+4)+0,w
 10196  0C36  0F3C               	goto	u2582
 10197  0C37  2C39               	goto	u2583
 10198  0C38  2C3A               u2582:
 10199  0C39                     	addwf	(??___fladd+0)+2,f
 10200  0C39  07B8               u2583:
 10201  0C3A                     	movf	3+(??___fladd+4)+0,w
 10202  0C3A  083D               	skipnc
 10203  0C3B  1803               	incf	3+(??___fladd+4)+0,w
 10204  0C3C  0A3D               	addwf	(??___fladd+0)+3,f
 10205  0C3D  07B9               	movf	3+(??___fladd+0)+0,w
 10206  0C3E  0839               	movwf	(___fladd@b+3)
 10207  0C3F  00B1               	movf	2+(??___fladd+0)+0,w
 10208  0C40  0838               	movwf	(___fladd@b+2)
 10209  0C41  00B0               	movf	1+(??___fladd+0)+0,w
 10210  0C42  0837               	movwf	(___fladd@b+1)
 10211  0C43  00AF               	movf	0+(??___fladd+0)+0,w
 10212  0C44  0836               	movwf	(___fladd@b)
 10213  0C45  00AE               
 10214                           	line	155
 10215                           	movlw	low(080h)
 10216  0C46  3080               	movwf	(??___fladd+0)+0
 10217  0C47  00B6               	movf	(??___fladd+0)+0,w
 10218  0C48  0836               	xorwf	(___fladd@signs),f
 10219  0C49  06C2               	line	156
 10220                           	
 10221                           l2303:	
 10222  0C4A                     	comf	(___fladd@grs),f
 10223  0C4A  09C5               	incf	(___fladd@grs),f
 10224  0C4B  0AC5               	line	157
 10225                           	
 10226                           l2305:	
 10227  0C4C                     	movf	((___fladd@grs)),w
 10228  0C4C  0845               	btfss	status,2
 10229  0C4D  1D03               	goto	u2591
 10230  0C4E  2C50               	goto	u2590
 10231  0C4F  2C51               u2591:
 10232  0C50                     	goto	l686
 10233  0C50  2C6F               u2590:
 10234  0C51                     	line	158
 10235                           	
 10236                           l2307:	
 10237  0C51                     	movlw	01h
 10238  0C51  3001               	addwf	(___fladd@b),f
 10239  0C52  07AE               	movlw	0
 10240  0C53  3000               	skipnc
 10241  0C54  1803               movlw 1
 10242  0C55  3001               	addwf	(___fladd@b+1),f
 10243  0C56  07AF               	movlw	0
 10244  0C57  3000               	skipnc
 10245  0C58  1803               movlw 1
 10246  0C59  3001               	addwf	(___fladd@b+2),f
 10247  0C5A  07B0               	movlw	0
 10248  0C5B  3000               	skipnc
 10249  0C5C  1803               movlw 1
 10250  0C5D  3001               	addwf	(___fladd@b+3),f
 10251  0C5E  07B1               	goto	l686
 10252  0C5F  2C6F               	line	159
 10253                           	
 10254                           l685:	
 10255  0C60                     	line	160
 10256                           	goto	l686
 10257  0C60  2C6F               	line	161
 10258                           	
 10259                           l684:	
 10260  0C61                     	line	162
 10261                           	
 10262                           l2309:	
 10263  0C61                     	movf	(___fladd@a),w
 10264  0C61  0832               	subwf	(___fladd@b),f
 10265  0C62  02AE               	movf	(___fladd@a+1),w
 10266  0C63  0833               	skipc
 10267  0C64  1C03               	incfsz	(___fladd@a+1),w
 10268  0C65  0F33               	subwf	(___fladd@b+1),f
 10269  0C66  02AF               	movf	(___fladd@a+2),w
 10270  0C67  0834               	skipc
 10271  0C68  1C03               	incfsz	(___fladd@a+2),w
 10272  0C69  0F34               	subwf	(___fladd@b+2),f
 10273  0C6A  02B0               	movf	(___fladd@a+3),w
 10274  0C6B  0835               	skipc
 10275  0C6C  1C03               	incfsz	(___fladd@a+3),w
 10276  0C6D  0F35               	subwf	(___fladd@b+3),f
 10277  0C6E  02B1               	line	163
 10278                           	
 10279                           l686:	
 10280  0C6F                     	line	166
 10281                           	movf	(___fladd@b+3),w
 10282  0C6F  0831               	iorwf	(___fladd@b+2),w
 10283  0C70  0430               	iorwf	(___fladd@b+1),w
 10284  0C71  042F               	iorwf	(___fladd@b),w
 10285  0C72  042E               	skipz
 10286  0C73  1D03               	goto	u2601
 10287  0C74  2C76               	goto	u2600
 10288  0C75  2C77               u2601:
 10289  0C76                     	goto	l2331
 10290  0C76  2CA8               u2600:
 10291  0C77                     	
 10292                           l2311:	
 10293  0C77                     	movf	((___fladd@grs)),w
 10294  0C77  0845               	btfss	status,2
 10295  0C78  1D03               	goto	u2611
 10296  0C79  2C7B               	goto	u2610
 10297  0C7A  2C7C               u2611:
 10298  0C7B                     	goto	l2331
 10299  0C7B  2CA8               u2610:
 10300  0C7C                     	line	167
 10301                           	
 10302                           l2313:	
 10303  0C7C                     	movlw	0x0
 10304  0C7C  3000               	movwf	(?___fladd+3)
 10305  0C7D  00B1               	movlw	0x0
 10306  0C7E  3000               	movwf	(?___fladd+2)
 10307  0C7F  00B0               	movlw	0x0
 10308  0C80  3000               	movwf	(?___fladd+1)
 10309  0C81  00AF               	movlw	0x0
 10310  0C82  3000               	movwf	(?___fladd)
 10311  0C83  00AE               
 10312                           	goto	l678
 10313  0C84  2D31               	
 10314                           l2315:	
 10315  0C85                     	goto	l678
 10316  0C85  2D31               	line	168
 10317                           	
 10318                           l687:	
 10319  0C86                     	line	171
 10320                           	goto	l2331
 10321  0C86  2CA8               	
 10322                           l689:	
 10323  0C87                     	line	172
 10324                           	
 10325                           l2317:	
 10326  0C87                     	movlw	01h
 10327  0C87  3001               	movwf	(??___fladd+0)+0
 10328  0C88  00B6               u2625:
 10329  0C89                     	clrc
 10330  0C89  1003               	rlf	(___fladd@b),f
 10331  0C8A  0DAE               	rlf	(___fladd@b+1),f
 10332  0C8B  0DAF               	rlf	(___fladd@b+2),f
 10333  0C8C  0DB0               	rlf	(___fladd@b+3),f
 10334  0C8D  0DB1               	decfsz	(??___fladd+0)+0
 10335  0C8E  0BB6               	goto	u2625
 10336  0C8F  2C89               	line	173
 10337                           	
 10338                           l2319:	
 10339  0C90                     	btfss	(___fladd@grs),(7)&7
 10340  0C90  1FC5               	goto	u2631
 10341  0C91  2C93               	goto	u2630
 10342  0C92  2C94               u2631:
 10343  0C93                     	goto	l690
 10344  0C93  2C95               u2630:
 10345  0C94                     	line	174
 10346                           	
 10347                           l2321:	
 10348  0C94                     	bsf	(___fladd@b)+(0/8),(0)&7
 10349  0C94  142E               	line	175
 10350                           	
 10351                           l690:	
 10352  0C95                     	line	176
 10353                           	btfss	(___fladd@grs),(0)&7
 10354  0C95  1C45               	goto	u2641
 10355  0C96  2C98               	goto	u2640
 10356  0C97  2C99               u2641:
 10357  0C98                     	goto	l2325
 10358  0C98  2C9C               u2640:
 10359  0C99                     	line	177
 10360                           	
 10361                           l2323:	
 10362  0C99                     	setc
 10363  0C99  1403               	rlf	(___fladd@grs),f
 10364  0C9A  0DC5               	line	178
 10365                           	goto	l2327
 10366  0C9B  2C9F               	line	179
 10367                           	
 10368                           l691:	
 10369  0C9C                     	line	180
 10370                           	
 10371                           l2325:	
 10372  0C9C                     	clrc
 10373  0C9C  1003               	rlf	(___fladd@grs),f
 10374  0C9D  0DC5               
 10375                           	goto	l2327
 10376  0C9E  2C9F               	line	181
 10377                           	
 10378                           l692:	
 10379  0C9F                     	line	182
 10380                           	
 10381                           l2327:	
 10382  0C9F                     	movf	((___fladd@bexp)),w
 10383  0C9F  0844               	btfsc	status,2
 10384  0CA0  1903               	goto	u2651
 10385  0CA1  2CA3               	goto	u2650
 10386  0CA2  2CA4               u2651:
 10387  0CA3                     	goto	l2331
 10388  0CA3  2CA8               u2650:
 10389  0CA4                     	line	183
 10390                           	
 10391                           l2329:	
 10392  0CA4                     	movlw	01h
 10393  0CA4  3001               	subwf	(___fladd@bexp),f
 10394  0CA5  02C4               	goto	l2331
 10395  0CA6  2CA8               	line	184
 10396                           	
 10397                           l693:	
 10398  0CA7                     	goto	l2331
 10399  0CA7  2CA8               	line	185
 10400                           	
 10401                           l688:	
 10402  0CA8                     	line	171
 10403                           	
 10404                           l2331:	
 10405  0CA8                     	btfss	(___fladd@b+2),(23)&7
 10406  0CA8  1FB0               	goto	u2661
 10407  0CA9  2CAB               	goto	u2660
 10408  0CAA  2CAC               u2661:
 10409  0CAB                     	goto	l2317
 10410  0CAB  2C87               u2660:
 10411  0CAC                     	goto	l2333
 10412  0CAC  2CAE               	
 10413                           l694:	
 10414  0CAD                     	goto	l2333
 10415  0CAD  2CAE               	line	186
 10416                           	
 10417                           l683:	
 10418  0CAE                     	line	192
 10419                           	
 10420                           l2333:	
 10421  0CAE                     	clrf	(___fladd@aexp)
 10422  0CAE  01C3               	line	193
 10423                           	
 10424                           l2335:	
 10425  0CAF                     	btfss	(___fladd@grs),(7)&7
 10426  0CAF  1FC5               	goto	u2671
 10427  0CB0  2CB2               	goto	u2670
 10428  0CB1  2CB3               u2671:
 10429  0CB2                     	goto	l2343
 10430  0CB2  2CC5               u2670:
 10431  0CB3                     	line	194
 10432                           	
 10433                           l2337:	
 10434  0CB3                     	movf	(___fladd@grs),w
 10435  0CB3  0845               	andlw	07Fh
 10436  0CB4  397F               	btfsc	status,2
 10437  0CB5  1903               	goto	u2681
 10438  0CB6  2CB8               	goto	u2680
 10439  0CB7  2CB9               u2681:
 10440  0CB8                     	goto	l696
 10441  0CB8  2CBC               u2680:
 10442  0CB9                     	line	195
 10443                           	
 10444                           l2339:	
 10445  0CB9                     	clrf	(___fladd@aexp)
 10446  0CB9  01C3               	incf	(___fladd@aexp),f
 10447  0CBA  0AC3               	line	196
 10448                           	goto	l2343
 10449  0CBB  2CC5               	line	197
 10450                           	
 10451                           l696:	
 10452  0CBC                     	line	198
 10453                           	btfss	(___fladd@b),(0)&7
 10454  0CBC  1C2E               	goto	u2691
 10455  0CBD  2CBF               	goto	u2690
 10456  0CBE  2CC0               u2691:
 10457  0CBF                     	goto	l2343
 10458  0CBF  2CC5               u2690:
 10459  0CC0                     	line	199
 10460                           	
 10461                           l2341:	
 10462  0CC0                     	clrf	(___fladd@aexp)
 10463  0CC0  01C3               	incf	(___fladd@aexp),f
 10464  0CC1  0AC3               	goto	l2343
 10465  0CC2  2CC5               	line	200
 10466                           	
 10467                           l698:	
 10468  0CC3                     	goto	l2343
 10469  0CC3  2CC5               	line	201
 10470                           	
 10471                           l697:	
 10472  0CC4                     	goto	l2343
 10473  0CC4  2CC5               	line	202
 10474                           	
 10475                           l695:	
 10476  0CC5                     	line	203
 10477                           	
 10478                           l2343:	
 10479  0CC5                     	movf	((___fladd@aexp)),w
 10480  0CC5  0843               	btfsc	status,2
 10481  0CC6  1903               	goto	u2701
 10482  0CC7  2CC9               	goto	u2700
 10483  0CC8  2CCA               u2701:
 10484  0CC9                     	goto	l699
 10485  0CC9  2D00               u2700:
 10486  0CCA                     	line	204
 10487                           	
 10488                           l2345:	
 10489  0CCA                     	movlw	01h
 10490  0CCA  3001               	addwf	(___fladd@b),f
 10491  0CCB  07AE               	movlw	0
 10492  0CCC  3000               	skipnc
 10493  0CCD  1803               movlw 1
 10494  0CCE  3001               	addwf	(___fladd@b+1),f
 10495  0CCF  07AF               	movlw	0
 10496  0CD0  3000               	skipnc
 10497  0CD1  1803               movlw 1
 10498  0CD2  3001               	addwf	(___fladd@b+2),f
 10499  0CD3  07B0               	movlw	0
 10500  0CD4  3000               	skipnc
 10501  0CD5  1803               movlw 1
 10502  0CD6  3001               	addwf	(___fladd@b+3),f
 10503  0CD7  07B1               	line	205
 10504                           	
 10505                           l2347:	
 10506  0CD8                     	btfss	(___fladd@b+3),(24)&7
 10507  0CD8  1C31               	goto	u2711
 10508  0CD9  2CDB               	goto	u2710
 10509  0CDA  2CDC               u2711:
 10510  0CDB                     	goto	l699
 10511  0CDB  2D00               u2710:
 10512  0CDC                     	line	206
 10513                           	
 10514                           l2349:	
 10515  0CDC                     	movf	(___fladd@b),w
 10516  0CDC  082E               	movwf	(??___fladd+0)+0
 10517  0CDD  00B6               	movf	(___fladd@b+1),w
 10518  0CDE  082F               	movwf	((??___fladd+0)+0+1)
 10519  0CDF  00B7               	movf	(___fladd@b+2),w
 10520  0CE0  0830               	movwf	((??___fladd+0)+0+2)
 10521  0CE1  00B8               	movf	(___fladd@b+3),w
 10522  0CE2  0831               	movwf	((??___fladd+0)+0+3)
 10523  0CE3  00B9               	movlw	01h
 10524  0CE4  3001               	movwf	(??___fladd+4)+0
 10525  0CE5  00BA               u2725:
 10526  0CE6                     	rlf	(??___fladd+0)+3,w
 10527  0CE6  0D39               	rrf	(??___fladd+0)+3,f
 10528  0CE7  0CB9               	rrf	(??___fladd+0)+2,f
 10529  0CE8  0CB8               	rrf	(??___fladd+0)+1,f
 10530  0CE9  0CB7               	rrf	(??___fladd+0)+0,f
 10531  0CEA  0CB6               u2720:
 10532  0CEB                     	decfsz	(??___fladd+4)+0,f
 10533  0CEB  0BBA               	goto	u2725
 10534  0CEC  2CE6               	movf	3+(??___fladd+0)+0,w
 10535  0CED  0839               	movwf	(___fladd@b+3)
 10536  0CEE  00B1               	movf	2+(??___fladd+0)+0,w
 10537  0CEF  0838               	movwf	(___fladd@b+2)
 10538  0CF0  00B0               	movf	1+(??___fladd+0)+0,w
 10539  0CF1  0837               	movwf	(___fladd@b+1)
 10540  0CF2  00AF               	movf	0+(??___fladd+0)+0,w
 10541  0CF3  0836               	movwf	(___fladd@b)
 10542  0CF4  00AE               
 10543                           	line	207
 10544                           		incf	((___fladd@bexp)),w
 10545  0CF5  0A44               	btfsc	status,2
 10546  0CF6  1903               	goto	u2731
 10547  0CF7  2CF9               	goto	u2730
 10548  0CF8  2CFA               u2731:
 10549  0CF9                     	goto	l699
 10550  0CF9  2D00               u2730:
 10551  0CFA                     	line	208
 10552                           	
 10553                           l2351:	
 10554  0CFA                     	movlw	low(01h)
 10555  0CFA  3001               	movwf	(??___fladd+0)+0
 10556  0CFB  00B6               	movf	(??___fladd+0)+0,w
 10557  0CFC  0836               	addwf	(___fladd@bexp),f
 10558  0CFD  07C4               	goto	l699
 10559  0CFE  2D00               	line	209
 10560                           	
 10561                           l701:	
 10562  0CFF                     	goto	l699
 10563  0CFF  2D00               	line	210
 10564                           	
 10565                           l700:	
 10566  0D00                     	line	211
 10567                           	
 10568                           l699:	
 10569  0D00                     	line	215
 10570                           		incf	((___fladd@bexp)),w
 10571  0D00  0A44               	btfsc	status,2
 10572  0D01  1903               	goto	u2741
 10573  0D02  2D04               	goto	u2740
 10574  0D03  2D05               u2741:
 10575  0D04                     	goto	l2355
 10576  0D04  2D0B               u2740:
 10577  0D05                     	
 10578                           l2353:	
 10579  0D05                     	movf	((___fladd@bexp)),w
 10580  0D05  0844               	btfss	status,2
 10581  0D06  1D03               	goto	u2751
 10582  0D07  2D09               	goto	u2750
 10583  0D08  2D0A               u2751:
 10584  0D09                     	goto	l2361
 10585  0D09  2D1B               u2750:
 10586  0D0A                     	goto	l2355
 10587  0D0A  2D0B               	
 10588                           l704:	
 10589  0D0B                     	line	216
 10590                           	
 10591                           l2355:	
 10592  0D0B                     	movlw	high highword(0)
 10593  0D0B  3000               	movwf	(___fladd@b+3)
 10594  0D0C  00B1               	movlw	low highword(0)
 10595  0D0D  3000               	movwf	(___fladd@b+2)
 10596  0D0E  00B0               	movlw	high(0)
 10597  0D0F  3000               	movwf	(___fladd@b+1)
 10598  0D10  00AF               	movlw	low(0)
 10599  0D11  3000               	movwf	(___fladd@b)
 10600  0D12  00AE               
 10601                           	line	218
 10602                           	
 10603                           l2357:	
 10604  0D13                     	movf	((___fladd@bexp)),w
 10605  0D13  0844               	btfss	status,2
 10606  0D14  1D03               	goto	u2761
 10607  0D15  2D17               	goto	u2760
 10608  0D16  2D18               u2761:
 10609  0D17                     	goto	l2361
 10610  0D17  2D1B               u2760:
 10611  0D18                     	line	219
 10612                           	
 10613                           l2359:	
 10614  0D18                     	clrf	(___fladd@signs)
 10615  0D18  01C2               	goto	l2361
 10616  0D19  2D1B               	line	220
 10617                           	
 10618                           l705:	
 10619  0D1A                     	goto	l2361
 10620  0D1A  2D1B               	line	221
 10621                           	
 10622                           l702:	
 10623  0D1B                     	line	225
 10624                           	
 10625                           l2361:	
 10626  0D1B                     	btfss	(___fladd@bexp),(0)&7
 10627  0D1B  1C44               	goto	u2771
 10628  0D1C  2D1E               	goto	u2770
 10629  0D1D  2D1F               u2771:
 10630  0D1E                     	goto	l2365
 10631  0D1E  2D21               u2770:
 10632  0D1F                     	line	226
 10633                           	
 10634                           l2363:	
 10635  0D1F                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 10636  0D1F  17B0               	line	227
 10637                           	goto	l707
 10638  0D20  2D25               	line	229
 10639                           	
 10640                           l706:	
 10641  0D21                     	line	230
 10642                           	
 10643                           l2365:	
 10644  0D21                     	movlw	low(07Fh)
 10645  0D21  307F               	movwf	(??___fladd+0)+0
 10646  0D22  00B6               	movf	(??___fladd+0)+0,w
 10647  0D23  0836               	andwf	0+(___fladd@b)+02h,f
 10648  0D24  05B0               	line	231
 10649                           	
 10650                           l707:	
 10651  0D25                     	line	232
 10652                           	movf	(___fladd@bexp),w
 10653  0D25  0844               	movwf	(??___fladd+0)+0
 10654  0D26  00B6               	clrc
 10655  0D27  1003               	rrf	(??___fladd+0)+0,w
 10656  0D28  0C36               	movwf	(??___fladd+1)+0
 10657  0D29  00B7               	movf	(??___fladd+1)+0,w
 10658  0D2A  0837               	movwf	0+(___fladd@b)+03h
 10659  0D2B  00B1               	line	233
 10660                           	
 10661                           l2367:	
 10662  0D2C                     	btfss	(___fladd@signs),(7)&7
 10663  0D2C  1FC2               	goto	u2781
 10664  0D2D  2D2F               	goto	u2780
 10665  0D2E  2D30               u2781:
 10666  0D2F                     	goto	l708
 10667  0D2F  2D31               u2780:
 10668  0D30                     	line	234
 10669                           	
 10670                           l2369:	
 10671  0D30                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 10672  0D30  17B1               	line	235
 10673                           	
 10674                           l708:	
 10675  0D31                     	line	236
 10676                           	line	237
 10677                           	
 10678                           l678:	
 10679  0D31                     	return
 10680  0D31  0008               	opt stack 0
 10681                           GLOBAL	__end_of___fladd
 10682                           	__end_of___fladd:
 10683  0D32                     	signat	___fladd,8316
 10684                           	global	_ISR
 10685                           
 10686 ;; *************** function _ISR *****************
 10687 ;; Defined at:
 10688 ;;		line 39 in file "newmain.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;		None
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;                  1    wreg      void 
 10695 ;; Registers used:
 10696 ;;		wreg
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10702 ;;      Params:         0       0       0       0       0
 10703 ;;      Locals:         0       0       0       0       0
 10704 ;;      Temps:          3       0       0       0       0
 10705 ;;      Totals:         3       0       0       0       0
 10706 ;;Total ram usage:        3 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		Interrupt level 1
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 10715                           	file	"newmain.c"
 10716                           	line	39
 10717                           global __ptext26
 10718                           __ptext26:	;psect for function _ISR
 10719  15CD                     psect	text26
 10720                           	file	"newmain.c"
 10721                           	line	39
 10722                           	global	__size_of_ISR
 10723                           	__size_of_ISR	equ	__end_of_ISR-_ISR
 10724  001F                     	
 10725                           _ISR:	
 10726  15CD                     ;incstack = 0
 10727                           	opt	stack 3
 10728                           ; Regs used in _ISR: [wreg]
 10729                           psect	intentry,class=CODE,delta=2
 10730                           global __pintentry
 10731                           __pintentry:
 10732  0004                     global interrupt_function
 10733                           interrupt_function:
 10734  0004                     	global saved_w
 10735                           	saved_w	set	btemp+0
 10736  007E                     	movwf	saved_w
 10737  0004  00FE               	swapf	status,w
 10738  0005  0E03               	movwf	(??_ISR+1)
 10739  0006  00F1               	movf	pclath,w
 10740  0007  080A               	movwf	(??_ISR+2)
 10741  0008  00F2               	ljmp	_ISR
 10742  0009  160A  118A  2DCD   psect	text26
 10743                           	line	40
 10744                           	
 10745                           i1l2697:	
 10746  15CD                     ;newmain.c: 40:     if(ADCON0bits.GO_DONE == 0){;newmain.c: 40:     if(ADCON0bits.GO_DON
                                 E == 0){
 10747                           	bcf	status, 5	;RP0=0, select bank0
 10748  15CD  1283               	bcf	status, 6	;RP1=0, select bank0
 10749  15CE  1303               	btfsc	(31),1	;volatile
 10750  15CF  189F               	goto	u360_21
 10751  15D0  2DD2               	goto	u360_20
 10752  15D1  2DD3               u360_21:
 10753  15D2                     	goto	i1l197
 10754  15D2  2DD6               u360_20:
 10755  15D3                     	line	41
 10756                           	
 10757                           i1l2699:	
 10758  15D3                     ;newmain.c: 41:         adc = 1;;newmain.c: 41:         adc = 1;
 10759                           	clrf	(_adc)
 10760  15D3  01FA               	incf	(_adc),f
 10761  15D4  0AFA               	line	42
 10762                           ;newmain.c: 42:         PIR1bits.ADIF = 0;;newmain.c: 42:         PIR1bits.ADIF = 0;
 10763                           	bcf	(12),6	;volatile
 10764  15D5  130C               	line	43
 10765                           ;newmain.c: 43:     };newmain.c: 43:     }
 10766                           	
 10767                           i1l197:	
 10768  15D6                     	line	44
 10769                           ;newmain.c: 44:     if(PIR1bits.RCIF == 1){;newmain.c: 44:     if(PIR1bits.RCIF == 1){
 10770                           	btfss	(12),5	;volatile
 10771  15D6  1E8C               	goto	u361_21
 10772  15D7  2DD9               	goto	u361_20
 10773  15D8  2DDA               u361_21:
 10774  15D9                     	goto	i1l199
 10775  15D9  2DE5               u361_20:
 10776  15DA                     	line	45
 10777                           	
 10778                           i1l2701:	
 10779  15DA                     ;newmain.c: 45:         interrupcionUSART = 1;;newmain.c: 45:         interrupcionUSART 
                                 = 1;
 10780                           	bsf	status, 5	;RP0=1, select bank1
 10781  15DA  1683               	bcf	status, 6	;RP1=0, select bank1
 10782  15DB  1303               	clrf	(_interrupcionUSART)^080h
 10783  15DC  01B0               	incf	(_interrupcionUSART)^080h,f
 10784  15DD  0AB0               	line	46
 10785                           	
 10786                           i1l2703:	
 10787  15DE                     ;newmain.c: 46:         receivingData = RCREG;;newmain.c: 46:         receivingData = RC
                                 REG;
 10788                           	bcf	status, 5	;RP0=0, select bank0
 10789  15DE  1283               	bcf	status, 6	;RP1=0, select bank0
 10790  15DF  1303               	movf	(26),w	;volatile
 10791  15E0  081A               	movwf	(??_ISR+0)+0
 10792  15E1  00F0               	movf	(??_ISR+0)+0,w
 10793  15E2  0870               	movwf	(_receivingData)
 10794  15E3  00F8               	goto	i1l199
 10795  15E4  2DE5               	line	47
 10796                           ;newmain.c: 47:     };newmain.c: 47:     }
 10797                           	
 10798                           i1l198:	
 10799  15E5                     	line	48
 10800                           	
 10801                           i1l199:	
 10802  15E5                     	movf	(??_ISR+2),w
 10803  15E5  0872               	movwf	pclath
 10804  15E6  008A               	swapf	(??_ISR+1)^0FFFFFF80h,w
 10805  15E7  0E71               	movwf	status
 10806  15E8  0083               	swapf	saved_w,f
 10807  15E9  0EFE               	swapf	saved_w,w
 10808  15EA  0E7E               	retfie
 10809  15EB  0009               	opt stack 0
 10810                           GLOBAL	__end_of_ISR
 10811                           	__end_of_ISR:
 10812  15EC                     	signat	_ISR,89
 10813                           global	___latbits
 10814                           ___latbits	equ	2
 10815  0002                     	global	btemp
 10816                           	btemp set 07Eh
 10817  007E                     
 10818                           	DABS	1,126,2	;btemp
 10819                           	global	wtemp0
 10820                           	wtemp0 set btemp+0
 10821  007E                     	end


Data Sizes:
    Strings     16
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      80
    BANK1            80     17      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_initLCD
    _main->_initUSART
    _main->_setCursorLCD
    _writeFloat->_setCursorLCD
    _writeStrLCD->_writeCharLCD
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    ___flneg->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flneg->___xxtofl
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16721
                                             13 BANK1      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                             _clcLCD
                          _configADC
                        _configCanal
                            _initLCD
                          _initUSART
                            _readADC
                           _selCanal
                          _sendUSART
                       _setCursorLCD
                              _setup
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    3812
                                             30 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    2279
                                             22 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     602
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1554
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     934
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendUSART                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _selCanal                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            5     0      5     502
                                              3 COMMON     5     0      5
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      31
                                              6 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _configCanal                                          3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _clcLCD                                               0     0      0      31
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     836
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     697
                                              3 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     197
                                             10 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2873
                                             38 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             64 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2414
                                             14 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _clcLCD
     _cmdLCD
   _configADC
   _configCanal
   _initLCD
     _cmdLCD
   _initUSART
   _readADC
   _selCanal
   _sendUSART
   _setCursorLCD
     _cmdLCD
   _setup
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      83       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     11      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      83      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Feb 12 20:16:14 2020

            ___fldiv@aexp 00C3              ___fldiv@bexp 00C2                         pc 0002  
            ___fldiv@sign 00BB               __CFG_CP$OFF 0000           writeStrLCD@cont 0023  
                      l40 09B1                        l32 155E                        l41 09BE  
                      l50 0A33                        l42 09CB                        l35 0A41  
                      l43 09D8                        l51 0A75                        l60 164E  
                      l44 09E5                        l36 098A                        l37 0A75  
                      l45 09F2                        l29 1549                        l54 1636  
                      l46 09FF                        l38 0997                        l55 1629  
                      l47 0A0C                        l39 09A4                        l56 164C  
                      l48 0A19                        l80 0821                        l57 162C  
                      l49 0A26                        l81 0827                        l58 162F  
                      l90 16D9                        l59 1632                        l84 1550  
                      l93 158A                        l79 0819                        l87 16BC  
                      l96 07FE                        l88 1697                        l89 16D9  
                      l99 15AE                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l102 15CC                       l105 176B                       l106 1786  
                     l210 06B4                       l211 06B3                       l212 06BE  
                     l204 040C                       l213 06BF                       l205 0443  
                     l214 06C0                       l206 042E                       l215 06C0  
                     l207 0441                       l240 17AC                       l208 06B6  
                     l241 17C0                       l209 06AA                       l242 17FF  
                     l250 17FB                       l218 159A                       l251 17FA  
                     l243 17CC                       l244 17FE                       l252 17FF  
                     l245 17D8                       l246 17FD                       l350 06CB  
                     l247 17E4                       l239 17A4                       l255 1561  
                     l351 06DD                       l248 17FC                       l256 1561  
                     l360 0725                       l352 06E4                       l249 17F0  
                     l257 1568                       l361 074D                       l353 06DF  
                     l258 156C                       l354 07BF                       l362 0742  
                     l363 075F                       l355 06E0                       l700 0D00  
                     l364 07A0                       l356 06E1                       l701 0CFF  
                     l349 07AB                       l365 0764                       l357 0701  
                     l702 0D1B                       l366 07AA                       l358 06E2  
                     l367 07BE                       l359 071B                       l704 0D0B  
                     l720 0DA6                       l800 1612                       l560 087C  
                     l640 16F8                       l368 07C4                       l705 0D1A  
                     l721 0DB3                       l801 1617                       l553 157A  
                     l561 087D                       l641 16F9                       l706 0D21  
                     l730 0ED8                       l722 0DD9                       l714 0D4F  
                     l554 157B                       l562 088F                       l642 1712  
                     l650 166B                       l707 0D25                       l731 0EE2  
                     l723 0FFF                       l715 0D6A                       l563 08B3  
                     l643 1720                       l651 166C                       l708 0D31  
                     l660 0AA8                       l740 0F8C                       l732 0F0E  
                     l724 0DF4                       l716 0D66                       l564 08A0  
                     l644 1726                       l652 167D                       l661 0AB5  
                     l741 0F8B                       l733 0EE3                       l725 0ED1  
                     l717 0D74                       l565 08AC                       l557 0847  
                     l637 1721                       l653 168B                       l670 0B89  
                     l662 0AC1                       l742 0FAC                       l734 0EF7  
                     l726 0E47                       l718 0D8F                       l750 0037  
                     l566 08A1                       l558 08C3                       l638 16F3  
                     l654 1691                       l671 0B65                       l663 0AD7  
                     l743 0FCC                       l735 0F15                       l727 0E7D  
                     l719 0DAA                       l751 004C                       l567 08B2  
                     l559 0890                       l639 16E7                       l647 168C  
                     l680 0BCD                       l672 0B72                       l664 0AD4  
                     l744 0FDE                       l736 0F4E                       l728 0E6E  
                     l760 008F                       l752 004A                       l568 08C3  
                     l648 1666                       l681 0BD0                       l673 0B75  
                     l665 0ADF                       l657 0A89                       l745 0FE3  
                     l737 0F43                       l729 0EC8                       l761 0398  
                     l753 0055                       l649 165A                       l690 0C95  
                     l682 0BD6                       l674 0B7B                       l666 0B2B  
                     l658 0A9F                       l738 0F4D                       l770 033C  
                     l762 02DA                       l754 0066                       l683 0CAE  
                     l691 0C9C                       l675 0B92                       l667 0AEE  
                     l659 0A9C                       l739 0F4C                       l771 033B  
                     l763 02BB                       l755 007B                       l692 0C9F  
                     l684 0C61                       l676 0BE5                       l668 0B64  
                     l772 0354                       l764 02CA                       l756 0079  
                     l780 08E8                       l693 0CA7                       l685 0C60  
                     l677 0BA5                       l669 0B92                       l773 038B  
                     l765 02DF                       l757 0084                       l781 08FA  
                     l694 0CAD                       l686 0C6F                       l678 0D31  
                     l774 036F                       l766 0304                       l758 0099  
                     l790 0938                       l782 0987                       l695 0CC5  
                     l687 0C86                       l679 0BE4                       l775 038B  
                     l767 02FB                       l783 090D                       l696 0CBC  
                     l688 0CA8                       l776 0383                       l768 0303  
                     l792 094F                       l784 08FF                       l697 0CC4  
                     l689 0C87                       l769 0302                       l793 094F  
                     l785 0914                       l698 0CC3                       l794 095B  
                     l786 0930                       l699 0D00                       l795 097E  
                     l787 0915                       l779 08E0                       l788 0937  
                     l789 0944                       l798 15F9                       l799 1603  
                     _RD0 0040                       _RD1 0041              __CFG_CPD$OFF 0000  
                     _ISR 15CD                       _adc 007A                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0058              ___flmul@bexp 0059  
            ___flmul@sign 0053              ___flmul@temp 005E              ___flmul@prod 005A  
            __CFG_LVP$OFF 0000                      ?_ISR 0070              ___fltol@exp1 0026  
                    l2001 15EF                      l2011 1612                      l2003 15F1  
                    l2013 1617                      l2005 15F9                      l2101 17A4  
                    l2021 155E                      l2007 15FD                      l2023 0989  
                    l2111 17C9                      l2103 17A9                      l2015 1545  
                    l2201 0AB3                      l2009 160C                      l2033 1619  
                    l2025 0A40                      l2121 17E4                      l2113 17CC  
                    l2105 17B2                      l2017 1549                      l3001 1764  
                    l2211 0AC6                      l2203 0AB5                      l3011 083D  
                    l2035 1635                      l2027 0A41                      l2123 17ED  
                    l2115 17D5                      l2107 17BB                      l2019 1552  
                    l2131 1568                      l3003 176B                      l2301 0BFB  
                    l2221 0AE5                      l2213 0ACB                      l2205 0ABB  
                    l2133 156D                      l3021 0865                      l3013 0846  
                    l2037 1636                      l2125 17F0                      l2117 17D8  
                    l2109 17C0                      l3005 1773                      l3101 03C8  
                    l2311 0C77                      l2303 0C4A                      l2231 0AFA  
                    l2223 0AE9                      l2215 0AD4                      l2207 0ABF  
                    l2135 1577                      l3031 087D                      l3023 0867  
                    l3015 0847                      l2127 17F7                      l2119 17E1  
                    l3007 1780                      l3111 03FA                      l3103 03D0  
                    l2321 0C94                      l2313 0C7C                      l2305 0C4C  
                    l2241 0B0E                      l2233 0AFE                      l2225 0AEE  
                    l2217 0AD5                      l2209 0AC1                      l2401 0D96  
                    l2137 157A                      l3041 08B3                      l3025 086B  
                    l3033 0890                      l3017 085C                      l3009 0828  
                    l2129 1560                      l3121 041B                      l3113 0403  
                    l3105 03D9                      l2323 0C99                      l2315 0C85  
                    l2331 0CA8                      l2307 0C51                      l2251 0B22  
                    l2243 0B12                      l2235 0B02                      l2227 0AF2  
                    l2219 0AD7                      l2411 0DBB                      l2403 0D9B  
                    l2139 157B                      l3043 08B8                      l3035 0896  
                    l3027 0872                      l3019 085D                      l3051 08E0  
                    l2091 1599                      l2083 158B                      l3123 0421  
                    l3131 0443                      l3115 040C                      l3107 03E5  
                    l2341 0CC0                      l2325 0C9C                      l2317 0C87  
                    l2309 0C61                      l2333 0CAE                      l2261 0B69  
                    l2253 0B26                      l2245 0B16                      l2237 0B06  
                    l2229 0AF6                      l2181 0A83                      l2501 0FC9  
                    l2421 0DE0                      l2413 0DC7                      l2405 0DA6  
                    l3037 089F                      l3029 087B                      l3061 090D  
                    l3053 08F0                      l3045 08C7                      l2093 1787  
                    l2085 1595                      l3141 059F                      l3133 04A0  
                    l3125 042E                      l3117 0411                      l3109 03EE  
                    l2351 0CFA                      l2343 0CC5                      l2335 0CAF  
                    l2327 0C9F                      l2319 0C90                      l2271 0B84  
                    l2263 0B72                      l2247 0B1A                      l2239 0B0A  
                    l2255 0B2B                      l2191 0A9C                      l2183 0A87  
                    l2511 0FFF                      l2503 0FD6                      l2431 0E3B  
                    l2423 0DF3                      l2415 0DCF                      l2407 0DA8  
                    l3039 08A1                      l3071 0944                      l3063 0915  
                    l3055 08F9                      l3047 08CC                      l2095 178E  
                    l2087 1597                      l3151 0665                      l3143 05B2  
                    l3135 04B5                      l3127 0434                      l3119 0417  
                    l2361 0D1B                      l2353 0D05                      l2345 0CCA  
                    l2337 0CB3                      l2329 0CA4                      l2281 0BA5  
                    l2265 0B75                      l2273 0B89                      l2257 0B2C  
                    l2249 0B1E                      l2193 0A9D                      l2185 0A89  
                    l2177 0A76                      l2505 0FDA                      l2441 0E6A  
                    l2433 0E45                      l2425 0DF4                      l2417 0DD8  
                    l2409 0DAA                      l2601 02C4                      l2521 0037  
                    l2513 0024                      l3081 0978                      l3073 0948  
                    l3065 0919                      l3057 08FA                      l3049 08D0  
                    l3241 0A49                      l2097 1795                      l2089 1598  
                    l3161 0692                      l3153 0671                      l3145 062E  
                    l3137 052F                      l3129 0441                      l2363 0D1F  
                    l2355 0D0B                      l2347 0CD8                      l2339 0CB9  
                    l2291 0BD0                      l2283 0BBC                      l2275 0B96  
                    l2267 0B79                      l2259 0B48                      l2187 0A8E  
                    l2195 0A9F                      l2179 0A7D                      l2507 0FDE  
                    l2451 0EC8                      l2443 0E6E                      l2435 0E47  
                    l2427 0E19                      l2419 0DD9                      l2371 0D32  
                    l2611 02DF                      l2603 02C8                      l2531 0055  
                    l2523 003C                      l2515 002B                      l3083 097C  
                    l3075 0953                      l3067 0927                      l3059 08FF  
                    l3243 163E                      l2099 179A                      l3171 06B0  
                    l3163 0698                      l3155 0679                      l3147 0641  
                    l3139 0542                      l3091 03AC                      l2365 0D21  
                    l2357 0D13                      l2349 0CDC                      l2293 0BD4  
                    l2285 0BC0                      l2277 0B9B                      l2269 0B7B  
                    l2197 0AA8                      l2189 0A93                      l2509 0FF6  
                    l2461 0EED                      l2437 0E4C                      l2445 0E7D  
                    l2453 0ED1                      l2429 0E31                      l2381 0D56  
                    l2373 0D3B                      l2621 0304                      l2613 02E0  
                    l2605 02CA                      l2541 006B                      l2533 005A  
                    l2525 0041                      l2517 0031                      l3085 097E  
                    l3077 095D                      l3069 0938                      l1901 166C  
                    l3173 06B4                      l3165 069F                      l3157 0682  
                    l3149 064F                      l3093 03B2                      l2367 0D2C  
                    l2359 0D18                      l2295 0BD6                      l2287 0BC4  
                    l2279 0BA4                      l2199 0AAD                      l2471 0F15  
                    l2463 0EF3                      l2455 0ED8                      l2447 0E9E  
                    l2439 0E64                      l2391 0D74                      l2383 0D5B  
                    l2375 0D45                      l2623 0309                      l2631 033C  
                    l2615 02E4                      l2607 02D3                      l2551 0089  
                    l2543 0070                      l2535 0060                      l2527 004A  
                    l2519 0035                      l3087 0987                      l3079 0973  
                    l1911 1691                      l1903 1676                      l3239 06F6  
                    l3167 06A5                      l3175 06B6                      l3159 068A  
                    l3095 03B8                      l2369 0D30                      l2297 0BDF  
                    l2289 0BCD                      l2481 0F4E                      l2473 0F18  
                    l2465 0EF7                      l2457 0EE0                      l2449 0E9F  
                    l2393 0D7B                      l2385 0D66                      l2377 0D4B  
                    l2641 036F                      l2633 0349                      l2625 0317  
                    l2617 02F8                      l2609 02DA                      l2561 00B6  
                    l2553 008F                      l2545 0079                      l2537 0064  
                    l2529 004C                      l1905 167D                      l3177 06BC  
                    l3169 06AA                      l3097 03BE                      l3089 0399  
                    l2299 0BE5                      l2483 0F55                      l2491 0F8C  
                    l2475 0F1C                      l2467 0F05                      l2459 0EE3  
                    l2395 0D85                      l2387 0D68                      l2379 0D4F  
                    l2651 0398                      l2643 037D                      l2635 0354  
                    l2627 031B                      l2619 02FF                      l2571 0153  
                    l2563 00D3                      l2555 0098                      l2547 007B  
                    l2539 0066                      l1907 1684                      l3099 03C3  
                    l2493 0F9B                      l2485 0F65                      l2477 0F3E  
                    l2469 0F0E                      l2397 0D8B                      l2389 0D6A  
                    l2645 0381                      l2637 0363                      l2629 0334  
                    l2581 01B6                      l2573 015C                      l2565 00EF  
                    l2557 0099                      l2549 0084                      l1909 168C  
                    l2901 06D1                      l1861 1582                      l2495 0FAC  
                    l2487 0F69                      l2479 0F47                      l2399 0D8F  
                    l2647 0383                      l2639 036D                      l2591 0256  
                    l2583 01CF                      l2575 016C                      l2567 011B  
                    l2559 00A9                      l2911 0701                      l2903 06D8  
                    l1863 1587                      l2497 0FBB                      l2489 0F82  
                    l2649 038F                      l2593 027C                      l2585 01EC  
                    l2577 0189                      l2569 0137                      l2921 071B  
                    l2913 0709                      l2905 06DD                      l1857 157D  
                    l2499 0FBF                      l2595 02A4                      l2587 0219  
                    l2579 0199                      l1891 164F                      l2931 0742  
                    l2923 071D                      l2915 070D                      l2907 06E3  
                    l1859 1580                      l2597 02AD                      l2589 0229  
                    l2861 16E7                      l1893 1657                      l2941 0764  
                    l2925 0724                      l2933 074D                      l2917 0711  
                    l2909 06E4                      l2599 02BB                      l2871 1710  
                    l2863 16EE                      l2855 16DA                      l1895 165A  
                    l2943 0794                      l2935 0753                      l2927 0725  
                    l2919 0715                      l2951 07BF                      l2881 159C  
                    l2961 0811                      l2873 1712                      l2865 16F3  
                    l2857 16DE                      l1897 1661                      l2953 07C4  
                    l2945 079B                      l2937 075A                      l2929 0741  
                    l2883 159F                      l2971 07C5                      l2963 0819  
                    l2875 1719                      l2867 16F9                      l2859 16E4  
                    l1899 1666                      l2947 07A0                      l2939 075F  
                    l2891 1697                      l2885 15A1                      l2981 07E6  
                    l2973 07CE                      l2965 0821                      l2869 170A  
                    l2877 1721                      l2949 07AB                      l2893 16B3  
                    l2887 15AB                      l2983 07EC                      l2975 07D4  
                    l2959 080C                      l2879 1726                      l2895 16BC  
                    l2967 15B2                      l2991 1734                      l2969 154A  
                    l2985 07F2                      l2977 07DA                      l2897 06C6  
                    l2889 1692                      l2993 173C                      l2987 07F8  
                    l2979 07E0                      l2899 06CB                      l2995 1749  
                    l2997 174F                      l2989 172A                      l2999 175C  
                    STR_1 1027                      STR_2 1021                      STR_3 1024  
                    STR_4 101A                      STR_5 101E                      u2110 1611  
                    u2111 1610                      u3000 0F1C                      u2200 17F7  
                    u3001 0F1B                      u2105 1604                      u2201 17F6  
                    u3010 0F3E                      u2130 179A                      u2210 1567  
                    u3011 0F3D                      u2131 1799                      u2211 1566  
                    u3020 0F47                      u3100 003C                      u2220 1577  
                    u2140 17A9                      u3021 0F46                      u3101 003B  
                    u2221 1576                      u2141 17A8                      u3030 0F55  
                    u3110 0041                      u2150 17BB                      u3031 0F54  
                    u3111 0040                      u2151 17BA                      u2400 0AE5  
                    u3040 0F69                      u3120 0064                      u4000 08F0  
                    u2160 17C9                      u2401 0AE4                      u3041 0F68  
                    u3201 0145                      u3121 0063                      u4001 08EF  
                    u2161 17C8                      u2410 0AE9                      u2330 0A87  
                    u3050 0F78                      u2090 15FD                      u3202 014C  
                    u3130 006B                      u2170 17D5                      u2411 0AE8  
                    u2331 0A86                      u2091 15FC                      u3203 0153  
                    u3131 006A                      u2171 17D4                      u2500 0B9B  
                    u2420 0B48                      u2340 0A8E                      u3060 0F9B  
                    u3300 028A                      u3140 0070                      u4100 0978  
                    u4020 0913                      u2180 17E1                      u2501 0B9A  
                    u2421 0B47                      u2341 0A8D                      u3061 0F9A  
                    u3221 017B                      u3141 006F                      u4101 0977  
                    u4021 0912                      u2181 17E0                      u2430 0B53  
                    u2350 0A93                      u3070 0FBB                      u3222 0182  
                    u3150 0089                      u4110 097C                      u2190 17ED  
                    u2511 0BAE                      u2431 0B51                      u2351 0A92  
                    u3071 0FBA                      u3055 0F73                      u3311 0296  
                    u3231 01A8                      u3223 0189                      u3215 0155  
                    u3151 0088                      u4111 097B                      u4015 0904  
                    u2191 17EC                      u2600 0C77                      u2520 0BC0  
                    u2512 0BB5                      u2440 0B54                      u2360 0AB3  
                    u3080 0FDA                      u3400 0309                      u3312 029D  
                    u3232 01AF                      u3160 008E                      u4040 0936  
                    u4120 0411                      u2601 0C76                      u2521 0BBF  
                    u2513 0BBC                      u2425 0B44                      u2361 0AB2  
                    u3081 0FD9                      u3065 0F97                      u3401 0308  
                    u3313 02A4                      u3305 0285                      u3233 01B6  
                    u3161 008D                      u4041 0935                      u4121 0410  
                    u2610 0C7C                      u2530 0BC4                      u2450 0B69  
                    u2370 0ABF                      u3410 031B                      u3090 0035  
                    u4130 041B                      u2611 0C7B                      u2531 0BC3  
                    u2451 0B68                      u2371 0ABE                      u3075 0FB7  
                    u3411 031A                      u3251 01DE                      u3171 00E1  
                    u3091 0034                      u4035 0928                      u4131 041A  
                    u2700 0CCA                      u2540 0BD4                      u2460 0B79  
                    u2380 0AC6                      u3420 032A                      u3340 02C8  
                    u3252 01E5                      u3172 00E8                      u4060 0948  
                    u4140 069F                      u2701 0CC9                      u2541 0BD3  
                    u2461 0B78                      u2381 0AC5                      u3341 02C7  
                    u3325 02A6                      u3261 020B                      u3253 01EC  
                    u3245 01B8                      u3181 00FD                      u3173 00EF  
                    u4061 0947                      u4141 069E                      u2710 0CDC  
                    u2630 0C94                      u2390 0ACB                      u3430 0349  
                    u3262 0212                      u3182 0104                      u4070 094E  
                    u1910 1657                      u4150 06A5                      u2711 0CDB  
                    u2631 0C93                      u2391 0ACA                      u3431 0348  
                    u3335 02BD                      u3271 0238                      u3263 0219  
                    u3191 0129                      u3183 010B                      u4071 094D  
                    u4055 093C                      u4207 15A6                      u1911 1656  
                    u4151 06A4                      u2720 0CEB                      u2640 0C99  
                    u2560 0BFB                      u2480 0B91                      u2800 0D56  
                    u3440 0363                      u3360 02DE                      u3280 0262  
                    u3272 023F                      u3192 0130                      u4080 0953  
                    u4160 06B0                      u2641 0C98                      u2625 0C89  
                    u2561 0BFA                      u2481 0B90                      u2801 0D55  
                    u3441 0362                      u3425 0325                      u3361 02DD  
                    u3273 0246                      u3193 0137                      u4081 0952  
                    u4161 06AF                      u2730 0CFA                      u2650 0CA4  
                    u2570 0C21                      u2490 0B96                      u2810 0D5B  
                    u3450 0381                      u3370 02E4                      u4090 0968  
                    u1930 166A                      u4170 06BC                      u2731 0CF9  
                    u2651 0CA3                      u2571 0C22                      u2563 0BF7  
                    u2555 0BD8                      u2491 0B95                      u2475 0B7D  
                    u2811 0D5A                      u3451 0380                      u3435 0345  
                    u3371 02E3                      u3355 02CC                      u3291 026E  
                    u1931 1669                      u4171 06BB                      u2740 0D05  
                    u2660 0CAC                      u2580 0C33                      u2572 0C27  
                    u2900 0E6A                      u2820 0D8B                      u3380 02F8  
                    u3292 0275                      u3700 16F7                      u1940 1676  
                    u2741 0D04                      u2725 0CE6                      u2661 0CAB  
                    u2581 0C34                      u2573 0C28                      u2901 0E69  
                    u2821 0D8A                      u3445 035F                      u3381 02F7  
                    u3293 027C                      u3285 025D                      u3701 16F6  
                    u1941 1675                      u1925 165B                      u2750 0D0A  
                    u2670 0CB3                      u2590 0C51                      u2582 0C39  
                    u2830 0D96                      u3390 02FF                      u2751 0D09  
                    u2671 0CB2                      u2591 0C50                      u2583 0C3A  
                    u2831 0D95                      u3391 02FE                      u4095 0963  
                    u2760 0D18                      u2680 0CB9                      u2920 0E9E  
                    u2840 0D9B                      u3720 170A                      u1960 168A  
                    u3800 0723                      u2761 0D17                      u2681 0CB8  
                    u2921 0E9D                      u2841 0D9A                      u3721 1709  
                    u1961 1689                      u1945 1672                      u3801 0722  
                    u2770 0D1F                      u2690 0CC0                      u2930 0EC3  
                    u2850 0DBB                      u3810 0740                      u2771 0D1E  
                    u2691 0CBF                      u2915 0E71                      u2851 0DBA  
                    u3715 16FA                      u1955 167E                      u3811 073F  
                    u4187 1585                      u2780 0D30                      u2940 0ED7  
                    u2860 0DE0                      u3900 086B                      u3740 171F  
                    u3820 074C                      u2781 0D2F                      u2941 0ED6  
                    u2925 0E9A                      u2861 0DDF                      u3901 086A  
                    u4197 07C9                      u3741 171E                      u3725 1706  
                    u3821 074B                      u2950 0EE0                      u2870 0E4C  
                    u2790 0D4B                      u3910 0872                      u3830 0753  
                    u3750 16A1                      u2951 0EDF                      u2935 0EAC  
                    u2871 0E4B                      u2791 0D4A                      u3911 0871  
                    u3735 1713                      u3831 0752                      u3815 073C  
                    u2936 0EAF                      u3680 16E4                      u3840 07A9  
                    u3760 16C6                      u2937 0EB6                      u3681 16E3  
                    u3841 07A8                      u2970 0EF3                      u2938 0EB9  
                    u3930 088E                      u3850 07BD                      u3770 16D8  
                    u2971 0EF2                      u2939 0EC0                      u3931 088D  
                    u3851 07BC                      u3771 16D7                      u3940 0896  
                    u3860 0811                      u3780 06D1                      u2965 0EE6  
                    u2885 0E50                      u3941 0895                      u3925 087E  
                    u3861 0810                      u3781 06D0                      u2990 0F14  
                    u3790 0711                      u3870 1764                      u2991 0F13  
                    u2895 0E5D                      u3695 16E8                      u3791 0710  
                    u3871 1763                      u3960 08B1                      u3880 083D  
                    u2985 0EFA                      u3961 08B0                      u3881 083C  
                    u3970 08B8                      u3890 0855                      u3971 08B7  
                    u3955 08A3                      u3980 08CC                      u3981 08CB  
                    u3990 08D0                      u3895 0850                      u3991 08CF  
            __CFG_WRT$OFF 0000                      _dec1 00B2                      _dec2 00B1  
       writeStrLCD@string 0075                      _cont 00B3                      _main 0399  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
         ___fldiv@new_exp 00BC                     ??_ISR 0070               _writeIntLCD 15AF  
           ___fltol@sign1 0025           __end_of___fladd 0D32                     ?_main 0070  
         __end_of___fldiv 1000           __end_of___flneg 157C             __CFG_WDTE$OFF 0000  
         __end_of___flmul 0399           __end_of___fltol 08C4           __end_of___lwdiv 1727  
         __end_of___lwmod 1692                     i1l197 15D6                     i1l198 15E5  
                   i1l199 15E5                     _RCREG 001A               _writeStrLCD 1692  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000         initUSART@baudrate 0073           __end_of_readADC 154A  
         __end_of_initLCD 07FF           __end_of_dpowers 101A                     _setup 158B  
   __size_of_writeCharLCD 000F            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07C5  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 06C3  
          initUSART@rcint 0076            initUSART@txint 0075                    ??_main 00C4  
       initUSART@syncrono 0077              _writeCharLCD 157C                    _ADRESH 001E  
                  ?_setup 0070                    i1l2701 15DA                    i1l2703 15DE  
                  i1l2697 15CD                    i1l2699 15D3                    u360_20 15D3  
                  u360_21 15D2                    u361_20 15DA                    u361_21 15D9  
                  _SPBRGH 009A          __end_of___xxtofl 0988            __CFG_PWRTE$OFF 0000  
       writeIntLCD@buffer 0039      __size_of_configCanal 00EE         writeIntLCD@numero 003D  
                  _clcLCD 154A                    _cmdLCD 159B                 ??___fladd 0036  
               ??___fldiv 0068                 ??___flneg 0077                 ??___flmul 004E  
               ??___fltol 0020                 ??___lwdiv 0077                 ??___lwmod 0027  
                  _float1 00A4                    _float2 00A0             sendUSART@data 0073  
                  _cursor 00B5          __end_of_selCanal 155F                 ??_readADC 0073  
               ??_initLCD 0076        __size_of__Umul8_16 002C                    saved_w 007E  
               ??_sprintf 002C              ___xxtofl@arg 0026              ___xxtofl@exp 0025  
            ___xxtofl@val 0073   __end_of__initialization 0020         writeFloat@decimal 003E  
              ___flneg@f1 002A                ___fltol@f1 0073         writeFloat@initPos 003F  
       writeFloat@integer 0041            __pcstackCOMMON 0070             __end_of_setup 159B  
      __size_of_configADC 0037                   ??_setup 0073                __pbssBANK0 006D  
              __pbssBANK1 00A0             ?_setCursorLCD 0076        __size_of_initUSART 0079  
       __end_of__Umul8_16 1618                __pmaintext 0399        __size_of_sendUSART 000E  
                 ?_clcLCD 0070                   ?_cmdLCD 0070                __pintentry 0004  
            ?_writeIntLCD 0070              ?_writeStrLCD 0075                 ?___xxtofl 0073  
              __stringtab 1000            ??_setCursorLCD 0077                 ?_selCanal 0070  
       __end_of_configADC 164F                   ___fladd 0A76             setCursorLCD@x 0076  
           setCursorLCD@y 0020                   ___fldiv 0D32           __size_of_clcLCD 0007  
                 ___flneg 156D           __size_of_cmdLCD 0014                   ___flmul 0024  
                 ___fltol 0828                   ___lwdiv 16DA                   ___lwmod 164F  
               _ANSELbits 0188         __end_of_initUSART 1800                   _contADC 00B4  
                 __ptext1 1727                   __ptext2 15AF                   __ptext3 1692  
                 __ptext4 157C                   __ptext5 06C3                   __ptext6 164F  
                 __ptext7 16DA                   __ptext8 0809                   __ptext9 158B  
                 _readADC 1545                   _initLCD 07C5              __size_of_ISR 001F  
                 _entero1 006D                   _entero2 0079                   _dpowers 1010  
              ??___xxtofl 0020                   _sensor1 006F                   _sensor2 006E  
       __end_of_sendUSART 156D                   _sprintf 06C3                   clrloop0 0802  
    end_of_initialization 0020             _receivingData 0078                ??_selCanal 0073  
               _RCSTAbits 0018               ___fladd@grs 0045             ___xxtofl@sign 0024  
               _TRISAbits 0085                 _TRISBbits 0086                 _TRISCbits 0087  
               _TRISEbits 0089               ___fldiv@grs 00BE               ___fldiv@rem 00B7  
             ___flmul@grs 0054             ??_configCanal 0073                 _TXSTAbits 0098  
              _writeFloat 1727            __end_of_clcLCD 1551            __end_of_cmdLCD 15AF  
    __end_of_setCursorLCD 0828               _BAUDCTLbits 0187      __size_of_writeIntLCD 001E  
     start_initialization 000F               __end_of_ISR 15EC      __size_of_writeStrLCD 0048  
         selCanal@channel 0074  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_clcLCD 0076  
                ??_cmdLCD 0073       __end_of_configCanal 0A76                 __Umul8_16 15EC  
               ___fladd@a 0032                 ___fladd@b 002E                 ___fldiv@a 0060  
               ___fldiv@b 0064                 ___flmul@a 004A                 ___flmul@b 0046  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00B7         __size_of___xxtofl 00C4        configCanal@channel 0075  
       _interrupcionUSART 00B0     writeCharLCD@character 0074               sprintf@flag 0030  
             sprintf@prec 0031         __size_of_selCanal 000E          ___lwdiv@dividend 0075  
               cmdLCD@cmd 0075                  ?___fladd 002E                  ?___fldiv 0060  
                ?___flneg 002A                  ?___flmul 0046                  ?___fltol 0073  
             ?_writeFloat 003E                ?__Umul8_16 0073                  ?___lwdiv 0073  
                ?___lwmod 0023                 _configADC 1618                 __pstrings 1000  
                ?_readADC 0070                  ?_initLCD 0070             ?_writeCharLCD 0070  
               _initUSART 1787          ___lwdiv@quotient 0021                  ?_sprintf 0029  
          __size_of_setup 0010                 _sendUSART 155F         interrupt_function 0004  
             _configCanal 0988                 clear_ram0 0801                  _PIE1bits 008C  
                _PIR1bits 000C     __size_of_setCursorLCD 001F                ?_configADC 0070  
              _ADCON0bits 001F               __stringbase 100F                _ADCON1bits 009F  
          ??_writeCharLCD 0073                ?_initUSART 0073       __size_of_writeFloat 0060  
              ?_sendUSART 0070              _setCursorLCD 0809               ??__Umul8_16 0075  
        __size_of___fladd 02BC          __size_of___fldiv 02CE          __size_of___flneg 000F  
        __size_of___flmul 0375          __size_of___fltol 009C          __size_of___lwdiv 004D  
        __size_of___lwmod 0043                  _adcValue 00B6        __end_of__stringtab 1010  
              _ANSELHbits 0189                sprintf@val 0032          __size_of_readADC 0005  
        __size_of_initLCD 003A                  ___xxtofl 08C4           ___lwdiv@divisor 0073  
         ___lwdiv@counter 0020                  __ptext10 155F                  __ptext11 1551  
                __ptext20 0828                  __ptext12 1545                  __ptext21 156D  
                __ptext13 1787                  __ptext22 0024                  __ptext14 07C5  
                __ptext23 15EC                  __ptext15 0988                  __ptext24 0D32  
                __ptext16 1618                  __ptext25 0A76                  __ptext17 154A  
                __ptext26 15CD                  __ptext18 159B                  __ptext19 08C4  
       __CFG_BOR4V$BOR40V 0000          __size_of_sprintf 0102             __size_of_main 032A  
                _selCanal 1551                  _sensorF1 00AC                  _sensorF2 00A8  
             ??_configADC 0073             ??_writeIntLCD 0036             ??_writeStrLCD 0020  
              _INTCONbits 000B               ??_initUSART 0078                  intlevel1 0000  
               sprintf@ap 002F                 sprintf@sp 0034               ??_sendUSART 0073  
        ___lwmod@dividend 0025      __end_of_writeCharLCD 158B                 stringcode 100A  
            ??_writeFloat 0040    __Umul8_16@multiplicand 0073                  sprintf@c 0035  
                sprintf@f 0029           ___lwmod@divisor 0023           ___lwmod@counter 0028  
                stringdir 100A                  stringtab 1000       __end_of_writeIntLCD 15CD  
     __end_of_writeStrLCD 16DA             ___fladd@signs 0042             configADC@FOSC 0075  
      __end_of_writeFloat 1787              ___fladd@aexp 0043              ___fladd@bexp 0044  
            ?_configCanal 0070      __Umul8_16@multiplier 0024         __Umul8_16@product 0020  
