

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Feb 08 21:28:16 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_clcLCD
   712                           	FNCALL	_main,_configADC
   713                           	FNCALL	_main,_configCanal
   714                           	FNCALL	_main,_initLCD
   715                           	FNCALL	_main,_readADC
   716                           	FNCALL	_main,_selCanal
   717                           	FNCALL	_main,_setCursorLCD
   718                           	FNCALL	_main,_setup
   719                           	FNCALL	_main,_writeStrLCD
   720                           	FNCALL	_writeStrLCD,_writeCharLCD
   721                           	FNCALL	_setCursorLCD,_cmdLCD
   722                           	FNCALL	_initLCD,_cmdLCD
   723                           	FNCALL	_clcLCD,_cmdLCD
   724                           	FNROOT	_main
   725                           	FNCALL	intlevel1,_ISR
   726                           	global	intlevel1
   727                           	FNROOT	intlevel1
   728                           	global	_sensor2
   729                           	global	_sensor1
   730                           	global	_contADC
   731                           	global	_cursor
   732                           	global	_adc
   733                           	global	_INTCONbits
   734                           _INTCONbits	set	0xB
   735  000B                     	global	_ADRESH
   736                           _ADRESH	set	0x1E
   737  001E                     	global	_PORTE
   738                           _PORTE	set	0x9
   739  0009                     	global	_PORTC
   740                           _PORTC	set	0x7
   741  0007                     	global	_PORTB
   742                           _PORTB	set	0x6
   743  0006                     	global	_PORTA
   744                           _PORTA	set	0x5
   745  0005                     	global	_PORTD
   746                           _PORTD	set	0x8
   747  0008                     	global	_PORTBbits
   748                           _PORTBbits	set	0x6
   749  0006                     	global	_PIR1bits
   750                           _PIR1bits	set	0xC
   751  000C                     	global	_ADCON0bits
   752                           _ADCON0bits	set	0x1F
   753  001F                     	global	_RC1
   754                           _RC1	set	0x39
   755  0039                     	global	_RC0
   756                           _RC0	set	0x38
   757  0038                     	global	_ADCON1bits
   758                           _ADCON1bits	set	0x9F
   759  009F                     	global	_PIE1bits
   760                           _PIE1bits	set	0x8C
   761  008C                     	global	_TRISBbits
   762                           _TRISBbits	set	0x86
   763  0086                     	global	_TRISEbits
   764                           _TRISEbits	set	0x89
   765  0089                     	global	_TRISAbits
   766                           _TRISAbits	set	0x85
   767  0085                     	global	_TRISE
   768                           _TRISE	set	0x89
   769  0089                     	global	_TRISD
   770                           _TRISD	set	0x88
   771  0088                     	global	_TRISC
   772                           _TRISC	set	0x87
   773  0087                     	global	_TRISB
   774                           _TRISB	set	0x86
   775  0086                     	global	_TRISA
   776                           _TRISA	set	0x85
   777  0085                     	global	_ANSELHbits
   778                           _ANSELHbits	set	0x189
   779  0189                     	global	_ANSELbits
   780                           _ANSELbits	set	0x188
   781  0188                     psect	strings,class=STRING,delta=2,noexec
   782                           global __pstrings
   783                           __pstrings:
   784  0288                     stringtab:
   785  0288                     	global    __stringtab
   786                           __stringtab:
   787  0288                     ;	String table - string pointers are 1 byte each
   788                           stringcode:stringdir:
   789  0288                     movlw high(stringdir)
      + 0288                     stringdir:	
   790  0288  3002               movwf pclath
   791  0289  008A               movf fsr,w
   792  028A  0804               incf fsr
   793  028B  0A84               	addwf pc
   794  028C  0782               	global __stringbase
   795                           __stringbase:
   796  028D                     	retlw	0
   797  028D  3400               psect	strings
   798                           	global    __end_of__stringtab
   799                           __end_of__stringtab:
   800  028E                     	
   801                           STR_1:	
   802  028E                     	retlw	83	;'S'
   803  028E  3453               	retlw	49	;'1'
   804  028F  3431               	retlw	0
   805  0290  3400               psect	strings
   806                           ; #config settings
   807                           global __CFG_FOSC$INTRC_NOCLKOUT
   808                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   809  0000                     global __CFG_WDTE$OFF
   810                           __CFG_WDTE$OFF equ 0x0
   811  0000                     global __CFG_PWRTE$OFF
   812                           __CFG_PWRTE$OFF equ 0x0
   813  0000                     global __CFG_MCLRE$OFF
   814                           __CFG_MCLRE$OFF equ 0x0
   815  0000                     global __CFG_CP$OFF
   816                           __CFG_CP$OFF equ 0x0
   817  0000                     global __CFG_CPD$OFF
   818                           __CFG_CPD$OFF equ 0x0
   819  0000                     global __CFG_BOREN$OFF
   820                           __CFG_BOREN$OFF equ 0x0
   821  0000                     global __CFG_IESO$OFF
   822                           __CFG_IESO$OFF equ 0x0
   823  0000                     global __CFG_FCMEN$OFF
   824                           __CFG_FCMEN$OFF equ 0x0
   825  0000                     global __CFG_LVP$OFF
   826                           __CFG_LVP$OFF equ 0x0
   827  0000                     global __CFG_BOR4V$BOR40V
   828                           __CFG_BOR4V$BOR40V equ 0x0
   829  0000                     global __CFG_WRT$OFF
   830                           __CFG_WRT$OFF equ 0x0
   831  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\snio."
   832                           	line	#
   833                           psect cinit,class=CODE,delta=2
   834                           global start_initialization
   835                           start_initialization:
   836  000F                     
   837                           global __initialization
   838                           __initialization:
   839  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   840                           global __pbssCOMMON
   841                           __pbssCOMMON:
   842  0077                     _sensor2:
   843  0077                            ds      1
   844  0077                     
   845                           _sensor1:
   846  0078                            ds      1
   847  0078                     
   848                           _contADC:
   849  0079                            ds      1
   850  0079                     
   851                           _cursor:
   852  007A                            ds      1
   853  007A                     
   854                           _adc:
   855  007B                            ds      1
   856  007B                     
   857                           psect	bssBANK0,class=BANK0,space=1,noexec
   858                           global __pbssBANK0
   859                           __pbssBANK0:
   860  0022                     _adcValue:
   861  0022                            ds      1
   862  0022                     
   863                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\snio."
   864                           	line	#
   865                           ; Clear objects allocated to COMMON
   866                           psect cinit,class=CODE,delta=2,merge=1
   867                           	clrf	((__pbssCOMMON)+0)&07Fh
   868  000F  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   869  0010  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   870  0011  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
   871  0012  01FA               	clrf	((__pbssCOMMON)+4)&07Fh
   872  0013  01FB               ; Clear objects allocated to BANK0
   873                           psect cinit,class=CODE,delta=2,merge=1
   874                           	bcf	status, 5	;RP0=0, select bank0
   875  0014  1283               	bcf	status, 6	;RP1=0, select bank0
   876  0015  1303               	clrf	((__pbssBANK0)+0)&07Fh
   877  0016  01A2               psect cinit,class=CODE,delta=2,merge=1
   878                           global end_of_initialization,__end_of__initialization
   879                           
   880                           ;End of C runtime variable initialization code
   881                           
   882                           end_of_initialization:
   883  0017                     __end_of__initialization:
   884  0017                     clrf status
   885  0017  0183               ljmp _main	;jump to C main() function
   886  0018  120A  118A  2909   psect	cstackCOMMON,class=COMMON,space=1,noexec
   887                           global __pcstackCOMMON
   888                           __pcstackCOMMON:
   889  0070                     ?_setup:	; 1 bytes @ 0x0
   890  0070                     ?_configADC:	; 1 bytes @ 0x0
   891  0070                     ?_configCanal:	; 1 bytes @ 0x0
   892  0070                     ?_initLCD:	; 1 bytes @ 0x0
   893  0070                     ?_clcLCD:	; 1 bytes @ 0x0
   894  0070                     ?_writeStrLCD:	; 1 bytes @ 0x0
   895  0070                     ?_selCanal:	; 1 bytes @ 0x0
   896  0070                     ?_readADC:	; 1 bytes @ 0x0
   897  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
   898  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
   899  0070                     ?_ISR:	; 1 bytes @ 0x0
   900  0070                     ??_ISR:	; 1 bytes @ 0x0
   901  0070                     ?_main:	; 1 bytes @ 0x0
   902  0070                     	ds	2
   903  0070                     ??_setup:	; 1 bytes @ 0x2
   904  0072                     ??_configADC:	; 1 bytes @ 0x2
   905  0072                     ??_configCanal:	; 1 bytes @ 0x2
   906  0072                     ??_selCanal:	; 1 bytes @ 0x2
   907  0072                     ??_readADC:	; 1 bytes @ 0x2
   908  0072                     ??_cmdLCD:	; 1 bytes @ 0x2
   909  0072                     ??_writeCharLCD:	; 1 bytes @ 0x2
   910  0072                     	ds	1
   911  0072                     	global	selCanal@channel
   912                           selCanal@channel:	; 1 bytes @ 0x3
   913  0073                     	global	writeCharLCD@character
   914                           writeCharLCD@character:	; 1 bytes @ 0x3
   915  0073                     	ds	1
   916  0073                     ??_writeStrLCD:	; 1 bytes @ 0x4
   917  0074                     	global	configCanal@channel
   918                           configCanal@channel:	; 1 bytes @ 0x4
   919  0074                     	global	configADC@FOSC
   920                           configADC@FOSC:	; 1 bytes @ 0x4
   921  0074                     	global	cmdLCD@cmd
   922                           cmdLCD@cmd:	; 1 bytes @ 0x4
   923  0074                     	global	writeStrLCD@cont
   924                           writeStrLCD@cont:	; 2 bytes @ 0x4
   925  0074                     	ds	1
   926  0074                     ??_initLCD:	; 1 bytes @ 0x5
   927  0075                     ??_clcLCD:	; 1 bytes @ 0x5
   928  0075                     ?_setCursorLCD:	; 1 bytes @ 0x5
   929  0075                     	global	setCursorLCD@x
   930                           setCursorLCD@x:	; 1 bytes @ 0x5
   931  0075                     	ds	1
   932  0075                     ??_setCursorLCD:	; 1 bytes @ 0x6
   933  0076                     	global	writeStrLCD@string
   934                           writeStrLCD@string:	; 1 bytes @ 0x6
   935  0076                     	ds	1
   936  0076                     psect	cstackBANK0,class=BANK0,space=1,noexec
   937                           global __pcstackBANK0
   938                           __pcstackBANK0:
   939  0020                     	global	setCursorLCD@y
   940                           setCursorLCD@y:	; 1 bytes @ 0x0
   941  0020                     	ds	1
   942  0020                     ??_main:	; 1 bytes @ 0x1
   943  0021                     	ds	1
   944  0021                     ;!
   945                           ;!Data Sizes:
   946                           ;!    Strings     3
   947                           ;!    Constant    0
   948                           ;!    Data        0
   949                           ;!    BSS         6
   950                           ;!    Persistent  0
   951                           ;!    Stack       0
   952                           ;!
   953                           ;!Auto Spaces:
   954                           ;!    Space          Size  Autos    Used
   955                           ;!    COMMON           14      7      12
   956                           ;!    BANK0            80      2       3
   957                           ;!    BANK1            80      0       0
   958                           ;!    BANK3            96      0       0
   959                           ;!    BANK2            96      0       0
   960                           
   961                           ;!
   962                           ;!Pointer List with Targets:
   963                           ;!
   964                           ;!    writeStrLCD@string	PTR unsigned char  size(1) Largest target is 3
   965                           ;!		 -> STR_1(CODE[3]), 
   966                           ;!
   967                           
   968                           
   969                           ;!
   970                           ;!Critical Paths under _main in COMMON
   971                           ;!
   972                           ;!    _main->_initLCD
   973                           ;!    _main->_setCursorLCD
   974                           ;!    _main->_writeStrLCD
   975                           ;!    _writeStrLCD->_writeCharLCD
   976                           ;!    _setCursorLCD->_cmdLCD
   977                           ;!    _initLCD->_cmdLCD
   978                           ;!    _clcLCD->_cmdLCD
   979                           ;!
   980                           ;!Critical Paths under _ISR in COMMON
   981                           ;!
   982                           ;!    None.
   983                           ;!
   984                           ;!Critical Paths under _main in BANK0
   985                           ;!
   986                           ;!    _main->_setCursorLCD
   987                           ;!
   988                           ;!Critical Paths under _ISR in BANK0
   989                           ;!
   990                           ;!    None.
   991                           ;!
   992                           ;!Critical Paths under _main in BANK1
   993                           ;!
   994                           ;!    None.
   995                           ;!
   996                           ;!Critical Paths under _ISR in BANK1
   997                           ;!
   998                           ;!    None.
   999                           ;!
  1000                           ;!Critical Paths under _main in BANK3
  1001                           ;!
  1002                           ;!    None.
  1003                           ;!
  1004                           ;!Critical Paths under _ISR in BANK3
  1005                           ;!
  1006                           ;!    None.
  1007                           ;!
  1008                           ;!Critical Paths under _main in BANK2
  1009                           ;!
  1010                           ;!    None.
  1011                           ;!
  1012                           ;!Critical Paths under _ISR in BANK2
  1013                           ;!
  1014                           ;!    None.
  1015                           
  1016 ;;
  1017 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1018 ;;
  1019                           
  1020                           ;!
  1021                           ;!Call Graph Tables:
  1022                           ;!
  1023                           ;! ---------------------------------------------------------------------------------
  1024                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (0) _main                                                 1     1      0     432
  1027                           ;!                                              1 BANK0      1     1      0
  1028                           ;!                             _clcLCD
  1029                           ;!                          _configADC
  1030                           ;!                        _configCanal
  1031                           ;!                            _initLCD
  1032                           ;!                            _readADC
  1033                           ;!                           _selCanal
  1034                           ;!                       _setCursorLCD
  1035                           ;!                              _setup
  1036                           ;!                        _writeStrLCD
  1037                           ;! ---------------------------------------------------------------------------------
  1038                           ;! (1) _writeStrLCD                                          3     3      0     138
  1039                           ;!                                              4 COMMON     3     3      0
  1040                           ;!                       _writeCharLCD
  1041                           ;! ---------------------------------------------------------------------------------
  1042                           ;! (2) _writeCharLCD                                         2     2      0      15
  1043                           ;!                                              2 COMMON     2     2      0
  1044                           ;! ---------------------------------------------------------------------------------
  1045                           ;! (1) _setup                                                0     0      0       0
  1046                           ;! ---------------------------------------------------------------------------------
  1047                           ;! (1) _setCursorLCD                                         3     2      1     205
  1048                           ;!                                              5 COMMON     2     1      1
  1049                           ;!                                              0 BANK0      1     1      0
  1050                           ;!                             _cmdLCD
  1051                           ;! ---------------------------------------------------------------------------------
  1052                           ;! (1) _selCanal                                             2     2      0      15
  1053                           ;!                                              2 COMMON     2     2      0
  1054                           ;! ---------------------------------------------------------------------------------
  1055                           ;! (1) _readADC                                              0     0      0       0
  1056                           ;! ---------------------------------------------------------------------------------
  1057                           ;! (1) _initLCD                                              2     2      0      22
  1058                           ;!                                              5 COMMON     2     2      0
  1059                           ;!                             _cmdLCD
  1060                           ;! ---------------------------------------------------------------------------------
  1061                           ;! (1) _configCanal                                          3     3      0      15
  1062                           ;!                                              2 COMMON     3     3      0
  1063                           ;! ---------------------------------------------------------------------------------
  1064                           ;! (1) _configADC                                            3     3      0      15
  1065                           ;!                                              2 COMMON     3     3      0
  1066                           ;! ---------------------------------------------------------------------------------
  1067                           ;! (1) _clcLCD                                               0     0      0      22
  1068                           ;!                             _cmdLCD
  1069                           ;! ---------------------------------------------------------------------------------
  1070                           ;! (2) _cmdLCD                                               3     3      0      22
  1071                           ;!                                              2 COMMON     3     3      0
  1072                           ;! ---------------------------------------------------------------------------------
  1073                           ;! Estimated maximum stack depth 2
  1074                           ;! ---------------------------------------------------------------------------------
  1075                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1076                           ;! ---------------------------------------------------------------------------------
  1077                           ;! (3) _ISR                                                  2     2      0       0
  1078                           ;!                                              0 COMMON     2     2      0
  1079                           ;! ---------------------------------------------------------------------------------
  1080                           ;! Estimated maximum stack depth 3
  1081                           ;! ---------------------------------------------------------------------------------
  1082                           ;!
  1083                           ;! Call Graph Graphs:
  1084                           ;!
  1085                           ;! _main (ROOT)
  1086                           ;!   _clcLCD
  1087                           ;!     _cmdLCD
  1088                           ;!   _configADC
  1089                           ;!   _configCanal
  1090                           ;!   _initLCD
  1091                           ;!     _cmdLCD
  1092                           ;!   _readADC
  1093                           ;!   _selCanal
  1094                           ;!   _setCursorLCD
  1095                           ;!     _cmdLCD
  1096                           ;!   _setup
  1097                           ;!   _writeStrLCD
  1098                           ;!     _writeCharLCD
  1099                           ;!
  1100                           ;! _ISR (ROOT)
  1101                           ;!
  1102                           
  1103                           ;! Address spaces:
  1104                           
  1105                           ;!Name               Size   Autos  Total    Cost      Usage
  1106                           ;!BITCOMMON            E      0       0       0        0.0%
  1107                           ;!EEDATA             100      0       0       0        0.0%
  1108                           ;!NULL                 0      0       0       0        0.0%
  1109                           ;!CODE                 0      0       0       0        0.0%
  1110                           ;!COMMON               E      7       C       1       85.7%
  1111                           ;!BITSFR0              0      0       0       1        0.0%
  1112                           ;!SFR0                 0      0       0       1        0.0%
  1113                           ;!BITSFR1              0      0       0       2        0.0%
  1114                           ;!SFR1                 0      0       0       2        0.0%
  1115                           ;!STACK                0      0       0       2        0.0%
  1116                           ;!ABS                  0      0       F       3        0.0%
  1117                           ;!BITBANK0            50      0       0       4        0.0%
  1118                           ;!BITSFR3              0      0       0       4        0.0%
  1119                           ;!SFR3                 0      0       0       4        0.0%
  1120                           ;!BANK0               50      2       3       5        3.8%
  1121                           ;!BITSFR2              0      0       0       5        0.0%
  1122                           ;!SFR2                 0      0       0       5        0.0%
  1123                           ;!BITBANK1            50      0       0       6        0.0%
  1124                           ;!BANK1               50      0       0       7        0.0%
  1125                           ;!BITBANK3            60      0       0       8        0.0%
  1126                           ;!BANK3               60      0       0       9        0.0%
  1127                           ;!BITBANK2            60      0       0      10        0.0%
  1128                           ;!BANK2               60      0       0      11        0.0%
  1129                           ;!DATA                 0      0       F      12        0.0%
  1130                           
  1131                           	global	_main
  1132                           
  1133 ;; *************** function _main *****************
  1134 ;; Defined at:
  1135 ;;		line 44 in file "newmain.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : B00/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       1       0       0       0
  1152 ;;      Totals:         0       1       0       0       0
  1153 ;;Total ram usage:        1 bytes
  1154 ;; Hardware stack levels required when called:    3
  1155 ;; This function calls:
  1156 ;;		_clcLCD
  1157 ;;		_configADC
  1158 ;;		_configCanal
  1159 ;;		_initLCD
  1160 ;;		_readADC
  1161 ;;		_selCanal
  1162 ;;		_setCursorLCD
  1163 ;;		_setup
  1164 ;;		_writeStrLCD
  1165 ;; This function is called by:
  1166 ;;		Startup code after reset
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1170                           	file	"newmain.c"
  1171                           	line	44
  1172                           global __pmaintext
  1173                           __pmaintext:	;psect for function _main
  1174  0109                     psect	maintext
  1175                           	file	"newmain.c"
  1176                           	line	44
  1177                           	global	__size_of_main
  1178                           	__size_of_main	equ	__end_of_main-_main
  1179  007A                     	
  1180                           _main:	
  1181  0109                     ;incstack = 0
  1182                           	opt	stack 5
  1183                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1184                           	line	46
  1185                           	
  1186                           l1055:	
  1187  0109                     ;newmain.c: 46:     setup();
  1188                           	fcall	_setup
  1189  0109  120A  118A  225B  120A  118A  	line	47
  1190                           	
  1191                           l1057:	
  1192  010E                     ;newmain.c: 47:     configADC(1);
  1193                           	movlw	low(01h)
  1194  010E  3001               	fcall	_configADC
  1195  010F  120A  118A  21BD  120A  118A  	line	48
  1196                           	
  1197                           l1059:	
  1198  0114                     ;newmain.c: 48:     configCanal(10);
  1199                           	movlw	low(0Ah)
  1200  0114  300A               	fcall	_configCanal
  1201  0115  120A  118A  201B  120A  118A  	line	49
  1202                           	
  1203                           l1061:	
  1204  011A                     ;newmain.c: 49:     configCanal(12);
  1205                           	movlw	low(0Ch)
  1206  011A  300C               	fcall	_configCanal
  1207  011B  120A  118A  201B  120A  118A  	line	50
  1208                           	
  1209                           l1063:	
  1210  0120                     ;newmain.c: 50:     initLCD();
  1211                           	fcall	_initLCD
  1212  0120  120A  118A  2183  120A  118A  	line	51
  1213                           	
  1214                           l1065:	
  1215  0125                     ;newmain.c: 51:     clcLCD();
  1216                           	fcall	_clcLCD
  1217  0125  120A  118A  2291  120A  118A  	line	52
  1218                           	
  1219                           l1067:	
  1220  012A                     ;newmain.c: 52:     setCursorLCD(1, 1);
  1221                           	clrf	(setCursorLCD@x)
  1222  012A  01F5               	incf	(setCursorLCD@x),f
  1223  012B  0AF5               	movlw	low(01h)
  1224  012C  3001               	fcall	_setCursorLCD
  1225  012D  120A  118A  221B  120A  118A  	line	54
  1226                           ;newmain.c: 54:     writeStrLCD("S1");
  1227                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1228  0132  3001               	fcall	_writeStrLCD
  1229  0133  120A  118A  21F4  120A  118A  	goto	l1069
  1230  0138  2939               	line	66
  1231                           ;newmain.c: 66:     while(1){
  1232                           	
  1233                           l67:	
  1234  0139                     	line	68
  1235                           	
  1236                           l1069:	
  1237  0139                     ;newmain.c: 68:         if(adc){
  1238                           	movf	((_adc)),w
  1239  0139  087B               	btfsc	status,2
  1240  013A  1903               	goto	u151
  1241  013B  293D               	goto	u150
  1242  013C  293E               u151:
  1243  013D                     	goto	l1085
  1244  013D  296C               u150:
  1245  013E                     	line	69
  1246                           	
  1247                           l1071:	
  1248  013E                     ;newmain.c: 69:             contADC++;
  1249                           	movlw	low(01h)
  1250  013E  3001               	bcf	status, 5	;RP0=0, select bank0
  1251  013F  1283               	bcf	status, 6	;RP1=0, select bank0
  1252  0140  1303               	movwf	(??_main+0)+0
  1253  0141  00A1               	movf	(??_main+0)+0,w
  1254  0142  0821               	addwf	(_contADC),f
  1255  0143  07F9               	line	70
  1256                           	
  1257                           l1073:	
  1258  0144                     ;newmain.c: 70:             if(contADC%2){
  1259                           	btfss	(_contADC),(0)&7
  1260  0144  1C79               	goto	u161
  1261  0145  2947               	goto	u160
  1262  0146  2948               u161:
  1263  0147                     	goto	l1079
  1264  0147  2959               u160:
  1265  0148                     	line	71
  1266                           	
  1267                           l1075:	
  1268  0148                     ;newmain.c: 71:                 selCanal(10);
  1269                           	movlw	low(0Ah)
  1270  0148  300A               	fcall	_selCanal
  1271  0149  120A  118A  227A  120A  118A  	line	72
  1272                           	
  1273                           l1077:	
  1274  014E                     ;newmain.c: 72:                 sensor1 = readADC();
  1275                           	fcall	_readADC
  1276  014E  120A  118A  2298  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1277  0153  1283               	bcf	status, 6	;RP1=0, select bank0
  1278  0154  1303               	movwf	(??_main+0)+0
  1279  0155  00A1               	movf	(??_main+0)+0,w
  1280  0156  0821               	movwf	(_sensor1)
  1281  0157  00F8               	line	73
  1282                           ;newmain.c: 73:             }else{
  1283                           	goto	l1083
  1284  0158  296A               	
  1285                           l69:	
  1286  0159                     	line	74
  1287                           	
  1288                           l1079:	
  1289  0159                     ;newmain.c: 74:                 selCanal(12);
  1290                           	movlw	low(0Ch)
  1291  0159  300C               	fcall	_selCanal
  1292  015A  120A  118A  227A  120A  118A  	line	76
  1293                           	
  1294                           l1081:	
  1295  015F                     ;newmain.c: 76:                 sensor2 = readADC();
  1296                           	fcall	_readADC
  1297  015F  120A  118A  2298  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1298  0164  1283               	bcf	status, 6	;RP1=0, select bank0
  1299  0165  1303               	movwf	(??_main+0)+0
  1300  0166  00A1               	movf	(??_main+0)+0,w
  1301  0167  0821               	movwf	(_sensor2)
  1302  0168  00F7               	goto	l1083
  1303  0169  296A               	line	77
  1304                           ;newmain.c: 77:             }
  1305                           	
  1306                           l70:	
  1307  016A                     	line	78
  1308                           	
  1309                           l1083:	
  1310  016A                     ;newmain.c: 78:             adc = 0;
  1311                           	clrf	(_adc)
  1312  016A  01FB               	goto	l1085
  1313  016B  296C               	line	79
  1314                           ;newmain.c: 79:         }
  1315                           	
  1316                           l68:	
  1317  016C                     	line	80
  1318                           	
  1319                           l1085:	
  1320  016C                     ;newmain.c: 80:         if(PORTBbits.RB7){
  1321                           	bcf	status, 5	;RP0=0, select bank0
  1322  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  1323  016D  1303               	btfss	(6),7	;volatile
  1324  016E  1F86               	goto	u171
  1325  016F  2971               	goto	u170
  1326  0170  2972               u171:
  1327  0171                     	goto	l1089
  1328  0171  2975               u170:
  1329  0172                     	line	81
  1330                           	
  1331                           l1087:	
  1332  0172                     ;newmain.c: 81:             PORTD = sensor1;
  1333                           	movf	(_sensor1),w
  1334  0172  0878               	movwf	(8)	;volatile
  1335  0173  0088               	line	82
  1336                           ;newmain.c: 82:         }else{
  1337                           	goto	l1091
  1338  0174  2978               	
  1339                           l71:	
  1340  0175                     	line	83
  1341                           	
  1342                           l1089:	
  1343  0175                     ;newmain.c: 83:             PORTD = sensor2;
  1344                           	movf	(_sensor2),w
  1345  0175  0877               	movwf	(8)	;volatile
  1346  0176  0088               	goto	l1091
  1347  0177  2978               	line	84
  1348                           ;newmain.c: 84:         }
  1349                           	
  1350                           l72:	
  1351  0178                     	line	85
  1352                           	
  1353                           l1091:	
  1354  0178                     ;newmain.c: 85:         if(ADCON0bits.GO_DONE == 0){
  1355                           	btfsc	(31),1	;volatile
  1356  0178  189F               	goto	u181
  1357  0179  297B               	goto	u180
  1358  017A  297C               u181:
  1359  017B                     	goto	l1069
  1360  017B  2939               u180:
  1361  017C                     	line	86
  1362                           	
  1363                           l1093:	
  1364  017C                     ;newmain.c: 86:             ADCON0bits.GO_DONE = 1;
  1365                           	bsf	(31),1	;volatile
  1366  017C  149F               	goto	l1069
  1367  017D  2939               	line	87
  1368                           ;newmain.c: 87:         }
  1369                           	
  1370                           l73:	
  1371  017E                     	goto	l1069
  1372  017E  2939               	line	89
  1373                           ;newmain.c: 89:     }
  1374                           	
  1375                           l74:	
  1376  017F                     	goto	l1069
  1377  017F  2939               	
  1378                           l75:	
  1379  0180                     	line	91
  1380                           	
  1381                           l76:	
  1382  0180                     	global	start
  1383                           	ljmp	start
  1384  0180  120A  118A  280C   	opt stack 0
  1385                           GLOBAL	__end_of_main
  1386                           	__end_of_main:
  1387  0183                     	signat	_main,89
  1388                           	global	_writeStrLCD
  1389                           
  1390 ;; *************** function _writeStrLCD *****************
  1391 ;; Defined at:
  1392 ;;		line 16 in file "LCD.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  string          1    wreg     PTR unsigned char 
  1395 ;;		 -> STR_1(3), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  string          1    6[COMMON] PTR unsigned char 
  1398 ;;		 -> STR_1(3), 
  1399 ;;  cont            2    4[COMMON] int 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       0       0       0       0
  1410 ;;      Locals:         3       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0
  1412 ;;      Totals:         3       0       0       0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    2
  1416 ;; This function calls:
  1417 ;;		_writeCharLCD
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1423                           	file	"LCD.c"
  1424                           	line	16
  1425                           global __ptext1
  1426                           __ptext1:	;psect for function _writeStrLCD
  1427  01F4                     psect	text1
  1428                           	file	"LCD.c"
  1429                           	line	16
  1430                           	global	__size_of_writeStrLCD
  1431                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  1432  0027                     	
  1433                           _writeStrLCD:	
  1434  01F4                     ;incstack = 0
  1435                           	opt	stack 5
  1436                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1437                           ;writeStrLCD@string stored from wreg
  1438                           	movwf	(writeStrLCD@string)
  1439  01F4  00F6               	line	18
  1440                           	
  1441                           l931:	
  1442  01F5                     ;LCD.c: 17:  int cont;;LCD.c: 18:  for(cont=0;string[cont]!='\0';cont++){
  1443                           	clrf	(writeStrLCD@cont)
  1444  01F5  01F4               	clrf	(writeStrLCD@cont+1)
  1445  01F6  01F5               	goto	l937
  1446  01F7  2A0C               	
  1447                           l165:	
  1448  01F8                     	line	19
  1449                           	
  1450                           l933:	
  1451  01F8                     ;LCD.c: 19:         writeCharLCD(string[cont]);
  1452                           	movf	(writeStrLCD@cont),w
  1453  01F8  0874               	addwf	(writeStrLCD@string),w
  1454  01F9  0776               	movwf	fsr0
  1455  01FA  0084               	fcall	stringdir
  1456  01FB  120A  118A  2288  120A  118A  	fcall	_writeCharLCD
  1457  0200  120A  118A  226B  120A  118A  	line	20
  1458                           	
  1459                           l935:	
  1460  0205                     ;LCD.c: 20:     }
  1461                           	movlw	01h
  1462  0205  3001               	addwf	(writeStrLCD@cont),f
  1463  0206  07F4               	skipnc
  1464  0207  1803               	incf	(writeStrLCD@cont+1),f
  1465  0208  0AF5               	movlw	0
  1466  0209  3000               	addwf	(writeStrLCD@cont+1),f
  1467  020A  07F5               	goto	l937
  1468  020B  2A0C               	
  1469                           l164:	
  1470  020C                     	
  1471                           l937:	
  1472  020C                     	movf	(writeStrLCD@cont),w
  1473  020C  0874               	addwf	(writeStrLCD@string),w
  1474  020D  0776               	movwf	fsr0
  1475  020E  0084               	fcall	stringdir
  1476  020F  120A  118A  2288  120A  118A  	xorlw	0
  1477  0214  3A00               	skipz
  1478  0215  1D03               	goto	u91
  1479  0216  2A18               	goto	u90
  1480  0217  2A19               u91:
  1481  0218                     	goto	l933
  1482  0218  29F8               u90:
  1483  0219                     	goto	l167
  1484  0219  2A1A               	
  1485                           l166:	
  1486  021A                     	line	21
  1487                           	
  1488                           l167:	
  1489  021A                     	return
  1490  021A  0008               	opt stack 0
  1491                           GLOBAL	__end_of_writeStrLCD
  1492                           	__end_of_writeStrLCD:
  1493  021B                     	signat	_writeStrLCD,4217
  1494                           	global	_writeCharLCD
  1495                           
  1496 ;; *************** function _writeCharLCD *****************
  1497 ;; Defined at:
  1498 ;;		line 23 in file "LCD.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  character       1    wreg     unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  character       1    3[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0
  1514 ;;      Temps:          1       0       0       0       0
  1515 ;;      Totals:         2       0       0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_writeStrLCD
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1526                           	line	23
  1527                           global __ptext2
  1528                           __ptext2:	;psect for function _writeCharLCD
  1529  026B                     psect	text2
  1530                           	file	"LCD.c"
  1531                           	line	23
  1532                           	global	__size_of_writeCharLCD
  1533                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  1534  000F                     	
  1535                           _writeCharLCD:	
  1536  026B                     ;incstack = 0
  1537                           	opt	stack 5
  1538                           ; Regs used in _writeCharLCD: [wreg]
  1539                           ;writeCharLCD@character stored from wreg
  1540                           	movwf	(writeCharLCD@character)
  1541  026B  00F3               	line	24
  1542                           	
  1543                           l757:	
  1544  026C                     ;LCD.c: 24:    RC0 = 1;
  1545                           	bcf	status, 5	;RP0=0, select bank0
  1546  026C  1283               	bcf	status, 6	;RP1=0, select bank0
  1547  026D  1303               	bsf	(56/8),(56)&7	;volatile
  1548  026E  1407               	line	25
  1549                           	
  1550                           l759:	
  1551  026F                     ;LCD.c: 25:    PORTA = character;
  1552                           	movf	(writeCharLCD@character),w
  1553  026F  0873               	movwf	(5)	;volatile
  1554  0270  0085               	line	26
  1555                           	
  1556                           l761:	
  1557  0271                     ;LCD.c: 26:    RC1 = 1;
  1558                           	bsf	(57/8),(57)&7	;volatile
  1559  0271  1487               	line	27
  1560                           ;LCD.c: 27:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1561                           	opt asmopt_push
  1562                           opt asmopt_off
  1563                           	movlw	13
  1564  0272  300D               movwf	((??_writeCharLCD+0)+0),f
  1565  0273  00F2               	u197:
  1566  0274                     decfsz	(??_writeCharLCD+0)+0,f
  1567  0274  0BF2               	goto	u197
  1568  0275  2A74               opt asmopt_pop
  1569                           
  1570                           	line	28
  1571                           	
  1572                           l763:	
  1573  0276                     ;LCD.c: 28:    RC1 = 0;
  1574                           	bcf	status, 5	;RP0=0, select bank0
  1575  0276  1283               	bcf	status, 6	;RP1=0, select bank0
  1576  0277  1303               	bcf	(57/8),(57)&7	;volatile
  1577  0278  1087               	line	29
  1578                           	
  1579                           l170:	
  1580  0279                     	return
  1581  0279  0008               	opt stack 0
  1582                           GLOBAL	__end_of_writeCharLCD
  1583                           	__end_of_writeCharLCD:
  1584  027A                     	signat	_writeCharLCD,4217
  1585                           	global	_setup
  1586                           
  1587 ;; *************** function _setup *****************
  1588 ;; Defined at:
  1589 ;;		line 94 in file "newmain.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1617                           	file	"newmain.c"
  1618                           	line	94
  1619                           global __ptext3
  1620                           __ptext3:	;psect for function _setup
  1621  025B                     psect	text3
  1622                           	file	"newmain.c"
  1623                           	line	94
  1624                           	global	__size_of_setup
  1625                           	__size_of_setup	equ	__end_of_setup-_setup
  1626  0010                     	
  1627                           _setup:	
  1628  025B                     ;incstack = 0
  1629                           	opt	stack 6
  1630                           ; Regs used in _setup: [wreg+status,2]
  1631                           	line	96
  1632                           	
  1633                           l765:	
  1634  025B                     ;newmain.c: 96:     PORTA = 0;
  1635                           	bcf	status, 5	;RP0=0, select bank0
  1636  025B  1283               	bcf	status, 6	;RP1=0, select bank0
  1637  025C  1303               	clrf	(5)	;volatile
  1638  025D  0185               	line	97
  1639                           ;newmain.c: 97:     PORTB = 0;
  1640                           	clrf	(6)	;volatile
  1641  025E  0186               	line	98
  1642                           ;newmain.c: 98:     PORTC = 0;
  1643                           	clrf	(7)	;volatile
  1644  025F  0187               	line	99
  1645                           ;newmain.c: 99:     PORTD = 0;
  1646                           	clrf	(8)	;volatile
  1647  0260  0188               	line	100
  1648                           ;newmain.c: 100:     PORTE = 0;
  1649                           	clrf	(9)	;volatile
  1650  0261  0189               	line	101
  1651                           ;newmain.c: 101:     TRISA = 0;
  1652                           	bsf	status, 5	;RP0=1, select bank1
  1653  0262  1683               	bcf	status, 6	;RP1=0, select bank1
  1654  0263  1303               	clrf	(133)^080h	;volatile
  1655  0264  0185               	line	102
  1656                           	
  1657                           l767:	
  1658  0265                     ;newmain.c: 102:     TRISB = 0b10000000;
  1659                           	movlw	low(080h)
  1660  0265  3080               	movwf	(134)^080h	;volatile
  1661  0266  0086               	line	103
  1662                           	
  1663                           l769:	
  1664  0267                     ;newmain.c: 103:     TRISC = 0;
  1665                           	clrf	(135)^080h	;volatile
  1666  0267  0187               	line	104
  1667                           	
  1668                           l771:	
  1669  0268                     ;newmain.c: 104:     TRISD = 0;
  1670                           	clrf	(136)^080h	;volatile
  1671  0268  0188               	line	105
  1672                           	
  1673                           l773:	
  1674  0269                     ;newmain.c: 105:     TRISE = 0;
  1675                           	clrf	(137)^080h	;volatile
  1676  0269  0189               	line	106
  1677                           	
  1678                           l79:	
  1679  026A                     	return
  1680  026A  0008               	opt stack 0
  1681                           GLOBAL	__end_of_setup
  1682                           	__end_of_setup:
  1683  026B                     	signat	_setup,89
  1684                           	global	_setCursorLCD
  1685                           
  1686 ;; *************** function _setCursorLCD *****************
  1687 ;; Defined at:
  1688 ;;		line 3 in file "LCD.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  y               1    wreg     unsigned char 
  1691 ;;  x               1    5[COMMON] unsigned char 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  y               1    0[BANK0 ] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, pclath, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         1       0       0       0       0
  1704 ;;      Locals:         0       1       0       0       0
  1705 ;;      Temps:          1       0       0       0       0
  1706 ;;      Totals:         2       1       0       0       0
  1707 ;;Total ram usage:        3 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    2
  1710 ;; This function calls:
  1711 ;;		_cmdLCD
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1717                           	file	"LCD.c"
  1718                           	line	3
  1719                           global __ptext4
  1720                           __ptext4:	;psect for function _setCursorLCD
  1721  021B                     psect	text4
  1722                           	file	"LCD.c"
  1723                           	line	3
  1724                           	global	__size_of_setCursorLCD
  1725                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  1726  001B                     	
  1727                           _setCursorLCD:	
  1728  021B                     ;incstack = 0
  1729                           	opt	stack 5
  1730                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  1731                           ;setCursorLCD@y stored from wreg
  1732                           	bcf	status, 5	;RP0=0, select bank0
  1733  021B  1283               	bcf	status, 6	;RP1=0, select bank0
  1734  021C  1303               	movwf	(setCursorLCD@y)
  1735  021D  00A0               	line	4
  1736                           	
  1737                           l1047:	
  1738  021E                     ;LCD.c: 4:     if(y == 1){
  1739                           		decf	((setCursorLCD@y)),w
  1740  021E  0320               	btfss	status,2
  1741  021F  1D03               	goto	u141
  1742  0220  2A22               	goto	u140
  1743  0221  2A23               u141:
  1744  0222                     	goto	l1051
  1745  0222  2A29               u140:
  1746  0223                     	line	5
  1747                           	
  1748                           l1049:	
  1749  0223                     ;LCD.c: 5:         cursor = 0x80 + x - 1;
  1750                           	movf	(setCursorLCD@x),w
  1751  0223  0875               	addlw	07Fh
  1752  0224  3E7F               	movwf	(??_setCursorLCD+0)+0
  1753  0225  00F6               	movf	(??_setCursorLCD+0)+0,w
  1754  0226  0876               	movwf	(_cursor)
  1755  0227  00FA               	line	6
  1756                           ;LCD.c: 6:     }else{
  1757                           	goto	l1053
  1758  0228  2A2F               	
  1759                           l156:	
  1760  0229                     	line	7
  1761                           	
  1762                           l1051:	
  1763  0229                     ;LCD.c: 7:         cursor = 0xC0 + x - 1;
  1764                           	movf	(setCursorLCD@x),w
  1765  0229  0875               	addlw	0BFh
  1766  022A  3EBF               	movwf	(??_setCursorLCD+0)+0
  1767  022B  00F6               	movf	(??_setCursorLCD+0)+0,w
  1768  022C  0876               	movwf	(_cursor)
  1769  022D  00FA               	goto	l1053
  1770  022E  2A2F               	line	8
  1771                           ;LCD.c: 8:     }
  1772                           	
  1773                           l157:	
  1774  022F                     	line	9
  1775                           	
  1776                           l1053:	
  1777  022F                     ;LCD.c: 9:     cmdLCD(cursor);
  1778                           	movf	(_cursor),w
  1779  022F  087A               	fcall	_cmdLCD
  1780  0230  120A  118A  2236  120A  118A  	line	10
  1781                           	
  1782                           l158:	
  1783  0235                     	return
  1784  0235  0008               	opt stack 0
  1785                           GLOBAL	__end_of_setCursorLCD
  1786                           	__end_of_setCursorLCD:
  1787  0236                     	signat	_setCursorLCD,8313
  1788                           	global	_selCanal
  1789                           
  1790 ;; *************** function _selCanal *****************
  1791 ;; Defined at:
  1792 ;;		line 10 in file "ADC.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  channel         1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  channel         1    3[COMMON] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0
  1808 ;;      Temps:          1       0       0       0       0
  1809 ;;      Totals:         2       0       0       0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    1
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1820                           	file	"ADC.c"
  1821                           	line	10
  1822                           global __ptext5
  1823                           __ptext5:	;psect for function _selCanal
  1824  027A                     psect	text5
  1825                           	file	"ADC.c"
  1826                           	line	10
  1827                           	global	__size_of_selCanal
  1828                           	__size_of_selCanal	equ	__end_of_selCanal-_selCanal
  1829  000E                     	
  1830                           _selCanal:	
  1831  027A                     ;incstack = 0
  1832                           	opt	stack 6
  1833                           ; Regs used in _selCanal: [wreg+status,2+status,0]
  1834                           ;selCanal@channel stored from wreg
  1835                           	movwf	(selCanal@channel)
  1836  027A  00F3               	line	11
  1837                           	
  1838                           l831:	
  1839  027B                     ;ADC.c: 11:     ADCON0bits.CHS = channel;
  1840                           	movf	(selCanal@channel),w
  1841  027B  0873               	movwf	(??_selCanal+0)+0
  1842  027C  00F2               	rlf	(??_selCanal+0)+0,f
  1843  027D  0DF2               	rlf	(??_selCanal+0)+0,f
  1844  027E  0DF2               	bcf	status, 5	;RP0=0, select bank0
  1845  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  1846  0280  1303               	movf	(31),w	;volatile
  1847  0281  081F               	xorwf	(??_selCanal+0)+0,w
  1848  0282  0672               	andlw	not (((1<<4)-1)<<2)
  1849  0283  39C3               	xorwf	(??_selCanal+0)+0,w
  1850  0284  0672               	movwf	(31)	;volatile
  1851  0285  009F               	goto	l111
  1852  0286  2A87               	line	12
  1853                           	
  1854                           l833:	
  1855  0287                     	line	13
  1856                           ;ADC.c: 12:     return;
  1857                           	
  1858                           l111:	
  1859  0287                     	return
  1860  0287  0008               	opt stack 0
  1861                           GLOBAL	__end_of_selCanal
  1862                           	__end_of_selCanal:
  1863  0288                     	signat	_selCanal,4217
  1864                           	global	_readADC
  1865                           
  1866 ;; *************** function _readADC *****************
  1867 ;; Defined at:
  1868 ;;		line 6 in file "ADC.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      unsigned char 
  1875 ;; Registers used:
  1876 ;;		wreg
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0
  1885 ;;      Totals:         0       0       0       0       0
  1886 ;;Total ram usage:        0 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1896                           	line	6
  1897                           global __ptext6
  1898                           __ptext6:	;psect for function _readADC
  1899  0298                     psect	text6
  1900                           	file	"ADC.c"
  1901                           	line	6
  1902                           	global	__size_of_readADC
  1903                           	__size_of_readADC	equ	__end_of_readADC-_readADC
  1904  0005                     	
  1905                           _readADC:	
  1906  0298                     ;incstack = 0
  1907                           	opt	stack 6
  1908                           ; Regs used in _readADC: [wreg]
  1909                           	line	7
  1910                           	
  1911                           l835:	
  1912  0298                     ;ADC.c: 7:     return ADRESH;
  1913                           	bcf	status, 5	;RP0=0, select bank0
  1914  0298  1283               	bcf	status, 6	;RP1=0, select bank0
  1915  0299  1303               	movf	(30),w	;volatile
  1916  029A  081E               	goto	l108
  1917  029B  2A9C               	
  1918                           l837:	
  1919  029C                     	line	8
  1920                           	
  1921                           l108:	
  1922  029C                     	return
  1923  029C  0008               	opt stack 0
  1924                           GLOBAL	__end_of_readADC
  1925                           	__end_of_readADC:
  1926  029D                     	signat	_readADC,89
  1927                           	global	_initLCD
  1928                           
  1929 ;; *************** function _initLCD *****************
  1930 ;; Defined at:
  1931 ;;		line 33 in file "LCD.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0
  1947 ;;      Temps:          2       0       0       0       0
  1948 ;;      Totals:         2       0       0       0       0
  1949 ;;Total ram usage:        2 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    2
  1952 ;; This function calls:
  1953 ;;		_cmdLCD
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  1959                           	file	"LCD.c"
  1960                           	line	33
  1961                           global __ptext7
  1962                           __ptext7:	;psect for function _initLCD
  1963  0183                     psect	text7
  1964                           	file	"LCD.c"
  1965                           	line	33
  1966                           	global	__size_of_initLCD
  1967                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  1968  003A                     	
  1969                           _initLCD:	
  1970  0183                     ;incstack = 0
  1971                           	opt	stack 5
  1972                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1973                           	line	34
  1974                           	
  1975                           l1027:	
  1976  0183                     ;LCD.c: 34:      _delay((unsigned long)((15)*(4000000/4000.0)));
  1977                           	opt asmopt_push
  1978                           opt asmopt_off
  1979                           movlw	20
  1980  0183  3014               movwf	((??_initLCD+0)+0+1),f
  1981  0184  00F6               	movlw	121
  1982  0185  3079               movwf	((??_initLCD+0)+0),f
  1983  0186  00F5               	u207:
  1984  0187                     decfsz	((??_initLCD+0)+0),f
  1985  0187  0BF5               	goto	u207
  1986  0188  2987               	decfsz	((??_initLCD+0)+0+1),f
  1987  0189  0BF6               	goto	u207
  1988  018A  2987               	nop2
  1989  018B  298C               opt asmopt_pop
  1990                           
  1991                           	line	35
  1992                           	
  1993                           l1029:	
  1994  018C                     ;LCD.c: 35:     cmdLCD(0x030);
  1995                           	movlw	low(030h)
  1996  018C  3030               	fcall	_cmdLCD
  1997  018D  120A  118A  2236  120A  118A  	line	36
  1998                           	
  1999                           l1031:	
  2000  0192                     ;LCD.c: 36:     cmdLCD(0x030);
  2001                           	movlw	low(030h)
  2002  0192  3030               	fcall	_cmdLCD
  2003  0193  120A  118A  2236  120A  118A  	line	37
  2004                           	
  2005                           l1033:	
  2006  0198                     ;LCD.c: 37:     cmdLCD(0x030);
  2007                           	movlw	low(030h)
  2008  0198  3030               	fcall	_cmdLCD
  2009  0199  120A  118A  2236  120A  118A  	line	39
  2010                           	
  2011                           l1035:	
  2012  019E                     ;LCD.c: 39:     cmdLCD(0x38);
  2013                           	movlw	low(038h)
  2014  019E  3038               	fcall	_cmdLCD
  2015  019F  120A  118A  2236  120A  118A  	line	40
  2016                           	
  2017                           l1037:	
  2018  01A4                     ;LCD.c: 40:     cmdLCD(0x10);
  2019                           	movlw	low(010h)
  2020  01A4  3010               	fcall	_cmdLCD
  2021  01A5  120A  118A  2236  120A  118A  	line	41
  2022                           	
  2023                           l1039:	
  2024  01AA                     ;LCD.c: 41:     cmdLCD(0x01);
  2025                           	movlw	low(01h)
  2026  01AA  3001               	fcall	_cmdLCD
  2027  01AB  120A  118A  2236  120A  118A  	line	42
  2028                           	
  2029                           l1041:	
  2030  01B0                     ;LCD.c: 42:     cmdLCD(0x06);
  2031                           	movlw	low(06h)
  2032  01B0  3006               	fcall	_cmdLCD
  2033  01B1  120A  118A  2236  120A  118A  	line	43
  2034                           	
  2035                           l1043:	
  2036  01B6                     ;LCD.c: 43:     cmdLCD(0x0E);
  2037                           	movlw	low(0Eh)
  2038  01B6  300E               	fcall	_cmdLCD
  2039  01B7  120A  118A  2236  120A  118A  	line	44
  2040                           	
  2041                           l173:	
  2042  01BC                     	return
  2043  01BC  0008               	opt stack 0
  2044                           GLOBAL	__end_of_initLCD
  2045                           	__end_of_initLCD:
  2046  01BD                     	signat	_initLCD,89
  2047                           	global	_configCanal
  2048                           
  2049 ;; *************** function _configCanal *****************
  2050 ;; Defined at:
  2051 ;;		line 15 in file "ADC.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  channel         1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  channel         1    4[COMMON] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0
  2067 ;;      Temps:          2       0       0       0       0
  2068 ;;      Totals:         3       0       0       0       0
  2069 ;;Total ram usage:        3 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2079                           	file	"ADC.c"
  2080                           	line	15
  2081                           global __ptext8
  2082                           __ptext8:	;psect for function _configCanal
  2083  001B                     psect	text8
  2084                           	file	"ADC.c"
  2085                           	line	15
  2086                           	global	__size_of_configCanal
  2087                           	__size_of_configCanal	equ	__end_of_configCanal-_configCanal
  2088  00EE                     	
  2089                           _configCanal:	
  2090  001B                     ;incstack = 0
  2091                           	opt	stack 6
  2092                           ; Regs used in _configCanal: [wreg-fsr0h+status,2+status,0]
  2093                           ;configCanal@channel stored from wreg
  2094                           	movwf	(configCanal@channel)
  2095  001B  00F4               	line	16
  2096                           	
  2097                           l785:	
  2098  001C                     ;ADC.c: 16:     switch (channel){
  2099                           	goto	l789
  2100  001C  28D4               	line	17
  2101                           ;ADC.c: 17:         case 0:
  2102                           	
  2103                           l115:	
  2104  001D                     	line	18
  2105                           ;ADC.c: 18:             ADCON0bits.CHS0 = 0;
  2106                           	bcf	status, 5	;RP0=0, select bank0
  2107  001D  1283               	bcf	status, 6	;RP1=0, select bank0
  2108  001E  1303               	bcf	(31),2	;volatile
  2109  001F  111F               	line	19
  2110                           ;ADC.c: 19:             ADCON0bits.CHS1 = 0;
  2111                           	bcf	(31),3	;volatile
  2112  0020  119F               	line	20
  2113                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  2114                           	bcf	(31),4	;volatile
  2115  0021  121F               	line	21
  2116                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
  2117                           	bcf	(31),5	;volatile
  2118  0022  129F               	line	22
  2119                           ;ADC.c: 22:             ANSELbits.ANS0 = 1;
  2120                           	bsf	status, 5	;RP0=1, select bank3
  2121  0023  1683               	bsf	status, 6	;RP1=1, select bank3
  2122  0024  1703               	bsf	(392)^0180h,0	;volatile
  2123  0025  1408               	line	23
  2124                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;
  2125                           	bsf	status, 5	;RP0=1, select bank1
  2126  0026  1683               	bcf	status, 6	;RP1=0, select bank1
  2127  0027  1303               	bsf	(133)^080h,0	;volatile
  2128  0028  1405               	line	24
  2129                           ;ADC.c: 24:             break;
  2130                           	goto	l130
  2131  0029  2908               	line	25
  2132                           ;ADC.c: 25:         case 1:
  2133                           	
  2134                           l117:	
  2135  002A                     	line	26
  2136                           ;ADC.c: 26:             ADCON0bits.CHS0 = 1;
  2137                           	bcf	status, 5	;RP0=0, select bank0
  2138  002A  1283               	bcf	status, 6	;RP1=0, select bank0
  2139  002B  1303               	bsf	(31),2	;volatile
  2140  002C  151F               	line	27
  2141                           ;ADC.c: 27:             ADCON0bits.CHS1 = 0;
  2142                           	bcf	(31),3	;volatile
  2143  002D  119F               	line	28
  2144                           ;ADC.c: 28:             ADCON0bits.CHS2 = 0;
  2145                           	bcf	(31),4	;volatile
  2146  002E  121F               	line	29
  2147                           ;ADC.c: 29:             ADCON0bits.CHS3 = 0;
  2148                           	bcf	(31),5	;volatile
  2149  002F  129F               	line	30
  2150                           ;ADC.c: 30:             ANSELbits.ANS1 = 1;
  2151                           	bsf	status, 5	;RP0=1, select bank3
  2152  0030  1683               	bsf	status, 6	;RP1=1, select bank3
  2153  0031  1703               	bsf	(392)^0180h,1	;volatile
  2154  0032  1488               	line	31
  2155                           ;ADC.c: 31:             TRISAbits.TRISA1 = 1;
  2156                           	bsf	status, 5	;RP0=1, select bank1
  2157  0033  1683               	bcf	status, 6	;RP1=0, select bank1
  2158  0034  1303               	bsf	(133)^080h,1	;volatile
  2159  0035  1485               	line	32
  2160                           ;ADC.c: 32:             break;
  2161                           	goto	l130
  2162  0036  2908               	line	33
  2163                           ;ADC.c: 33:         case 2:
  2164                           	
  2165                           l118:	
  2166  0037                     	line	34
  2167                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;
  2168                           	bcf	status, 5	;RP0=0, select bank0
  2169  0037  1283               	bcf	status, 6	;RP1=0, select bank0
  2170  0038  1303               	bcf	(31),2	;volatile
  2171  0039  111F               	line	35
  2172                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  2173                           	bsf	(31),3	;volatile
  2174  003A  159F               	line	36
  2175                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  2176                           	bcf	(31),4	;volatile
  2177  003B  121F               	line	37
  2178                           ;ADC.c: 37:             ADCON0bits.CHS3 = 0;
  2179                           	bcf	(31),5	;volatile
  2180  003C  129F               	line	38
  2181                           ;ADC.c: 38:             ANSELbits.ANS2 = 1;
  2182                           	bsf	status, 5	;RP0=1, select bank3
  2183  003D  1683               	bsf	status, 6	;RP1=1, select bank3
  2184  003E  1703               	bsf	(392)^0180h,2	;volatile
  2185  003F  1508               	line	39
  2186                           ;ADC.c: 39:             TRISAbits.TRISA2 = 1;
  2187                           	bsf	status, 5	;RP0=1, select bank1
  2188  0040  1683               	bcf	status, 6	;RP1=0, select bank1
  2189  0041  1303               	bsf	(133)^080h,2	;volatile
  2190  0042  1505               	line	40
  2191                           ;ADC.c: 40:             break;
  2192                           	goto	l130
  2193  0043  2908               	line	41
  2194                           ;ADC.c: 41:         case 3:
  2195                           	
  2196                           l119:	
  2197  0044                     	line	42
  2198                           ;ADC.c: 42:             ADCON0bits.CHS0 = 1;
  2199                           	bcf	status, 5	;RP0=0, select bank0
  2200  0044  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  0045  1303               	bsf	(31),2	;volatile
  2202  0046  151F               	line	43
  2203                           ;ADC.c: 43:             ADCON0bits.CHS1 = 1;
  2204                           	bsf	(31),3	;volatile
  2205  0047  159F               	line	44
  2206                           ;ADC.c: 44:             ADCON0bits.CHS2 = 0;
  2207                           	bcf	(31),4	;volatile
  2208  0048  121F               	line	45
  2209                           ;ADC.c: 45:             ADCON0bits.CHS3 = 0;
  2210                           	bcf	(31),5	;volatile
  2211  0049  129F               	line	46
  2212                           ;ADC.c: 46:             ANSELbits.ANS3 = 1;
  2213                           	bsf	status, 5	;RP0=1, select bank3
  2214  004A  1683               	bsf	status, 6	;RP1=1, select bank3
  2215  004B  1703               	bsf	(392)^0180h,3	;volatile
  2216  004C  1588               	line	47
  2217                           ;ADC.c: 47:             TRISAbits.TRISA3 = 1;
  2218                           	bsf	status, 5	;RP0=1, select bank1
  2219  004D  1683               	bcf	status, 6	;RP1=0, select bank1
  2220  004E  1303               	bsf	(133)^080h,3	;volatile
  2221  004F  1585               	line	48
  2222                           ;ADC.c: 48:             break;
  2223                           	goto	l130
  2224  0050  2908               	line	49
  2225                           ;ADC.c: 49:         case 4:
  2226                           	
  2227                           l120:	
  2228  0051                     	line	50
  2229                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  2230                           	bcf	status, 5	;RP0=0, select bank0
  2231  0051  1283               	bcf	status, 6	;RP1=0, select bank0
  2232  0052  1303               	bcf	(31),2	;volatile
  2233  0053  111F               	line	51
  2234                           ;ADC.c: 51:             ADCON0bits.CHS1 = 0;
  2235                           	bcf	(31),3	;volatile
  2236  0054  119F               	line	52
  2237                           ;ADC.c: 52:             ADCON0bits.CHS2 = 1;
  2238                           	bsf	(31),4	;volatile
  2239  0055  161F               	line	53
  2240                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  2241                           	bcf	(31),5	;volatile
  2242  0056  129F               	line	54
  2243                           ;ADC.c: 54:             ANSELbits.ANS4 = 1;
  2244                           	bsf	status, 5	;RP0=1, select bank3
  2245  0057  1683               	bsf	status, 6	;RP1=1, select bank3
  2246  0058  1703               	bsf	(392)^0180h,4	;volatile
  2247  0059  1608               	line	55
  2248                           ;ADC.c: 55:             TRISAbits.TRISA5 = 1;
  2249                           	bsf	status, 5	;RP0=1, select bank1
  2250  005A  1683               	bcf	status, 6	;RP1=0, select bank1
  2251  005B  1303               	bsf	(133)^080h,5	;volatile
  2252  005C  1685               	line	56
  2253                           ;ADC.c: 56:             break;
  2254                           	goto	l130
  2255  005D  2908               	line	57
  2256                           ;ADC.c: 57:         case 5:
  2257                           	
  2258                           l121:	
  2259  005E                     	line	58
  2260                           ;ADC.c: 58:             ADCON0bits.CHS0 = 1;
  2261                           	bcf	status, 5	;RP0=0, select bank0
  2262  005E  1283               	bcf	status, 6	;RP1=0, select bank0
  2263  005F  1303               	bsf	(31),2	;volatile
  2264  0060  151F               	line	59
  2265                           ;ADC.c: 59:             ADCON0bits.CHS1 = 0;
  2266                           	bcf	(31),3	;volatile
  2267  0061  119F               	line	60
  2268                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  2269                           	bsf	(31),4	;volatile
  2270  0062  161F               	line	61
  2271                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  2272                           	bcf	(31),5	;volatile
  2273  0063  129F               	line	62
  2274                           ;ADC.c: 62:             ANSELbits.ANS5 = 1;
  2275                           	bsf	status, 5	;RP0=1, select bank3
  2276  0064  1683               	bsf	status, 6	;RP1=1, select bank3
  2277  0065  1703               	bsf	(392)^0180h,5	;volatile
  2278  0066  1688               	line	63
  2279                           ;ADC.c: 63:             TRISEbits.TRISE0 = 1;
  2280                           	bsf	status, 5	;RP0=1, select bank1
  2281  0067  1683               	bcf	status, 6	;RP1=0, select bank1
  2282  0068  1303               	bsf	(137)^080h,0	;volatile
  2283  0069  1409               	line	64
  2284                           ;ADC.c: 64:             break;
  2285                           	goto	l130
  2286  006A  2908               	line	65
  2287                           ;ADC.c: 65:         case 6:
  2288                           	
  2289                           l122:	
  2290  006B                     	line	66
  2291                           ;ADC.c: 66:             ADCON0bits.CHS0 = 0;
  2292                           	bcf	status, 5	;RP0=0, select bank0
  2293  006B  1283               	bcf	status, 6	;RP1=0, select bank0
  2294  006C  1303               	bcf	(31),2	;volatile
  2295  006D  111F               	line	67
  2296                           ;ADC.c: 67:             ADCON0bits.CHS1 = 1;
  2297                           	bsf	(31),3	;volatile
  2298  006E  159F               	line	68
  2299                           ;ADC.c: 68:             ADCON0bits.CHS2 = 1;
  2300                           	bsf	(31),4	;volatile
  2301  006F  161F               	line	69
  2302                           ;ADC.c: 69:             ADCON0bits.CHS3 = 0;
  2303                           	bcf	(31),5	;volatile
  2304  0070  129F               	line	70
  2305                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;
  2306                           	bsf	status, 5	;RP0=1, select bank3
  2307  0071  1683               	bsf	status, 6	;RP1=1, select bank3
  2308  0072  1703               	bsf	(392)^0180h,6	;volatile
  2309  0073  1708               	line	71
  2310                           ;ADC.c: 71:             TRISEbits.TRISE1 = 1;
  2311                           	bsf	status, 5	;RP0=1, select bank1
  2312  0074  1683               	bcf	status, 6	;RP1=0, select bank1
  2313  0075  1303               	bsf	(137)^080h,1	;volatile
  2314  0076  1489               	line	72
  2315                           ;ADC.c: 72:             break;
  2316                           	goto	l130
  2317  0077  2908               	line	73
  2318                           ;ADC.c: 73:         case 7:
  2319                           	
  2320                           l123:	
  2321  0078                     	line	74
  2322                           ;ADC.c: 74:             ADCON0bits.CHS0 = 1;
  2323                           	bcf	status, 5	;RP0=0, select bank0
  2324  0078  1283               	bcf	status, 6	;RP1=0, select bank0
  2325  0079  1303               	bsf	(31),2	;volatile
  2326  007A  151F               	line	75
  2327                           ;ADC.c: 75:             ADCON0bits.CHS1 = 1;
  2328                           	bsf	(31),3	;volatile
  2329  007B  159F               	line	76
  2330                           ;ADC.c: 76:             ADCON0bits.CHS2 = 1;
  2331                           	bsf	(31),4	;volatile
  2332  007C  161F               	line	77
  2333                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  2334                           	bcf	(31),5	;volatile
  2335  007D  129F               	line	78
  2336                           ;ADC.c: 78:             ANSELbits.ANS7 = 1;
  2337                           	bsf	status, 5	;RP0=1, select bank3
  2338  007E  1683               	bsf	status, 6	;RP1=1, select bank3
  2339  007F  1703               	bsf	(392)^0180h,7	;volatile
  2340  0080  1788               	line	79
  2341                           ;ADC.c: 79:             TRISEbits.TRISE2 = 1;
  2342                           	bsf	status, 5	;RP0=1, select bank1
  2343  0081  1683               	bcf	status, 6	;RP1=0, select bank1
  2344  0082  1303               	bsf	(137)^080h,2	;volatile
  2345  0083  1509               	line	80
  2346                           ;ADC.c: 80:             break;
  2347                           	goto	l130
  2348  0084  2908               	line	81
  2349                           ;ADC.c: 81:         case 8:
  2350                           	
  2351                           l124:	
  2352  0085                     	line	82
  2353                           ;ADC.c: 82:             ADCON0bits.CHS0 = 0;
  2354                           	bcf	status, 5	;RP0=0, select bank0
  2355  0085  1283               	bcf	status, 6	;RP1=0, select bank0
  2356  0086  1303               	bcf	(31),2	;volatile
  2357  0087  111F               	line	83
  2358                           ;ADC.c: 83:             ADCON0bits.CHS1 = 0;
  2359                           	bcf	(31),3	;volatile
  2360  0088  119F               	line	84
  2361                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  2362                           	bcf	(31),4	;volatile
  2363  0089  121F               	line	85
  2364                           ;ADC.c: 85:             ADCON0bits.CHS3 = 1;
  2365                           	bsf	(31),5	;volatile
  2366  008A  169F               	line	86
  2367                           ;ADC.c: 86:             ANSELHbits.ANS8 = 1;
  2368                           	bsf	status, 5	;RP0=1, select bank3
  2369  008B  1683               	bsf	status, 6	;RP1=1, select bank3
  2370  008C  1703               	bsf	(393)^0180h,0	;volatile
  2371  008D  1409               	line	87
  2372                           ;ADC.c: 87:             TRISBbits.TRISB2 = 1;
  2373                           	bsf	status, 5	;RP0=1, select bank1
  2374  008E  1683               	bcf	status, 6	;RP1=0, select bank1
  2375  008F  1303               	bsf	(134)^080h,2	;volatile
  2376  0090  1506               	line	88
  2377                           ;ADC.c: 88:             break;
  2378                           	goto	l130
  2379  0091  2908               	line	89
  2380                           ;ADC.c: 89:         case 9:
  2381                           	
  2382                           l125:	
  2383  0092                     	line	90
  2384                           ;ADC.c: 90:             ADCON0bits.CHS0 = 1;
  2385                           	bcf	status, 5	;RP0=0, select bank0
  2386  0092  1283               	bcf	status, 6	;RP1=0, select bank0
  2387  0093  1303               	bsf	(31),2	;volatile
  2388  0094  151F               	line	91
  2389                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  2390                           	bcf	(31),3	;volatile
  2391  0095  119F               	line	92
  2392                           ;ADC.c: 92:             ADCON0bits.CHS2 = 0;
  2393                           	bcf	(31),4	;volatile
  2394  0096  121F               	line	93
  2395                           ;ADC.c: 93:             ADCON0bits.CHS3 = 1;
  2396                           	bsf	(31),5	;volatile
  2397  0097  169F               	line	94
  2398                           ;ADC.c: 94:             ANSELHbits.ANS9 = 1;
  2399                           	bsf	status, 5	;RP0=1, select bank3
  2400  0098  1683               	bsf	status, 6	;RP1=1, select bank3
  2401  0099  1703               	bsf	(393)^0180h,1	;volatile
  2402  009A  1489               	line	95
  2403                           ;ADC.c: 95:             TRISBbits.TRISB3 = 1;
  2404                           	bsf	status, 5	;RP0=1, select bank1
  2405  009B  1683               	bcf	status, 6	;RP1=0, select bank1
  2406  009C  1303               	bsf	(134)^080h,3	;volatile
  2407  009D  1586               	line	96
  2408                           ;ADC.c: 96:             break;
  2409                           	goto	l130
  2410  009E  2908               	line	97
  2411                           ;ADC.c: 97:         case 10:
  2412                           	
  2413                           l126:	
  2414  009F                     	line	98
  2415                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  2416                           	bcf	status, 5	;RP0=0, select bank0
  2417  009F  1283               	bcf	status, 6	;RP1=0, select bank0
  2418  00A0  1303               	bcf	(31),2	;volatile
  2419  00A1  111F               	line	99
  2420                           ;ADC.c: 99:             ADCON0bits.CHS1 = 1;
  2421                           	bsf	(31),3	;volatile
  2422  00A2  159F               	line	100
  2423                           ;ADC.c: 100:             ADCON0bits.CHS2 = 0;
  2424                           	bcf	(31),4	;volatile
  2425  00A3  121F               	line	101
  2426                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  2427                           	bsf	(31),5	;volatile
  2428  00A4  169F               	line	102
  2429                           ;ADC.c: 102:             ANSELHbits.ANS10 = 1;
  2430                           	bsf	status, 5	;RP0=1, select bank3
  2431  00A5  1683               	bsf	status, 6	;RP1=1, select bank3
  2432  00A6  1703               	bsf	(393)^0180h,2	;volatile
  2433  00A7  1509               	line	103
  2434                           ;ADC.c: 103:             TRISBbits.TRISB1 = 1;
  2435                           	bsf	status, 5	;RP0=1, select bank1
  2436  00A8  1683               	bcf	status, 6	;RP1=0, select bank1
  2437  00A9  1303               	bsf	(134)^080h,1	;volatile
  2438  00AA  1486               	line	104
  2439                           ;ADC.c: 104:             break;
  2440                           	goto	l130
  2441  00AB  2908               	line	105
  2442                           ;ADC.c: 105:         case 11:
  2443                           	
  2444                           l127:	
  2445  00AC                     	line	106
  2446                           ;ADC.c: 106:             ADCON0bits.CHS0 = 1;
  2447                           	bcf	status, 5	;RP0=0, select bank0
  2448  00AC  1283               	bcf	status, 6	;RP1=0, select bank0
  2449  00AD  1303               	bsf	(31),2	;volatile
  2450  00AE  151F               	line	107
  2451                           ;ADC.c: 107:             ADCON0bits.CHS1 = 1;
  2452                           	bsf	(31),3	;volatile
  2453  00AF  159F               	line	108
  2454                           ;ADC.c: 108:             ADCON0bits.CHS2 = 0;
  2455                           	bcf	(31),4	;volatile
  2456  00B0  121F               	line	109
  2457                           ;ADC.c: 109:             ADCON0bits.CHS3 = 1;
  2458                           	bsf	(31),5	;volatile
  2459  00B1  169F               	line	110
  2460                           ;ADC.c: 110:             ANSELHbits.ANS11 = 1;
  2461                           	bsf	status, 5	;RP0=1, select bank3
  2462  00B2  1683               	bsf	status, 6	;RP1=1, select bank3
  2463  00B3  1703               	bsf	(393)^0180h,3	;volatile
  2464  00B4  1589               	line	111
  2465                           ;ADC.c: 111:             TRISBbits.TRISB4 = 1;
  2466                           	bsf	status, 5	;RP0=1, select bank1
  2467  00B5  1683               	bcf	status, 6	;RP1=0, select bank1
  2468  00B6  1303               	bsf	(134)^080h,4	;volatile
  2469  00B7  1606               	line	112
  2470                           ;ADC.c: 112:             break;
  2471                           	goto	l130
  2472  00B8  2908               	line	113
  2473                           ;ADC.c: 113:         case 12:
  2474                           	
  2475                           l128:	
  2476  00B9                     	line	114
  2477                           ;ADC.c: 114:             ADCON0bits.CHS0 = 0;
  2478                           	bcf	status, 5	;RP0=0, select bank0
  2479  00B9  1283               	bcf	status, 6	;RP1=0, select bank0
  2480  00BA  1303               	bcf	(31),2	;volatile
  2481  00BB  111F               	line	115
  2482                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  2483                           	bcf	(31),3	;volatile
  2484  00BC  119F               	line	116
  2485                           ;ADC.c: 116:             ADCON0bits.CHS2 = 1;
  2486                           	bsf	(31),4	;volatile
  2487  00BD  161F               	line	117
  2488                           ;ADC.c: 117:             ADCON0bits.CHS3 = 1;
  2489                           	bsf	(31),5	;volatile
  2490  00BE  169F               	line	118
  2491                           ;ADC.c: 118:             ANSELHbits.ANS12 = 1;
  2492                           	bsf	status, 5	;RP0=1, select bank3
  2493  00BF  1683               	bsf	status, 6	;RP1=1, select bank3
  2494  00C0  1703               	bsf	(393)^0180h,4	;volatile
  2495  00C1  1609               	line	119
  2496                           ;ADC.c: 119:             TRISBbits.TRISB0 = 1;
  2497                           	bsf	status, 5	;RP0=1, select bank1
  2498  00C2  1683               	bcf	status, 6	;RP1=0, select bank1
  2499  00C3  1303               	bsf	(134)^080h,0	;volatile
  2500  00C4  1406               	line	120
  2501                           ;ADC.c: 120:             break;
  2502                           	goto	l130
  2503  00C5  2908               	line	121
  2504                           ;ADC.c: 121:         case 13:
  2505                           	
  2506                           l129:	
  2507  00C6                     	line	122
  2508                           ;ADC.c: 122:             ADCON0bits.CHS0 = 1;
  2509                           	bcf	status, 5	;RP0=0, select bank0
  2510  00C6  1283               	bcf	status, 6	;RP1=0, select bank0
  2511  00C7  1303               	bsf	(31),2	;volatile
  2512  00C8  151F               	line	123
  2513                           ;ADC.c: 123:             ADCON0bits.CHS1 = 0;
  2514                           	bcf	(31),3	;volatile
  2515  00C9  119F               	line	124
  2516                           ;ADC.c: 124:             ADCON0bits.CHS2 = 1;
  2517                           	bsf	(31),4	;volatile
  2518  00CA  161F               	line	125
  2519                           ;ADC.c: 125:             ADCON0bits.CHS3 = 1;
  2520                           	bsf	(31),5	;volatile
  2521  00CB  169F               	line	126
  2522                           ;ADC.c: 126:             ANSELHbits.ANS13 = 1;
  2523                           	bsf	status, 5	;RP0=1, select bank3
  2524  00CC  1683               	bsf	status, 6	;RP1=1, select bank3
  2525  00CD  1703               	bsf	(393)^0180h,5	;volatile
  2526  00CE  1689               	line	127
  2527                           ;ADC.c: 127:             TRISBbits.TRISB5 = 1;
  2528                           	bsf	status, 5	;RP0=1, select bank1
  2529  00CF  1683               	bcf	status, 6	;RP1=0, select bank1
  2530  00D0  1303               	bsf	(134)^080h,5	;volatile
  2531  00D1  1686               	line	128
  2532                           ;ADC.c: 128:             break;
  2533                           	goto	l130
  2534  00D2  2908               	line	129
  2535                           	
  2536                           l787:	
  2537  00D3                     ;ADC.c: 129:     }
  2538                           	goto	l130
  2539  00D3  2908               	
  2540                           l114:	
  2541  00D4                     	
  2542                           l789:	
  2543  00D4                     	movf	(configCanal@channel),w
  2544  00D4  0874               	movwf	(??_configCanal+0)+0
  2545  00D5  00F2               	clrf	(??_configCanal+0)+0+1
  2546  00D6  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2547                           ; Switch size 1, requested type "space"
  2548                           ; Number of cases is 1, Range of values is 0 to 0
  2549                           ; switch strategies available:
  2550                           ; Name         Instructions Cycles
  2551                           ; simple_byte            4     3 (average)
  2552                           ; direct_byte           11     8 (fixed)
  2553                           ; jumptable            260     6 (fixed)
  2554                           ;	Chosen strategy is simple_byte
  2555                           
  2556                           	movf 1+(??_configCanal+0)+0,w
  2557  00D7  0873               	opt asmopt_push
  2558                           	opt asmopt_off
  2559                           	xorlw	0^0	; case 0
  2560  00D8  3A00               	skipnz
  2561  00D9  1903               	goto	l1135
  2562  00DA  28DC               	goto	l130
  2563  00DB  2908               	opt asmopt_pop
  2564                           	
  2565                           l1135:	
  2566  00DC                     ; Switch size 1, requested type "space"
  2567                           ; Number of cases is 14, Range of values is 0 to 13
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte           43    22 (average)
  2571                           ; direct_byte           50     8 (fixed)
  2572                           ; jumptable            260     6 (fixed)
  2573                           ;	Chosen strategy is simple_byte
  2574                           
  2575                           	movf 0+(??_configCanal+0)+0,w
  2576  00DC  0872               	opt asmopt_push
  2577                           	opt asmopt_off
  2578                           	xorlw	0^0	; case 0
  2579  00DD  3A00               	skipnz
  2580  00DE  1903               	goto	l115
  2581  00DF  281D               	xorlw	1^0	; case 1
  2582  00E0  3A01               	skipnz
  2583  00E1  1903               	goto	l117
  2584  00E2  282A               	xorlw	2^1	; case 2
  2585  00E3  3A03               	skipnz
  2586  00E4  1903               	goto	l118
  2587  00E5  2837               	xorlw	3^2	; case 3
  2588  00E6  3A01               	skipnz
  2589  00E7  1903               	goto	l119
  2590  00E8  2844               	xorlw	4^3	; case 4
  2591  00E9  3A07               	skipnz
  2592  00EA  1903               	goto	l120
  2593  00EB  2851               	xorlw	5^4	; case 5
  2594  00EC  3A01               	skipnz
  2595  00ED  1903               	goto	l121
  2596  00EE  285E               	xorlw	6^5	; case 6
  2597  00EF  3A03               	skipnz
  2598  00F0  1903               	goto	l122
  2599  00F1  286B               	xorlw	7^6	; case 7
  2600  00F2  3A01               	skipnz
  2601  00F3  1903               	goto	l123
  2602  00F4  2878               	xorlw	8^7	; case 8
  2603  00F5  3A0F               	skipnz
  2604  00F6  1903               	goto	l124
  2605  00F7  2885               	xorlw	9^8	; case 9
  2606  00F8  3A01               	skipnz
  2607  00F9  1903               	goto	l125
  2608  00FA  2892               	xorlw	10^9	; case 10
  2609  00FB  3A03               	skipnz
  2610  00FC  1903               	goto	l126
  2611  00FD  289F               	xorlw	11^10	; case 11
  2612  00FE  3A01               	skipnz
  2613  00FF  1903               	goto	l127
  2614  0100  28AC               	xorlw	12^11	; case 12
  2615  0101  3A07               	skipnz
  2616  0102  1903               	goto	l128
  2617  0103  28B9               	xorlw	13^12	; case 13
  2618  0104  3A01               	skipnz
  2619  0105  1903               	goto	l129
  2620  0106  28C6               	goto	l130
  2621  0107  2908               	opt asmopt_pop
  2622                           
  2623                           	
  2624                           l116:	
  2625  0108                     	line	131
  2626                           ;ADC.c: 130:     return;
  2627                           	
  2628                           l130:	
  2629  0108                     	return
  2630  0108  0008               	opt stack 0
  2631                           GLOBAL	__end_of_configCanal
  2632                           	__end_of_configCanal:
  2633  0109                     	signat	_configCanal,4217
  2634                           	global	_configADC
  2635                           
  2636 ;; *************** function _configADC *****************
  2637 ;; Defined at:
  2638 ;;		line 133 in file "ADC.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  FOSC            1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  FOSC            1    4[COMMON] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0
  2654 ;;      Temps:          2       0       0       0       0
  2655 ;;      Totals:         3       0       0       0       0
  2656 ;;Total ram usage:        3 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2666                           	line	133
  2667                           global __ptext9
  2668                           __ptext9:	;psect for function _configADC
  2669  01BD                     psect	text9
  2670                           	file	"ADC.c"
  2671                           	line	133
  2672                           	global	__size_of_configADC
  2673                           	__size_of_configADC	equ	__end_of_configADC-_configADC
  2674  0037                     	
  2675                           _configADC:	
  2676  01BD                     ;incstack = 0
  2677                           	opt	stack 6
  2678                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  2679                           ;configADC@FOSC stored from wreg
  2680                           	movwf	(configADC@FOSC)
  2681  01BD  00F4               	line	135
  2682                           	
  2683                           l775:	
  2684  01BE                     ;ADC.c: 135:     INTCONbits.PEIE=1;
  2685                           	bsf	(11),6	;volatile
  2686  01BE  170B               	line	136
  2687                           ;ADC.c: 136:     PIE1bits.ADIE = 1;
  2688                           	bsf	status, 5	;RP0=1, select bank1
  2689  01BF  1683               	bcf	status, 6	;RP1=0, select bank1
  2690  01C0  1303               	bsf	(140)^080h,6	;volatile
  2691  01C1  170C               	line	137
  2692                           ;ADC.c: 137:     PIR1bits.ADIF=0;
  2693                           	bcf	status, 5	;RP0=0, select bank0
  2694  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2695  01C3  1303               	bcf	(12),6	;volatile
  2696  01C4  130C               	line	138
  2697                           ;ADC.c: 138:     ADCON1bits.ADFM=0;
  2698                           	bsf	status, 5	;RP0=1, select bank1
  2699  01C5  1683               	bcf	status, 6	;RP1=0, select bank1
  2700  01C6  1303               	bcf	(159)^080h,7	;volatile
  2701  01C7  139F               	line	139
  2702                           ;ADC.c: 139:     ADCON1bits.VCFG1=0;
  2703                           	bcf	(159)^080h,5	;volatile
  2704  01C8  129F               	line	140
  2705                           ;ADC.c: 140:     ADCON1bits.VCFG0=0;
  2706                           	bcf	(159)^080h,4	;volatile
  2707  01C9  121F               	line	141
  2708                           ;ADC.c: 141:     ADCON0bits.ADON=1;
  2709                           	bcf	status, 5	;RP0=0, select bank0
  2710  01CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2711  01CB  1303               	bsf	(31),0	;volatile
  2712  01CC  141F               	line	143
  2713                           ;ADC.c: 143:     switch (FOSC){
  2714                           	goto	l779
  2715  01CD  29DB               	line	144
  2716                           ;ADC.c: 144:         case 0:
  2717                           	
  2718                           l134:	
  2719  01CE                     	line	145
  2720                           ;ADC.c: 145:             ADCON0bits.ADCS1=0;
  2721                           	bcf	(31),7	;volatile
  2722  01CE  139F               	line	146
  2723                           ;ADC.c: 146:             ADCON0bits.ADCS0=0;
  2724                           	bcf	(31),6	;volatile
  2725  01CF  131F               	line	147
  2726                           ;ADC.c: 147:             break;
  2727                           	goto	l135
  2728  01D0  29F1               	line	148
  2729                           ;ADC.c: 148:         case 1:
  2730                           	
  2731                           l136:	
  2732  01D1                     	line	149
  2733                           ;ADC.c: 149:             ADCON0bits.ADCS1=0;
  2734                           	bcf	(31),7	;volatile
  2735  01D1  139F               	line	150
  2736                           ;ADC.c: 150:             ADCON0bits.ADCS0=1;
  2737                           	bsf	(31),6	;volatile
  2738  01D2  171F               	line	151
  2739                           ;ADC.c: 151:             break;
  2740                           	goto	l135
  2741  01D3  29F1               	line	152
  2742                           ;ADC.c: 152:         case 2:
  2743                           	
  2744                           l137:	
  2745  01D4                     	line	153
  2746                           ;ADC.c: 153:             ADCON0bits.ADCS1=1;
  2747                           	bsf	(31),7	;volatile
  2748  01D4  179F               	line	154
  2749                           ;ADC.c: 154:             ADCON0bits.ADCS0=0;
  2750                           	bcf	(31),6	;volatile
  2751  01D5  131F               	line	155
  2752                           ;ADC.c: 155:             break;
  2753                           	goto	l135
  2754  01D6  29F1               	line	156
  2755                           ;ADC.c: 156:         case 3:
  2756                           	
  2757                           l138:	
  2758  01D7                     	line	157
  2759                           ;ADC.c: 157:             ADCON0bits.ADCS1=1;
  2760                           	bsf	(31),7	;volatile
  2761  01D7  179F               	line	158
  2762                           ;ADC.c: 158:             ADCON0bits.ADCS0=1;
  2763                           	bsf	(31),6	;volatile
  2764  01D8  171F               	line	159
  2765                           ;ADC.c: 159:             break;
  2766                           	goto	l135
  2767  01D9  29F1               	line	160
  2768                           	
  2769                           l777:	
  2770  01DA                     ;ADC.c: 160:     }
  2771                           	goto	l135
  2772  01DA  29F1               	
  2773                           l133:	
  2774  01DB                     	
  2775                           l779:	
  2776  01DB                     	movf	(configADC@FOSC),w
  2777  01DB  0874               	movwf	(??_configADC+0)+0
  2778  01DC  00F2               	clrf	(??_configADC+0)+0+1
  2779  01DD  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2780                           ; Switch size 1, requested type "space"
  2781                           ; Number of cases is 1, Range of values is 0 to 0
  2782                           ; switch strategies available:
  2783                           ; Name         Instructions Cycles
  2784                           ; simple_byte            4     3 (average)
  2785                           ; direct_byte           11     8 (fixed)
  2786                           ; jumptable            260     6 (fixed)
  2787                           ;	Chosen strategy is simple_byte
  2788                           
  2789                           	movf 1+(??_configADC+0)+0,w
  2790  01DE  0873               	opt asmopt_push
  2791                           	opt asmopt_off
  2792                           	xorlw	0^0	; case 0
  2793  01DF  3A00               	skipnz
  2794  01E0  1903               	goto	l1137
  2795  01E1  29E3               	goto	l135
  2796  01E2  29F1               	opt asmopt_pop
  2797                           	
  2798                           l1137:	
  2799  01E3                     ; Switch size 1, requested type "space"
  2800                           ; Number of cases is 4, Range of values is 0 to 3
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte           13     7 (average)
  2804                           ; direct_byte           20     8 (fixed)
  2805                           ; jumptable            260     6 (fixed)
  2806                           ;	Chosen strategy is simple_byte
  2807                           
  2808                           	movf 0+(??_configADC+0)+0,w
  2809  01E3  0872               	opt asmopt_push
  2810                           	opt asmopt_off
  2811                           	xorlw	0^0	; case 0
  2812  01E4  3A00               	skipnz
  2813  01E5  1903               	goto	l134
  2814  01E6  29CE               	xorlw	1^0	; case 1
  2815  01E7  3A01               	skipnz
  2816  01E8  1903               	goto	l136
  2817  01E9  29D1               	xorlw	2^1	; case 2
  2818  01EA  3A03               	skipnz
  2819  01EB  1903               	goto	l137
  2820  01EC  29D4               	xorlw	3^2	; case 3
  2821  01ED  3A01               	skipnz
  2822  01EE  1903               	goto	l138
  2823  01EF  29D7               	goto	l135
  2824  01F0  29F1               	opt asmopt_pop
  2825                           
  2826                           	
  2827                           l135:	
  2828  01F1                     	line	162
  2829                           ;ADC.c: 162:     ADCON0bits.GO_DONE=1;
  2830                           	bsf	(31),1	;volatile
  2831  01F1  149F               	line	163
  2832                           ;ADC.c: 163:     INTCONbits.GIE = 1;
  2833                           	bsf	(11),7	;volatile
  2834  01F2  178B               	line	165
  2835                           ;ADC.c: 164:     return;
  2836                           	
  2837                           l139:	
  2838  01F3                     	return
  2839  01F3  0008               	opt stack 0
  2840                           GLOBAL	__end_of_configADC
  2841                           	__end_of_configADC:
  2842  01F4                     	signat	_configADC,4217
  2843                           	global	_clcLCD
  2844                           
  2845 ;; *************** function _clcLCD *****************
  2846 ;; Defined at:
  2847 ;;		line 12 in file "LCD.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0, pclath, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2861 ;;      Params:         0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    2
  2868 ;; This function calls:
  2869 ;;		_cmdLCD
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  2875                           	file	"LCD.c"
  2876                           	line	12
  2877                           global __ptext10
  2878                           __ptext10:	;psect for function _clcLCD
  2879  0291                     psect	text10
  2880                           	file	"LCD.c"
  2881                           	line	12
  2882                           	global	__size_of_clcLCD
  2883                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  2884  0007                     	
  2885                           _clcLCD:	
  2886  0291                     ;incstack = 0
  2887                           	opt	stack 5
  2888                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  2889                           	line	13
  2890                           	
  2891                           l1045:	
  2892  0291                     ;LCD.c: 13:     cmdLCD(0x01);
  2893                           	movlw	low(01h)
  2894  0291  3001               	fcall	_cmdLCD
  2895  0292  120A  118A  2236  120A  118A  	line	14
  2896                           	
  2897                           l161:	
  2898  0297                     	return
  2899  0297  0008               	opt stack 0
  2900                           GLOBAL	__end_of_clcLCD
  2901                           	__end_of_clcLCD:
  2902  0298                     	signat	_clcLCD,89
  2903                           	global	_cmdLCD
  2904                           
  2905 ;; *************** function _cmdLCD *****************
  2906 ;; Defined at:
  2907 ;;		line 46 in file "LCD.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  cmd             1    wreg     unsigned char 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  cmd             1    4[COMMON] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         1       0       0       0       0
  2923 ;;      Temps:          2       0       0       0       0
  2924 ;;      Totals:         3       0       0       0       0
  2925 ;;Total ram usage:        3 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_setCursorLCD
  2932 ;;		_clcLCD
  2933 ;;		_initLCD
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  2937                           	line	46
  2938                           global __ptext11
  2939                           __ptext11:	;psect for function _cmdLCD
  2940  0236                     psect	text11
  2941                           	file	"LCD.c"
  2942                           	line	46
  2943                           	global	__size_of_cmdLCD
  2944                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  2945  0014                     	
  2946                           _cmdLCD:	
  2947  0236                     ;incstack = 0
  2948                           	opt	stack 5
  2949                           ; Regs used in _cmdLCD: [wreg]
  2950                           ;cmdLCD@cmd stored from wreg
  2951                           	movwf	(cmdLCD@cmd)
  2952  0236  00F4               	line	47
  2953                           	
  2954                           l1019:	
  2955  0237                     ;LCD.c: 47:     RC0 = 0;
  2956                           	bcf	status, 5	;RP0=0, select bank0
  2957  0237  1283               	bcf	status, 6	;RP1=0, select bank0
  2958  0238  1303               	bcf	(56/8),(56)&7	;volatile
  2959  0239  1007               	line	48
  2960                           	
  2961                           l1021:	
  2962  023A                     ;LCD.c: 48:  PORTA = cmd;
  2963                           	movf	(cmdLCD@cmd),w
  2964  023A  0874               	movwf	(5)	;volatile
  2965  023B  0085               	line	49
  2966                           	
  2967                           l1023:	
  2968  023C                     ;LCD.c: 49:  RC1 = 1;
  2969                           	bsf	(57/8),(57)&7	;volatile
  2970  023C  1487               	line	50
  2971                           ;LCD.c: 50:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2972                           	opt asmopt_push
  2973                           opt asmopt_off
  2974                           movlw	6
  2975  023D  3006               movwf	((??_cmdLCD+0)+0+1),f
  2976  023E  00F3               	movlw	48
  2977  023F  3030               movwf	((??_cmdLCD+0)+0),f
  2978  0240  00F2               	u217:
  2979  0241                     decfsz	((??_cmdLCD+0)+0),f
  2980  0241  0BF2               	goto	u217
  2981  0242  2A41               	decfsz	((??_cmdLCD+0)+0+1),f
  2982  0243  0BF3               	goto	u217
  2983  0244  2A41               	nop
  2984  0245  0000               opt asmopt_pop
  2985                           
  2986                           	line	51
  2987                           	
  2988                           l1025:	
  2989  0246                     ;LCD.c: 51:     RC1 = 0;
  2990                           	bcf	status, 5	;RP0=0, select bank0
  2991  0246  1283               	bcf	status, 6	;RP1=0, select bank0
  2992  0247  1303               	bcf	(57/8),(57)&7	;volatile
  2993  0248  1087               	line	52
  2994                           	
  2995                           l176:	
  2996  0249                     	return
  2997  0249  0008               	opt stack 0
  2998                           GLOBAL	__end_of_cmdLCD
  2999                           	__end_of_cmdLCD:
  3000  024A                     	signat	_cmdLCD,4217
  3001                           	global	_ISR
  3002                           
  3003 ;; *************** function _ISR *****************
  3004 ;; Defined at:
  3005 ;;		line 37 in file "newmain.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		None
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0
  3021 ;;      Temps:          2       0       0       0       0
  3022 ;;      Totals:         2       0       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		Interrupt level 1
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3032                           	file	"newmain.c"
  3033                           	line	37
  3034                           global __ptext12
  3035                           __ptext12:	;psect for function _ISR
  3036  024A                     psect	text12
  3037                           	file	"newmain.c"
  3038                           	line	37
  3039                           	global	__size_of_ISR
  3040                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  3041  0011                     	
  3042                           _ISR:	
  3043  024A                     ;incstack = 0
  3044                           	opt	stack 5
  3045                           ; Regs used in _ISR: []
  3046                           psect	intentry,class=CODE,delta=2
  3047                           global __pintentry
  3048                           __pintentry:
  3049  0004                     global interrupt_function
  3050                           interrupt_function:
  3051  0004                     	global saved_w
  3052                           	saved_w	set	btemp+0
  3053  007E                     	movwf	saved_w
  3054  0004  00FE               	swapf	status,w
  3055  0005  0E03               	movwf	(??_ISR+0)
  3056  0006  00F0               	movf	pclath,w
  3057  0007  080A               	movwf	(??_ISR+1)
  3058  0008  00F1               	ljmp	_ISR
  3059  0009  120A  118A  2A4A   psect	text12
  3060                           	line	38
  3061                           	
  3062                           i1l839:	
  3063  024A                     ;newmain.c: 38:     if(ADCON0bits.GO_DONE == 0){
  3064                           	bcf	status, 5	;RP0=0, select bank0
  3065  024A  1283               	bcf	status, 6	;RP1=0, select bank0
  3066  024B  1303               	btfsc	(31),1	;volatile
  3067  024C  189F               	goto	u3_21
  3068  024D  2A4F               	goto	u3_20
  3069  024E  2A50               u3_21:
  3070  024F                     	goto	i1l62
  3071  024F  2A54               u3_20:
  3072  0250                     	line	39
  3073                           	
  3074                           i1l841:	
  3075  0250                     ;newmain.c: 39:         adc = 1;
  3076                           	clrf	(_adc)
  3077  0250  01FB               	incf	(_adc),f
  3078  0251  0AFB               	line	40
  3079                           ;newmain.c: 40:         PIR1bits.ADIF = 0;
  3080                           	bcf	(12),6	;volatile
  3081  0252  130C               	goto	i1l62
  3082  0253  2A54               	line	41
  3083                           ;newmain.c: 41:     }
  3084                           	
  3085                           i1l61:	
  3086  0254                     	line	42
  3087                           	
  3088                           i1l62:	
  3089  0254                     	movf	(??_ISR+1),w
  3090  0254  0871               	movwf	pclath
  3091  0255  008A               	swapf	(??_ISR+0)^0FFFFFF80h,w
  3092  0256  0E70               	movwf	status
  3093  0257  0083               	swapf	saved_w,f
  3094  0258  0EFE               	swapf	saved_w,w
  3095  0259  0E7E               	retfie
  3096  025A  0009               	opt stack 0
  3097                           GLOBAL	__end_of_ISR
  3098                           	__end_of_ISR:
  3099  025B                     	signat	_ISR,89
  3100                           global	___latbits
  3101                           ___latbits	equ	2
  3102  0002                     	global	btemp
  3103                           	btemp set 07Eh
  3104  007E                     
  3105                           	DABS	1,126,2	;btemp
  3106                           	global	wtemp0
  3107                           	wtemp0 set btemp+0
  3108  007E                     	end


Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    writeStrLCD@string	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_initLCD
    _main->_setCursorLCD
    _main->_writeStrLCD
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setCursorLCD

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     432
                                              1 BANK0      1     1      0
                             _clcLCD
                          _configADC
                        _configCanal
                            _initLCD
                            _readADC
                           _selCanal
                       _setCursorLCD
                              _setup
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          3     3      0     138
                                              4 COMMON     3     3      0
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      15
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setCursorLCD                                         3     2      1     205
                                              5 COMMON     2     1      1
                                              0 BANK0      1     1      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _selCanal                                             2     2      0      15
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              5 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _configCanal                                          3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _cmdLCD                                               3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcLCD
     _cmdLCD
   _configADC
   _configCanal
   _initLCD
     _cmdLCD
   _readADC
   _selCanal
   _setCursorLCD
     _cmdLCD
   _setup
   _writeStrLCD
     _writeCharLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Feb 08 21:28:16 2020

                       pc 0002               __CFG_CP$OFF 0000           writeStrLCD@cont 0074  
                      l70 016A                        l71 0175                        l72 0178  
                      l73 017E                        l74 017F                        l75 0180  
                      l67 0139                        l76 0180                        l68 016C  
                      l69 0159                        l79 026A                        u90 0219  
                      u91 0218                        fsr 0004                       l111 0287  
                     l120 0051                       l121 005E                       l114 00D4  
                     l122 006B                       l130 0108                       l123 0078  
                     l115 001D                       l116 0108                       l124 0085  
                     l108 029C                       l133 01DB                       l125 0092  
                     l117 002A                       l134 01CE                       l126 009F  
                     l118 0037                       l135 01F1                       l127 00AC  
                     l119 0044                       l136 01D1                       l128 00B9  
                     l161 0297                       l137 01D4                       l129 00C6  
                     l138 01D7                       l170 0279                       l139 01F3  
                     l156 0229                       l164 020C                       l173 01BC  
                     l157 022F                       l165 01F8                       l158 0235  
                     l166 021A                       l167 021A                       l176 0249  
                     l831 027B                       l833 0287                       l761 0271  
                     l835 0298                       l771 0268                       l763 0276  
                     l931 01F5                       l837 029C                       l773 0269  
                     l765 025B                       l757 026C                       l933 01F8  
                     l775 01BE                       l767 0265                       l759 026F  
                     l935 0205                       l777 01DA                       l785 001C  
                     l769 0267                       l937 020C                       l779 01DB  
                     l787 00D3                       l789 00D4                       _RC0 0038  
                     _RC1 0039                       u140 0223                       u141 0222  
                     u150 013E                       u207 0187                       u151 013D  
                     u160 0148                       u217 0241                       u161 0147  
                     u170 0172                       u171 0171                       u180 017C  
                     u181 017B              __CFG_CPD$OFF 0000                       _ISR 024A  
                     u197 0274                       _adc 007B                       fsr0 0004  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      l1021 023A  
                    l1023 023C                      l1031 0192                      l1025 0246  
                    l1041 01B0                      l1033 0198                      l1019 0237  
                    l1043 01B6                      l1035 019E                      l1027 0183  
                    l1051 0229                      l1045 0291                      l1037 01A4  
                    l1029 018C                      l1053 022F                      l1061 011A  
                    l1135 00DC                      l1039 01AA                      l1047 021E  
                    l1071 013E                      l1063 0120                      l1055 0109  
                    l1137 01E3                      l1049 0223                      l1081 015F  
                    l1073 0144                      l1065 0125                      l1057 010E  
                    l1091 0178                      l1083 016A                      l1075 0148  
                    l1067 012A                      l1059 0114                      l1093 017C  
                    l1077 014E                      l1085 016C                      l1069 0139  
                    l1087 0172                      l1079 0159                      l1089 0175  
                    STR_1 028E                      i1l61 0254                      i1l62 0254  
                    u3_20 0250                      u3_21 024F              __CFG_WRT$OFF 0000  
       writeStrLCD@string 0076                      _main 0109                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l841 0250  
                   i1l839 024A               _writeStrLCD 01F4                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000           __end_of_readADC 029D           __end_of_initLCD 01BD  
                   _setup 025B     __size_of_writeCharLCD 000F            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0183  
                  ??_main 0021              _writeCharLCD 026B                    _ADRESH 001E  
                  ?_setup 0070            __CFG_PWRTE$OFF 0000      __size_of_configCanal 00EE  
                  _clcLCD 0291                    _cmdLCD 0236                    _cursor 007A  
        __end_of_selCanal 0288                 ??_readADC 0072                 ??_initLCD 0075  
                  saved_w 007E   __end_of__initialization 0017            __pcstackCOMMON 0070  
           __end_of_setup 026B        __size_of_configADC 0037                   ??_setup 0072  
              __pbssBANK0 0022             ?_setCursorLCD 0075                __pmaintext 0109  
                 ?_clcLCD 0070                   ?_cmdLCD 0070                __pintentry 0004  
            ?_writeStrLCD 0070                __stringtab 0288            ??_setCursorLCD 0076  
               ?_selCanal 0070         __end_of_configADC 01F4             setCursorLCD@x 0075  
           setCursorLCD@y 0020           __size_of_clcLCD 0007           __size_of_cmdLCD 0014  
               _ANSELbits 0188                   _contADC 0079                   __ptext1 01F4  
                 __ptext2 026B                   __ptext3 025B                   __ptext4 021B  
                 __ptext5 027A                   __ptext6 0298                   __ptext7 0183  
                 __ptext8 001B                   __ptext9 01BD                   _readADC 0298  
                 _initLCD 0183              __size_of_ISR 0011                   _sensor1 0078  
                 _sensor2 0077      end_of_initialization 0017                ??_selCanal 0072  
               _PORTBbits 0006                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089             ??_configCanal 0072            __end_of_clcLCD 0298  
          __end_of_cmdLCD 024A      __end_of_setCursorLCD 0236       start_initialization 000F  
             __end_of_ISR 025B      __size_of_writeStrLCD 0027           selCanal@channel 0073  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_clcLCD 0075                  ??_cmdLCD 0072  
     __end_of_configCanal 0109               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0020        configCanal@channel 0074     writeCharLCD@character 0073  
       __size_of_selCanal 000E                 cmdLCD@cmd 0074                 _configADC 01BD  
               __pstrings 0288                  ?_readADC 0070                  ?_initLCD 0070  
           ?_writeCharLCD 0070            __size_of_setup 0010         interrupt_function 0004  
             _configCanal 001B                  _PIE1bits 008C                  _PIR1bits 000C  
   __size_of_setCursorLCD 001B                ?_configADC 0070                _ADCON0bits 001F  
             __stringbase 028D                _ADCON1bits 009F            ??_writeCharLCD 0072  
            _setCursorLCD 021B                  _adcValue 0022        __end_of__stringtab 028E  
              _ANSELHbits 0189          __size_of_readADC 0005          __size_of_initLCD 003A  
                __ptext10 0291                  __ptext11 0236                  __ptext12 024A  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 007A                  _selCanal 027A  
             ??_configADC 0072             ??_writeStrLCD 0074                _INTCONbits 000B  
                intlevel1 0000      __end_of_writeCharLCD 027A                 stringcode 0288  
                stringdir 0288                  stringtab 0288       __end_of_writeStrLCD 021B  
           configADC@FOSC 0074              ?_configCanal 0070  
