

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Feb 08 09:41:51 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_configADC
   712                           	FNCALL	_main,_configCanal
   713                           	FNCALL	_main,_readADC
   714                           	FNCALL	_main,_selCanal
   715                           	FNCALL	_main,_setup
   716                           	FNROOT	_main
   717                           	FNCALL	intlevel1,_ISR
   718                           	global	intlevel1
   719                           	FNROOT	intlevel1
   720                           	global	_sensor2
   721                           	global	_sensor1
   722                           	global	_contADC
   723                           	global	_adc
   724                           	global	_INTCONbits
   725                           _INTCONbits	set	0xB
   726  000B                     	global	_ADRESH
   727                           _ADRESH	set	0x1E
   728  001E                     	global	_PORTE
   729                           _PORTE	set	0x9
   730  0009                     	global	_PORTC
   731                           _PORTC	set	0x7
   732  0007                     	global	_PORTB
   733                           _PORTB	set	0x6
   734  0006                     	global	_PORTA
   735                           _PORTA	set	0x5
   736  0005                     	global	_PORTD
   737                           _PORTD	set	0x8
   738  0008                     	global	_PORTBbits
   739                           _PORTBbits	set	0x6
   740  0006                     	global	_PORTCbits
   741                           _PORTCbits	set	0x7
   742  0007                     	global	_PIR1bits
   743                           _PIR1bits	set	0xC
   744  000C                     	global	_ADCON0bits
   745                           _ADCON0bits	set	0x1F
   746  001F                     	global	_RE2
   747                           _RE2	set	0x4A
   748  004A                     	global	_RE0
   749                           _RE0	set	0x48
   750  0048                     	global	_ADCON1bits
   751                           _ADCON1bits	set	0x9F
   752  009F                     	global	_PIE1bits
   753                           _PIE1bits	set	0x8C
   754  008C                     	global	_TRISBbits
   755                           _TRISBbits	set	0x86
   756  0086                     	global	_TRISEbits
   757                           _TRISEbits	set	0x89
   758  0089                     	global	_TRISAbits
   759                           _TRISAbits	set	0x85
   760  0085                     	global	_TRISE
   761                           _TRISE	set	0x89
   762  0089                     	global	_TRISD
   763                           _TRISD	set	0x88
   764  0088                     	global	_TRISC
   765                           _TRISC	set	0x87
   766  0087                     	global	_TRISB
   767                           _TRISB	set	0x86
   768  0086                     	global	_TRISA
   769                           _TRISA	set	0x85
   770  0085                     	global	_ANSELHbits
   771                           _ANSELHbits	set	0x189
   772  0189                     	global	_ANSELbits
   773                           _ANSELbits	set	0x188
   774  0188                     ; #config settings
   775                           global __CFG_FOSC$INTRC_NOCLKOUT
   776                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   777  0000                     global __CFG_WDTE$OFF
   778                           __CFG_WDTE$OFF equ 0x0
   779  0000                     global __CFG_PWRTE$OFF
   780                           __CFG_PWRTE$OFF equ 0x0
   781  0000                     global __CFG_MCLRE$OFF
   782                           __CFG_MCLRE$OFF equ 0x0
   783  0000                     global __CFG_CP$OFF
   784                           __CFG_CP$OFF equ 0x0
   785  0000                     global __CFG_CPD$OFF
   786                           __CFG_CPD$OFF equ 0x0
   787  0000                     global __CFG_BOREN$OFF
   788                           __CFG_BOREN$OFF equ 0x0
   789  0000                     global __CFG_IESO$OFF
   790                           __CFG_IESO$OFF equ 0x0
   791  0000                     global __CFG_FCMEN$OFF
   792                           __CFG_FCMEN$OFF equ 0x0
   793  0000                     global __CFG_LVP$OFF
   794                           __CFG_LVP$OFF equ 0x0
   795  0000                     global __CFG_BOR4V$BOR40V
   796                           __CFG_BOR4V$BOR40V equ 0x0
   797  0000                     global __CFG_WRT$OFF
   798                           __CFG_WRT$OFF equ 0x0
   799  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s2k0."
   800                           	line	#
   801                           psect cinit,class=CODE,delta=2
   802                           global start_initialization
   803                           start_initialization:
   804  000F                     
   805                           global __initialization
   806                           __initialization:
   807  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   808                           global __pbssCOMMON
   809                           __pbssCOMMON:
   810  0076                     _sensor2:
   811  0076                            ds      1
   812  0076                     
   813                           _sensor1:
   814  0077                            ds      1
   815  0077                     
   816                           _contADC:
   817  0078                            ds      1
   818  0078                     
   819                           _adcValue:
   820  0079                            ds      1
   821  0079                     
   822                           _adc:
   823  007A                            ds      1
   824  007A                     
   825                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s2k0."
   826                           	line	#
   827                           ; Clear objects allocated to COMMON
   828                           psect cinit,class=CODE,delta=2,merge=1
   829                           	clrf	((__pbssCOMMON)+0)&07Fh
   830  000F  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
   831  0010  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
   832  0011  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
   833  0012  01F9               	clrf	((__pbssCOMMON)+4)&07Fh
   834  0013  01FA               psect cinit,class=CODE,delta=2,merge=1
   835                           global end_of_initialization,__end_of__initialization
   836                           
   837                           ;End of C runtime variable initialization code
   838                           
   839                           end_of_initialization:
   840  0014                     __end_of__initialization:
   841  0014                     clrf status
   842  0014  0183               ljmp _main	;jump to C main() function
   843  0015  120A  118A  2906   psect	cstackCOMMON,class=COMMON,space=1,noexec
   844                           global __pcstackCOMMON
   845                           __pcstackCOMMON:
   846  0070                     ?_setup:	; 1 bytes @ 0x0
   847  0070                     ?_configADC:	; 1 bytes @ 0x0
   848  0070                     ?_configCanal:	; 1 bytes @ 0x0
   849  0070                     ?_selCanal:	; 1 bytes @ 0x0
   850  0070                     ?_readADC:	; 1 bytes @ 0x0
   851  0070                     ?_ISR:	; 1 bytes @ 0x0
   852  0070                     ??_ISR:	; 1 bytes @ 0x0
   853  0070                     ?_main:	; 1 bytes @ 0x0
   854  0070                     	ds	2
   855  0070                     ??_setup:	; 1 bytes @ 0x2
   856  0072                     ??_configADC:	; 1 bytes @ 0x2
   857  0072                     ??_configCanal:	; 1 bytes @ 0x2
   858  0072                     ??_selCanal:	; 1 bytes @ 0x2
   859  0072                     ??_readADC:	; 1 bytes @ 0x2
   860  0072                     	ds	1
   861  0072                     	global	selCanal@channel
   862                           selCanal@channel:	; 1 bytes @ 0x3
   863  0073                     	ds	1
   864  0073                     	global	configCanal@channel
   865                           configCanal@channel:	; 1 bytes @ 0x4
   866  0074                     	global	configADC@FOSC
   867                           configADC@FOSC:	; 1 bytes @ 0x4
   868  0074                     	ds	1
   869  0074                     ??_main:	; 1 bytes @ 0x5
   870  0075                     	ds	1
   871  0075                     ;!
   872                           ;!Data Sizes:
   873                           ;!    Strings     0
   874                           ;!    Constant    0
   875                           ;!    Data        0
   876                           ;!    BSS         5
   877                           ;!    Persistent  0
   878                           ;!    Stack       0
   879                           ;!
   880                           ;!Auto Spaces:
   881                           ;!    Space          Size  Autos    Used
   882                           ;!    COMMON           14      6      11
   883                           ;!    BANK0            80      0       0
   884                           ;!    BANK1            80      0       0
   885                           ;!    BANK3            96      0       0
   886                           ;!    BANK2            96      0       0
   887                           
   888                           ;!
   889                           ;!Pointer List with Targets:
   890                           ;!
   891                           ;!    None.
   892                           
   893                           
   894                           ;!
   895                           ;!Critical Paths under _main in COMMON
   896                           ;!
   897                           ;!    _main->_configADC
   898                           ;!    _main->_configCanal
   899                           ;!
   900                           ;!Critical Paths under _ISR in COMMON
   901                           ;!
   902                           ;!    None.
   903                           ;!
   904                           ;!Critical Paths under _main in BANK0
   905                           ;!
   906                           ;!    None.
   907                           ;!
   908                           ;!Critical Paths under _ISR in BANK0
   909                           ;!
   910                           ;!    None.
   911                           ;!
   912                           ;!Critical Paths under _main in BANK1
   913                           ;!
   914                           ;!    None.
   915                           ;!
   916                           ;!Critical Paths under _ISR in BANK1
   917                           ;!
   918                           ;!    None.
   919                           ;!
   920                           ;!Critical Paths under _main in BANK3
   921                           ;!
   922                           ;!    None.
   923                           ;!
   924                           ;!Critical Paths under _ISR in BANK3
   925                           ;!
   926                           ;!    None.
   927                           ;!
   928                           ;!Critical Paths under _main in BANK2
   929                           ;!
   930                           ;!    None.
   931                           ;!
   932                           ;!Critical Paths under _ISR in BANK2
   933                           ;!
   934                           ;!    None.
   935                           
   936 ;;
   937 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   938 ;;
   939                           
   940                           ;!
   941                           ;!Call Graph Tables:
   942                           ;!
   943                           ;! ---------------------------------------------------------------------------------
   944                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   945                           ;! ---------------------------------------------------------------------------------
   946                           ;! (0) _main                                                 1     1      0      45
   947                           ;!                                              5 COMMON     1     1      0
   948                           ;!                          _configADC
   949                           ;!                        _configCanal
   950                           ;!                            _readADC
   951                           ;!                           _selCanal
   952                           ;!                              _setup
   953                           ;! ---------------------------------------------------------------------------------
   954                           ;! (1) _setup                                                0     0      0       0
   955                           ;! ---------------------------------------------------------------------------------
   956                           ;! (1) _selCanal                                             2     2      0      15
   957                           ;!                                              2 COMMON     2     2      0
   958                           ;! ---------------------------------------------------------------------------------
   959                           ;! (1) _readADC                                              0     0      0       0
   960                           ;! ---------------------------------------------------------------------------------
   961                           ;! (1) _configCanal                                          3     3      0      15
   962                           ;!                                              2 COMMON     3     3      0
   963                           ;! ---------------------------------------------------------------------------------
   964                           ;! (1) _configADC                                            3     3      0      15
   965                           ;!                                              2 COMMON     3     3      0
   966                           ;! ---------------------------------------------------------------------------------
   967                           ;! Estimated maximum stack depth 1
   968                           ;! ---------------------------------------------------------------------------------
   969                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   970                           ;! ---------------------------------------------------------------------------------
   971                           ;! (2) _ISR                                                  2     2      0       0
   972                           ;!                                              0 COMMON     2     2      0
   973                           ;! ---------------------------------------------------------------------------------
   974                           ;! Estimated maximum stack depth 2
   975                           ;! ---------------------------------------------------------------------------------
   976                           ;!
   977                           ;! Call Graph Graphs:
   978                           ;!
   979                           ;! _main (ROOT)
   980                           ;!   _configADC
   981                           ;!   _configCanal
   982                           ;!   _readADC
   983                           ;!   _selCanal
   984                           ;!   _setup
   985                           ;!
   986                           ;! _ISR (ROOT)
   987                           ;!
   988                           
   989                           ;! Address spaces:
   990                           
   991                           ;!Name               Size   Autos  Total    Cost      Usage
   992                           ;!BITCOMMON            E      0       0       0        0.0%
   993                           ;!EEDATA             100      0       0       0        0.0%
   994                           ;!NULL                 0      0       0       0        0.0%
   995                           ;!CODE                 0      0       0       0        0.0%
   996                           ;!COMMON               E      6       B       1       78.6%
   997                           ;!BITSFR0              0      0       0       1        0.0%
   998                           ;!SFR0                 0      0       0       1        0.0%
   999                           ;!BITSFR1              0      0       0       2        0.0%
  1000                           ;!SFR1                 0      0       0       2        0.0%
  1001                           ;!STACK                0      0       0       2        0.0%
  1002                           ;!ABS                  0      0       B       3        0.0%
  1003                           ;!BITBANK0            50      0       0       4        0.0%
  1004                           ;!BITSFR3              0      0       0       4        0.0%
  1005                           ;!SFR3                 0      0       0       4        0.0%
  1006                           ;!BANK0               50      0       0       5        0.0%
  1007                           ;!BITSFR2              0      0       0       5        0.0%
  1008                           ;!SFR2                 0      0       0       5        0.0%
  1009                           ;!BITBANK1            50      0       0       6        0.0%
  1010                           ;!BANK1               50      0       0       7        0.0%
  1011                           ;!BITBANK3            60      0       0       8        0.0%
  1012                           ;!BANK3               60      0       0       9        0.0%
  1013                           ;!BITBANK2            60      0       0      10        0.0%
  1014                           ;!BANK2               60      0       0      11        0.0%
  1015                           ;!DATA                 0      0       B      12        0.0%
  1016                           
  1017                           	global	_main
  1018                           
  1019 ;; *************** function _main *****************
  1020 ;; Defined at:
  1021 ;;		line 43 in file "newmain.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : B00/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0
  1037 ;;      Temps:          1       0       0       0       0
  1038 ;;      Totals:         1       0       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels required when called:    2
  1041 ;; This function calls:
  1042 ;;		_configADC
  1043 ;;		_configCanal
  1044 ;;		_readADC
  1045 ;;		_selCanal
  1046 ;;		_setup
  1047 ;; This function is called by:
  1048 ;;		Startup code after reset
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1052                           	file	"newmain.c"
  1053                           	line	43
  1054                           global __pmaintext
  1055                           __pmaintext:	;psect for function _main
  1056  0106                     psect	maintext
  1057                           	file	"newmain.c"
  1058                           	line	43
  1059                           	global	__size_of_main
  1060                           	__size_of_main	equ	__end_of_main-_main
  1061  0064                     	
  1062                           _main:	
  1063  0106                     ;incstack = 0
  1064                           	opt	stack 6
  1065                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1066                           	line	45
  1067                           	
  1068                           l765:	
  1069  0106                     ;newmain.c: 45:     setup();
  1070                           	fcall	_setup
  1071  0106  120A  118A  21B2  120A  118A  	line	46
  1072                           	
  1073                           l767:	
  1074  010B                     ;newmain.c: 46:     configADC(1);
  1075                           	movlw	low(01h)
  1076  010B  3001               	fcall	_configADC
  1077  010C  120A  118A  216A  120A  118A  	line	47
  1078                           	
  1079                           l769:	
  1080  0111                     ;newmain.c: 47:     configCanal(10);
  1081                           	movlw	low(0Ah)
  1082  0111  300A               	fcall	_configCanal
  1083  0112  120A  118A  2018  120A  118A  	line	48
  1084                           	
  1085                           l771:	
  1086  0117                     ;newmain.c: 48:     configCanal(12);
  1087                           	movlw	low(0Ch)
  1088  0117  300C               	fcall	_configCanal
  1089  0118  120A  118A  2018  120A  118A  	goto	l773
  1090  011D  291E               	line	52
  1091                           ;newmain.c: 52:     while(1){
  1092                           	
  1093                           l59:	
  1094  011E                     	line	54
  1095                           	
  1096                           l773:	
  1097  011E                     ;newmain.c: 54:         if(adc){
  1098                           	movf	((_adc)),w
  1099  011E  087A               	btfsc	status,2
  1100  011F  1903               	goto	u21
  1101  0120  2922               	goto	u20
  1102  0121  2923               u21:
  1103  0122                     	goto	l791
  1104  0122  2951               u20:
  1105  0123                     	line	55
  1106                           	
  1107                           l775:	
  1108  0123                     ;newmain.c: 55:             contADC++;
  1109                           	movlw	low(01h)
  1110  0123  3001               	movwf	(??_main+0)+0
  1111  0124  00F5               	movf	(??_main+0)+0,w
  1112  0125  0875               	addwf	(_contADC),f
  1113  0126  07F8               	line	56
  1114                           	
  1115                           l777:	
  1116  0127                     ;newmain.c: 56:             if(contADC%2){
  1117                           	btfss	(_contADC),(0)&7
  1118  0127  1C78               	goto	u31
  1119  0128  292A               	goto	u30
  1120  0129  292B               u31:
  1121  012A                     	goto	l61
  1122  012A  293D               u30:
  1123  012B                     	line	57
  1124                           	
  1125                           l779:	
  1126  012B                     ;newmain.c: 57:                 PORTCbits.RC1 = 1;
  1127                           	bcf	status, 5	;RP0=0, select bank0
  1128  012B  1283               	bcf	status, 6	;RP1=0, select bank0
  1129  012C  1303               	bsf	(7),1	;volatile
  1130  012D  1487               	line	58
  1131                           	
  1132                           l781:	
  1133  012E                     ;newmain.c: 58:                 selCanal(10);
  1134                           	movlw	low(0Ah)
  1135  012E  300A               	fcall	_selCanal
  1136  012F  120A  118A  21C2  120A  118A  	line	59
  1137                           	
  1138                           l783:	
  1139  0134                     ;newmain.c: 59:                 sensor1 = readADC();
  1140                           	fcall	_readADC
  1141  0134  120A  118A  21D0  120A  118A  	movwf	(??_main+0)+0
  1142  0139  00F5               	movf	(??_main+0)+0,w
  1143  013A  0875               	movwf	(_sensor1)
  1144  013B  00F7               	line	60
  1145                           ;newmain.c: 60:             }else{
  1146                           	goto	l789
  1147  013C  294F               	
  1148                           l61:	
  1149  013D                     	line	61
  1150                           ;newmain.c: 61:                 PORTCbits.RC0 = 1;
  1151                           	bcf	status, 5	;RP0=0, select bank0
  1152  013D  1283               	bcf	status, 6	;RP1=0, select bank0
  1153  013E  1303               	bsf	(7),0	;volatile
  1154  013F  1407               	line	62
  1155                           	
  1156                           l785:	
  1157  0140                     ;newmain.c: 62:                 selCanal(12);
  1158                           	movlw	low(0Ch)
  1159  0140  300C               	fcall	_selCanal
  1160  0141  120A  118A  21C2  120A  118A  	line	64
  1161                           	
  1162                           l787:	
  1163  0146                     ;newmain.c: 64:                 sensor2 = readADC();
  1164                           	fcall	_readADC
  1165  0146  120A  118A  21D0  120A  118A  	movwf	(??_main+0)+0
  1166  014B  00F5               	movf	(??_main+0)+0,w
  1167  014C  0875               	movwf	(_sensor2)
  1168  014D  00F6               	goto	l789
  1169  014E  294F               	line	65
  1170                           ;newmain.c: 65:             }
  1171                           	
  1172                           l62:	
  1173  014F                     	line	66
  1174                           	
  1175                           l789:	
  1176  014F                     ;newmain.c: 66:             adc = 0;
  1177                           	clrf	(_adc)
  1178  014F  01FA               	goto	l791
  1179  0150  2951               	line	67
  1180                           ;newmain.c: 67:         }
  1181                           	
  1182                           l60:	
  1183  0151                     	line	68
  1184                           	
  1185                           l791:	
  1186  0151                     ;newmain.c: 68:         if(PORTBbits.RB7){
  1187                           	bcf	status, 5	;RP0=0, select bank0
  1188  0151  1283               	bcf	status, 6	;RP1=0, select bank0
  1189  0152  1303               	btfss	(6),7	;volatile
  1190  0153  1F86               	goto	u41
  1191  0154  2956               	goto	u40
  1192  0155  2957               u41:
  1193  0156                     	goto	l63
  1194  0156  295B               u40:
  1195  0157                     	line	69
  1196                           	
  1197                           l793:	
  1198  0157                     ;newmain.c: 69:             PORTCbits.RC2 = 1;
  1199                           	bsf	(7),2	;volatile
  1200  0157  1507               	line	70
  1201                           	
  1202                           l795:	
  1203  0158                     ;newmain.c: 70:             PORTD = sensor1;
  1204                           	movf	(_sensor1),w
  1205  0158  0877               	movwf	(8)	;volatile
  1206  0159  0088               	line	71
  1207                           ;newmain.c: 71:         }else{
  1208                           	goto	l799
  1209  015A  295F               	
  1210                           l63:	
  1211  015B                     	line	72
  1212                           ;newmain.c: 72:             PORTCbits.RC3 = 1;
  1213                           	bsf	(7),3	;volatile
  1214  015B  1587               	line	73
  1215                           	
  1216                           l797:	
  1217  015C                     ;newmain.c: 73:             PORTD = sensor2;
  1218                           	movf	(_sensor2),w
  1219  015C  0876               	movwf	(8)	;volatile
  1220  015D  0088               	goto	l799
  1221  015E  295F               	line	74
  1222                           ;newmain.c: 74:         }
  1223                           	
  1224                           l64:	
  1225  015F                     	line	75
  1226                           	
  1227                           l799:	
  1228  015F                     ;newmain.c: 75:         if(ADCON0bits.GO_DONE == 0){
  1229                           	btfsc	(31),1	;volatile
  1230  015F  189F               	goto	u51
  1231  0160  2962               	goto	u50
  1232  0161  2963               u51:
  1233  0162                     	goto	l773
  1234  0162  291E               u50:
  1235  0163                     	line	76
  1236                           	
  1237                           l801:	
  1238  0163                     ;newmain.c: 76:             ADCON0bits.GO_DONE = 1;
  1239                           	bsf	(31),1	;volatile
  1240  0163  149F               	goto	l773
  1241  0164  291E               	line	77
  1242                           ;newmain.c: 77:         }
  1243                           	
  1244                           l65:	
  1245  0165                     	goto	l773
  1246  0165  291E               	line	79
  1247                           ;newmain.c: 79:     }
  1248                           	
  1249                           l66:	
  1250  0166                     	goto	l773
  1251  0166  291E               	
  1252                           l67:	
  1253  0167                     	line	81
  1254                           	
  1255                           l68:	
  1256  0167                     	global	start
  1257                           	ljmp	start
  1258  0167  120A  118A  280C   	opt stack 0
  1259                           GLOBAL	__end_of_main
  1260                           	__end_of_main:
  1261  016A                     	signat	_main,89
  1262                           	global	_setup
  1263                           
  1264 ;; *************** function _setup *****************
  1265 ;; Defined at:
  1266 ;;		line 84 in file "newmain.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1294                           	line	84
  1295                           global __ptext1
  1296                           __ptext1:	;psect for function _setup
  1297  01B2                     psect	text1
  1298                           	file	"newmain.c"
  1299                           	line	84
  1300                           	global	__size_of_setup
  1301                           	__size_of_setup	equ	__end_of_setup-_setup
  1302  0010                     	
  1303                           _setup:	
  1304  01B2                     ;incstack = 0
  1305                           	opt	stack 6
  1306                           ; Regs used in _setup: [wreg+status,2]
  1307                           	line	86
  1308                           	
  1309                           l723:	
  1310  01B2                     ;newmain.c: 86:     PORTA = 0;
  1311                           	bcf	status, 5	;RP0=0, select bank0
  1312  01B2  1283               	bcf	status, 6	;RP1=0, select bank0
  1313  01B3  1303               	clrf	(5)	;volatile
  1314  01B4  0185               	line	87
  1315                           ;newmain.c: 87:     PORTB = 0;
  1316                           	clrf	(6)	;volatile
  1317  01B5  0186               	line	88
  1318                           ;newmain.c: 88:     PORTC = 0;
  1319                           	clrf	(7)	;volatile
  1320  01B6  0187               	line	89
  1321                           ;newmain.c: 89:     PORTD = 0;
  1322                           	clrf	(8)	;volatile
  1323  01B7  0188               	line	90
  1324                           ;newmain.c: 90:     PORTE = 0;
  1325                           	clrf	(9)	;volatile
  1326  01B8  0189               	line	91
  1327                           ;newmain.c: 91:     TRISA = 0;
  1328                           	bsf	status, 5	;RP0=1, select bank1
  1329  01B9  1683               	bcf	status, 6	;RP1=0, select bank1
  1330  01BA  1303               	clrf	(133)^080h	;volatile
  1331  01BB  0185               	line	92
  1332                           	
  1333                           l725:	
  1334  01BC                     ;newmain.c: 92:     TRISB = 0b10000000;
  1335                           	movlw	low(080h)
  1336  01BC  3080               	movwf	(134)^080h	;volatile
  1337  01BD  0086               	line	93
  1338                           	
  1339                           l727:	
  1340  01BE                     ;newmain.c: 93:     TRISC = 0;
  1341                           	clrf	(135)^080h	;volatile
  1342  01BE  0187               	line	94
  1343                           	
  1344                           l729:	
  1345  01BF                     ;newmain.c: 94:     TRISD = 0;
  1346                           	clrf	(136)^080h	;volatile
  1347  01BF  0188               	line	95
  1348                           	
  1349                           l731:	
  1350  01C0                     ;newmain.c: 95:     TRISE = 0;
  1351                           	clrf	(137)^080h	;volatile
  1352  01C0  0189               	line	96
  1353                           	
  1354                           l71:	
  1355  01C1                     	return
  1356  01C1  0008               	opt stack 0
  1357                           GLOBAL	__end_of_setup
  1358                           	__end_of_setup:
  1359  01C2                     	signat	_setup,89
  1360                           	global	_selCanal
  1361                           
  1362 ;; *************** function _selCanal *****************
  1363 ;; Defined at:
  1364 ;;		line 10 in file "ADC.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  channel         1    wreg     unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  channel         1    3[COMMON] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         0       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0
  1380 ;;      Temps:          1       0       0       0       0
  1381 ;;      Totals:         2       0       0       0       0
  1382 ;;Total ram usage:        2 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1392                           	file	"ADC.c"
  1393                           	line	10
  1394                           global __ptext2
  1395                           __ptext2:	;psect for function _selCanal
  1396  01C2                     psect	text2
  1397                           	file	"ADC.c"
  1398                           	line	10
  1399                           	global	__size_of_selCanal
  1400                           	__size_of_selCanal	equ	__end_of_selCanal-_selCanal
  1401  000E                     	
  1402                           _selCanal:	
  1403  01C2                     ;incstack = 0
  1404                           	opt	stack 6
  1405                           ; Regs used in _selCanal: [wreg+status,2+status,0]
  1406                           ;selCanal@channel stored from wreg
  1407                           	movwf	(selCanal@channel)
  1408  01C2  00F3               	line	11
  1409                           	
  1410                           l753:	
  1411  01C3                     ;ADC.c: 11:     ADCON0bits.CHS = channel;
  1412                           	movf	(selCanal@channel),w
  1413  01C3  0873               	movwf	(??_selCanal+0)+0
  1414  01C4  00F2               	rlf	(??_selCanal+0)+0,f
  1415  01C5  0DF2               	rlf	(??_selCanal+0)+0,f
  1416  01C6  0DF2               	bcf	status, 5	;RP0=0, select bank0
  1417  01C7  1283               	bcf	status, 6	;RP1=0, select bank0
  1418  01C8  1303               	movf	(31),w	;volatile
  1419  01C9  081F               	xorwf	(??_selCanal+0)+0,w
  1420  01CA  0672               	andlw	not (((1<<4)-1)<<2)
  1421  01CB  39C3               	xorwf	(??_selCanal+0)+0,w
  1422  01CC  0672               	movwf	(31)	;volatile
  1423  01CD  009F               	goto	l103
  1424  01CE  29CF               	line	12
  1425                           	
  1426                           l755:	
  1427  01CF                     	line	13
  1428                           ;ADC.c: 12:     return;
  1429                           	
  1430                           l103:	
  1431  01CF                     	return
  1432  01CF  0008               	opt stack 0
  1433                           GLOBAL	__end_of_selCanal
  1434                           	__end_of_selCanal:
  1435  01D0                     	signat	_selCanal,4217
  1436                           	global	_readADC
  1437                           
  1438 ;; *************** function _readADC *****************
  1439 ;; Defined at:
  1440 ;;		line 6 in file "ADC.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    1
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1468                           	line	6
  1469                           global __ptext3
  1470                           __ptext3:	;psect for function _readADC
  1471  01D0                     psect	text3
  1472                           	file	"ADC.c"
  1473                           	line	6
  1474                           	global	__size_of_readADC
  1475                           	__size_of_readADC	equ	__end_of_readADC-_readADC
  1476  0005                     	
  1477                           _readADC:	
  1478  01D0                     ;incstack = 0
  1479                           	opt	stack 6
  1480                           ; Regs used in _readADC: [wreg]
  1481                           	line	7
  1482                           	
  1483                           l757:	
  1484  01D0                     ;ADC.c: 7:     return ADRESH;
  1485                           	bcf	status, 5	;RP0=0, select bank0
  1486  01D0  1283               	bcf	status, 6	;RP1=0, select bank0
  1487  01D1  1303               	movf	(30),w	;volatile
  1488  01D2  081E               	goto	l100
  1489  01D3  29D4               	
  1490                           l759:	
  1491  01D4                     	line	8
  1492                           	
  1493                           l100:	
  1494  01D4                     	return
  1495  01D4  0008               	opt stack 0
  1496                           GLOBAL	__end_of_readADC
  1497                           	__end_of_readADC:
  1498  01D5                     	signat	_readADC,89
  1499                           	global	_configCanal
  1500                           
  1501 ;; *************** function _configCanal *****************
  1502 ;; Defined at:
  1503 ;;		line 15 in file "ADC.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  channel         1    wreg     unsigned char 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  channel         1    4[COMMON] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0
  1520 ;;      Totals:         3       0       0       0       0
  1521 ;;Total ram usage:        3 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1531                           	line	15
  1532                           global __ptext4
  1533                           __ptext4:	;psect for function _configCanal
  1534  0018                     psect	text4
  1535                           	file	"ADC.c"
  1536                           	line	15
  1537                           	global	__size_of_configCanal
  1538                           	__size_of_configCanal	equ	__end_of_configCanal-_configCanal
  1539  00EE                     	
  1540                           _configCanal:	
  1541  0018                     ;incstack = 0
  1542                           	opt	stack 6
  1543                           ; Regs used in _configCanal: [wreg-fsr0h+status,2+status,0]
  1544                           ;configCanal@channel stored from wreg
  1545                           	movwf	(configCanal@channel)
  1546  0018  00F4               	line	16
  1547                           	
  1548                           l743:	
  1549  0019                     ;ADC.c: 16:     switch (channel){
  1550                           	goto	l747
  1551  0019  28D1               	line	17
  1552                           ;ADC.c: 17:         case 0:
  1553                           	
  1554                           l107:	
  1555  001A                     	line	18
  1556                           ;ADC.c: 18:             ADCON0bits.CHS0 = 0;
  1557                           	bcf	status, 5	;RP0=0, select bank0
  1558  001A  1283               	bcf	status, 6	;RP1=0, select bank0
  1559  001B  1303               	bcf	(31),2	;volatile
  1560  001C  111F               	line	19
  1561                           ;ADC.c: 19:             ADCON0bits.CHS1 = 0;
  1562                           	bcf	(31),3	;volatile
  1563  001D  119F               	line	20
  1564                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1565                           	bcf	(31),4	;volatile
  1566  001E  121F               	line	21
  1567                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
  1568                           	bcf	(31),5	;volatile
  1569  001F  129F               	line	22
  1570                           ;ADC.c: 22:             ANSELbits.ANS0 = 1;
  1571                           	bsf	status, 5	;RP0=1, select bank3
  1572  0020  1683               	bsf	status, 6	;RP1=1, select bank3
  1573  0021  1703               	bsf	(392)^0180h,0	;volatile
  1574  0022  1408               	line	23
  1575                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;
  1576                           	bsf	status, 5	;RP0=1, select bank1
  1577  0023  1683               	bcf	status, 6	;RP1=0, select bank1
  1578  0024  1303               	bsf	(133)^080h,0	;volatile
  1579  0025  1405               	line	24
  1580                           ;ADC.c: 24:             break;
  1581                           	goto	l122
  1582  0026  2905               	line	25
  1583                           ;ADC.c: 25:         case 1:
  1584                           	
  1585                           l109:	
  1586  0027                     	line	26
  1587                           ;ADC.c: 26:             ADCON0bits.CHS0 = 1;
  1588                           	bcf	status, 5	;RP0=0, select bank0
  1589  0027  1283               	bcf	status, 6	;RP1=0, select bank0
  1590  0028  1303               	bsf	(31),2	;volatile
  1591  0029  151F               	line	27
  1592                           ;ADC.c: 27:             ADCON0bits.CHS1 = 0;
  1593                           	bcf	(31),3	;volatile
  1594  002A  119F               	line	28
  1595                           ;ADC.c: 28:             ADCON0bits.CHS2 = 0;
  1596                           	bcf	(31),4	;volatile
  1597  002B  121F               	line	29
  1598                           ;ADC.c: 29:             ADCON0bits.CHS3 = 0;
  1599                           	bcf	(31),5	;volatile
  1600  002C  129F               	line	30
  1601                           ;ADC.c: 30:             ANSELbits.ANS1 = 1;
  1602                           	bsf	status, 5	;RP0=1, select bank3
  1603  002D  1683               	bsf	status, 6	;RP1=1, select bank3
  1604  002E  1703               	bsf	(392)^0180h,1	;volatile
  1605  002F  1488               	line	31
  1606                           ;ADC.c: 31:             TRISAbits.TRISA1 = 1;
  1607                           	bsf	status, 5	;RP0=1, select bank1
  1608  0030  1683               	bcf	status, 6	;RP1=0, select bank1
  1609  0031  1303               	bsf	(133)^080h,1	;volatile
  1610  0032  1485               	line	32
  1611                           ;ADC.c: 32:             break;
  1612                           	goto	l122
  1613  0033  2905               	line	33
  1614                           ;ADC.c: 33:         case 2:
  1615                           	
  1616                           l110:	
  1617  0034                     	line	34
  1618                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;
  1619                           	bcf	status, 5	;RP0=0, select bank0
  1620  0034  1283               	bcf	status, 6	;RP1=0, select bank0
  1621  0035  1303               	bcf	(31),2	;volatile
  1622  0036  111F               	line	35
  1623                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1624                           	bsf	(31),3	;volatile
  1625  0037  159F               	line	36
  1626                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1627                           	bcf	(31),4	;volatile
  1628  0038  121F               	line	37
  1629                           ;ADC.c: 37:             ADCON0bits.CHS3 = 0;
  1630                           	bcf	(31),5	;volatile
  1631  0039  129F               	line	38
  1632                           ;ADC.c: 38:             ANSELbits.ANS2 = 1;
  1633                           	bsf	status, 5	;RP0=1, select bank3
  1634  003A  1683               	bsf	status, 6	;RP1=1, select bank3
  1635  003B  1703               	bsf	(392)^0180h,2	;volatile
  1636  003C  1508               	line	39
  1637                           ;ADC.c: 39:             TRISAbits.TRISA2 = 1;
  1638                           	bsf	status, 5	;RP0=1, select bank1
  1639  003D  1683               	bcf	status, 6	;RP1=0, select bank1
  1640  003E  1303               	bsf	(133)^080h,2	;volatile
  1641  003F  1505               	line	40
  1642                           ;ADC.c: 40:             break;
  1643                           	goto	l122
  1644  0040  2905               	line	41
  1645                           ;ADC.c: 41:         case 3:
  1646                           	
  1647                           l111:	
  1648  0041                     	line	42
  1649                           ;ADC.c: 42:             ADCON0bits.CHS0 = 1;
  1650                           	bcf	status, 5	;RP0=0, select bank0
  1651  0041  1283               	bcf	status, 6	;RP1=0, select bank0
  1652  0042  1303               	bsf	(31),2	;volatile
  1653  0043  151F               	line	43
  1654                           ;ADC.c: 43:             ADCON0bits.CHS1 = 1;
  1655                           	bsf	(31),3	;volatile
  1656  0044  159F               	line	44
  1657                           ;ADC.c: 44:             ADCON0bits.CHS2 = 0;
  1658                           	bcf	(31),4	;volatile
  1659  0045  121F               	line	45
  1660                           ;ADC.c: 45:             ADCON0bits.CHS3 = 0;
  1661                           	bcf	(31),5	;volatile
  1662  0046  129F               	line	46
  1663                           ;ADC.c: 46:             ANSELbits.ANS3 = 1;
  1664                           	bsf	status, 5	;RP0=1, select bank3
  1665  0047  1683               	bsf	status, 6	;RP1=1, select bank3
  1666  0048  1703               	bsf	(392)^0180h,3	;volatile
  1667  0049  1588               	line	47
  1668                           ;ADC.c: 47:             TRISAbits.TRISA3 = 1;
  1669                           	bsf	status, 5	;RP0=1, select bank1
  1670  004A  1683               	bcf	status, 6	;RP1=0, select bank1
  1671  004B  1303               	bsf	(133)^080h,3	;volatile
  1672  004C  1585               	line	48
  1673                           ;ADC.c: 48:             break;
  1674                           	goto	l122
  1675  004D  2905               	line	49
  1676                           ;ADC.c: 49:         case 4:
  1677                           	
  1678                           l112:	
  1679  004E                     	line	50
  1680                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  1681                           	bcf	status, 5	;RP0=0, select bank0
  1682  004E  1283               	bcf	status, 6	;RP1=0, select bank0
  1683  004F  1303               	bcf	(31),2	;volatile
  1684  0050  111F               	line	51
  1685                           ;ADC.c: 51:             ADCON0bits.CHS1 = 0;
  1686                           	bcf	(31),3	;volatile
  1687  0051  119F               	line	52
  1688                           ;ADC.c: 52:             ADCON0bits.CHS2 = 1;
  1689                           	bsf	(31),4	;volatile
  1690  0052  161F               	line	53
  1691                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  1692                           	bcf	(31),5	;volatile
  1693  0053  129F               	line	54
  1694                           ;ADC.c: 54:             ANSELbits.ANS4 = 1;
  1695                           	bsf	status, 5	;RP0=1, select bank3
  1696  0054  1683               	bsf	status, 6	;RP1=1, select bank3
  1697  0055  1703               	bsf	(392)^0180h,4	;volatile
  1698  0056  1608               	line	55
  1699                           ;ADC.c: 55:             TRISAbits.TRISA5 = 1;
  1700                           	bsf	status, 5	;RP0=1, select bank1
  1701  0057  1683               	bcf	status, 6	;RP1=0, select bank1
  1702  0058  1303               	bsf	(133)^080h,5	;volatile
  1703  0059  1685               	line	56
  1704                           ;ADC.c: 56:             break;
  1705                           	goto	l122
  1706  005A  2905               	line	57
  1707                           ;ADC.c: 57:         case 5:
  1708                           	
  1709                           l113:	
  1710  005B                     	line	58
  1711                           ;ADC.c: 58:             ADCON0bits.CHS0 = 1;
  1712                           	bcf	status, 5	;RP0=0, select bank0
  1713  005B  1283               	bcf	status, 6	;RP1=0, select bank0
  1714  005C  1303               	bsf	(31),2	;volatile
  1715  005D  151F               	line	59
  1716                           ;ADC.c: 59:             ADCON0bits.CHS1 = 0;
  1717                           	bcf	(31),3	;volatile
  1718  005E  119F               	line	60
  1719                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1720                           	bsf	(31),4	;volatile
  1721  005F  161F               	line	61
  1722                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1723                           	bcf	(31),5	;volatile
  1724  0060  129F               	line	62
  1725                           ;ADC.c: 62:             ANSELbits.ANS5 = 1;
  1726                           	bsf	status, 5	;RP0=1, select bank3
  1727  0061  1683               	bsf	status, 6	;RP1=1, select bank3
  1728  0062  1703               	bsf	(392)^0180h,5	;volatile
  1729  0063  1688               	line	63
  1730                           ;ADC.c: 63:             TRISEbits.TRISE0 = 1;
  1731                           	bsf	status, 5	;RP0=1, select bank1
  1732  0064  1683               	bcf	status, 6	;RP1=0, select bank1
  1733  0065  1303               	bsf	(137)^080h,0	;volatile
  1734  0066  1409               	line	64
  1735                           ;ADC.c: 64:             break;
  1736                           	goto	l122
  1737  0067  2905               	line	65
  1738                           ;ADC.c: 65:         case 6:
  1739                           	
  1740                           l114:	
  1741  0068                     	line	66
  1742                           ;ADC.c: 66:             ADCON0bits.CHS0 = 0;
  1743                           	bcf	status, 5	;RP0=0, select bank0
  1744  0068  1283               	bcf	status, 6	;RP1=0, select bank0
  1745  0069  1303               	bcf	(31),2	;volatile
  1746  006A  111F               	line	67
  1747                           ;ADC.c: 67:             ADCON0bits.CHS1 = 1;
  1748                           	bsf	(31),3	;volatile
  1749  006B  159F               	line	68
  1750                           ;ADC.c: 68:             ADCON0bits.CHS2 = 1;
  1751                           	bsf	(31),4	;volatile
  1752  006C  161F               	line	69
  1753                           ;ADC.c: 69:             ADCON0bits.CHS3 = 0;
  1754                           	bcf	(31),5	;volatile
  1755  006D  129F               	line	70
  1756                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;
  1757                           	bsf	status, 5	;RP0=1, select bank3
  1758  006E  1683               	bsf	status, 6	;RP1=1, select bank3
  1759  006F  1703               	bsf	(392)^0180h,6	;volatile
  1760  0070  1708               	line	71
  1761                           ;ADC.c: 71:             TRISEbits.TRISE1 = 1;
  1762                           	bsf	status, 5	;RP0=1, select bank1
  1763  0071  1683               	bcf	status, 6	;RP1=0, select bank1
  1764  0072  1303               	bsf	(137)^080h,1	;volatile
  1765  0073  1489               	line	72
  1766                           ;ADC.c: 72:             break;
  1767                           	goto	l122
  1768  0074  2905               	line	73
  1769                           ;ADC.c: 73:         case 7:
  1770                           	
  1771                           l115:	
  1772  0075                     	line	74
  1773                           ;ADC.c: 74:             ADCON0bits.CHS0 = 1;
  1774                           	bcf	status, 5	;RP0=0, select bank0
  1775  0075  1283               	bcf	status, 6	;RP1=0, select bank0
  1776  0076  1303               	bsf	(31),2	;volatile
  1777  0077  151F               	line	75
  1778                           ;ADC.c: 75:             ADCON0bits.CHS1 = 1;
  1779                           	bsf	(31),3	;volatile
  1780  0078  159F               	line	76
  1781                           ;ADC.c: 76:             ADCON0bits.CHS2 = 1;
  1782                           	bsf	(31),4	;volatile
  1783  0079  161F               	line	77
  1784                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  1785                           	bcf	(31),5	;volatile
  1786  007A  129F               	line	78
  1787                           ;ADC.c: 78:             ANSELbits.ANS7 = 1;
  1788                           	bsf	status, 5	;RP0=1, select bank3
  1789  007B  1683               	bsf	status, 6	;RP1=1, select bank3
  1790  007C  1703               	bsf	(392)^0180h,7	;volatile
  1791  007D  1788               	line	79
  1792                           ;ADC.c: 79:             TRISEbits.TRISE2 = 1;
  1793                           	bsf	status, 5	;RP0=1, select bank1
  1794  007E  1683               	bcf	status, 6	;RP1=0, select bank1
  1795  007F  1303               	bsf	(137)^080h,2	;volatile
  1796  0080  1509               	line	80
  1797                           ;ADC.c: 80:             break;
  1798                           	goto	l122
  1799  0081  2905               	line	81
  1800                           ;ADC.c: 81:         case 8:
  1801                           	
  1802                           l116:	
  1803  0082                     	line	82
  1804                           ;ADC.c: 82:             ADCON0bits.CHS0 = 0;
  1805                           	bcf	status, 5	;RP0=0, select bank0
  1806  0082  1283               	bcf	status, 6	;RP1=0, select bank0
  1807  0083  1303               	bcf	(31),2	;volatile
  1808  0084  111F               	line	83
  1809                           ;ADC.c: 83:             ADCON0bits.CHS1 = 0;
  1810                           	bcf	(31),3	;volatile
  1811  0085  119F               	line	84
  1812                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  1813                           	bcf	(31),4	;volatile
  1814  0086  121F               	line	85
  1815                           ;ADC.c: 85:             ADCON0bits.CHS3 = 1;
  1816                           	bsf	(31),5	;volatile
  1817  0087  169F               	line	86
  1818                           ;ADC.c: 86:             ANSELHbits.ANS8 = 1;
  1819                           	bsf	status, 5	;RP0=1, select bank3
  1820  0088  1683               	bsf	status, 6	;RP1=1, select bank3
  1821  0089  1703               	bsf	(393)^0180h,0	;volatile
  1822  008A  1409               	line	87
  1823                           ;ADC.c: 87:             TRISBbits.TRISB2 = 1;
  1824                           	bsf	status, 5	;RP0=1, select bank1
  1825  008B  1683               	bcf	status, 6	;RP1=0, select bank1
  1826  008C  1303               	bsf	(134)^080h,2	;volatile
  1827  008D  1506               	line	88
  1828                           ;ADC.c: 88:             break;
  1829                           	goto	l122
  1830  008E  2905               	line	89
  1831                           ;ADC.c: 89:         case 9:
  1832                           	
  1833                           l117:	
  1834  008F                     	line	90
  1835                           ;ADC.c: 90:             ADCON0bits.CHS0 = 1;
  1836                           	bcf	status, 5	;RP0=0, select bank0
  1837  008F  1283               	bcf	status, 6	;RP1=0, select bank0
  1838  0090  1303               	bsf	(31),2	;volatile
  1839  0091  151F               	line	91
  1840                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  1841                           	bcf	(31),3	;volatile
  1842  0092  119F               	line	92
  1843                           ;ADC.c: 92:             ADCON0bits.CHS2 = 0;
  1844                           	bcf	(31),4	;volatile
  1845  0093  121F               	line	93
  1846                           ;ADC.c: 93:             ADCON0bits.CHS3 = 1;
  1847                           	bsf	(31),5	;volatile
  1848  0094  169F               	line	94
  1849                           ;ADC.c: 94:             ANSELHbits.ANS9 = 1;
  1850                           	bsf	status, 5	;RP0=1, select bank3
  1851  0095  1683               	bsf	status, 6	;RP1=1, select bank3
  1852  0096  1703               	bsf	(393)^0180h,1	;volatile
  1853  0097  1489               	line	95
  1854                           ;ADC.c: 95:             TRISBbits.TRISB3 = 1;
  1855                           	bsf	status, 5	;RP0=1, select bank1
  1856  0098  1683               	bcf	status, 6	;RP1=0, select bank1
  1857  0099  1303               	bsf	(134)^080h,3	;volatile
  1858  009A  1586               	line	96
  1859                           ;ADC.c: 96:             break;
  1860                           	goto	l122
  1861  009B  2905               	line	97
  1862                           ;ADC.c: 97:         case 10:
  1863                           	
  1864                           l118:	
  1865  009C                     	line	98
  1866                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  1867                           	bcf	status, 5	;RP0=0, select bank0
  1868  009C  1283               	bcf	status, 6	;RP1=0, select bank0
  1869  009D  1303               	bcf	(31),2	;volatile
  1870  009E  111F               	line	99
  1871                           ;ADC.c: 99:             ADCON0bits.CHS1 = 1;
  1872                           	bsf	(31),3	;volatile
  1873  009F  159F               	line	100
  1874                           ;ADC.c: 100:             ADCON0bits.CHS2 = 0;
  1875                           	bcf	(31),4	;volatile
  1876  00A0  121F               	line	101
  1877                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1878                           	bsf	(31),5	;volatile
  1879  00A1  169F               	line	102
  1880                           ;ADC.c: 102:             ANSELHbits.ANS10 = 1;
  1881                           	bsf	status, 5	;RP0=1, select bank3
  1882  00A2  1683               	bsf	status, 6	;RP1=1, select bank3
  1883  00A3  1703               	bsf	(393)^0180h,2	;volatile
  1884  00A4  1509               	line	103
  1885                           ;ADC.c: 103:             TRISBbits.TRISB1 = 1;
  1886                           	bsf	status, 5	;RP0=1, select bank1
  1887  00A5  1683               	bcf	status, 6	;RP1=0, select bank1
  1888  00A6  1303               	bsf	(134)^080h,1	;volatile
  1889  00A7  1486               	line	104
  1890                           ;ADC.c: 104:             break;
  1891                           	goto	l122
  1892  00A8  2905               	line	105
  1893                           ;ADC.c: 105:         case 11:
  1894                           	
  1895                           l119:	
  1896  00A9                     	line	106
  1897                           ;ADC.c: 106:             ADCON0bits.CHS0 = 1;
  1898                           	bcf	status, 5	;RP0=0, select bank0
  1899  00A9  1283               	bcf	status, 6	;RP1=0, select bank0
  1900  00AA  1303               	bsf	(31),2	;volatile
  1901  00AB  151F               	line	107
  1902                           ;ADC.c: 107:             ADCON0bits.CHS1 = 1;
  1903                           	bsf	(31),3	;volatile
  1904  00AC  159F               	line	108
  1905                           ;ADC.c: 108:             ADCON0bits.CHS2 = 0;
  1906                           	bcf	(31),4	;volatile
  1907  00AD  121F               	line	109
  1908                           ;ADC.c: 109:             ADCON0bits.CHS3 = 1;
  1909                           	bsf	(31),5	;volatile
  1910  00AE  169F               	line	110
  1911                           ;ADC.c: 110:             ANSELHbits.ANS11 = 1;
  1912                           	bsf	status, 5	;RP0=1, select bank3
  1913  00AF  1683               	bsf	status, 6	;RP1=1, select bank3
  1914  00B0  1703               	bsf	(393)^0180h,3	;volatile
  1915  00B1  1589               	line	111
  1916                           ;ADC.c: 111:             TRISBbits.TRISB4 = 1;
  1917                           	bsf	status, 5	;RP0=1, select bank1
  1918  00B2  1683               	bcf	status, 6	;RP1=0, select bank1
  1919  00B3  1303               	bsf	(134)^080h,4	;volatile
  1920  00B4  1606               	line	112
  1921                           ;ADC.c: 112:             break;
  1922                           	goto	l122
  1923  00B5  2905               	line	113
  1924                           ;ADC.c: 113:         case 12:
  1925                           	
  1926                           l120:	
  1927  00B6                     	line	114
  1928                           ;ADC.c: 114:             ADCON0bits.CHS0 = 0;
  1929                           	bcf	status, 5	;RP0=0, select bank0
  1930  00B6  1283               	bcf	status, 6	;RP1=0, select bank0
  1931  00B7  1303               	bcf	(31),2	;volatile
  1932  00B8  111F               	line	115
  1933                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  1934                           	bcf	(31),3	;volatile
  1935  00B9  119F               	line	116
  1936                           ;ADC.c: 116:             ADCON0bits.CHS2 = 1;
  1937                           	bsf	(31),4	;volatile
  1938  00BA  161F               	line	117
  1939                           ;ADC.c: 117:             ADCON0bits.CHS3 = 1;
  1940                           	bsf	(31),5	;volatile
  1941  00BB  169F               	line	118
  1942                           ;ADC.c: 118:             ANSELHbits.ANS12 = 1;
  1943                           	bsf	status, 5	;RP0=1, select bank3
  1944  00BC  1683               	bsf	status, 6	;RP1=1, select bank3
  1945  00BD  1703               	bsf	(393)^0180h,4	;volatile
  1946  00BE  1609               	line	119
  1947                           ;ADC.c: 119:             TRISBbits.TRISB0 = 1;
  1948                           	bsf	status, 5	;RP0=1, select bank1
  1949  00BF  1683               	bcf	status, 6	;RP1=0, select bank1
  1950  00C0  1303               	bsf	(134)^080h,0	;volatile
  1951  00C1  1406               	line	120
  1952                           ;ADC.c: 120:             break;
  1953                           	goto	l122
  1954  00C2  2905               	line	121
  1955                           ;ADC.c: 121:         case 13:
  1956                           	
  1957                           l121:	
  1958  00C3                     	line	122
  1959                           ;ADC.c: 122:             ADCON0bits.CHS0 = 1;
  1960                           	bcf	status, 5	;RP0=0, select bank0
  1961  00C3  1283               	bcf	status, 6	;RP1=0, select bank0
  1962  00C4  1303               	bsf	(31),2	;volatile
  1963  00C5  151F               	line	123
  1964                           ;ADC.c: 123:             ADCON0bits.CHS1 = 0;
  1965                           	bcf	(31),3	;volatile
  1966  00C6  119F               	line	124
  1967                           ;ADC.c: 124:             ADCON0bits.CHS2 = 1;
  1968                           	bsf	(31),4	;volatile
  1969  00C7  161F               	line	125
  1970                           ;ADC.c: 125:             ADCON0bits.CHS3 = 1;
  1971                           	bsf	(31),5	;volatile
  1972  00C8  169F               	line	126
  1973                           ;ADC.c: 126:             ANSELHbits.ANS13 = 1;
  1974                           	bsf	status, 5	;RP0=1, select bank3
  1975  00C9  1683               	bsf	status, 6	;RP1=1, select bank3
  1976  00CA  1703               	bsf	(393)^0180h,5	;volatile
  1977  00CB  1689               	line	127
  1978                           ;ADC.c: 127:             TRISBbits.TRISB5 = 1;
  1979                           	bsf	status, 5	;RP0=1, select bank1
  1980  00CC  1683               	bcf	status, 6	;RP1=0, select bank1
  1981  00CD  1303               	bsf	(134)^080h,5	;volatile
  1982  00CE  1686               	line	128
  1983                           ;ADC.c: 128:             break;
  1984                           	goto	l122
  1985  00CF  2905               	line	129
  1986                           	
  1987                           l745:	
  1988  00D0                     ;ADC.c: 129:     }
  1989                           	goto	l122
  1990  00D0  2905               	
  1991                           l106:	
  1992  00D1                     	
  1993                           l747:	
  1994  00D1                     	movf	(configCanal@channel),w
  1995  00D1  0874               	movwf	(??_configCanal+0)+0
  1996  00D2  00F2               	clrf	(??_configCanal+0)+0+1
  1997  00D3  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1998                           ; Switch size 1, requested type "space"
  1999                           ; Number of cases is 1, Range of values is 0 to 0
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte            4     3 (average)
  2003                           ; direct_byte           11     8 (fixed)
  2004                           ; jumptable            260     6 (fixed)
  2005                           ;	Chosen strategy is simple_byte
  2006                           
  2007                           	movf 1+(??_configCanal+0)+0,w
  2008  00D4  0873               	opt asmopt_push
  2009                           	opt asmopt_off
  2010                           	xorlw	0^0	; case 0
  2011  00D5  3A00               	skipnz
  2012  00D6  1903               	goto	l877
  2013  00D7  28D9               	goto	l122
  2014  00D8  2905               	opt asmopt_pop
  2015                           	
  2016                           l877:	
  2017  00D9                     ; Switch size 1, requested type "space"
  2018                           ; Number of cases is 14, Range of values is 0 to 13
  2019                           ; switch strategies available:
  2020                           ; Name         Instructions Cycles
  2021                           ; simple_byte           43    22 (average)
  2022                           ; direct_byte           50     8 (fixed)
  2023                           ; jumptable            260     6 (fixed)
  2024                           ;	Chosen strategy is simple_byte
  2025                           
  2026                           	movf 0+(??_configCanal+0)+0,w
  2027  00D9  0872               	opt asmopt_push
  2028                           	opt asmopt_off
  2029                           	xorlw	0^0	; case 0
  2030  00DA  3A00               	skipnz
  2031  00DB  1903               	goto	l107
  2032  00DC  281A               	xorlw	1^0	; case 1
  2033  00DD  3A01               	skipnz
  2034  00DE  1903               	goto	l109
  2035  00DF  2827               	xorlw	2^1	; case 2
  2036  00E0  3A03               	skipnz
  2037  00E1  1903               	goto	l110
  2038  00E2  2834               	xorlw	3^2	; case 3
  2039  00E3  3A01               	skipnz
  2040  00E4  1903               	goto	l111
  2041  00E5  2841               	xorlw	4^3	; case 4
  2042  00E6  3A07               	skipnz
  2043  00E7  1903               	goto	l112
  2044  00E8  284E               	xorlw	5^4	; case 5
  2045  00E9  3A01               	skipnz
  2046  00EA  1903               	goto	l113
  2047  00EB  285B               	xorlw	6^5	; case 6
  2048  00EC  3A03               	skipnz
  2049  00ED  1903               	goto	l114
  2050  00EE  2868               	xorlw	7^6	; case 7
  2051  00EF  3A01               	skipnz
  2052  00F0  1903               	goto	l115
  2053  00F1  2875               	xorlw	8^7	; case 8
  2054  00F2  3A0F               	skipnz
  2055  00F3  1903               	goto	l116
  2056  00F4  2882               	xorlw	9^8	; case 9
  2057  00F5  3A01               	skipnz
  2058  00F6  1903               	goto	l117
  2059  00F7  288F               	xorlw	10^9	; case 10
  2060  00F8  3A03               	skipnz
  2061  00F9  1903               	goto	l118
  2062  00FA  289C               	xorlw	11^10	; case 11
  2063  00FB  3A01               	skipnz
  2064  00FC  1903               	goto	l119
  2065  00FD  28A9               	xorlw	12^11	; case 12
  2066  00FE  3A07               	skipnz
  2067  00FF  1903               	goto	l120
  2068  0100  28B6               	xorlw	13^12	; case 13
  2069  0101  3A01               	skipnz
  2070  0102  1903               	goto	l121
  2071  0103  28C3               	goto	l122
  2072  0104  2905               	opt asmopt_pop
  2073                           
  2074                           	
  2075                           l108:	
  2076  0105                     	line	131
  2077                           ;ADC.c: 130:     return;
  2078                           	
  2079                           l122:	
  2080  0105                     	return
  2081  0105  0008               	opt stack 0
  2082                           GLOBAL	__end_of_configCanal
  2083                           	__end_of_configCanal:
  2084  0106                     	signat	_configCanal,4217
  2085                           	global	_configADC
  2086                           
  2087 ;; *************** function _configADC *****************
  2088 ;; Defined at:
  2089 ;;		line 133 in file "ADC.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  FOSC            1    wreg     unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  FOSC            1    4[COMMON] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0
  2105 ;;      Temps:          2       0       0       0       0
  2106 ;;      Totals:         3       0       0       0       0
  2107 ;;Total ram usage:        3 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2117                           	line	133
  2118                           global __ptext5
  2119                           __ptext5:	;psect for function _configADC
  2120  016A                     psect	text5
  2121                           	file	"ADC.c"
  2122                           	line	133
  2123                           	global	__size_of_configADC
  2124                           	__size_of_configADC	equ	__end_of_configADC-_configADC
  2125  0037                     	
  2126                           _configADC:	
  2127  016A                     ;incstack = 0
  2128                           	opt	stack 6
  2129                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  2130                           ;configADC@FOSC stored from wreg
  2131                           	movwf	(configADC@FOSC)
  2132  016A  00F4               	line	135
  2133                           	
  2134                           l733:	
  2135  016B                     ;ADC.c: 135:     INTCONbits.PEIE=1;
  2136                           	bsf	(11),6	;volatile
  2137  016B  170B               	line	136
  2138                           ;ADC.c: 136:     PIE1bits.ADIE = 1;
  2139                           	bsf	status, 5	;RP0=1, select bank1
  2140  016C  1683               	bcf	status, 6	;RP1=0, select bank1
  2141  016D  1303               	bsf	(140)^080h,6	;volatile
  2142  016E  170C               	line	137
  2143                           ;ADC.c: 137:     PIR1bits.ADIF=0;
  2144                           	bcf	status, 5	;RP0=0, select bank0
  2145  016F  1283               	bcf	status, 6	;RP1=0, select bank0
  2146  0170  1303               	bcf	(12),6	;volatile
  2147  0171  130C               	line	138
  2148                           ;ADC.c: 138:     ADCON1bits.ADFM=0;
  2149                           	bsf	status, 5	;RP0=1, select bank1
  2150  0172  1683               	bcf	status, 6	;RP1=0, select bank1
  2151  0173  1303               	bcf	(159)^080h,7	;volatile
  2152  0174  139F               	line	139
  2153                           ;ADC.c: 139:     ADCON1bits.VCFG1=0;
  2154                           	bcf	(159)^080h,5	;volatile
  2155  0175  129F               	line	140
  2156                           ;ADC.c: 140:     ADCON1bits.VCFG0=0;
  2157                           	bcf	(159)^080h,4	;volatile
  2158  0176  121F               	line	141
  2159                           ;ADC.c: 141:     ADCON0bits.ADON=1;
  2160                           	bcf	status, 5	;RP0=0, select bank0
  2161  0177  1283               	bcf	status, 6	;RP1=0, select bank0
  2162  0178  1303               	bsf	(31),0	;volatile
  2163  0179  141F               	line	143
  2164                           ;ADC.c: 143:     switch (FOSC){
  2165                           	goto	l737
  2166  017A  2988               	line	144
  2167                           ;ADC.c: 144:         case 0:
  2168                           	
  2169                           l126:	
  2170  017B                     	line	145
  2171                           ;ADC.c: 145:             ADCON0bits.ADCS1=0;
  2172                           	bcf	(31),7	;volatile
  2173  017B  139F               	line	146
  2174                           ;ADC.c: 146:             ADCON0bits.ADCS0=0;
  2175                           	bcf	(31),6	;volatile
  2176  017C  131F               	line	147
  2177                           ;ADC.c: 147:             break;
  2178                           	goto	l127
  2179  017D  299E               	line	148
  2180                           ;ADC.c: 148:         case 1:
  2181                           	
  2182                           l128:	
  2183  017E                     	line	149
  2184                           ;ADC.c: 149:             ADCON0bits.ADCS1=0;
  2185                           	bcf	(31),7	;volatile
  2186  017E  139F               	line	150
  2187                           ;ADC.c: 150:             ADCON0bits.ADCS0=1;
  2188                           	bsf	(31),6	;volatile
  2189  017F  171F               	line	151
  2190                           ;ADC.c: 151:             break;
  2191                           	goto	l127
  2192  0180  299E               	line	152
  2193                           ;ADC.c: 152:         case 2:
  2194                           	
  2195                           l129:	
  2196  0181                     	line	153
  2197                           ;ADC.c: 153:             ADCON0bits.ADCS1=1;
  2198                           	bsf	(31),7	;volatile
  2199  0181  179F               	line	154
  2200                           ;ADC.c: 154:             ADCON0bits.ADCS0=0;
  2201                           	bcf	(31),6	;volatile
  2202  0182  131F               	line	155
  2203                           ;ADC.c: 155:             break;
  2204                           	goto	l127
  2205  0183  299E               	line	156
  2206                           ;ADC.c: 156:         case 3:
  2207                           	
  2208                           l130:	
  2209  0184                     	line	157
  2210                           ;ADC.c: 157:             ADCON0bits.ADCS1=1;
  2211                           	bsf	(31),7	;volatile
  2212  0184  179F               	line	158
  2213                           ;ADC.c: 158:             ADCON0bits.ADCS0=1;
  2214                           	bsf	(31),6	;volatile
  2215  0185  171F               	line	159
  2216                           ;ADC.c: 159:             break;
  2217                           	goto	l127
  2218  0186  299E               	line	160
  2219                           	
  2220                           l735:	
  2221  0187                     ;ADC.c: 160:     }
  2222                           	goto	l127
  2223  0187  299E               	
  2224                           l125:	
  2225  0188                     	
  2226                           l737:	
  2227  0188                     	movf	(configADC@FOSC),w
  2228  0188  0874               	movwf	(??_configADC+0)+0
  2229  0189  00F2               	clrf	(??_configADC+0)+0+1
  2230  018A  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2231                           ; Switch size 1, requested type "space"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ; direct_byte           11     8 (fixed)
  2237                           ; jumptable            260     6 (fixed)
  2238                           ;	Chosen strategy is simple_byte
  2239                           
  2240                           	movf 1+(??_configADC+0)+0,w
  2241  018B  0873               	opt asmopt_push
  2242                           	opt asmopt_off
  2243                           	xorlw	0^0	; case 0
  2244  018C  3A00               	skipnz
  2245  018D  1903               	goto	l879
  2246  018E  2990               	goto	l127
  2247  018F  299E               	opt asmopt_pop
  2248                           	
  2249                           l879:	
  2250  0190                     ; Switch size 1, requested type "space"
  2251                           ; Number of cases is 4, Range of values is 0 to 3
  2252                           ; switch strategies available:
  2253                           ; Name         Instructions Cycles
  2254                           ; simple_byte           13     7 (average)
  2255                           ; direct_byte           20     8 (fixed)
  2256                           ; jumptable            260     6 (fixed)
  2257                           ;	Chosen strategy is simple_byte
  2258                           
  2259                           	movf 0+(??_configADC+0)+0,w
  2260  0190  0872               	opt asmopt_push
  2261                           	opt asmopt_off
  2262                           	xorlw	0^0	; case 0
  2263  0191  3A00               	skipnz
  2264  0192  1903               	goto	l126
  2265  0193  297B               	xorlw	1^0	; case 1
  2266  0194  3A01               	skipnz
  2267  0195  1903               	goto	l128
  2268  0196  297E               	xorlw	2^1	; case 2
  2269  0197  3A03               	skipnz
  2270  0198  1903               	goto	l129
  2271  0199  2981               	xorlw	3^2	; case 3
  2272  019A  3A01               	skipnz
  2273  019B  1903               	goto	l130
  2274  019C  2984               	goto	l127
  2275  019D  299E               	opt asmopt_pop
  2276                           
  2277                           	
  2278                           l127:	
  2279  019E                     	line	162
  2280                           ;ADC.c: 162:     ADCON0bits.GO_DONE=1;
  2281                           	bsf	(31),1	;volatile
  2282  019E  149F               	line	163
  2283                           ;ADC.c: 163:     INTCONbits.GIE = 1;
  2284                           	bsf	(11),7	;volatile
  2285  019F  178B               	line	165
  2286                           ;ADC.c: 164:     return;
  2287                           	
  2288                           l131:	
  2289  01A0                     	return
  2290  01A0  0008               	opt stack 0
  2291                           GLOBAL	__end_of_configADC
  2292                           	__end_of_configADC:
  2293  01A1                     	signat	_configADC,4217
  2294                           	global	_ISR
  2295                           
  2296 ;; *************** function _ISR *****************
  2297 ;; Defined at:
  2298 ;;		line 36 in file "newmain.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		None
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0
  2314 ;;      Temps:          2       0       0       0       0
  2315 ;;      Totals:         2       0       0       0       0
  2316 ;;Total ram usage:        2 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		Interrupt level 1
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2325                           	file	"newmain.c"
  2326                           	line	36
  2327                           global __ptext6
  2328                           __ptext6:	;psect for function _ISR
  2329  01A1                     psect	text6
  2330                           	file	"newmain.c"
  2331                           	line	36
  2332                           	global	__size_of_ISR
  2333                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  2334  0011                     	
  2335                           _ISR:	
  2336  01A1                     ;incstack = 0
  2337                           	opt	stack 6
  2338                           ; Regs used in _ISR: []
  2339                           psect	intentry,class=CODE,delta=2
  2340                           global __pintentry
  2341                           __pintentry:
  2342  0004                     global interrupt_function
  2343                           interrupt_function:
  2344  0004                     	global saved_w
  2345                           	saved_w	set	btemp+0
  2346  007E                     	movwf	saved_w
  2347  0004  00FE               	swapf	status,w
  2348  0005  0E03               	movwf	(??_ISR+0)
  2349  0006  00F0               	movf	pclath,w
  2350  0007  080A               	movwf	(??_ISR+1)
  2351  0008  00F1               	ljmp	_ISR
  2352  0009  120A  118A  29A1   psect	text6
  2353                           	line	37
  2354                           	
  2355                           i1l761:	
  2356  01A1                     ;newmain.c: 37:     if(ADCON0bits.GO_DONE == 0){
  2357                           	bcf	status, 5	;RP0=0, select bank0
  2358  01A1  1283               	bcf	status, 6	;RP1=0, select bank0
  2359  01A2  1303               	btfsc	(31),1	;volatile
  2360  01A3  189F               	goto	u1_21
  2361  01A4  29A6               	goto	u1_20
  2362  01A5  29A7               u1_21:
  2363  01A6                     	goto	i1l54
  2364  01A6  29AB               u1_20:
  2365  01A7                     	line	38
  2366                           	
  2367                           i1l763:	
  2368  01A7                     ;newmain.c: 38:         adc = 1;
  2369                           	clrf	(_adc)
  2370  01A7  01FA               	incf	(_adc),f
  2371  01A8  0AFA               	line	39
  2372                           ;newmain.c: 39:         PIR1bits.ADIF = 0;
  2373                           	bcf	(12),6	;volatile
  2374  01A9  130C               	goto	i1l54
  2375  01AA  29AB               	line	40
  2376                           ;newmain.c: 40:     }
  2377                           	
  2378                           i1l53:	
  2379  01AB                     	line	41
  2380                           	
  2381                           i1l54:	
  2382  01AB                     	movf	(??_ISR+1),w
  2383  01AB  0871               	movwf	pclath
  2384  01AC  008A               	swapf	(??_ISR+0)^0FFFFFF80h,w
  2385  01AD  0E70               	movwf	status
  2386  01AE  0083               	swapf	saved_w,f
  2387  01AF  0EFE               	swapf	saved_w,w
  2388  01B0  0E7E               	retfie
  2389  01B1  0009               	opt stack 0
  2390                           GLOBAL	__end_of_ISR
  2391                           	__end_of_ISR:
  2392  01B2                     	signat	_ISR,89
  2393                           global	___latbits
  2394                           ___latbits	equ	2
  2395  0002                     	global	btemp
  2396                           	btemp set 07Eh
  2397  007E                     
  2398                           	DABS	1,126,2	;btemp
  2399                           	global	wtemp0
  2400                           	wtemp0 set btemp+0
  2401  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_configADC
    _main->_configCanal

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              5 COMMON     1     1      0
                          _configADC
                        _configCanal
                            _readADC
                           _selCanal
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selCanal                                             2     2      0      15
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configCanal                                          3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configCanal
   _readADC
   _selCanal
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Feb 08 09:41:51 2020

             __CFG_CP$OFF 0000                        l60 0151                        l61 013D  
                      l62 014F                        l71 01C1                        l63 015B  
                      l64 015F                        l65 0165                        l66 0166  
                      l67 0167                        l59 011E                        l68 0167  
                      u20 0123                        u21 0122                        u30 012B  
                      u31 012A                        u40 0157                        u41 0156  
                      u50 0163                        u51 0162                       l100 01D4  
                     l110 0034                       l111 0041                       l103 01CF  
                     l120 00B6                       l112 004E                       l121 00C3  
                     l113 005B                       l130 0184                       l106 00D1  
                     l114 0068                       l122 0105                       l131 01A0  
                     l115 0075                       l107 001A                       l108 0105  
                     l116 0082                       l125 0188                       l117 008F  
                     l109 0027                       l126 017B                       l118 009C  
                     l127 019E                       l119 00A9                       l128 017E  
                     l129 0181                       l801 0163                       l731 01C0  
                     l723 01B2                       l733 016B                       l725 01BC  
                     l735 0187                       l743 0019                       l727 01BE  
                     l737 0188                       l745 00D0                       l753 01C3  
                     l729 01BF                       l747 00D1                       l755 01CF  
                     l771 0117                       l757 01D0                       l781 012E  
                     l773 011E                       l765 0106                       l759 01D4  
                     l783 0134                       l775 0123                       l791 0151  
                     l767 010B                       l793 0157                       l785 0140  
                     l777 0127                       l769 0111                       l795 0158  
                     l787 0146                       l779 012B                       l877 00D9  
                     l797 015C                       l789 014F                       l879 0190  
                     l799 015F                       _RE0 0048                       _RE2 004A  
            __CFG_CPD$OFF 0000                       _ISR 01A1                       _adc 007A  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      i1l53 01AB  
                    i1l54 01AB                      u1_20 01A7                      u1_21 01A6  
            __CFG_WRT$OFF 0000                      _main 0106                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l761 01A1  
                   i1l763 01A7                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
         __end_of_readADC 01D5                     _setup 01B2            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 016A  
                  ??_main 0075                    _ADRESH 001E                    ?_setup 0070  
          __CFG_PWRTE$OFF 0000      __size_of_configCanal 00EE          __end_of_selCanal 01D0  
               ??_readADC 0072                    saved_w 007E   __end_of__initialization 0014  
          __pcstackCOMMON 0070             __end_of_setup 01C2        __size_of_configADC 0037  
                 ??_setup 0072                __pmaintext 0106                __pintentry 0004  
               ?_selCanal 0070         __end_of_configADC 01A1                 _ANSELbits 0188  
                 _contADC 0078                   __ptext1 01B2                   __ptext2 01C2  
                 __ptext3 01D0                   __ptext4 0018                   __ptext5 016A  
                 __ptext6 01A1                   _readADC 01D0              __size_of_ISR 0011  
                 _sensor1 0077                   _sensor2 0076      end_of_initialization 0014  
              ??_selCanal 0072                 _PORTBbits 0006                 _PORTCbits 0007  
               _TRISAbits 0085                 _TRISBbits 0086                 _TRISEbits 0089  
           ??_configCanal 0072       start_initialization 000F               __end_of_ISR 01B2  
         selCanal@channel 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_configCanal 0106  
             __pbssCOMMON 0076                 ___latbits 0002        configCanal@channel 0074  
       __size_of_selCanal 000E                 _configADC 016A                  ?_readADC 0070  
          __size_of_setup 0010         interrupt_function 0004               _configCanal 0018  
                _PIE1bits 008C                  _PIR1bits 000C                ?_configADC 0070  
              _ADCON0bits 001F                _ADCON1bits 009F                  _adcValue 0079  
              _ANSELHbits 0189          __size_of_readADC 0005         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0064                  _selCanal 01C2               ??_configADC 0072  
              _INTCONbits 000B                  intlevel1 0000             configADC@FOSC 0074  
            ?_configCanal 0070  
