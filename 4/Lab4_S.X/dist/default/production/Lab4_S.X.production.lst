

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Feb 14 13:02:08 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_configADC
   712                           	FNCALL	_main,_configCanal
   713                           	FNCALL	_main,_readADC
   714                           	FNCALL	_main,_selCanal
   715                           	FNCALL	_main,_setup
   716                           	FNCALL	_setup,_spiInit
   717                           	FNROOT	_main
   718                           	FNCALL	_isr,_spiRead
   719                           	FNCALL	_isr,_spiWrite
   720                           	FNCALL	_spiRead,_spiReceiveWait
   721                           	FNCALL	intlevel1,_isr
   722                           	global	intlevel1
   723                           	FNROOT	intlevel1
   724                           	global	_dataIn
   725                           	global	_contADC
   726                           	global	_sensor2
   727                           	global	_sensor1
   728                           	global	_adc
   729                           	global	_SSPBUF
   730                           _SSPBUF	set	0x13
   731  0013                     	global	_SSPCON
   732                           _SSPCON	set	0x14
   733  0014                     	global	_ADRESH
   734                           _ADRESH	set	0x1E
   735  001E                     	global	_INTCONbits
   736                           _INTCONbits	set	0xB
   737  000B                     	global	_PORTE
   738                           _PORTE	set	0x9
   739  0009                     	global	_PORTD
   740                           _PORTD	set	0x8
   741  0008                     	global	_PORTC
   742                           _PORTC	set	0x7
   743  0007                     	global	_PORTA
   744                           _PORTA	set	0x5
   745  0005                     	global	_PORTB
   746                           _PORTB	set	0x6
   747  0006                     	global	_PORTAbits
   748                           _PORTAbits	set	0x5
   749  0005                     	global	_PIR1bits
   750                           _PIR1bits	set	0xC
   751  000C                     	global	_ADCON0bits
   752                           _ADCON0bits	set	0x1F
   753  001F                     	global	_SSPIF
   754                           _SSPIF	set	0x63
   755  0063                     	global	_SSPSTATbits
   756                           _SSPSTATbits	set	0x94
   757  0094                     	global	_SSPSTAT
   758                           _SSPSTAT	set	0x94
   759  0094                     	global	_ADCON1bits
   760                           _ADCON1bits	set	0x9F
   761  009F                     	global	_TRISBbits
   762                           _TRISBbits	set	0x86
   763  0086                     	global	_TRISEbits
   764                           _TRISEbits	set	0x89
   765  0089                     	global	_TRISAbits
   766                           _TRISAbits	set	0x85
   767  0085                     	global	_PIE1bits
   768                           _PIE1bits	set	0x8C
   769  008C                     	global	_TRISE
   770                           _TRISE	set	0x89
   771  0089                     	global	_TRISD
   772                           _TRISD	set	0x88
   773  0088                     	global	_TRISCbits
   774                           _TRISCbits	set	0x87
   775  0087                     	global	_TRISC
   776                           _TRISC	set	0x87
   777  0087                     	global	_TRISB
   778                           _TRISB	set	0x86
   779  0086                     	global	_TRISA
   780                           _TRISA	set	0x85
   781  0085                     	global	_TRISC3
   782                           _TRISC3	set	0x43B
   783  043B                     	global	_TRISC5
   784                           _TRISC5	set	0x43D
   785  043D                     	global	_ANSELHbits
   786                           _ANSELHbits	set	0x189
   787  0189                     	global	_ANSELbits
   788                           _ANSELbits	set	0x188
   789  0188                     ; #config settings
   790                           global __CFG_FOSC$INTRC_NOCLKOUT
   791                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   792  0000                     global __CFG_WDTE$OFF
   793                           __CFG_WDTE$OFF equ 0x0
   794  0000                     global __CFG_PWRTE$OFF
   795                           __CFG_PWRTE$OFF equ 0x0
   796  0000                     global __CFG_MCLRE$OFF
   797                           __CFG_MCLRE$OFF equ 0x0
   798  0000                     global __CFG_CP$OFF
   799                           __CFG_CP$OFF equ 0x0
   800  0000                     global __CFG_CPD$OFF
   801                           __CFG_CPD$OFF equ 0x0
   802  0000                     global __CFG_BOREN$OFF
   803                           __CFG_BOREN$OFF equ 0x0
   804  0000                     global __CFG_IESO$OFF
   805                           __CFG_IESO$OFF equ 0x0
   806  0000                     global __CFG_FCMEN$OFF
   807                           __CFG_FCMEN$OFF equ 0x0
   808  0000                     global __CFG_LVP$OFF
   809                           __CFG_LVP$OFF equ 0x0
   810  0000                     global __CFG_BOR4V$BOR40V
   811                           __CFG_BOR4V$BOR40V equ 0x0
   812  0000                     global __CFG_WRT$OFF
   813                           __CFG_WRT$OFF equ 0x0
   814  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s8qk."
   815                           	line	#
   816                           psect cinit,class=CODE,delta=2
   817                           global start_initialization
   818                           start_initialization:
   819  000F                     
   820                           global __initialization
   821                           __initialization:
   822  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   823                           global __pbssCOMMON
   824                           __pbssCOMMON:
   825  0070                     _dataIn:
   826  0070                            ds      1
   827  0070                     
   828                           _contADC:
   829  0071                            ds      1
   830  0071                     
   831                           _sensor2:
   832  0072                            ds      1
   833  0072                     
   834                           _sensor1:
   835  0073                            ds      1
   836  0073                     
   837                           _adc:
   838  0074                            ds      1
   839  0074                     
   840                           psect	bssBANK0,class=BANK0,space=1,noexec
   841                           global __pbssBANK0
   842                           __pbssBANK0:
   843  0024                     _adcValue:
   844  0024                            ds      1
   845  0024                     
   846                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s8qk."
   847                           	line	#
   848                           ; Clear objects allocated to COMMON
   849                           psect cinit,class=CODE,delta=2,merge=1
   850                           	clrf	((__pbssCOMMON)+0)&07Fh
   851  000F  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
   852  0010  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
   853  0011  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
   854  0012  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
   855  0013  01F4               ; Clear objects allocated to BANK0
   856                           psect cinit,class=CODE,delta=2,merge=1
   857                           	bcf	status, 5	;RP0=0, select bank0
   858  0014  1283               	bcf	status, 6	;RP1=0, select bank0
   859  0015  1303               	clrf	((__pbssBANK0)+0)&07Fh
   860  0016  01A4               psect cinit,class=CODE,delta=2,merge=1
   861                           global end_of_initialization,__end_of__initialization
   862                           
   863                           ;End of C runtime variable initialization code
   864                           
   865                           end_of_initialization:
   866  0017                     __end_of__initialization:
   867  0017                     clrf status
   868  0017  0183               ljmp _main	;jump to C main() function
   869  0018  120A  118A  28EF   psect	cstackCOMMON,class=COMMON,space=1,noexec
   870                           global __pcstackCOMMON
   871                           __pcstackCOMMON:
   872  0075                     ?_spiRead:	; 1 bytes @ 0x0
   873  0075                     ??_spiRead:	; 1 bytes @ 0x0
   874  0075                     ?_spiWrite:	; 1 bytes @ 0x0
   875  0075                     ??_spiWrite:	; 1 bytes @ 0x0
   876  0075                     ?_setup:	; 1 bytes @ 0x0
   877  0075                     ?_configADC:	; 1 bytes @ 0x0
   878  0075                     ?_configCanal:	; 1 bytes @ 0x0
   879  0075                     ?_selCanal:	; 1 bytes @ 0x0
   880  0075                     ?_readADC:	; 1 bytes @ 0x0
   881  0075                     ?_isr:	; 1 bytes @ 0x0
   882  0075                     ?_main:	; 1 bytes @ 0x0
   883  0075                     ?_spiReceiveWait:	; 1 bytes @ 0x0
   884  0075                     ??_spiReceiveWait:	; 1 bytes @ 0x0
   885  0075                     	global	spiWrite@dat
   886                           spiWrite@dat:	; 1 bytes @ 0x0
   887  0075                     	ds	1
   888  0075                     ??_isr:	; 1 bytes @ 0x1
   889  0076                     	ds	3
   890  0076                     ??_selCanal:	; 1 bytes @ 0x4
   891  0079                     ??_readADC:	; 1 bytes @ 0x4
   892  0079                     ??_spiInit:	; 1 bytes @ 0x4
   893  0079                     	global	configCanal@channel
   894                           configCanal@channel:	; 1 bytes @ 0x4
   895  0079                     	global	configADC@FOSC
   896                           configADC@FOSC:	; 1 bytes @ 0x4
   897  0079                     	global	spiInit@sType
   898                           spiInit@sType:	; 1 bytes @ 0x4
   899  0079                     	ds	1
   900  0079                     ??_setup:	; 1 bytes @ 0x5
   901  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   902                           global __pcstackBANK0
   903                           __pcstackBANK0:
   904  0020                     ??_configADC:	; 1 bytes @ 0x0
   905  0020                     ??_configCanal:	; 1 bytes @ 0x0
   906  0020                     ?_spiInit:	; 1 bytes @ 0x0
   907  0020                     	global	selCanal@channel
   908                           selCanal@channel:	; 1 bytes @ 0x0
   909  0020                     	global	spiInit@sDataSample
   910                           spiInit@sDataSample:	; 1 bytes @ 0x0
   911  0020                     	ds	1
   912  0020                     	global	spiInit@sClockIdle
   913                           spiInit@sClockIdle:	; 1 bytes @ 0x1
   914  0021                     	ds	1
   915  0021                     	global	spiInit@sTransmitEdge
   916                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
   917  0022                     	ds	1
   918  0022                     ??_main:	; 1 bytes @ 0x3
   919  0023                     	ds	1
   920  0023                     ;!
   921                           ;!Data Sizes:
   922                           ;!    Strings     0
   923                           ;!    Constant    0
   924                           ;!    Data        0
   925                           ;!    BSS         6
   926                           ;!    Persistent  0
   927                           ;!    Stack       0
   928                           ;!
   929                           ;!Auto Spaces:
   930                           ;!    Space          Size  Autos    Used
   931                           ;!    COMMON           14      5      10
   932                           ;!    BANK0            80      4       5
   933                           ;!    BANK1            80      0       0
   934                           ;!    BANK3            96      0       0
   935                           ;!    BANK2            96      0       0
   936                           
   937                           ;!
   938                           ;!Pointer List with Targets:
   939                           ;!
   940                           ;!    None.
   941                           
   942                           
   943                           ;!
   944                           ;!Critical Paths under _main in COMMON
   945                           ;!
   946                           ;!    _main->_configADC
   947                           ;!    _main->_configCanal
   948                           ;!    _main->_selCanal
   949                           ;!    _setup->_spiInit
   950                           ;!
   951                           ;!Critical Paths under _isr in COMMON
   952                           ;!
   953                           ;!    _isr->_spiWrite
   954                           ;!
   955                           ;!Critical Paths under _main in BANK0
   956                           ;!
   957                           ;!    _setup->_spiInit
   958                           ;!
   959                           ;!Critical Paths under _isr in BANK0
   960                           ;!
   961                           ;!    None.
   962                           ;!
   963                           ;!Critical Paths under _main in BANK1
   964                           ;!
   965                           ;!    None.
   966                           ;!
   967                           ;!Critical Paths under _isr in BANK1
   968                           ;!
   969                           ;!    None.
   970                           ;!
   971                           ;!Critical Paths under _main in BANK3
   972                           ;!
   973                           ;!    None.
   974                           ;!
   975                           ;!Critical Paths under _isr in BANK3
   976                           ;!
   977                           ;!    None.
   978                           ;!
   979                           ;!Critical Paths under _main in BANK2
   980                           ;!
   981                           ;!    None.
   982                           ;!
   983                           ;!Critical Paths under _isr in BANK2
   984                           ;!
   985                           ;!    None.
   986                           
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   989 ;;
   990                           
   991                           ;!
   992                           ;!Call Graph Tables:
   993                           ;!
   994                           ;! ---------------------------------------------------------------------------------
   995                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   996                           ;! ---------------------------------------------------------------------------------
   997                           ;! (0) _main                                                 1     1      0     522
   998                           ;!                                              3 BANK0      1     1      0
   999                           ;!                          _configADC
  1000                           ;!                        _configCanal
  1001                           ;!                            _readADC
  1002                           ;!                           _selCanal
  1003                           ;!                              _setup
  1004                           ;! ---------------------------------------------------------------------------------
  1005                           ;! (1) _setup                                                0     0      0     456
  1006                           ;!                            _spiInit
  1007                           ;! ---------------------------------------------------------------------------------
  1008                           ;! (2) _spiInit                                              4     1      3     456
  1009                           ;!                                              4 COMMON     1     1      0
  1010                           ;!                                              0 BANK0      3     0      3
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (1) _selCanal                                             2     2      0      22
  1013                           ;!                                              4 COMMON     1     1      0
  1014                           ;!                                              0 BANK0      1     1      0
  1015                           ;! ---------------------------------------------------------------------------------
  1016                           ;! (1) _readADC                                              0     0      0       0
  1017                           ;! ---------------------------------------------------------------------------------
  1018                           ;! (1) _configCanal                                          3     3      0      22
  1019                           ;!                                              4 COMMON     1     1      0
  1020                           ;!                                              0 BANK0      2     2      0
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! (1) _configADC                                            3     3      0      22
  1023                           ;!                                              4 COMMON     1     1      0
  1024                           ;!                                              0 BANK0      2     2      0
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! Estimated maximum stack depth 2
  1027                           ;! ---------------------------------------------------------------------------------
  1028                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1029                           ;! ---------------------------------------------------------------------------------
  1030                           ;! (3) _isr                                                  3     3      0      15
  1031                           ;!                                              1 COMMON     3     3      0
  1032                           ;!                            _spiRead
  1033                           ;!                           _spiWrite
  1034                           ;! ---------------------------------------------------------------------------------
  1035                           ;! (4) _spiWrite                                             1     1      0      15
  1036                           ;!                                              0 COMMON     1     1      0
  1037                           ;! ---------------------------------------------------------------------------------
  1038                           ;! (4) _spiRead                                              0     0      0       0
  1039                           ;!                     _spiReceiveWait
  1040                           ;! ---------------------------------------------------------------------------------
  1041                           ;! (5) _spiReceiveWait                                       0     0      0       0
  1042                           ;! ---------------------------------------------------------------------------------
  1043                           ;! Estimated maximum stack depth 5
  1044                           ;! ---------------------------------------------------------------------------------
  1045                           ;!
  1046                           ;! Call Graph Graphs:
  1047                           ;!
  1048                           ;! _main (ROOT)
  1049                           ;!   _configADC
  1050                           ;!   _configCanal
  1051                           ;!   _readADC
  1052                           ;!   _selCanal
  1053                           ;!   _setup
  1054                           ;!     _spiInit
  1055                           ;!
  1056                           ;! _isr (ROOT)
  1057                           ;!   _spiRead
  1058                           ;!     _spiReceiveWait
  1059                           ;!   _spiWrite
  1060                           ;!
  1061                           
  1062                           ;! Address spaces:
  1063                           
  1064                           ;!Name               Size   Autos  Total    Cost      Usage
  1065                           ;!BITCOMMON            E      0       0       0        0.0%
  1066                           ;!EEDATA             100      0       0       0        0.0%
  1067                           ;!NULL                 0      0       0       0        0.0%
  1068                           ;!CODE                 0      0       0       0        0.0%
  1069                           ;!COMMON               E      5       A       1       71.4%
  1070                           ;!BITSFR0              0      0       0       1        0.0%
  1071                           ;!SFR0                 0      0       0       1        0.0%
  1072                           ;!BITSFR1              0      0       0       2        0.0%
  1073                           ;!SFR1                 0      0       0       2        0.0%
  1074                           ;!STACK                0      0       0       2        0.0%
  1075                           ;!ABS                  0      0       F       3        0.0%
  1076                           ;!BITBANK0            50      0       0       4        0.0%
  1077                           ;!BITSFR3              0      0       0       4        0.0%
  1078                           ;!SFR3                 0      0       0       4        0.0%
  1079                           ;!BANK0               50      4       5       5        6.3%
  1080                           ;!BITSFR2              0      0       0       5        0.0%
  1081                           ;!SFR2                 0      0       0       5        0.0%
  1082                           ;!BITBANK1            50      0       0       6        0.0%
  1083                           ;!BANK1               50      0       0       7        0.0%
  1084                           ;!BITBANK3            60      0       0       8        0.0%
  1085                           ;!BANK3               60      0       0       9        0.0%
  1086                           ;!BITBANK2            60      0       0      10        0.0%
  1087                           ;!BANK2               60      0       0      11        0.0%
  1088                           ;!DATA                 0      0       F      12        0.0%
  1089                           
  1090                           	global	_main
  1091                           
  1092 ;; *************** function _main *****************
  1093 ;; Defined at:
  1094 ;;		line 74 in file "mainS.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : B00/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          0       1       0       0       0
  1111 ;;      Totals:         0       1       0       0       0
  1112 ;;Total ram usage:        1 bytes
  1113 ;; Hardware stack levels required when called:    5
  1114 ;; This function calls:
  1115 ;;		_configADC
  1116 ;;		_configCanal
  1117 ;;		_readADC
  1118 ;;		_selCanal
  1119 ;;		_setup
  1120 ;; This function is called by:
  1121 ;;		Startup code after reset
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1125                           	file	"mainS.c"
  1126                           	line	74
  1127                           global __pmaintext
  1128                           __pmaintext:	;psect for function _main
  1129  00EF                     psect	maintext
  1130                           	file	"mainS.c"
  1131                           	line	74
  1132                           	global	__size_of_main
  1133                           	__size_of_main	equ	__end_of_main-_main
  1134  0061                     	
  1135                           _main:	
  1136  00EF                     ;incstack = 0
  1137                           	opt	stack 3
  1138                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1139                           	line	75
  1140                           	
  1141                           l1104:	
  1142  00EF                     ;mainS.c: 75:     setup();
  1143                           	fcall	_setup
  1144  00EF  120A  118A  21C1  120A  118A  	line	76
  1145                           	
  1146                           l1106:	
  1147  00F4                     ;mainS.c: 76:     configADC(1);
  1148                           	movlw	low(01h)
  1149  00F4  3001               	fcall	_configADC
  1150  00F5  120A  118A  218A  120A  118A  	line	77
  1151                           	
  1152                           l1108:	
  1153  00FA                     ;mainS.c: 77:     configCanal(0);
  1154                           	movlw	low(0)
  1155  00FA  3000               	fcall	_configCanal
  1156  00FB  120A  118A  201B  120A  118A  	line	78
  1157                           	
  1158                           l1110:	
  1159  0100                     ;mainS.c: 78:     configCanal(1);
  1160                           	movlw	low(01h)
  1161  0100  3001               	fcall	_configCanal
  1162  0101  120A  118A  201B  120A  118A  	goto	l1112
  1163  0106  2907               	line	82
  1164                           ;mainS.c: 82:     while(1){
  1165                           	
  1166                           l79:	
  1167  0107                     	line	84
  1168                           	
  1169                           l1112:	
  1170  0107                     ;mainS.c: 84:         if(adc){
  1171                           	movf	((_adc)),w
  1172  0107  0874               	btfsc	status,2
  1173  0108  1903               	goto	u171
  1174  0109  290B               	goto	u170
  1175  010A  290C               u171:
  1176  010B                     	goto	l1128
  1177  010B  293A               u170:
  1178  010C                     	line	85
  1179                           	
  1180                           l1114:	
  1181  010C                     ;mainS.c: 85:             contADC++;
  1182                           	movlw	low(01h)
  1183  010C  3001               	bcf	status, 5	;RP0=0, select bank0
  1184  010D  1283               	bcf	status, 6	;RP1=0, select bank0
  1185  010E  1303               	movwf	(??_main+0)+0
  1186  010F  00A3               	movf	(??_main+0)+0,w
  1187  0110  0823               	addwf	(_contADC),f
  1188  0111  07F1               	line	86
  1189                           	
  1190                           l1116:	
  1191  0112                     ;mainS.c: 86:             if(contADC%2){
  1192                           	btfss	(_contADC),(0)&7
  1193  0112  1C71               	goto	u181
  1194  0113  2915               	goto	u180
  1195  0114  2916               u181:
  1196  0115                     	goto	l1122
  1197  0115  2927               u180:
  1198  0116                     	line	87
  1199                           	
  1200                           l1118:	
  1201  0116                     ;mainS.c: 87:                 selCanal(0);
  1202                           	movlw	low(0)
  1203  0116  3000               	fcall	_selCanal
  1204  0117  120A  118A  2205  120A  118A  	line	88
  1205                           	
  1206                           l1120:	
  1207  011C                     ;mainS.c: 88:                 sensor1 = readADC();
  1208                           	fcall	_readADC
  1209  011C  120A  118A  222D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1210  0121  1283               	bcf	status, 6	;RP1=0, select bank0
  1211  0122  1303               	movwf	(??_main+0)+0
  1212  0123  00A3               	movf	(??_main+0)+0,w
  1213  0124  0823               	movwf	(_sensor1)
  1214  0125  00F3               	line	89
  1215                           ;mainS.c: 89:             }else{
  1216                           	goto	l1126
  1217  0126  2938               	
  1218                           l81:	
  1219  0127                     	line	90
  1220                           	
  1221                           l1122:	
  1222  0127                     ;mainS.c: 90:                 selCanal(1);
  1223                           	movlw	low(01h)
  1224  0127  3001               	fcall	_selCanal
  1225  0128  120A  118A  2205  120A  118A  	line	91
  1226                           	
  1227                           l1124:	
  1228  012D                     ;mainS.c: 91:                 sensor2 = readADC();
  1229                           	fcall	_readADC
  1230  012D  120A  118A  222D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1231  0132  1283               	bcf	status, 6	;RP1=0, select bank0
  1232  0133  1303               	movwf	(??_main+0)+0
  1233  0134  00A3               	movf	(??_main+0)+0,w
  1234  0135  0823               	movwf	(_sensor2)
  1235  0136  00F2               	goto	l1126
  1236  0137  2938               	line	92
  1237                           ;mainS.c: 92:             }
  1238                           	
  1239                           l82:	
  1240  0138                     	line	93
  1241                           	
  1242                           l1126:	
  1243  0138                     ;mainS.c: 93:             adc = 0;
  1244                           	clrf	(_adc)
  1245  0138  01F4               	goto	l1128
  1246  0139  293A               	line	94
  1247                           ;mainS.c: 94:         }
  1248                           	
  1249                           l80:	
  1250  013A                     	line	96
  1251                           	
  1252                           l1128:	
  1253  013A                     ;mainS.c: 96:         if(ADCON0bits.GO_DONE == 0){
  1254                           	bcf	status, 5	;RP0=0, select bank0
  1255  013A  1283               	bcf	status, 6	;RP1=0, select bank0
  1256  013B  1303               	btfsc	(31),1	;volatile
  1257  013C  189F               	goto	u191
  1258  013D  293F               	goto	u190
  1259  013E  2940               u191:
  1260  013F                     	goto	l83
  1261  013F  2941               u190:
  1262  0140                     	line	97
  1263                           	
  1264                           l1130:	
  1265  0140                     ;mainS.c: 97:             ADCON0bits.GO_DONE = 1;
  1266                           	bsf	(31),1	;volatile
  1267  0140  149F               	line	98
  1268                           ;mainS.c: 98:         }
  1269                           	
  1270                           l83:	
  1271  0141                     	line	100
  1272                           ;mainS.c: 100:         if(PORTAbits.RA7){
  1273                           	btfss	(5),7	;volatile
  1274  0141  1F85               	goto	u201
  1275  0142  2944               	goto	u200
  1276  0143  2945               u201:
  1277  0144                     	goto	l1134
  1278  0144  2948               u200:
  1279  0145                     	line	101
  1280                           	
  1281                           l1132:	
  1282  0145                     ;mainS.c: 101:             PORTB = sensor1;
  1283                           	movf	(_sensor1),w
  1284  0145  0873               	movwf	(6)	;volatile
  1285  0146  0086               	line	102
  1286                           ;mainS.c: 102:         }else{
  1287                           	goto	l1112
  1288  0147  2907               	
  1289                           l84:	
  1290  0148                     	line	103
  1291                           	
  1292                           l1134:	
  1293  0148                     ;mainS.c: 103:             PORTB = sensor2;
  1294                           	movf	(_sensor2),w
  1295  0148  0872               	movwf	(6)	;volatile
  1296  0149  0086               	goto	l1112
  1297  014A  2907               	line	104
  1298                           ;mainS.c: 104:         }
  1299                           	
  1300                           l85:	
  1301  014B                     	goto	l1112
  1302  014B  2907               	line	106
  1303                           ;mainS.c: 106:     }
  1304                           	
  1305                           l86:	
  1306  014C                     	goto	l1112
  1307  014C  2907               	
  1308                           l87:	
  1309  014D                     	line	108
  1310                           ;mainS.c: 107:     return;
  1311                           	
  1312                           l88:	
  1313  014D                     	global	start
  1314                           	ljmp	start
  1315  014D  120A  118A  280C   	opt stack 0
  1316                           GLOBAL	__end_of_main
  1317                           	__end_of_main:
  1318  0150                     	signat	_main,89
  1319                           	global	_setup
  1320                           
  1321 ;; *************** function _setup *****************
  1322 ;; Defined at:
  1323 ;;		line 112 in file "mainS.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, pclath, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    4
  1344 ;; This function calls:
  1345 ;;		_spiInit
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1351                           	line	112
  1352                           global __ptext1
  1353                           __ptext1:	;psect for function _setup
  1354  01C1                     psect	text1
  1355                           	file	"mainS.c"
  1356                           	line	112
  1357                           	global	__size_of_setup
  1358                           	__size_of_setup	equ	__end_of_setup-_setup
  1359  0026                     	
  1360                           _setup:	
  1361  01C1                     ;incstack = 0
  1362                           	opt	stack 3
  1363                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1364                           	line	113
  1365                           	
  1366                           l1052:	
  1367  01C1                     ;mainS.c: 113:     PORTA = 0;
  1368                           	bcf	status, 5	;RP0=0, select bank0
  1369  01C1  1283               	bcf	status, 6	;RP1=0, select bank0
  1370  01C2  1303               	clrf	(5)	;volatile
  1371  01C3  0185               	line	114
  1372                           ;mainS.c: 114:     PORTB = 0;
  1373                           	clrf	(6)	;volatile
  1374  01C4  0186               	line	115
  1375                           ;mainS.c: 115:     PORTC = 0;
  1376                           	clrf	(7)	;volatile
  1377  01C5  0187               	line	116
  1378                           ;mainS.c: 116:     PORTD = 0;
  1379                           	clrf	(8)	;volatile
  1380  01C6  0188               	line	117
  1381                           ;mainS.c: 117:     PORTE = 0;
  1382                           	clrf	(9)	;volatile
  1383  01C7  0189               	line	118
  1384                           	
  1385                           l1054:	
  1386  01C8                     ;mainS.c: 118:     TRISA = 0b10000000;
  1387                           	movlw	low(080h)
  1388  01C8  3080               	bsf	status, 5	;RP0=1, select bank1
  1389  01C9  1683               	bcf	status, 6	;RP1=0, select bank1
  1390  01CA  1303               	movwf	(133)^080h	;volatile
  1391  01CB  0085               	line	119
  1392                           	
  1393                           l1056:	
  1394  01CC                     ;mainS.c: 119:     TRISB = 0;
  1395                           	clrf	(134)^080h	;volatile
  1396  01CC  0186               	line	120
  1397                           	
  1398                           l1058:	
  1399  01CD                     ;mainS.c: 120:     TRISC = 0;
  1400                           	clrf	(135)^080h	;volatile
  1401  01CD  0187               	line	121
  1402                           	
  1403                           l1060:	
  1404  01CE                     ;mainS.c: 121:     TRISCbits.TRISC5 = 0;
  1405                           	bcf	(135)^080h,5	;volatile
  1406  01CE  1287               	line	122
  1407                           	
  1408                           l1062:	
  1409  01CF                     ;mainS.c: 122:     TRISCbits.TRISC4 = 1;
  1410                           	bsf	(135)^080h,4	;volatile
  1411  01CF  1607               	line	123
  1412                           	
  1413                           l1064:	
  1414  01D0                     ;mainS.c: 123:     TRISD = 0;
  1415                           	clrf	(136)^080h	;volatile
  1416  01D0  0188               	line	124
  1417                           	
  1418                           l1066:	
  1419  01D1                     ;mainS.c: 124:     TRISE = 0;
  1420                           	clrf	(137)^080h	;volatile
  1421  01D1  0189               	line	126
  1422                           	
  1423                           l1068:	
  1424  01D2                     ;mainS.c: 126:     INTCONbits.GIE = 1;
  1425                           	bsf	(11),7	;volatile
  1426  01D2  178B               	line	127
  1427                           	
  1428                           l1070:	
  1429  01D3                     ;mainS.c: 127:     INTCONbits.PEIE = 1;
  1430                           	bsf	(11),6	;volatile
  1431  01D3  170B               	line	128
  1432                           	
  1433                           l1072:	
  1434  01D4                     ;mainS.c: 128:     PIR1bits.SSPIF = 0;
  1435                           	bcf	status, 5	;RP0=0, select bank0
  1436  01D4  1283               	bcf	status, 6	;RP1=0, select bank0
  1437  01D5  1303               	bcf	(12),3	;volatile
  1438  01D6  118C               	line	129
  1439                           	
  1440                           l1074:	
  1441  01D7                     ;mainS.c: 129:     PIE1bits.SSPIE = 1;
  1442                           	bsf	status, 5	;RP0=1, select bank1
  1443  01D7  1683               	bcf	status, 6	;RP1=0, select bank1
  1444  01D8  1303               	bsf	(140)^080h,3	;volatile
  1445  01D9  158C               	line	130
  1446                           	
  1447                           l1076:	
  1448  01DA                     ;mainS.c: 130:     TRISAbits.TRISA5 = 1;
  1449                           	bsf	(133)^080h,5	;volatile
  1450  01DA  1685               	line	132
  1451                           	
  1452                           l1078:	
  1453  01DB                     ;mainS.c: 132:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
                                 SPI_IDLE_2_ACTIVE);
  1454                           	bcf	status, 5	;RP0=0, select bank0
  1455  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  1456  01DC  1303               	clrf	(spiInit@sDataSample)
  1457  01DD  01A0               	clrf	(spiInit@sClockIdle)
  1458  01DE  01A1               	clrf	(spiInit@sTransmitEdge)
  1459  01DF  01A2               	movlw	low(024h)
  1460  01E0  3024               	fcall	_spiInit
  1461  01E1  120A  118A  21E7  120A  118A  	line	134
  1462                           	
  1463                           l91:	
  1464  01E6                     	return
  1465  01E6  0008               	opt stack 0
  1466                           GLOBAL	__end_of_setup
  1467                           	__end_of_setup:
  1468  01E7                     	signat	_setup,89
  1469                           	global	_spiInit
  1470                           
  1471 ;; *************** function _spiInit *****************
  1472 ;; Defined at:
  1473 ;;		line 12 in file "SPI.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  sType           1    wreg     enum E1264
  1476 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1477 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1478 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  sType           1    4[COMMON] enum E1264
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       3       0       0       0
  1491 ;;      Locals:         1       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0
  1493 ;;      Totals:         1       3       0       0       0
  1494 ;;Total ram usage:        4 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    3
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_setup
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1504                           	file	"SPI.c"
  1505                           	line	12
  1506                           global __ptext2
  1507                           __ptext2:	;psect for function _spiInit
  1508  01E7                     psect	text2
  1509                           	file	"SPI.c"
  1510                           	line	12
  1511                           	global	__size_of_spiInit
  1512                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1513  001E                     	
  1514                           _spiInit:	
  1515  01E7                     ;incstack = 0
  1516                           	opt	stack 3
  1517                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1518                           ;spiInit@sType stored from wreg
  1519                           	movwf	(spiInit@sType)
  1520  01E7  00F9               	line	14
  1521                           	
  1522                           l1042:	
  1523  01E8                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1524                           	bsf	status, 5	;RP0=1, select bank1
  1525  01E8  1683               	bcf	status, 6	;RP1=0, select bank1
  1526  01E9  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1527  01EA  1287               	line	15
  1528                           ;SPI.c: 15:     if(sType & 0b00000100)
  1529                           	btfss	(spiInit@sType),(2)&7
  1530  01EB  1D79               	goto	u161
  1531  01EC  29EE               	goto	u160
  1532  01ED  29EF               u161:
  1533  01EE                     	goto	l1048
  1534  01EE  29F7               u160:
  1535  01EF                     	line	17
  1536                           	
  1537                           l1044:	
  1538  01EF                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1539                           	bcf	status, 5	;RP0=0, select bank0
  1540  01EF  1283               	bcf	status, 6	;RP1=0, select bank0
  1541  01F0  1303               	movf	(spiInit@sTransmitEdge),w
  1542  01F1  0822               	bsf	status, 5	;RP0=1, select bank1
  1543  01F2  1683               	bcf	status, 6	;RP1=0, select bank1
  1544  01F3  1303               	movwf	(148)^080h	;volatile
  1545  01F4  0094               	line	18
  1546                           	
  1547                           l1046:	
  1548  01F5                     ;SPI.c: 18:         TRISC3 = 1;
  1549                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1550  01F5  1587               	line	19
  1551                           ;SPI.c: 19:     }
  1552                           	goto	l169
  1553  01F6  29FF               	line	20
  1554                           ;SPI.c: 20:     else
  1555                           	
  1556                           l168:	
  1557  01F7                     	line	22
  1558                           	
  1559                           l1048:	
  1560  01F7                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1561                           	bcf	status, 5	;RP0=0, select bank0
  1562  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  1563  01F8  1303               	movf	(spiInit@sDataSample),w
  1564  01F9  0820               	iorwf	(spiInit@sTransmitEdge),w
  1565  01FA  0422               	bsf	status, 5	;RP0=1, select bank1
  1566  01FB  1683               	bcf	status, 6	;RP1=0, select bank1
  1567  01FC  1303               	movwf	(148)^080h	;volatile
  1568  01FD  0094               	line	23
  1569                           	
  1570                           l1050:	
  1571  01FE                     ;SPI.c: 23:         TRISC3 = 0;
  1572                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  1573  01FE  1187               	line	24
  1574                           ;SPI.c: 24:     }
  1575                           	
  1576                           l169:	
  1577  01FF                     	line	26
  1578                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1579                           	movf	(spiInit@sType),w
  1580  01FF  0879               	bcf	status, 5	;RP0=0, select bank0
  1581  0200  1283               	bcf	status, 6	;RP1=0, select bank0
  1582  0201  1303               	iorwf	(spiInit@sClockIdle),w
  1583  0202  0421               	movwf	(20)	;volatile
  1584  0203  0094               	line	27
  1585                           	
  1586                           l170:	
  1587  0204                     	return
  1588  0204  0008               	opt stack 0
  1589                           GLOBAL	__end_of_spiInit
  1590                           	__end_of_spiInit:
  1591  0205                     	signat	_spiInit,16505
  1592                           	global	_selCanal
  1593                           
  1594 ;; *************** function _selCanal *****************
  1595 ;; Defined at:
  1596 ;;		line 10 in file "ADC.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  channel         1    wreg     unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  channel         1    0[BANK0 ] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         0       0       0       0       0
  1611 ;;      Locals:         0       1       0       0       0
  1612 ;;      Temps:          1       0       0       0       0
  1613 ;;      Totals:         1       1       0       0       0
  1614 ;;Total ram usage:        2 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    3
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1624                           	file	"ADC.c"
  1625                           	line	10
  1626                           global __ptext3
  1627                           __ptext3:	;psect for function _selCanal
  1628  0205                     psect	text3
  1629                           	file	"ADC.c"
  1630                           	line	10
  1631                           	global	__size_of_selCanal
  1632                           	__size_of_selCanal	equ	__end_of_selCanal-_selCanal
  1633  000E                     	
  1634                           _selCanal:	
  1635  0205                     ;incstack = 0
  1636                           	opt	stack 4
  1637                           ; Regs used in _selCanal: [wreg+status,2+status,0]
  1638                           ;selCanal@channel stored from wreg
  1639                           	bcf	status, 5	;RP0=0, select bank0
  1640  0205  1283               	bcf	status, 6	;RP1=0, select bank0
  1641  0206  1303               	movwf	(selCanal@channel)
  1642  0207  00A0               	line	11
  1643                           	
  1644                           l1100:	
  1645  0208                     ;ADC.c: 11:     ADCON0bits.CHS = channel;
  1646                           	movf	(selCanal@channel),w
  1647  0208  0820               	movwf	(??_selCanal+0)+0
  1648  0209  00F9               	rlf	(??_selCanal+0)+0,f
  1649  020A  0DF9               	rlf	(??_selCanal+0)+0,f
  1650  020B  0DF9               	movf	(31),w	;volatile
  1651  020C  081F               	xorwf	(??_selCanal+0)+0,w
  1652  020D  0679               	andlw	not (((1<<4)-1)<<2)
  1653  020E  39C3               	xorwf	(??_selCanal+0)+0,w
  1654  020F  0679               	movwf	(31)	;volatile
  1655  0210  009F               	goto	l123
  1656  0211  2A12               	line	12
  1657                           	
  1658                           l1102:	
  1659  0212                     	line	13
  1660                           ;ADC.c: 12:     return;
  1661                           	
  1662                           l123:	
  1663  0212                     	return
  1664  0212  0008               	opt stack 0
  1665                           GLOBAL	__end_of_selCanal
  1666                           	__end_of_selCanal:
  1667  0213                     	signat	_selCanal,4217
  1668                           	global	_readADC
  1669                           
  1670 ;; *************** function _readADC *****************
  1671 ;; Defined at:
  1672 ;;		line 6 in file "ADC.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1686 ;;      Params:         0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    3
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1700                           	line	6
  1701                           global __ptext4
  1702                           __ptext4:	;psect for function _readADC
  1703  022D                     psect	text4
  1704                           	file	"ADC.c"
  1705                           	line	6
  1706                           	global	__size_of_readADC
  1707                           	__size_of_readADC	equ	__end_of_readADC-_readADC
  1708  0005                     	
  1709                           _readADC:	
  1710  022D                     ;incstack = 0
  1711                           	opt	stack 4
  1712                           ; Regs used in _readADC: [wreg]
  1713                           	line	7
  1714                           	
  1715                           l834:	
  1716  022D                     ;ADC.c: 7:     return ADRESH;
  1717                           	bcf	status, 5	;RP0=0, select bank0
  1718  022D  1283               	bcf	status, 6	;RP1=0, select bank0
  1719  022E  1303               	movf	(30),w	;volatile
  1720  022F  081E               	goto	l120
  1721  0230  2A31               	
  1722                           l836:	
  1723  0231                     	line	8
  1724                           	
  1725                           l120:	
  1726  0231                     	return
  1727  0231  0008               	opt stack 0
  1728                           GLOBAL	__end_of_readADC
  1729                           	__end_of_readADC:
  1730  0232                     	signat	_readADC,89
  1731                           	global	_configCanal
  1732                           
  1733 ;; *************** function _configCanal *****************
  1734 ;; Defined at:
  1735 ;;		line 15 in file "ADC.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  channel         1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  channel         1    4[COMMON] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0
  1751 ;;      Temps:          0       2       0       0       0
  1752 ;;      Totals:         1       2       0       0       0
  1753 ;;Total ram usage:        3 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    3
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1763                           	line	15
  1764                           global __ptext5
  1765                           __ptext5:	;psect for function _configCanal
  1766  001B                     psect	text5
  1767                           	file	"ADC.c"
  1768                           	line	15
  1769                           	global	__size_of_configCanal
  1770                           	__size_of_configCanal	equ	__end_of_configCanal-_configCanal
  1771  00D4                     	
  1772                           _configCanal:	
  1773  001B                     ;incstack = 0
  1774                           	opt	stack 4
  1775                           ; Regs used in _configCanal: [wreg-fsr0h+status,2+status,0]
  1776                           ;configCanal@channel stored from wreg
  1777                           	movwf	(configCanal@channel)
  1778  001B  00F9               	line	16
  1779                           	
  1780                           l1090:	
  1781  001C                     ;ADC.c: 16:     switch (channel){
  1782                           	goto	l1094
  1783  001C  28B8               	line	17
  1784                           ;ADC.c: 17:         case 0:
  1785                           	
  1786                           l127:	
  1787  001D                     	line	18
  1788                           ;ADC.c: 18:             ADCON0bits.CHS0 = 0;
  1789                           	bcf	(31),2	;volatile
  1790  001D  111F               	line	19
  1791                           ;ADC.c: 19:             ADCON0bits.CHS1 = 0;
  1792                           	bcf	(31),3	;volatile
  1793  001E  119F               	line	20
  1794                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1795                           	bcf	(31),4	;volatile
  1796  001F  121F               	line	21
  1797                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
  1798                           	bcf	(31),5	;volatile
  1799  0020  129F               	line	22
  1800                           ;ADC.c: 22:             ANSELbits.ANS0 = 1;
  1801                           	bsf	status, 5	;RP0=1, select bank3
  1802  0021  1683               	bsf	status, 6	;RP1=1, select bank3
  1803  0022  1703               	bsf	(392)^0180h,0	;volatile
  1804  0023  1408               	line	23
  1805                           ;ADC.c: 23:             TRISAbits.TRISA0 = 1;
  1806                           	bsf	status, 5	;RP0=1, select bank1
  1807  0024  1683               	bcf	status, 6	;RP1=0, select bank1
  1808  0025  1303               	bsf	(133)^080h,0	;volatile
  1809  0026  1405               	line	24
  1810                           ;ADC.c: 24:             break;
  1811                           	goto	l142
  1812  0027  28EE               	line	25
  1813                           ;ADC.c: 25:         case 1:
  1814                           	
  1815                           l129:	
  1816  0028                     	line	26
  1817                           ;ADC.c: 26:             ADCON0bits.CHS0 = 1;
  1818                           	bsf	(31),2	;volatile
  1819  0028  151F               	line	27
  1820                           ;ADC.c: 27:             ADCON0bits.CHS1 = 0;
  1821                           	bcf	(31),3	;volatile
  1822  0029  119F               	line	28
  1823                           ;ADC.c: 28:             ADCON0bits.CHS2 = 0;
  1824                           	bcf	(31),4	;volatile
  1825  002A  121F               	line	29
  1826                           ;ADC.c: 29:             ADCON0bits.CHS3 = 0;
  1827                           	bcf	(31),5	;volatile
  1828  002B  129F               	line	30
  1829                           ;ADC.c: 30:             ANSELbits.ANS1 = 1;
  1830                           	bsf	status, 5	;RP0=1, select bank3
  1831  002C  1683               	bsf	status, 6	;RP1=1, select bank3
  1832  002D  1703               	bsf	(392)^0180h,1	;volatile
  1833  002E  1488               	line	31
  1834                           ;ADC.c: 31:             TRISAbits.TRISA1 = 1;
  1835                           	bsf	status, 5	;RP0=1, select bank1
  1836  002F  1683               	bcf	status, 6	;RP1=0, select bank1
  1837  0030  1303               	bsf	(133)^080h,1	;volatile
  1838  0031  1485               	line	32
  1839                           ;ADC.c: 32:             break;
  1840                           	goto	l142
  1841  0032  28EE               	line	33
  1842                           ;ADC.c: 33:         case 2:
  1843                           	
  1844                           l130:	
  1845  0033                     	line	34
  1846                           ;ADC.c: 34:             ADCON0bits.CHS0 = 0;
  1847                           	bcf	(31),2	;volatile
  1848  0033  111F               	line	35
  1849                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1850                           	bsf	(31),3	;volatile
  1851  0034  159F               	line	36
  1852                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
  1853                           	bcf	(31),4	;volatile
  1854  0035  121F               	line	37
  1855                           ;ADC.c: 37:             ADCON0bits.CHS3 = 0;
  1856                           	bcf	(31),5	;volatile
  1857  0036  129F               	line	38
  1858                           ;ADC.c: 38:             ANSELbits.ANS2 = 1;
  1859                           	bsf	status, 5	;RP0=1, select bank3
  1860  0037  1683               	bsf	status, 6	;RP1=1, select bank3
  1861  0038  1703               	bsf	(392)^0180h,2	;volatile
  1862  0039  1508               	line	39
  1863                           ;ADC.c: 39:             TRISAbits.TRISA2 = 1;
  1864                           	bsf	status, 5	;RP0=1, select bank1
  1865  003A  1683               	bcf	status, 6	;RP1=0, select bank1
  1866  003B  1303               	bsf	(133)^080h,2	;volatile
  1867  003C  1505               	line	40
  1868                           ;ADC.c: 40:             break;
  1869                           	goto	l142
  1870  003D  28EE               	line	41
  1871                           ;ADC.c: 41:         case 3:
  1872                           	
  1873                           l131:	
  1874  003E                     	line	42
  1875                           ;ADC.c: 42:             ADCON0bits.CHS0 = 1;
  1876                           	bsf	(31),2	;volatile
  1877  003E  151F               	line	43
  1878                           ;ADC.c: 43:             ADCON0bits.CHS1 = 1;
  1879                           	bsf	(31),3	;volatile
  1880  003F  159F               	line	44
  1881                           ;ADC.c: 44:             ADCON0bits.CHS2 = 0;
  1882                           	bcf	(31),4	;volatile
  1883  0040  121F               	line	45
  1884                           ;ADC.c: 45:             ADCON0bits.CHS3 = 0;
  1885                           	bcf	(31),5	;volatile
  1886  0041  129F               	line	46
  1887                           ;ADC.c: 46:             ANSELbits.ANS3 = 1;
  1888                           	bsf	status, 5	;RP0=1, select bank3
  1889  0042  1683               	bsf	status, 6	;RP1=1, select bank3
  1890  0043  1703               	bsf	(392)^0180h,3	;volatile
  1891  0044  1588               	line	47
  1892                           ;ADC.c: 47:             TRISAbits.TRISA3 = 1;
  1893                           	bsf	status, 5	;RP0=1, select bank1
  1894  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  1895  0046  1303               	bsf	(133)^080h,3	;volatile
  1896  0047  1585               	line	48
  1897                           ;ADC.c: 48:             break;
  1898                           	goto	l142
  1899  0048  28EE               	line	49
  1900                           ;ADC.c: 49:         case 4:
  1901                           	
  1902                           l132:	
  1903  0049                     	line	50
  1904                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
  1905                           	bcf	(31),2	;volatile
  1906  0049  111F               	line	51
  1907                           ;ADC.c: 51:             ADCON0bits.CHS1 = 0;
  1908                           	bcf	(31),3	;volatile
  1909  004A  119F               	line	52
  1910                           ;ADC.c: 52:             ADCON0bits.CHS2 = 1;
  1911                           	bsf	(31),4	;volatile
  1912  004B  161F               	line	53
  1913                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
  1914                           	bcf	(31),5	;volatile
  1915  004C  129F               	line	54
  1916                           ;ADC.c: 54:             ANSELbits.ANS4 = 1;
  1917                           	bsf	status, 5	;RP0=1, select bank3
  1918  004D  1683               	bsf	status, 6	;RP1=1, select bank3
  1919  004E  1703               	bsf	(392)^0180h,4	;volatile
  1920  004F  1608               	line	55
  1921                           ;ADC.c: 55:             TRISAbits.TRISA5 = 1;
  1922                           	bsf	status, 5	;RP0=1, select bank1
  1923  0050  1683               	bcf	status, 6	;RP1=0, select bank1
  1924  0051  1303               	bsf	(133)^080h,5	;volatile
  1925  0052  1685               	line	56
  1926                           ;ADC.c: 56:             break;
  1927                           	goto	l142
  1928  0053  28EE               	line	57
  1929                           ;ADC.c: 57:         case 5:
  1930                           	
  1931                           l133:	
  1932  0054                     	line	58
  1933                           ;ADC.c: 58:             ADCON0bits.CHS0 = 1;
  1934                           	bsf	(31),2	;volatile
  1935  0054  151F               	line	59
  1936                           ;ADC.c: 59:             ADCON0bits.CHS1 = 0;
  1937                           	bcf	(31),3	;volatile
  1938  0055  119F               	line	60
  1939                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
  1940                           	bsf	(31),4	;volatile
  1941  0056  161F               	line	61
  1942                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1943                           	bcf	(31),5	;volatile
  1944  0057  129F               	line	62
  1945                           ;ADC.c: 62:             ANSELbits.ANS5 = 1;
  1946                           	bsf	status, 5	;RP0=1, select bank3
  1947  0058  1683               	bsf	status, 6	;RP1=1, select bank3
  1948  0059  1703               	bsf	(392)^0180h,5	;volatile
  1949  005A  1688               	line	63
  1950                           ;ADC.c: 63:             TRISEbits.TRISE0 = 1;
  1951                           	bsf	status, 5	;RP0=1, select bank1
  1952  005B  1683               	bcf	status, 6	;RP1=0, select bank1
  1953  005C  1303               	bsf	(137)^080h,0	;volatile
  1954  005D  1409               	line	64
  1955                           ;ADC.c: 64:             break;
  1956                           	goto	l142
  1957  005E  28EE               	line	65
  1958                           ;ADC.c: 65:         case 6:
  1959                           	
  1960                           l134:	
  1961  005F                     	line	66
  1962                           ;ADC.c: 66:             ADCON0bits.CHS0 = 0;
  1963                           	bcf	(31),2	;volatile
  1964  005F  111F               	line	67
  1965                           ;ADC.c: 67:             ADCON0bits.CHS1 = 1;
  1966                           	bsf	(31),3	;volatile
  1967  0060  159F               	line	68
  1968                           ;ADC.c: 68:             ADCON0bits.CHS2 = 1;
  1969                           	bsf	(31),4	;volatile
  1970  0061  161F               	line	69
  1971                           ;ADC.c: 69:             ADCON0bits.CHS3 = 0;
  1972                           	bcf	(31),5	;volatile
  1973  0062  129F               	line	70
  1974                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;
  1975                           	bsf	status, 5	;RP0=1, select bank3
  1976  0063  1683               	bsf	status, 6	;RP1=1, select bank3
  1977  0064  1703               	bsf	(392)^0180h,6	;volatile
  1978  0065  1708               	line	71
  1979                           ;ADC.c: 71:             TRISEbits.TRISE1 = 1;
  1980                           	bsf	status, 5	;RP0=1, select bank1
  1981  0066  1683               	bcf	status, 6	;RP1=0, select bank1
  1982  0067  1303               	bsf	(137)^080h,1	;volatile
  1983  0068  1489               	line	72
  1984                           ;ADC.c: 72:             break;
  1985                           	goto	l142
  1986  0069  28EE               	line	73
  1987                           ;ADC.c: 73:         case 7:
  1988                           	
  1989                           l135:	
  1990  006A                     	line	74
  1991                           ;ADC.c: 74:             ADCON0bits.CHS0 = 1;
  1992                           	bsf	(31),2	;volatile
  1993  006A  151F               	line	75
  1994                           ;ADC.c: 75:             ADCON0bits.CHS1 = 1;
  1995                           	bsf	(31),3	;volatile
  1996  006B  159F               	line	76
  1997                           ;ADC.c: 76:             ADCON0bits.CHS2 = 1;
  1998                           	bsf	(31),4	;volatile
  1999  006C  161F               	line	77
  2000                           ;ADC.c: 77:             ADCON0bits.CHS3 = 0;
  2001                           	bcf	(31),5	;volatile
  2002  006D  129F               	line	78
  2003                           ;ADC.c: 78:             ANSELbits.ANS7 = 1;
  2004                           	bsf	status, 5	;RP0=1, select bank3
  2005  006E  1683               	bsf	status, 6	;RP1=1, select bank3
  2006  006F  1703               	bsf	(392)^0180h,7	;volatile
  2007  0070  1788               	line	79
  2008                           ;ADC.c: 79:             TRISEbits.TRISE2 = 1;
  2009                           	bsf	status, 5	;RP0=1, select bank1
  2010  0071  1683               	bcf	status, 6	;RP1=0, select bank1
  2011  0072  1303               	bsf	(137)^080h,2	;volatile
  2012  0073  1509               	line	80
  2013                           ;ADC.c: 80:             break;
  2014                           	goto	l142
  2015  0074  28EE               	line	81
  2016                           ;ADC.c: 81:         case 8:
  2017                           	
  2018                           l136:	
  2019  0075                     	line	82
  2020                           ;ADC.c: 82:             ADCON0bits.CHS0 = 0;
  2021                           	bcf	(31),2	;volatile
  2022  0075  111F               	line	83
  2023                           ;ADC.c: 83:             ADCON0bits.CHS1 = 0;
  2024                           	bcf	(31),3	;volatile
  2025  0076  119F               	line	84
  2026                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
  2027                           	bcf	(31),4	;volatile
  2028  0077  121F               	line	85
  2029                           ;ADC.c: 85:             ADCON0bits.CHS3 = 1;
  2030                           	bsf	(31),5	;volatile
  2031  0078  169F               	line	86
  2032                           ;ADC.c: 86:             ANSELHbits.ANS8 = 1;
  2033                           	bsf	status, 5	;RP0=1, select bank3
  2034  0079  1683               	bsf	status, 6	;RP1=1, select bank3
  2035  007A  1703               	bsf	(393)^0180h,0	;volatile
  2036  007B  1409               	line	87
  2037                           ;ADC.c: 87:             TRISBbits.TRISB2 = 1;
  2038                           	bsf	status, 5	;RP0=1, select bank1
  2039  007C  1683               	bcf	status, 6	;RP1=0, select bank1
  2040  007D  1303               	bsf	(134)^080h,2	;volatile
  2041  007E  1506               	line	88
  2042                           ;ADC.c: 88:             break;
  2043                           	goto	l142
  2044  007F  28EE               	line	89
  2045                           ;ADC.c: 89:         case 9:
  2046                           	
  2047                           l137:	
  2048  0080                     	line	90
  2049                           ;ADC.c: 90:             ADCON0bits.CHS0 = 1;
  2050                           	bsf	(31),2	;volatile
  2051  0080  151F               	line	91
  2052                           ;ADC.c: 91:             ADCON0bits.CHS1 = 0;
  2053                           	bcf	(31),3	;volatile
  2054  0081  119F               	line	92
  2055                           ;ADC.c: 92:             ADCON0bits.CHS2 = 0;
  2056                           	bcf	(31),4	;volatile
  2057  0082  121F               	line	93
  2058                           ;ADC.c: 93:             ADCON0bits.CHS3 = 1;
  2059                           	bsf	(31),5	;volatile
  2060  0083  169F               	line	94
  2061                           ;ADC.c: 94:             ANSELHbits.ANS9 = 1;
  2062                           	bsf	status, 5	;RP0=1, select bank3
  2063  0084  1683               	bsf	status, 6	;RP1=1, select bank3
  2064  0085  1703               	bsf	(393)^0180h,1	;volatile
  2065  0086  1489               	line	95
  2066                           ;ADC.c: 95:             TRISBbits.TRISB3 = 1;
  2067                           	bsf	status, 5	;RP0=1, select bank1
  2068  0087  1683               	bcf	status, 6	;RP1=0, select bank1
  2069  0088  1303               	bsf	(134)^080h,3	;volatile
  2070  0089  1586               	line	96
  2071                           ;ADC.c: 96:             break;
  2072                           	goto	l142
  2073  008A  28EE               	line	97
  2074                           ;ADC.c: 97:         case 10:
  2075                           	
  2076                           l138:	
  2077  008B                     	line	98
  2078                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  2079                           	bcf	(31),2	;volatile
  2080  008B  111F               	line	99
  2081                           ;ADC.c: 99:             ADCON0bits.CHS1 = 1;
  2082                           	bsf	(31),3	;volatile
  2083  008C  159F               	line	100
  2084                           ;ADC.c: 100:             ADCON0bits.CHS2 = 0;
  2085                           	bcf	(31),4	;volatile
  2086  008D  121F               	line	101
  2087                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  2088                           	bsf	(31),5	;volatile
  2089  008E  169F               	line	102
  2090                           ;ADC.c: 102:             ANSELHbits.ANS10 = 1;
  2091                           	bsf	status, 5	;RP0=1, select bank3
  2092  008F  1683               	bsf	status, 6	;RP1=1, select bank3
  2093  0090  1703               	bsf	(393)^0180h,2	;volatile
  2094  0091  1509               	line	103
  2095                           ;ADC.c: 103:             TRISBbits.TRISB1 = 1;
  2096                           	bsf	status, 5	;RP0=1, select bank1
  2097  0092  1683               	bcf	status, 6	;RP1=0, select bank1
  2098  0093  1303               	bsf	(134)^080h,1	;volatile
  2099  0094  1486               	line	104
  2100                           ;ADC.c: 104:             break;
  2101                           	goto	l142
  2102  0095  28EE               	line	105
  2103                           ;ADC.c: 105:         case 11:
  2104                           	
  2105                           l139:	
  2106  0096                     	line	106
  2107                           ;ADC.c: 106:             ADCON0bits.CHS0 = 1;
  2108                           	bsf	(31),2	;volatile
  2109  0096  151F               	line	107
  2110                           ;ADC.c: 107:             ADCON0bits.CHS1 = 1;
  2111                           	bsf	(31),3	;volatile
  2112  0097  159F               	line	108
  2113                           ;ADC.c: 108:             ADCON0bits.CHS2 = 0;
  2114                           	bcf	(31),4	;volatile
  2115  0098  121F               	line	109
  2116                           ;ADC.c: 109:             ADCON0bits.CHS3 = 1;
  2117                           	bsf	(31),5	;volatile
  2118  0099  169F               	line	110
  2119                           ;ADC.c: 110:             ANSELHbits.ANS11 = 1;
  2120                           	bsf	status, 5	;RP0=1, select bank3
  2121  009A  1683               	bsf	status, 6	;RP1=1, select bank3
  2122  009B  1703               	bsf	(393)^0180h,3	;volatile
  2123  009C  1589               	line	111
  2124                           ;ADC.c: 111:             TRISBbits.TRISB4 = 1;
  2125                           	bsf	status, 5	;RP0=1, select bank1
  2126  009D  1683               	bcf	status, 6	;RP1=0, select bank1
  2127  009E  1303               	bsf	(134)^080h,4	;volatile
  2128  009F  1606               	line	112
  2129                           ;ADC.c: 112:             break;
  2130                           	goto	l142
  2131  00A0  28EE               	line	113
  2132                           ;ADC.c: 113:         case 12:
  2133                           	
  2134                           l140:	
  2135  00A1                     	line	114
  2136                           ;ADC.c: 114:             ADCON0bits.CHS0 = 0;
  2137                           	bcf	(31),2	;volatile
  2138  00A1  111F               	line	115
  2139                           ;ADC.c: 115:             ADCON0bits.CHS1 = 0;
  2140                           	bcf	(31),3	;volatile
  2141  00A2  119F               	line	116
  2142                           ;ADC.c: 116:             ADCON0bits.CHS2 = 1;
  2143                           	bsf	(31),4	;volatile
  2144  00A3  161F               	line	117
  2145                           ;ADC.c: 117:             ADCON0bits.CHS3 = 1;
  2146                           	bsf	(31),5	;volatile
  2147  00A4  169F               	line	118
  2148                           ;ADC.c: 118:             ANSELHbits.ANS12 = 1;
  2149                           	bsf	status, 5	;RP0=1, select bank3
  2150  00A5  1683               	bsf	status, 6	;RP1=1, select bank3
  2151  00A6  1703               	bsf	(393)^0180h,4	;volatile
  2152  00A7  1609               	line	119
  2153                           ;ADC.c: 119:             TRISBbits.TRISB0 = 1;
  2154                           	bsf	status, 5	;RP0=1, select bank1
  2155  00A8  1683               	bcf	status, 6	;RP1=0, select bank1
  2156  00A9  1303               	bsf	(134)^080h,0	;volatile
  2157  00AA  1406               	line	120
  2158                           ;ADC.c: 120:             break;
  2159                           	goto	l142
  2160  00AB  28EE               	line	121
  2161                           ;ADC.c: 121:         case 13:
  2162                           	
  2163                           l141:	
  2164  00AC                     	line	122
  2165                           ;ADC.c: 122:             ADCON0bits.CHS0 = 1;
  2166                           	bsf	(31),2	;volatile
  2167  00AC  151F               	line	123
  2168                           ;ADC.c: 123:             ADCON0bits.CHS1 = 0;
  2169                           	bcf	(31),3	;volatile
  2170  00AD  119F               	line	124
  2171                           ;ADC.c: 124:             ADCON0bits.CHS2 = 1;
  2172                           	bsf	(31),4	;volatile
  2173  00AE  161F               	line	125
  2174                           ;ADC.c: 125:             ADCON0bits.CHS3 = 1;
  2175                           	bsf	(31),5	;volatile
  2176  00AF  169F               	line	126
  2177                           ;ADC.c: 126:             ANSELHbits.ANS13 = 1;
  2178                           	bsf	status, 5	;RP0=1, select bank3
  2179  00B0  1683               	bsf	status, 6	;RP1=1, select bank3
  2180  00B1  1703               	bsf	(393)^0180h,5	;volatile
  2181  00B2  1689               	line	127
  2182                           ;ADC.c: 127:             TRISBbits.TRISB5 = 1;
  2183                           	bsf	status, 5	;RP0=1, select bank1
  2184  00B3  1683               	bcf	status, 6	;RP1=0, select bank1
  2185  00B4  1303               	bsf	(134)^080h,5	;volatile
  2186  00B5  1686               	line	128
  2187                           ;ADC.c: 128:             break;
  2188                           	goto	l142
  2189  00B6  28EE               	line	129
  2190                           	
  2191                           l1092:	
  2192  00B7                     ;ADC.c: 129:     }
  2193                           	goto	l142
  2194  00B7  28EE               	
  2195                           l126:	
  2196  00B8                     	
  2197                           l1094:	
  2198  00B8                     	movf	(configCanal@channel),w
  2199  00B8  0879               	bcf	status, 5	;RP0=0, select bank0
  2200  00B9  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  00BA  1303               	movwf	(??_configCanal+0)+0
  2202  00BB  00A0               	clrf	(??_configCanal+0)+0+1
  2203  00BC  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2204                           ; Switch size 1, requested type "space"
  2205                           ; Number of cases is 1, Range of values is 0 to 0
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte            4     3 (average)
  2209                           ; direct_byte           11     8 (fixed)
  2210                           ; jumptable            260     6 (fixed)
  2211                           ;	Chosen strategy is simple_byte
  2212                           
  2213                           	movf 1+(??_configCanal+0)+0,w
  2214  00BD  0821               	opt asmopt_push
  2215                           	opt asmopt_off
  2216                           	xorlw	0^0	; case 0
  2217  00BE  3A00               	skipnz
  2218  00BF  1903               	goto	l1176
  2219  00C0  28C2               	goto	l142
  2220  00C1  28EE               	opt asmopt_pop
  2221                           	
  2222                           l1176:	
  2223  00C2                     ; Switch size 1, requested type "space"
  2224                           ; Number of cases is 14, Range of values is 0 to 13
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte           43    22 (average)
  2228                           ; direct_byte           50     8 (fixed)
  2229                           ; jumptable            260     6 (fixed)
  2230                           ;	Chosen strategy is simple_byte
  2231                           
  2232                           	movf 0+(??_configCanal+0)+0,w
  2233  00C2  0820               	opt asmopt_push
  2234                           	opt asmopt_off
  2235                           	xorlw	0^0	; case 0
  2236  00C3  3A00               	skipnz
  2237  00C4  1903               	goto	l127
  2238  00C5  281D               	xorlw	1^0	; case 1
  2239  00C6  3A01               	skipnz
  2240  00C7  1903               	goto	l129
  2241  00C8  2828               	xorlw	2^1	; case 2
  2242  00C9  3A03               	skipnz
  2243  00CA  1903               	goto	l130
  2244  00CB  2833               	xorlw	3^2	; case 3
  2245  00CC  3A01               	skipnz
  2246  00CD  1903               	goto	l131
  2247  00CE  283E               	xorlw	4^3	; case 4
  2248  00CF  3A07               	skipnz
  2249  00D0  1903               	goto	l132
  2250  00D1  2849               	xorlw	5^4	; case 5
  2251  00D2  3A01               	skipnz
  2252  00D3  1903               	goto	l133
  2253  00D4  2854               	xorlw	6^5	; case 6
  2254  00D5  3A03               	skipnz
  2255  00D6  1903               	goto	l134
  2256  00D7  285F               	xorlw	7^6	; case 7
  2257  00D8  3A01               	skipnz
  2258  00D9  1903               	goto	l135
  2259  00DA  286A               	xorlw	8^7	; case 8
  2260  00DB  3A0F               	skipnz
  2261  00DC  1903               	goto	l136
  2262  00DD  2875               	xorlw	9^8	; case 9
  2263  00DE  3A01               	skipnz
  2264  00DF  1903               	goto	l137
  2265  00E0  2880               	xorlw	10^9	; case 10
  2266  00E1  3A03               	skipnz
  2267  00E2  1903               	goto	l138
  2268  00E3  288B               	xorlw	11^10	; case 11
  2269  00E4  3A01               	skipnz
  2270  00E5  1903               	goto	l139
  2271  00E6  2896               	xorlw	12^11	; case 12
  2272  00E7  3A07               	skipnz
  2273  00E8  1903               	goto	l140
  2274  00E9  28A1               	xorlw	13^12	; case 13
  2275  00EA  3A01               	skipnz
  2276  00EB  1903               	goto	l141
  2277  00EC  28AC               	goto	l142
  2278  00ED  28EE               	opt asmopt_pop
  2279                           
  2280                           	
  2281                           l128:	
  2282  00EE                     	line	131
  2283                           ;ADC.c: 130:     return;
  2284                           	
  2285                           l142:	
  2286  00EE                     	return
  2287  00EE  0008               	opt stack 0
  2288                           GLOBAL	__end_of_configCanal
  2289                           	__end_of_configCanal:
  2290  00EF                     	signat	_configCanal,4217
  2291                           	global	_configADC
  2292                           
  2293 ;; *************** function _configADC *****************
  2294 ;; Defined at:
  2295 ;;		line 133 in file "ADC.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  FOSC            1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  FOSC            1    4[COMMON] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         1       0       0       0       0
  2311 ;;      Temps:          0       2       0       0       0
  2312 ;;      Totals:         1       2       0       0       0
  2313 ;;Total ram usage:        3 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    3
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2323                           	line	133
  2324                           global __ptext6
  2325                           __ptext6:	;psect for function _configADC
  2326  018A                     psect	text6
  2327                           	file	"ADC.c"
  2328                           	line	133
  2329                           	global	__size_of_configADC
  2330                           	__size_of_configADC	equ	__end_of_configADC-_configADC
  2331  0037                     	
  2332                           _configADC:	
  2333  018A                     ;incstack = 0
  2334                           	opt	stack 4
  2335                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  2336                           ;configADC@FOSC stored from wreg
  2337                           	movwf	(configADC@FOSC)
  2338  018A  00F9               	line	135
  2339                           	
  2340                           l1080:	
  2341  018B                     ;ADC.c: 135:     INTCONbits.PEIE=1;
  2342                           	bsf	(11),6	;volatile
  2343  018B  170B               	line	136
  2344                           ;ADC.c: 136:     PIE1bits.ADIE = 1;
  2345                           	bsf	status, 5	;RP0=1, select bank1
  2346  018C  1683               	bcf	status, 6	;RP1=0, select bank1
  2347  018D  1303               	bsf	(140)^080h,6	;volatile
  2348  018E  170C               	line	137
  2349                           ;ADC.c: 137:     PIR1bits.ADIF=0;
  2350                           	bcf	status, 5	;RP0=0, select bank0
  2351  018F  1283               	bcf	status, 6	;RP1=0, select bank0
  2352  0190  1303               	bcf	(12),6	;volatile
  2353  0191  130C               	line	138
  2354                           ;ADC.c: 138:     ADCON1bits.ADFM=0;
  2355                           	bsf	status, 5	;RP0=1, select bank1
  2356  0192  1683               	bcf	status, 6	;RP1=0, select bank1
  2357  0193  1303               	bcf	(159)^080h,7	;volatile
  2358  0194  139F               	line	139
  2359                           ;ADC.c: 139:     ADCON1bits.VCFG1=0;
  2360                           	bcf	(159)^080h,5	;volatile
  2361  0195  129F               	line	140
  2362                           ;ADC.c: 140:     ADCON1bits.VCFG0=0;
  2363                           	bcf	(159)^080h,4	;volatile
  2364  0196  121F               	line	141
  2365                           ;ADC.c: 141:     ADCON0bits.ADON=1;
  2366                           	bcf	status, 5	;RP0=0, select bank0
  2367  0197  1283               	bcf	status, 6	;RP1=0, select bank0
  2368  0198  1303               	bsf	(31),0	;volatile
  2369  0199  141F               	line	143
  2370                           ;ADC.c: 143:     switch (FOSC){
  2371                           	goto	l1084
  2372  019A  29A8               	line	144
  2373                           ;ADC.c: 144:         case 0:
  2374                           	
  2375                           l146:	
  2376  019B                     	line	145
  2377                           ;ADC.c: 145:             ADCON0bits.ADCS1=0;
  2378                           	bcf	(31),7	;volatile
  2379  019B  139F               	line	146
  2380                           ;ADC.c: 146:             ADCON0bits.ADCS0=0;
  2381                           	bcf	(31),6	;volatile
  2382  019C  131F               	line	147
  2383                           ;ADC.c: 147:             break;
  2384                           	goto	l147
  2385  019D  29BE               	line	148
  2386                           ;ADC.c: 148:         case 1:
  2387                           	
  2388                           l148:	
  2389  019E                     	line	149
  2390                           ;ADC.c: 149:             ADCON0bits.ADCS1=0;
  2391                           	bcf	(31),7	;volatile
  2392  019E  139F               	line	150
  2393                           ;ADC.c: 150:             ADCON0bits.ADCS0=1;
  2394                           	bsf	(31),6	;volatile
  2395  019F  171F               	line	151
  2396                           ;ADC.c: 151:             break;
  2397                           	goto	l147
  2398  01A0  29BE               	line	152
  2399                           ;ADC.c: 152:         case 2:
  2400                           	
  2401                           l149:	
  2402  01A1                     	line	153
  2403                           ;ADC.c: 153:             ADCON0bits.ADCS1=1;
  2404                           	bsf	(31),7	;volatile
  2405  01A1  179F               	line	154
  2406                           ;ADC.c: 154:             ADCON0bits.ADCS0=0;
  2407                           	bcf	(31),6	;volatile
  2408  01A2  131F               	line	155
  2409                           ;ADC.c: 155:             break;
  2410                           	goto	l147
  2411  01A3  29BE               	line	156
  2412                           ;ADC.c: 156:         case 3:
  2413                           	
  2414                           l150:	
  2415  01A4                     	line	157
  2416                           ;ADC.c: 157:             ADCON0bits.ADCS1=1;
  2417                           	bsf	(31),7	;volatile
  2418  01A4  179F               	line	158
  2419                           ;ADC.c: 158:             ADCON0bits.ADCS0=1;
  2420                           	bsf	(31),6	;volatile
  2421  01A5  171F               	line	159
  2422                           ;ADC.c: 159:             break;
  2423                           	goto	l147
  2424  01A6  29BE               	line	160
  2425                           	
  2426                           l1082:	
  2427  01A7                     ;ADC.c: 160:     }
  2428                           	goto	l147
  2429  01A7  29BE               	
  2430                           l145:	
  2431  01A8                     	
  2432                           l1084:	
  2433  01A8                     	movf	(configADC@FOSC),w
  2434  01A8  0879               	movwf	(??_configADC+0)+0
  2435  01A9  00A0               	clrf	(??_configADC+0)+0+1
  2436  01AA  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2437                           ; Switch size 1, requested type "space"
  2438                           ; Number of cases is 1, Range of values is 0 to 0
  2439                           ; switch strategies available:
  2440                           ; Name         Instructions Cycles
  2441                           ; simple_byte            4     3 (average)
  2442                           ; direct_byte           11     8 (fixed)
  2443                           ; jumptable            260     6 (fixed)
  2444                           ;	Chosen strategy is simple_byte
  2445                           
  2446                           	movf 1+(??_configADC+0)+0,w
  2447  01AB  0821               	opt asmopt_push
  2448                           	opt asmopt_off
  2449                           	xorlw	0^0	; case 0
  2450  01AC  3A00               	skipnz
  2451  01AD  1903               	goto	l1178
  2452  01AE  29B0               	goto	l147
  2453  01AF  29BE               	opt asmopt_pop
  2454                           	
  2455                           l1178:	
  2456  01B0                     ; Switch size 1, requested type "space"
  2457                           ; Number of cases is 4, Range of values is 0 to 3
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte           13     7 (average)
  2461                           ; direct_byte           20     8 (fixed)
  2462                           ; jumptable            260     6 (fixed)
  2463                           ;	Chosen strategy is simple_byte
  2464                           
  2465                           	movf 0+(??_configADC+0)+0,w
  2466  01B0  0820               	opt asmopt_push
  2467                           	opt asmopt_off
  2468                           	xorlw	0^0	; case 0
  2469  01B1  3A00               	skipnz
  2470  01B2  1903               	goto	l146
  2471  01B3  299B               	xorlw	1^0	; case 1
  2472  01B4  3A01               	skipnz
  2473  01B5  1903               	goto	l148
  2474  01B6  299E               	xorlw	2^1	; case 2
  2475  01B7  3A03               	skipnz
  2476  01B8  1903               	goto	l149
  2477  01B9  29A1               	xorlw	3^2	; case 3
  2478  01BA  3A01               	skipnz
  2479  01BB  1903               	goto	l150
  2480  01BC  29A4               	goto	l147
  2481  01BD  29BE               	opt asmopt_pop
  2482                           
  2483                           	
  2484                           l147:	
  2485  01BE                     	line	162
  2486                           ;ADC.c: 162:     ADCON0bits.GO_DONE=1;
  2487                           	bsf	(31),1	;volatile
  2488  01BE  149F               	line	163
  2489                           ;ADC.c: 163:     INTCONbits.GIE = 1;
  2490                           	bsf	(11),7	;volatile
  2491  01BF  178B               	line	165
  2492                           ;ADC.c: 164:     return;
  2493                           	
  2494                           l151:	
  2495  01C0                     	return
  2496  01C0  0008               	opt stack 0
  2497                           GLOBAL	__end_of_configADC
  2498                           	__end_of_configADC:
  2499  01C1                     	signat	_configADC,4217
  2500                           	global	_isr
  2501                           
  2502 ;; *************** function _isr *****************
  2503 ;; Defined at:
  2504 ;;		line 54 in file "mainS.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0
  2520 ;;      Temps:          3       0       0       0       0
  2521 ;;      Totals:         3       0       0       0       0
  2522 ;;Total ram usage:        3 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		_spiRead
  2527 ;;		_spiWrite
  2528 ;; This function is called by:
  2529 ;;		Interrupt level 1
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2533                           	file	"mainS.c"
  2534                           	line	54
  2535                           global __ptext7
  2536                           __ptext7:	;psect for function _isr
  2537  0150                     psect	text7
  2538                           	file	"mainS.c"
  2539                           	line	54
  2540                           	global	__size_of_isr
  2541                           	__size_of_isr	equ	__end_of_isr-_isr
  2542  003A                     	
  2543                           _isr:	
  2544  0150                     ;incstack = 0
  2545                           	opt	stack 3
  2546                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2547                           psect	intentry,class=CODE,delta=2
  2548                           global __pintentry
  2549                           __pintentry:
  2550  0004                     global interrupt_function
  2551                           interrupt_function:
  2552  0004                     	global saved_w
  2553                           	saved_w	set	btemp+0
  2554  007E                     	movwf	saved_w
  2555  0004  00FE               	swapf	status,w
  2556  0005  0E03               	movwf	(??_isr+1)
  2557  0006  00F7               	movf	pclath,w
  2558  0007  080A               	movwf	(??_isr+2)
  2559  0008  00F8               	ljmp	_isr
  2560  0009  120A  118A  2950   psect	text7
  2561                           	line	55
  2562                           	
  2563                           i1l838:	
  2564  0150                     ;mainS.c: 55:     if(ADCON0bits.GO_DONE == 0){
  2565                           	bcf	status, 5	;RP0=0, select bank0
  2566  0150  1283               	bcf	status, 6	;RP1=0, select bank0
  2567  0151  1303               	btfsc	(31),1	;volatile
  2568  0152  189F               	goto	u3_21
  2569  0153  2955               	goto	u3_20
  2570  0154  2956               u3_21:
  2571  0155                     	goto	i1l69
  2572  0155  2959               u3_20:
  2573  0156                     	line	56
  2574                           	
  2575                           i1l840:	
  2576  0156                     ;mainS.c: 56:         adc = 1;
  2577                           	clrf	(_adc)
  2578  0156  01F4               	incf	(_adc),f
  2579  0157  0AF4               	line	57
  2580                           ;mainS.c: 57:         PIR1bits.ADIF = 0;
  2581                           	bcf	(12),6	;volatile
  2582  0158  130C               	line	58
  2583                           ;mainS.c: 58:     }
  2584                           	
  2585                           i1l69:	
  2586  0159                     	line	60
  2587                           ;mainS.c: 60:     if(SSPIF == 1){
  2588                           	btfss	(99/8),(99)&7	;volatile
  2589  0159  1D8C               	goto	u4_21
  2590  015A  295C               	goto	u4_20
  2591  015B  295D               u4_21:
  2592  015C                     	goto	i1l74
  2593  015C  2983               u4_20:
  2594  015D                     	line	62
  2595                           	
  2596                           i1l842:	
  2597  015D                     ;mainS.c: 62:         dataIn = spiRead();
  2598                           	fcall	_spiRead
  2599  015D  120A  118A  2213  120A  118A  	movwf	(??_isr+0)+0
  2600  0162  00F6               	movf	(??_isr+0)+0,w
  2601  0163  0876               	movwf	(_dataIn)
  2602  0164  00F0               	line	63
  2603                           	
  2604                           i1l844:	
  2605  0165                     ;mainS.c: 63:         if(dataIn == 1){
  2606                           		decf	((_dataIn)),w
  2607  0165  0370               	btfss	status,2
  2608  0166  1D03               	goto	u5_21
  2609  0167  2969               	goto	u5_20
  2610  0168  296A               u5_21:
  2611  0169                     	goto	i1l848
  2612  0169  2971               u5_20:
  2613  016A                     	line	64
  2614                           	
  2615                           i1l846:	
  2616  016A                     ;mainS.c: 64:             spiWrite(sensor1);
  2617                           	movf	(_sensor1),w
  2618  016A  0873               	fcall	_spiWrite
  2619  016B  120A  118A  2227  120A  118A  	line	65
  2620                           ;mainS.c: 65:         }else if(dataIn == 2){
  2621                           	goto	i1l852
  2622  0170  297F               	
  2623                           i1l71:	
  2624  0171                     	
  2625                           i1l848:	
  2626  0171                     		movlw	2
  2627  0171  3002               	xorwf	((_dataIn)),w
  2628  0172  0670               	btfss	status,2
  2629  0173  1D03               	goto	u6_21
  2630  0174  2976               	goto	u6_20
  2631  0175  2977               u6_21:
  2632  0176                     	goto	i1l852
  2633  0176  297F               u6_20:
  2634  0177                     	line	66
  2635                           	
  2636                           i1l850:	
  2637  0177                     ;mainS.c: 66:             spiWrite(sensor2);
  2638                           	movf	(_sensor2),w
  2639  0177  0872               	fcall	_spiWrite
  2640  0178  120A  118A  2227  120A  118A  	goto	i1l852
  2641  017D  297F               	line	67
  2642                           ;mainS.c: 67:         }
  2643                           	
  2644                           i1l73:	
  2645  017E                     	goto	i1l852
  2646  017E  297F               	
  2647                           i1l72:	
  2648  017F                     	line	68
  2649                           	
  2650                           i1l852:	
  2651  017F                     ;mainS.c: 68:         SSPIF = 0;
  2652                           	bcf	status, 5	;RP0=0, select bank0
  2653  017F  1283               	bcf	status, 6	;RP1=0, select bank0
  2654  0180  1303               	bcf	(99/8),(99)&7	;volatile
  2655  0181  118C               	goto	i1l74
  2656  0182  2983               	line	69
  2657                           ;mainS.c: 69:     }
  2658                           	
  2659                           i1l70:	
  2660  0183                     	line	70
  2661                           	
  2662                           i1l74:	
  2663  0183                     	movf	(??_isr+2),w
  2664  0183  0878               	movwf	pclath
  2665  0184  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
  2666  0185  0E77               	movwf	status
  2667  0186  0083               	swapf	saved_w,f
  2668  0187  0EFE               	swapf	saved_w,w
  2669  0188  0E7E               	retfie
  2670  0189  0009               	opt stack 0
  2671                           GLOBAL	__end_of_isr
  2672                           	__end_of_isr:
  2673  018A                     	signat	_isr,89
  2674                           	global	_spiWrite
  2675                           
  2676 ;; *************** function _spiWrite *****************
  2677 ;; Defined at:
  2678 ;;		line 34 in file "SPI.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  dat             1    wreg     unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  dat             1    0[COMMON] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         1       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0
  2695 ;;      Totals:         1       0       0       0       0
  2696 ;;Total ram usage:        1 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_isr
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2705                           	file	"SPI.c"
  2706                           	line	34
  2707                           global __ptext8
  2708                           __ptext8:	;psect for function _spiWrite
  2709  0227                     psect	text8
  2710                           	file	"SPI.c"
  2711                           	line	34
  2712                           	global	__size_of_spiWrite
  2713                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  2714  0006                     	
  2715                           _spiWrite:	
  2716  0227                     ;incstack = 0
  2717                           	opt	stack 4
  2718                           ; Regs used in _spiWrite: [wreg]
  2719                           ;spiWrite@dat stored from wreg
  2720                           	movwf	(spiWrite@dat)
  2721  0227  00F5               	line	36
  2722                           	
  2723                           i1l780:	
  2724  0228                     ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2725                           	movf	(spiWrite@dat),w
  2726  0228  0875               	bcf	status, 5	;RP0=0, select bank0
  2727  0229  1283               	bcf	status, 6	;RP1=0, select bank0
  2728  022A  1303               	movwf	(19)	;volatile
  2729  022B  0093               	line	37
  2730                           	
  2731                           i1l179:	
  2732  022C                     	return
  2733  022C  0008               	opt stack 0
  2734                           GLOBAL	__end_of_spiWrite
  2735                           	__end_of_spiWrite:
  2736  022D                     	signat	_spiWrite,4217
  2737                           	global	_spiRead
  2738                           
  2739 ;; *************** function _spiRead *****************
  2740 ;; Defined at:
  2741 ;;		line 47 in file "SPI.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      unsigned char 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2755 ;;      Params:         0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    1
  2762 ;; This function calls:
  2763 ;;		_spiReceiveWait
  2764 ;; This function is called by:
  2765 ;;		_isr
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2769                           	line	47
  2770                           global __ptext9
  2771                           __ptext9:	;psect for function _spiRead
  2772  0213                     psect	text9
  2773                           	file	"SPI.c"
  2774                           	line	47
  2775                           	global	__size_of_spiRead
  2776                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  2777  000B                     	
  2778                           _spiRead:	
  2779  0213                     ;incstack = 0
  2780                           	opt	stack 3
  2781                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2782                           	line	49
  2783                           	
  2784                           i1l772:	
  2785  0213                     ;SPI.c: 49:     spiReceiveWait();
  2786                           	fcall	_spiReceiveWait
  2787  0213  120A  118A  221E  120A  118A  	line	50
  2788                           	
  2789                           i1l774:	
  2790  0218                     ;SPI.c: 50:     PORTAbits.RA7 = 1;
  2791                           	bcf	status, 5	;RP0=0, select bank0
  2792  0218  1283               	bcf	status, 6	;RP1=0, select bank0
  2793  0219  1303               	bsf	(5),7	;volatile
  2794  021A  1785               	line	51
  2795                           	
  2796                           i1l776:	
  2797  021B                     ;SPI.c: 51:     return(SSPBUF);
  2798                           	movf	(19),w	;volatile
  2799  021B  0813               	goto	i1l187
  2800  021C  2A1D               	
  2801                           i1l778:	
  2802  021D                     	line	52
  2803                           	
  2804                           i1l187:	
  2805  021D                     	return
  2806  021D  0008               	opt stack 0
  2807                           GLOBAL	__end_of_spiRead
  2808                           	__end_of_spiRead:
  2809  021E                     	signat	_spiRead,89
  2810                           	global	_spiReceiveWait
  2811                           
  2812 ;; *************** function _spiReceiveWait *****************
  2813 ;; Defined at:
  2814 ;;		line 29 in file "SPI.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		None
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_spiRead
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  2841                           	line	29
  2842                           global __ptext10
  2843                           __ptext10:	;psect for function _spiReceiveWait
  2844  021E                     psect	text10
  2845                           	file	"SPI.c"
  2846                           	line	29
  2847                           	global	__size_of_spiReceiveWait
  2848                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  2849  0009                     	
  2850                           _spiReceiveWait:	
  2851  021E                     ;incstack = 0
  2852                           	opt	stack 3
  2853                           ; Regs used in _spiReceiveWait: []
  2854                           	line	31
  2855                           	
  2856                           i1l770:	
  2857  021E                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2858                           	goto	i1l173
  2859  021E  2A1F               	
  2860                           i1l174:	
  2861  021F                     	
  2862                           i1l173:	
  2863  021F                     	bsf	status, 5	;RP0=1, select bank1
  2864  021F  1683               	bcf	status, 6	;RP1=0, select bank1
  2865  0220  1303               	btfss	(148)^080h,0	;volatile
  2866  0221  1C14               	goto	u2_21
  2867  0222  2A24               	goto	u2_20
  2868  0223  2A25               u2_21:
  2869  0224                     	goto	i1l173
  2870  0224  2A1F               u2_20:
  2871  0225                     	goto	i1l176
  2872  0225  2A26               	
  2873                           i1l175:	
  2874  0226                     	line	32
  2875                           	
  2876                           i1l176:	
  2877  0226                     	return
  2878  0226  0008               	opt stack 0
  2879                           GLOBAL	__end_of_spiReceiveWait
  2880                           	__end_of_spiReceiveWait:
  2881  0227                     	signat	_spiReceiveWait,89
  2882                           global	___latbits
  2883                           ___latbits	equ	2
  2884  0002                     	global	btemp
  2885                           	btemp set 07Eh
  2886  007E                     
  2887                           	DABS	1,126,2	;btemp
  2888                           	global	wtemp0
  2889                           	wtemp0 set btemp+0
  2890  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_configADC
    _main->_configCanal
    _main->_selCanal
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     522
                                              3 BANK0      1     1      0
                          _configADC
                        _configCanal
                            _readADC
                           _selCanal
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _selCanal                                             2     2      0      22
                                              4 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configCanal                                          3     3      0      22
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configCanal
   _readADC
   _selCanal
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       5       5        6.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Feb 14 13:02:08 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l80 013A  
                      l81 0127                        l82 0138                        l91 01E6  
                      l83 0141                        l84 0148                        l85 014B  
                      l86 014C                        l87 014D                        l79 0107  
                      l88 014D                       l120 0231                       l130 0033  
                     l131 003E                       l123 0212                       l140 00A1  
                     l132 0049                       l141 00AC                       l133 0054  
                     l150 01A4                       l126 00B8                       l134 005F  
                     l142 00EE                       l151 01C0                       l135 006A  
                     l127 001D                       l128 00EE                       l136 0075  
                     l145 01A8                       l137 0080                       l129 0028  
                     l146 019B                       l138 008B                       l170 0204  
                     l147 01BE                       l139 0096                       l148 019E  
                     l149 01A1                       l168 01F7                       l169 01FF  
                     l834 022D                       l836 0231                       u200 0145  
                     u201 0144                       u160 01EF                       u161 01EE  
                     u170 010C                       u171 010B                       u180 0116  
                     u181 0115                       u190 0140                       u191 013F  
            __CFG_CPD$OFF 0000                       _adc 0074                       _isr 0150  
            __CFG_LVP$OFF 0000                      l1100 0208                      l1102 0212  
                    l1110 0100                      l1120 011C                      l1112 0107  
                    l1104 00EF                      l1050 01FE                      l1042 01E8  
                    l1130 0140                      l1122 0127                      l1114 010C  
                    l1106 00F4                      l1044 01EF                      l1060 01CE  
                    l1052 01C1                      l1132 0145                      l1124 012D  
                    l1116 0112                      l1108 00FA                      l1046 01F5  
                    l1070 01D3                      l1062 01CF                      l1054 01C8  
                    l1134 0148                      l1126 0138                      l1118 0116  
                    l1080 018B                      l1048 01F7                      l1072 01D4  
                    l1064 01D0                      l1056 01CC                      l1128 013A  
                    l1082 01A7                      l1090 001C                      l1074 01D7  
                    l1066 01D1                      l1058 01CD                      l1084 01A8  
                    l1092 00B7                      l1076 01DA                      l1068 01D2  
                    l1094 00B8                      l1078 01DB                      l1176 00C2  
                    l1178 01B0                      ?_isr 0075                      i1l70 0183  
                    i1l71 0171                      i1l72 017F                      i1l73 017E  
                    i1l74 0183                      i1l69 0159                      u2_20 0225  
                    u2_21 0224                      u3_20 0156                      u3_21 0155  
                    u4_20 015D                      u4_21 015C                      u5_20 016A  
                    u5_21 0169                      u6_20 0177                      u6_21 0176  
            __CFG_WRT$OFF 0000                      _main 00EF                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0076  
                   ?_main 0075             __CFG_WDTE$OFF 0000                     i1l173 021F  
                   i1l174 021F                     i1l175 0226                     i1l176 0226  
                   i1l187 021D                     i1l179 022C                     i1l840 0156  
                   i1l770 021E                     i1l850 0177                     i1l842 015D  
                   i1l772 0213                     i1l780 0228                     i1l852 017F  
                   i1l844 0165                     i1l774 0218                     i1l846 016A  
                   i1l838 0150                     i1l776 021B                     i1l848 0171  
                   i1l778 021D                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000           __end_of_readADC 0232                     _setup 01C1  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 0205  
         __end_of_spiRead 021E                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0150  
                  ??_main 0023                    _ADRESH 001E                    ?_setup 0075  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000      __size_of_configCanal 00D4  
                  _dataIn 0070          __end_of_selCanal 0213                 ??_readADC 0079  
                  saved_w 007E          __end_of_spiWrite 022D                 ??_spiInit 0079  
               ??_spiRead 0075   __end_of__initialization 0017            __pcstackCOMMON 0075  
           __end_of_setup 01E7        __size_of_configADC 0037                   ??_setup 007A  
              __pbssBANK0 0024                __pmaintext 00EF                __pintentry 0004  
 __size_of_spiReceiveWait 0009                   _SSPSTAT 0094                 ?_selCanal 0075  
       __end_of_configADC 01C1                 ?_spiWrite 0075                 _ANSELbits 0188  
                 _contADC 0071                   __ptext1 01C1                   __ptext2 01E7  
                 __ptext3 0205                   __ptext4 022D                   __ptext5 001B  
                 __ptext6 018A                   __ptext7 0150                   __ptext8 0227  
                 __ptext9 0213                   _readADC 022D              __size_of_isr 003A  
                 _spiInit 01E7                   _spiRead 0213                   _sensor1 0073  
                 _sensor2 0072      end_of_initialization 0017                ??_selCanal 0079  
              ??_spiWrite 0075                 _PORTAbits 0005                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISEbits 0089  
             spiWrite@dat 0075             ??_configCanal 0020            _spiReceiveWait 021E  
     start_initialization 000F               __end_of_isr 018A           selCanal@channel 0020  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0227       __end_of_configCanal 00EF  
             __pbssCOMMON 0070                 ___latbits 0002             __pcstackBANK0 0020  
      configCanal@channel 0079         __size_of_selCanal 000E           ?_spiReceiveWait 0075  
               _configADC 018A         __size_of_spiWrite 0006                  ?_readADC 0075  
                ?_spiInit 0020                  ?_spiRead 0075            __size_of_setup 0026  
    spiInit@sTransmitEdge 0022         interrupt_function 0004               _configCanal 001B  
                _PIE1bits 008C        spiInit@sDataSample 0020                  _PIR1bits 000C  
              ?_configADC 0075                _ADCON0bits 001F                _ADCON1bits 009F  
                _adcValue 0024                _ANSELHbits 0189          __size_of_readADC 0005  
                __ptext10 021E          __size_of_spiInit 001E          __size_of_spiRead 000B  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0061                  _selCanal 0205  
                _spiWrite 0227              spiInit@sType 0079               ??_configADC 0020  
       spiInit@sClockIdle 0021                _INTCONbits 000B                  intlevel1 0000  
        ??_spiReceiveWait 0075             configADC@FOSC 0079              ?_configCanal 0075  
