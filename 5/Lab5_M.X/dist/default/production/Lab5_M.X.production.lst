

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Feb 21 20:21:00 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___fladd
   716                           	FNCALL	_main,___fldiv
   717                           	FNCALL	_main,___flmul
   718                           	FNCALL	_main,___flneg
   719                           	FNCALL	_main,___fltol
   720                           	FNCALL	_main,___xxtofl
   721                           	FNCALL	_main,_setCursorLCD
   722                           	FNCALL	_main,_setup
   723                           	FNCALL	_main,_writeFloat
   724                           	FNCALL	_main,_writeIntLCD
   725                           	FNCALL	_writeFloat,_setCursorLCD
   726                           	FNCALL	_writeFloat,_writeCharLCD
   727                           	FNCALL	_writeFloat,_writeIntLCD
   728                           	FNCALL	_writeIntLCD,_sprintf
   729                           	FNCALL	_writeIntLCD,_writeStrLCD
   730                           	FNCALL	_sprintf,___lwdiv
   731                           	FNCALL	_sprintf,___lwmod
   732                           	FNCALL	_setup,_I2C_Master_Init
   733                           	FNCALL	_setup,_clcLCD
   734                           	FNCALL	_setup,_initLCD
   735                           	FNCALL	_setup,_setCursorLCD
   736                           	FNCALL	_setup,_writeStrLCD
   737                           	FNCALL	_writeStrLCD,_writeCharLCD
   738                           	FNCALL	_setCursorLCD,_cmdLCD
   739                           	FNCALL	_initLCD,_cmdLCD
   740                           	FNCALL	_clcLCD,_cmdLCD
   741                           	FNCALL	_I2C_Master_Init,___lldiv
   742                           	FNCALL	___flmul,__Umul8_16
   743                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   744                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   745                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   746                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   747                           	FNROOT	_main
   748                           	global	_dpowers
   749                           psect	strings,class=STRING,delta=2,noexec
   750                           global __pstrings
   751                           __pstrings:
   752  0800                     stringtab:
   753  0800                     	global    __stringtab
   754                           __stringtab:
   755  0800                     ;	String table - string pointers are 1 byte each
   756                           	btfsc	(btemp+1),7
   757  0800  1BFF               	ljmp	stringcode
   758  0801  280A               	bcf	status,7
   759  0802  1383               	btfsc	(btemp+1),0
   760  0803  187F               	bsf	status,7
   761  0804  1783               	movf	indf,w
   762  0805  0800               	incf fsr
   763  0806  0A84               skipnz
   764  0807  1903               incf btemp+1
   765  0808  0AFF               	return
   766  0809  0008               stringcode:stringdir:
   767  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
   768  080A  3008               movwf pclath
   769  080B  008A               movf fsr,w
   770  080C  0804               incf fsr
   771  080D  0A84               	addwf pc
   772  080E  0782               	global __stringbase
   773                           __stringbase:
   774  080F                     	retlw	0
   775  080F  3400               psect	strings
   776                           	global    __end_of__stringtab
   777                           __end_of__stringtab:
   778  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   779                           	line	358
   780                           _dpowers:
   781  0810                     	retlw	01h
   782  0810  3401               	retlw	0
   783  0811  3400               
   784                           	retlw	0Ah
   785  0812  340A               	retlw	0
   786  0813  3400               
   787                           	retlw	064h
   788  0814  3464               	retlw	0
   789  0815  3400               
   790                           	retlw	0E8h
   791  0816  34E8               	retlw	03h
   792  0817  3403               
   793                           	retlw	010h
   794  0818  3410               	retlw	027h
   795  0819  3427               
   796                           	global __end_of_dpowers
   797                           __end_of_dpowers:
   798  081A                     	global	_dpowers
   799                           	global	_float1
   800                           	global	_sensorF1
   801                           	global	_counter
   802                           	global	_dec1
   803                           	global	_entero1
   804                           	global	_adc
   805                           	global	_cursor
   806                           	global	_SSPBUF
   807                           _SSPBUF	set	0x13
   808  0013                     	global	_SSPCON
   809                           _SSPCON	set	0x14
   810  0014                     	global	_PORTD
   811                           _PORTD	set	0x8
   812  0008                     	global	_PORTB
   813                           _PORTB	set	0x6
   814  0006                     	global	_RD1
   815                           _RD1	set	0x41
   816  0041                     	global	_RD0
   817                           _RD0	set	0x40
   818  0040                     	global	_SSPIF
   819                           _SSPIF	set	0x63
   820  0063                     	global	_PEIE
   821                           _PEIE	set	0x5E
   822  005E                     	global	_GIE
   823                           _GIE	set	0x5F
   824  005F                     	global	_SSPCON2bits
   825                           _SSPCON2bits	set	0x91
   826  0091                     	global	_TRISCbits
   827                           _TRISCbits	set	0x87
   828  0087                     	global	_SSPSTAT
   829                           _SSPSTAT	set	0x94
   830  0094                     	global	_SSPADD
   831                           _SSPADD	set	0x93
   832  0093                     	global	_SSPCON2
   833                           _SSPCON2	set	0x91
   834  0091                     	global	_TRISD
   835                           _TRISD	set	0x88
   836  0088                     	global	_TRISB
   837                           _TRISB	set	0x86
   838  0086                     	global	_SSPIE
   839                           _SSPIE	set	0x463
   840  0463                     	global	_TRISC4
   841                           _TRISC4	set	0x43C
   842  043C                     	global	_TRISC3
   843                           _TRISC3	set	0x43B
   844  043B                     	global	_ANSELH
   845                           _ANSELH	set	0x189
   846  0189                     	global	_ANSEL
   847                           _ANSEL	set	0x188
   848  0188                     	
   849                           STR_4:	
   850  081A                     	retlw	37	;'%'
   851  081A  3425               	retlw	100	;'d'
   852  081B  3464               	retlw	0
   853  081C  3400               psect	strings
   854                           	
   855                           STR_1:	
   856  081D                     	retlw	83	;'S'
   857  081D  3453               	retlw	49	;'1'
   858  081E  3431               	retlw	0
   859  081F  3400               psect	strings
   860                           	
   861                           STR_2:	
   862  0820                     	retlw	83	;'S'
   863  0820  3453               	retlw	50	;'2'
   864  0821  3432               	retlw	0
   865  0822  3400               psect	strings
   866                           	
   867                           STR_3:	
   868  0823                     	retlw	83	;'S'
   869  0823  3453               	retlw	51	;'3'
   870  0824  3433               	retlw	0
   871  0825  3400               psect	strings
   872                           ; #config settings
   873                           global __CFG_FOSC$INTRC_NOCLKOUT
   874                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   875  0000                     global __CFG_WDTE$OFF
   876                           __CFG_WDTE$OFF equ 0x0
   877  0000                     global __CFG_PWRTE$OFF
   878                           __CFG_PWRTE$OFF equ 0x0
   879  0000                     global __CFG_MCLRE$OFF
   880                           __CFG_MCLRE$OFF equ 0x0
   881  0000                     global __CFG_CP$OFF
   882                           __CFG_CP$OFF equ 0x0
   883  0000                     global __CFG_CPD$OFF
   884                           __CFG_CPD$OFF equ 0x0
   885  0000                     global __CFG_BOREN$OFF
   886                           __CFG_BOREN$OFF equ 0x0
   887  0000                     global __CFG_IESO$OFF
   888                           __CFG_IESO$OFF equ 0x0
   889  0000                     global __CFG_FCMEN$OFF
   890                           __CFG_FCMEN$OFF equ 0x0
   891  0000                     global __CFG_LVP$OFF
   892                           __CFG_LVP$OFF equ 0x0
   893  0000                     global __CFG_BOR4V$BOR40V
   894                           __CFG_BOR4V$BOR40V equ 0x0
   895  0000                     global __CFG_WRT$OFF
   896                           __CFG_WRT$OFF equ 0x0
   897  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s94."
   898                           	line	#
   899                           psect cinit,class=CODE,delta=2
   900                           global start_initialization
   901                           start_initialization:
   902  07ED                     
   903                           global __initialization
   904                           __initialization:
   905  07ED                     psect	bssBANK1,class=BANK1,space=1,noexec
   906                           global __pbssBANK1
   907                           __pbssBANK1:
   908  00A0                     _float1:
   909  00A0                            ds      4
   910  00A0                     
   911                           _sensorF1:
   912  00A4                            ds      4
   913  00A4                     
   914                           _counter:
   915  00A8                            ds      1
   916  00A8                     
   917                           _dec1:
   918  00A9                            ds      1
   919  00A9                     
   920                           _entero1:
   921  00AA                            ds      1
   922  00AA                     
   923                           _adc:
   924  00AB                            ds      1
   925  00AB                     
   926                           _cursor:
   927  00AC                            ds      1
   928  00AC                     
   929                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s94."
   930                           	line	#
   931                           ; Clear objects allocated to BANK1
   932                           psect cinit,class=CODE,delta=2,merge=1
   933                           	bsf	status, 5	;RP0=1, select bank1
   934  07ED  1683               	bcf	status, 6	;RP1=0, select bank1
   935  07EE  1303               	clrf	((__pbssBANK1)+0)&07Fh
   936  07EF  01A0               	clrf	((__pbssBANK1)+1)&07Fh
   937  07F0  01A1               	clrf	((__pbssBANK1)+2)&07Fh
   938  07F1  01A2               	clrf	((__pbssBANK1)+3)&07Fh
   939  07F2  01A3               	clrf	((__pbssBANK1)+4)&07Fh
   940  07F3  01A4               	clrf	((__pbssBANK1)+5)&07Fh
   941  07F4  01A5               	clrf	((__pbssBANK1)+6)&07Fh
   942  07F5  01A6               	clrf	((__pbssBANK1)+7)&07Fh
   943  07F6  01A7               	clrf	((__pbssBANK1)+8)&07Fh
   944  07F7  01A8               	clrf	((__pbssBANK1)+9)&07Fh
   945  07F8  01A9               	clrf	((__pbssBANK1)+10)&07Fh
   946  07F9  01AA               	clrf	((__pbssBANK1)+11)&07Fh
   947  07FA  01AB               	clrf	((__pbssBANK1)+12)&07Fh
   948  07FB  01AC               psect cinit,class=CODE,delta=2,merge=1
   949                           global end_of_initialization,__end_of__initialization
   950                           
   951                           ;End of C runtime variable initialization code
   952                           
   953                           end_of_initialization:
   954  07FC                     __end_of__initialization:
   955  07FC                     clrf status
   956  07FC  0183               ljmp _main	;jump to C main() function
   957  07FD  120A  118A  2838   psect	cstackBANK1,class=BANK1,space=1,noexec
   958                           global __pcstackBANK1
   959                           __pcstackBANK1:
   960  00AD                     ??_main:	; 1 bytes @ 0x0
   961  00AD                     	ds	4
   962  00AD                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   963                           global __pcstackCOMMON
   964                           __pcstackCOMMON:
   965  0070                     ?_setup:	; 1 bytes @ 0x0
   966  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
   967  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
   968  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
   969  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
   970  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
   971  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
   972  0070                     ?_initLCD:	; 1 bytes @ 0x0
   973  0070                     ?_clcLCD:	; 1 bytes @ 0x0
   974  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
   975  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
   976  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
   977  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
   978  0070                     ?_main:	; 1 bytes @ 0x0
   979  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
   980  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
   981  0070                     	global	?_I2C_Master_Read
   982                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
   983  0070                     	global	?__Umul8_16
   984                           ?__Umul8_16:	; 2 bytes @ 0x0
   985  0070                     	global	?___lwdiv
   986                           ?___lwdiv:	; 2 bytes @ 0x0
   987  0070                     	global	?___lldiv
   988                           ?___lldiv:	; 4 bytes @ 0x0
   989  0070                     	global	?___fltol
   990                           ?___fltol:	; 4 bytes @ 0x0
   991  0070                     	global	?___xxtofl
   992                           ?___xxtofl:	; 4 bytes @ 0x0
   993  0070                     	global	__Umul8_16@multiplicand
   994                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
   995  0070                     	global	I2C_Master_Write@d
   996                           I2C_Master_Write@d:	; 2 bytes @ 0x0
   997  0070                     	global	I2C_Master_Read@a
   998                           I2C_Master_Read@a:	; 2 bytes @ 0x0
   999  0070                     	global	___lwdiv@divisor
  1000                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1001  0070                     	global	___lldiv@divisor
  1002                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1003  0070                     	global	___fltol@f1
  1004                           ___fltol@f1:	; 4 bytes @ 0x0
  1005  0070                     	global	___xxtofl@val
  1006                           ___xxtofl@val:	; 4 bytes @ 0x0
  1007  0070                     	ds	1
  1008  0070                     	global	writeCharLCD@character
  1009                           writeCharLCD@character:	; 1 bytes @ 0x1
  1010  0071                     	ds	1
  1011  0071                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1012  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1013  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1014  0072                     ??__Umul8_16:	; 1 bytes @ 0x2
  1015  0072                     	global	cmdLCD@cmd
  1016                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1017  0072                     	global	writeStrLCD@string
  1018                           writeStrLCD@string:	; 2 bytes @ 0x2
  1019  0072                     	global	___lwdiv@dividend
  1020                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1021  0072                     	ds	1
  1022  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1023  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1024  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1025  0073                     	global	setCursorLCD@x
  1026                           setCursorLCD@x:	; 1 bytes @ 0x3
  1027  0073                     	ds	1
  1028  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1029  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1030  0074                     ??___fltol:	; 1 bytes @ 0x4
  1031  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1032  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1033  0074                     	global	I2C_Master_Read@temp
  1034                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1035  0074                     	global	__Umul8_16@product
  1036                           __Umul8_16@product:	; 2 bytes @ 0x4
  1037  0074                     	global	___lldiv@dividend
  1038                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1039  0074                     	ds	1
  1040  0074                     	global	setCursorLCD@y
  1041                           setCursorLCD@y:	; 1 bytes @ 0x5
  1042  0075                     	global	___lwdiv@quotient
  1043                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1044  0075                     	ds	1
  1045  0075                     	global	__Umul8_16@word_mpld
  1046                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1047  0076                     	ds	1
  1048  0076                     	global	___lwdiv@counter
  1049                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1050  0077                     	global	writeStrLCD@cont
  1051                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1052  0077                     	ds	1
  1053  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1054  0078                     	global	?___lwmod
  1055                           ?___lwmod:	; 2 bytes @ 0x8
  1056  0078                     	global	___xxtofl@sign
  1057                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1058  0078                     	global	__Umul8_16@multiplier
  1059                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1060  0078                     	global	___lwmod@divisor
  1061                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1062  0078                     	ds	1
  1063  0078                     	global	___fltol@sign1
  1064                           ___fltol@sign1:	; 1 bytes @ 0x9
  1065  0079                     	global	___xxtofl@exp
  1066                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1067  0079                     	global	___lldiv@quotient
  1068                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1069  0079                     	ds	1
  1070  0079                     	global	___fltol@exp1
  1071                           ___fltol@exp1:	; 1 bytes @ 0xA
  1072  007A                     	global	___lwmod@dividend
  1073                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1074  007A                     	global	___xxtofl@arg
  1075                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1076  007A                     	ds	2
  1077  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1078  007C                     	ds	1
  1079  007C                     	global	___lldiv@counter
  1080                           ___lldiv@counter:	; 1 bytes @ 0xD
  1081  007D                     	global	___lwmod@counter
  1082                           ___lwmod@counter:	; 1 bytes @ 0xD
  1083  007D                     	ds	1
  1084  007D                     ??___flneg:	; 1 bytes @ 0xE
  1085  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1086                           global __pcstackBANK0
  1087                           __pcstackBANK0:
  1088  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1089  0020                     	global	?_sprintf
  1090                           ?_sprintf:	; 2 bytes @ 0x0
  1091  0020                     	global	?___flneg
  1092                           ?___flneg:	; 4 bytes @ 0x0
  1093  0020                     	global	sprintf@f
  1094                           sprintf@f:	; 1 bytes @ 0x0
  1095  0020                     	global	I2C_Master_Init@c
  1096                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1097  0020                     	global	___flneg@f1
  1098                           ___flneg@f1:	; 4 bytes @ 0x0
  1099  0020                     	ds	3
  1100  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1101  0023                     	ds	1
  1102  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1103  0024                     	global	?___fladd
  1104                           ?___fladd:	; 4 bytes @ 0x4
  1105  0024                     	global	___fladd@b
  1106                           ___fladd@b:	; 4 bytes @ 0x4
  1107  0024                     	ds	2
  1108  0024                     	global	sprintf@ap
  1109                           sprintf@ap:	; 1 bytes @ 0x6
  1110  0026                     	ds	1
  1111  0026                     	global	sprintf@flag
  1112                           sprintf@flag:	; 1 bytes @ 0x7
  1113  0027                     	ds	1
  1114  0027                     ??_setup:	; 1 bytes @ 0x8
  1115  0028                     	global	sprintf@prec
  1116                           sprintf@prec:	; 1 bytes @ 0x8
  1117  0028                     	global	___fladd@a
  1118                           ___fladd@a:	; 4 bytes @ 0x8
  1119  0028                     	ds	1
  1120  0028                     	global	sprintf@val
  1121                           sprintf@val:	; 2 bytes @ 0x9
  1122  0029                     	ds	2
  1123  0029                     	global	sprintf@sp
  1124                           sprintf@sp:	; 1 bytes @ 0xB
  1125  002B                     	ds	1
  1126  002B                     ??___fladd:	; 1 bytes @ 0xC
  1127  002C                     	global	sprintf@c
  1128                           sprintf@c:	; 1 bytes @ 0xC
  1129  002C                     	ds	1
  1130  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1131  002D                     	ds	3
  1132  002D                     	global	writeIntLCD@buffer
  1133                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1134  0030                     	ds	4
  1135  0030                     	global	writeIntLCD@numero
  1136                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1137  0034                     	ds	1
  1138  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1139  0035                     	global	writeFloat@decimal
  1140                           writeFloat@decimal:	; 1 bytes @ 0x15
  1141  0035                     	ds	1
  1142  0035                     	global	writeFloat@initPos
  1143                           writeFloat@initPos:	; 1 bytes @ 0x16
  1144  0036                     	ds	1
  1145  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1146  0037                     	ds	1
  1147  0037                     	global	writeFloat@integer
  1148                           writeFloat@integer:	; 1 bytes @ 0x18
  1149  0038                     	global	___fladd@signs
  1150                           ___fladd@signs:	; 1 bytes @ 0x18
  1151  0038                     	ds	1
  1152  0038                     	global	___fladd@aexp
  1153                           ___fladd@aexp:	; 1 bytes @ 0x19
  1154  0039                     	ds	1
  1155  0039                     	global	___fladd@bexp
  1156                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1157  003A                     	ds	1
  1158  003A                     	global	___fladd@grs
  1159                           ___fladd@grs:	; 1 bytes @ 0x1B
  1160  003B                     	ds	1
  1161  003B                     	global	?___flmul
  1162                           ?___flmul:	; 4 bytes @ 0x1C
  1163  003C                     	global	___flmul@b
  1164                           ___flmul@b:	; 4 bytes @ 0x1C
  1165  003C                     	ds	4
  1166  003C                     	global	___flmul@a
  1167                           ___flmul@a:	; 4 bytes @ 0x20
  1168  0040                     	ds	4
  1169  0040                     ??___flmul:	; 1 bytes @ 0x24
  1170  0044                     	ds	5
  1171  0044                     	global	___flmul@sign
  1172                           ___flmul@sign:	; 1 bytes @ 0x29
  1173  0049                     	ds	1
  1174  0049                     	global	___flmul@grs
  1175                           ___flmul@grs:	; 4 bytes @ 0x2A
  1176  004A                     	ds	4
  1177  004A                     	global	___flmul@aexp
  1178                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1179  004E                     	ds	1
  1180  004E                     	global	___flmul@bexp
  1181                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1182  004F                     	ds	1
  1183  004F                     	global	___flmul@prod
  1184                           ___flmul@prod:	; 4 bytes @ 0x30
  1185  0050                     	ds	4
  1186  0050                     	global	___flmul@temp
  1187                           ___flmul@temp:	; 2 bytes @ 0x34
  1188  0054                     	ds	2
  1189  0054                     	global	?___fldiv
  1190                           ?___fldiv:	; 4 bytes @ 0x36
  1191  0056                     	global	___fldiv@a
  1192                           ___fldiv@a:	; 4 bytes @ 0x36
  1193  0056                     	ds	4
  1194  0056                     	global	___fldiv@b
  1195                           ___fldiv@b:	; 4 bytes @ 0x3A
  1196  005A                     	ds	4
  1197  005A                     ??___fldiv:	; 1 bytes @ 0x3E
  1198  005E                     	ds	5
  1199  005E                     	global	___fldiv@rem
  1200                           ___fldiv@rem:	; 4 bytes @ 0x43
  1201  0063                     	ds	4
  1202  0063                     	global	___fldiv@sign
  1203                           ___fldiv@sign:	; 1 bytes @ 0x47
  1204  0067                     	ds	1
  1205  0067                     	global	___fldiv@new_exp
  1206                           ___fldiv@new_exp:	; 2 bytes @ 0x48
  1207  0068                     	ds	2
  1208  0068                     	global	___fldiv@grs
  1209                           ___fldiv@grs:	; 4 bytes @ 0x4A
  1210  006A                     	ds	4
  1211  006A                     	global	___fldiv@bexp
  1212                           ___fldiv@bexp:	; 1 bytes @ 0x4E
  1213  006E                     	ds	1
  1214  006E                     	global	___fldiv@aexp
  1215                           ___fldiv@aexp:	; 1 bytes @ 0x4F
  1216  006F                     	ds	1
  1217  006F                     ;!
  1218                           ;!Data Sizes:
  1219                           ;!    Strings     12
  1220                           ;!    Constant    10
  1221                           ;!    Data        0
  1222                           ;!    BSS         13
  1223                           ;!    Persistent  0
  1224                           ;!    Stack       0
  1225                           ;!
  1226                           ;!Auto Spaces:
  1227                           ;!    Space          Size  Autos    Used
  1228                           ;!    COMMON           14     14      14
  1229                           ;!    BANK0            80     80      80
  1230                           ;!    BANK1            80      4      17
  1231                           ;!    BANK3            96      0       0
  1232                           ;!    BANK2            96      0       0
  1233                           
  1234                           ;!
  1235                           ;!Pointer List with Targets:
  1236                           ;!
  1237                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1238                           ;!		 -> STR_4(CODE[3]), 
  1239                           ;!
  1240                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
  1241                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1242                           ;!
  1243                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1244                           ;!		 -> ?_sprintf(BANK0[2]), 
  1245                           ;!
  1246                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
  1247                           ;!		 -> writeIntLCD@buffer(BANK0[4]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 
  1248                           ;!
  1249                           
  1250                           
  1251                           ;!
  1252                           ;!Critical Paths under _main in COMMON
  1253                           ;!
  1254                           ;!    _main->___xxtofl
  1255                           ;!    _sprintf->___lwmod
  1256                           ;!    ___lwmod->___lwdiv
  1257                           ;!    _writeStrLCD->_writeCharLCD
  1258                           ;!    _setCursorLCD->_cmdLCD
  1259                           ;!    _initLCD->_cmdLCD
  1260                           ;!    _clcLCD->_cmdLCD
  1261                           ;!    _I2C_Master_Init->___lldiv
  1262                           ;!    ___flneg->___xxtofl
  1263                           ;!    ___flmul->___xxtofl
  1264                           ;!    ___fldiv->___xxtofl
  1265                           ;!    ___fladd->___xxtofl
  1266                           ;!
  1267                           ;!Critical Paths under _main in BANK0
  1268                           ;!
  1269                           ;!    _main->___fldiv
  1270                           ;!    _writeFloat->_writeIntLCD
  1271                           ;!    _writeIntLCD->_sprintf
  1272                           ;!    _setup->_I2C_Master_Init
  1273                           ;!    ___flmul->___fladd
  1274                           ;!    ___fldiv->___flmul
  1275                           ;!    ___fladd->___flneg
  1276                           ;!
  1277                           ;!Critical Paths under _main in BANK1
  1278                           ;!
  1279                           ;!    None.
  1280                           ;!
  1281                           ;!Critical Paths under _main in BANK3
  1282                           ;!
  1283                           ;!    None.
  1284                           ;!
  1285                           ;!Critical Paths under _main in BANK2
  1286                           ;!
  1287                           ;!    None.
  1288                           
  1289 ;;
  1290 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1291 ;;
  1292                           
  1293                           ;!
  1294                           ;!Call Graph Tables:
  1295                           ;!
  1296                           ;! ---------------------------------------------------------------------------------
  1297                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1298                           ;! ---------------------------------------------------------------------------------
  1299                           ;! (0) _main                                                 4     4      0   14145
  1300                           ;!                                              0 BANK1      4     4      0
  1301                           ;!                    _I2C_Master_Read
  1302                           ;!                   _I2C_Master_Start
  1303                           ;!                    _I2C_Master_Stop
  1304                           ;!                   _I2C_Master_Write
  1305                           ;!                            ___fladd
  1306                           ;!                            ___fldiv
  1307                           ;!                            ___flmul
  1308                           ;!                            ___flneg
  1309                           ;!                            ___fltol
  1310                           ;!                           ___xxtofl
  1311                           ;!                       _setCursorLCD
  1312                           ;!                              _setup
  1313                           ;!                         _writeFloat
  1314                           ;!                        _writeIntLCD
  1315                           ;! ---------------------------------------------------------------------------------
  1316                           ;! (1) _writeFloat                                           4     2      2    2727
  1317                           ;!                                             21 BANK0      4     2      2
  1318                           ;!                       _setCursorLCD
  1319                           ;!                       _writeCharLCD
  1320                           ;!                        _writeIntLCD
  1321                           ;! ---------------------------------------------------------------------------------
  1322                           ;! (1) _writeIntLCD                                          8     8      0    1703
  1323                           ;!                                             13 BANK0      8     8      0
  1324                           ;!                            _sprintf
  1325                           ;!                        _writeStrLCD
  1326                           ;! ---------------------------------------------------------------------------------
  1327                           ;! (2) _sprintf                                             21    18      3    1211
  1328                           ;!                                              0 BANK0     13    10      3
  1329                           ;!                            ___lwdiv
  1330                           ;!                            ___lwmod
  1331                           ;! ---------------------------------------------------------------------------------
  1332                           ;! (3) ___lwmod                                              6     2      4     311
  1333                           ;!                                              8 COMMON     6     2      4
  1334                           ;!                            ___lwdiv (ARG)
  1335                           ;! ---------------------------------------------------------------------------------
  1336                           ;! (3) ___lwdiv                                              8     4      4     314
  1337                           ;!                                              0 COMMON     8     4      4
  1338                           ;! ---------------------------------------------------------------------------------
  1339                           ;! (1) _setup                                                1     1      0    1568
  1340                           ;!                                              8 BANK0      1     1      0
  1341                           ;!                    _I2C_Master_Init
  1342                           ;!                             _clcLCD
  1343                           ;!                            _initLCD
  1344                           ;!                       _setCursorLCD
  1345                           ;!                        _writeStrLCD
  1346                           ;! ---------------------------------------------------------------------------------
  1347                           ;! (2) _writeStrLCD                                          7     5      2     416
  1348                           ;!                                              2 COMMON     7     5      2
  1349                           ;!                       _writeCharLCD
  1350                           ;! ---------------------------------------------------------------------------------
  1351                           ;! (3) _writeCharLCD                                         2     2      0      22
  1352                           ;!                                              0 COMMON     2     2      0
  1353                           ;! ---------------------------------------------------------------------------------
  1354                           ;! (2) _setCursorLCD                                         3     2      1     696
  1355                           ;!                                              3 COMMON     3     2      1
  1356                           ;!                             _cmdLCD
  1357                           ;! ---------------------------------------------------------------------------------
  1358                           ;! (2) _initLCD                                              2     2      0      22
  1359                           ;!                                              3 COMMON     2     2      0
  1360                           ;!                             _cmdLCD
  1361                           ;! ---------------------------------------------------------------------------------
  1362                           ;! (2) _clcLCD                                               0     0      0      22
  1363                           ;!                             _cmdLCD
  1364                           ;! ---------------------------------------------------------------------------------
  1365                           ;! (3) _cmdLCD                                               3     3      0      22
  1366                           ;!                                              0 COMMON     3     3      0
  1367                           ;! ---------------------------------------------------------------------------------
  1368                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1369                           ;!                                              0 BANK0      8     4      4
  1370                           ;!                            ___lldiv
  1371                           ;! ---------------------------------------------------------------------------------
  1372                           ;! (3) ___lldiv                                             14     6      8     314
  1373                           ;!                                              0 COMMON    14     6      8
  1374                           ;! ---------------------------------------------------------------------------------
  1375                           ;! (1) ___xxtofl                                            14    10      4     474
  1376                           ;!                                              0 COMMON    14    10      4
  1377                           ;! ---------------------------------------------------------------------------------
  1378                           ;! (1) ___fltol                                             11     7      4     381
  1379                           ;!                                              0 COMMON    11     7      4
  1380                           ;! ---------------------------------------------------------------------------------
  1381                           ;! (1) ___flneg                                              4     0      4     121
  1382                           ;!                                              0 BANK0      4     0      4
  1383                           ;!                           ___xxtofl (ARG)
  1384                           ;! ---------------------------------------------------------------------------------
  1385                           ;! (1) ___flmul                                             26    18      8    2569
  1386                           ;!                                             28 BANK0     26    18      8
  1387                           ;!                          __Umul8_16
  1388                           ;!                            ___fladd (ARG)
  1389                           ;!                            ___flneg (ARG)
  1390                           ;!                           ___xxtofl (ARG)
  1391                           ;! ---------------------------------------------------------------------------------
  1392                           ;! (2) __Umul8_16                                            9     7      2     799
  1393                           ;!                                              0 COMMON     9     7      2
  1394                           ;! ---------------------------------------------------------------------------------
  1395                           ;! (1) ___fldiv                                             26    18      8    1273
  1396                           ;!                                             54 BANK0     26    18      8
  1397                           ;!                            ___flmul (ARG)
  1398                           ;!                           ___xxtofl (ARG)
  1399                           ;! ---------------------------------------------------------------------------------
  1400                           ;! (1) ___fladd                                             24    16      8    2262
  1401                           ;!                                              4 BANK0     24    16      8
  1402                           ;!                            ___flneg (ARG)
  1403                           ;!                           ___xxtofl (ARG)
  1404                           ;! ---------------------------------------------------------------------------------
  1405                           ;! (1) _I2C_Master_Write                                     2     0      2     174
  1406                           ;!                                              0 COMMON     2     0      2
  1407                           ;!                    _I2C_Master_Wait
  1408                           ;! ---------------------------------------------------------------------------------
  1409                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1410                           ;!                    _I2C_Master_Wait
  1411                           ;! ---------------------------------------------------------------------------------
  1412                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1413                           ;!                    _I2C_Master_Wait
  1414                           ;! ---------------------------------------------------------------------------------
  1415                           ;! (1) _I2C_Master_Read                                      6     4      2     197
  1416                           ;!                                              0 COMMON     6     4      2
  1417                           ;!                    _I2C_Master_Wait
  1418                           ;! ---------------------------------------------------------------------------------
  1419                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1420                           ;! ---------------------------------------------------------------------------------
  1421                           ;! Estimated maximum stack depth 3
  1422                           ;! ---------------------------------------------------------------------------------
  1423                           ;!
  1424                           ;! Call Graph Graphs:
  1425                           ;!
  1426                           ;! _main (ROOT)
  1427                           ;!   _I2C_Master_Read
  1428                           ;!     _I2C_Master_Wait
  1429                           ;!   _I2C_Master_Start
  1430                           ;!     _I2C_Master_Wait
  1431                           ;!   _I2C_Master_Stop
  1432                           ;!     _I2C_Master_Wait
  1433                           ;!   _I2C_Master_Write
  1434                           ;!     _I2C_Master_Wait
  1435                           ;!   ___fladd
  1436                           ;!     ___flneg (ARG)
  1437                           ;!       ___xxtofl (ARG)
  1438                           ;!     ___xxtofl (ARG)
  1439                           ;!   ___fldiv
  1440                           ;!     ___flmul (ARG)
  1441                           ;!       __Umul8_16
  1442                           ;!       ___fladd (ARG)
  1443                           ;!         ___flneg (ARG)
  1444                           ;!           ___xxtofl (ARG)
  1445                           ;!         ___xxtofl (ARG)
  1446                           ;!       ___flneg (ARG)
  1447                           ;!         ___xxtofl (ARG)
  1448                           ;!       ___xxtofl (ARG)
  1449                           ;!     ___xxtofl (ARG)
  1450                           ;!   ___flmul
  1451                           ;!     __Umul8_16
  1452                           ;!     ___fladd (ARG)
  1453                           ;!       ___flneg (ARG)
  1454                           ;!         ___xxtofl (ARG)
  1455                           ;!       ___xxtofl (ARG)
  1456                           ;!     ___flneg (ARG)
  1457                           ;!       ___xxtofl (ARG)
  1458                           ;!     ___xxtofl (ARG)
  1459                           ;!   ___flneg
  1460                           ;!     ___xxtofl (ARG)
  1461                           ;!   ___fltol
  1462                           ;!   ___xxtofl
  1463                           ;!   _setCursorLCD
  1464                           ;!     _cmdLCD
  1465                           ;!   _setup
  1466                           ;!     _I2C_Master_Init
  1467                           ;!       ___lldiv
  1468                           ;!     _clcLCD
  1469                           ;!       _cmdLCD
  1470                           ;!     _initLCD
  1471                           ;!       _cmdLCD
  1472                           ;!     _setCursorLCD
  1473                           ;!       _cmdLCD
  1474                           ;!     _writeStrLCD
  1475                           ;!       _writeCharLCD
  1476                           ;!   _writeFloat
  1477                           ;!     _setCursorLCD
  1478                           ;!       _cmdLCD
  1479                           ;!     _writeCharLCD
  1480                           ;!     _writeIntLCD
  1481                           ;!       _sprintf
  1482                           ;!         ___lwdiv
  1483                           ;!         ___lwmod
  1484                           ;!           ___lwdiv (ARG)
  1485                           ;!       _writeStrLCD
  1486                           ;!         _writeCharLCD
  1487                           ;!   _writeIntLCD
  1488                           ;!     _sprintf
  1489                           ;!       ___lwdiv
  1490                           ;!       ___lwmod
  1491                           ;!         ___lwdiv (ARG)
  1492                           ;!     _writeStrLCD
  1493                           ;!       _writeCharLCD
  1494                           ;!
  1495                           
  1496                           ;! Address spaces:
  1497                           
  1498                           ;!Name               Size   Autos  Total    Cost      Usage
  1499                           ;!BITCOMMON            E      0       0       0        0.0%
  1500                           ;!EEDATA             100      0       0       0        0.0%
  1501                           ;!NULL                 0      0       0       0        0.0%
  1502                           ;!CODE                 0      0       0       0        0.0%
  1503                           ;!COMMON               E      E       E       1      100.0%
  1504                           ;!BITSFR0              0      0       0       1        0.0%
  1505                           ;!SFR0                 0      0       0       1        0.0%
  1506                           ;!BITSFR1              0      0       0       2        0.0%
  1507                           ;!SFR1                 0      0       0       2        0.0%
  1508                           ;!STACK                0      0       0       2        0.0%
  1509                           ;!ABS                  0      0      6F       3        0.0%
  1510                           ;!BITBANK0            50      0       0       4        0.0%
  1511                           ;!BITSFR3              0      0       0       4        0.0%
  1512                           ;!SFR3                 0      0       0       4        0.0%
  1513                           ;!BANK0               50     50      50       5      100.0%
  1514                           ;!BITSFR2              0      0       0       5        0.0%
  1515                           ;!SFR2                 0      0       0       5        0.0%
  1516                           ;!BITBANK1            50      0       0       6        0.0%
  1517                           ;!BANK1               50      4      11       7       21.3%
  1518                           ;!BITBANK3            60      0       0       8        0.0%
  1519                           ;!BANK3               60      0       0       9        0.0%
  1520                           ;!BITBANK2            60      0       0      10        0.0%
  1521                           ;!BANK2               60      0       0      11        0.0%
  1522                           ;!DATA                 0      0      6F      12        0.0%
  1523                           
  1524                           	global	_main
  1525                           
  1526 ;; *************** function _main *****************
  1527 ;; Defined at:
  1528 ;;		line 55 in file "mainM.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : B00/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          0       0       4       0       0
  1545 ;;      Totals:         0       0       4       0       0
  1546 ;;Total ram usage:        4 bytes
  1547 ;; Hardware stack levels required when called:    4
  1548 ;; This function calls:
  1549 ;;		_I2C_Master_Read
  1550 ;;		_I2C_Master_Start
  1551 ;;		_I2C_Master_Stop
  1552 ;;		_I2C_Master_Write
  1553 ;;		___fladd
  1554 ;;		___fldiv
  1555 ;;		___flmul
  1556 ;;		___flneg
  1557 ;;		___fltol
  1558 ;;		___xxtofl
  1559 ;;		_setCursorLCD
  1560 ;;		_setup
  1561 ;;		_writeFloat
  1562 ;;		_writeIntLCD
  1563 ;; This function is called by:
  1564 ;;		Startup code after reset
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1568                           	file	"mainM.c"
  1569                           	line	55
  1570                           global __pmaintext
  1571                           __pmaintext:	;psect for function _main
  1572  0038                     psect	maintext
  1573                           	file	"mainM.c"
  1574                           	line	55
  1575                           	global	__size_of_main
  1576                           	__size_of_main	equ	__end_of_main-_main
  1577  0184                     	
  1578                           _main:	
  1579  0038                     ;incstack = 0
  1580                           	opt	stack 4
  1581                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1582                           	line	56
  1583                           	
  1584                           l2537:	
  1585  0038                     ;mainM.c: 56:     setup();
  1586                           	fcall	_setup
  1587  0038  120A  158A  226F  120A  118A  	goto	l2539
  1588  003D  283E               	line	57
  1589                           ;mainM.c: 57:     while(1){
  1590                           	
  1591                           l57:	
  1592  003E                     	line	58
  1593                           	
  1594                           l2539:	
  1595  003E                     ;mainM.c: 58:         I2C_Master_Start();
  1596                           	fcall	_I2C_Master_Start
  1597  003E  120A  158A  206B  120A  118A  	line	59
  1598                           	
  1599                           l2541:	
  1600  0043                     ;mainM.c: 59:         I2C_Master_Write(0x51);
  1601                           	movlw	051h
  1602  0043  3051               	movwf	(I2C_Master_Write@d)
  1603  0044  00F0               	movlw	0
  1604  0045  3000               	movwf	((I2C_Master_Write@d))+1
  1605  0046  00F1               	fcall	_I2C_Master_Write
  1606  0047  120A  158A  207D  120A  118A  	line	60
  1607                           	
  1608                           l2543:	
  1609  004C                     ;mainM.c: 60:         adc = I2C_Master_Read(0);
  1610                           	movlw	0
  1611  004C  3000               	movwf	(I2C_Master_Read@a)
  1612  004D  00F0               	movwf	(I2C_Master_Read@a+1)
  1613  004E  00F1               	fcall	_I2C_Master_Read
  1614  004F  120A  118A  2009  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1615  0054  0870               	bsf	status, 5	;RP0=1, select bank1
  1616  0055  1683               	bcf	status, 6	;RP1=0, select bank1
  1617  0056  1303               	movwf	(??_main+0)^080h+0
  1618  0057  00AD               	movf	(??_main+0)^080h+0,w
  1619  0058  082D               	movwf	(_adc)^080h
  1620  0059  00AB               	line	61
  1621                           	
  1622                           l2545:	
  1623  005A                     ;mainM.c: 61:         I2C_Master_Stop();
  1624                           	fcall	_I2C_Master_Stop
  1625  005A  120A  158A  2074  120A  118A  	line	62
  1626                           	
  1627                           l2547:	
  1628  005F                     ;mainM.c: 62:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1629                           	opt asmopt_push
  1630                           opt asmopt_off
  1631                           movlw	13
  1632  005F  300D               	bsf	status, 5	;RP0=1, select bank1
  1633  0060  1683               	bcf	status, 6	;RP1=0, select bank1
  1634  0061  1303               movwf	((??_main+0)^080h+0+1),f
  1635  0062  00AE               	movlw	251
  1636  0063  30FB               movwf	((??_main+0)^080h+0),f
  1637  0064  00AD               	u3557:
  1638  0065                     decfsz	((??_main+0)^080h+0),f
  1639  0065  0BAD               	goto	u3557
  1640  0066  2865               	decfsz	((??_main+0)^080h+0+1),f
  1641  0067  0BAE               	goto	u3557
  1642  0068  2865               opt asmopt_pop
  1643                           
  1644                           	line	64
  1645                           	
  1646                           l2549:	
  1647  0069                     ;mainM.c: 64:         I2C_Master_Start();
  1648                           	fcall	_I2C_Master_Start
  1649  0069  120A  158A  206B  120A  118A  	line	65
  1650                           	
  1651                           l2551:	
  1652  006E                     ;mainM.c: 65:         I2C_Master_Write(0x61);
  1653                           	movlw	061h
  1654  006E  3061               	movwf	(I2C_Master_Write@d)
  1655  006F  00F0               	movlw	0
  1656  0070  3000               	movwf	((I2C_Master_Write@d))+1
  1657  0071  00F1               	fcall	_I2C_Master_Write
  1658  0072  120A  158A  207D  120A  118A  	line	66
  1659                           	
  1660                           l2553:	
  1661  0077                     ;mainM.c: 66:         counter = I2C_Master_Read(0);
  1662                           	movlw	0
  1663  0077  3000               	movwf	(I2C_Master_Read@a)
  1664  0078  00F0               	movwf	(I2C_Master_Read@a+1)
  1665  0079  00F1               	fcall	_I2C_Master_Read
  1666  007A  120A  118A  2009  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1667  007F  0870               	bsf	status, 5	;RP0=1, select bank1
  1668  0080  1683               	bcf	status, 6	;RP1=0, select bank1
  1669  0081  1303               	movwf	(??_main+0)^080h+0
  1670  0082  00AD               	movf	(??_main+0)^080h+0,w
  1671  0083  082D               	movwf	(_counter)^080h
  1672  0084  00A8               	line	67
  1673                           	
  1674                           l2555:	
  1675  0085                     ;mainM.c: 67:         I2C_Master_Stop();
  1676                           	fcall	_I2C_Master_Stop
  1677  0085  120A  158A  2074  120A  118A  	line	68
  1678                           	
  1679                           l2557:	
  1680  008A                     ;mainM.c: 68:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1681                           	opt asmopt_push
  1682                           opt asmopt_off
  1683                           movlw	13
  1684  008A  300D               	bsf	status, 5	;RP0=1, select bank1
  1685  008B  1683               	bcf	status, 6	;RP1=0, select bank1
  1686  008C  1303               movwf	((??_main+0)^080h+0+1),f
  1687  008D  00AE               	movlw	251
  1688  008E  30FB               movwf	((??_main+0)^080h+0),f
  1689  008F  00AD               	u3567:
  1690  0090                     decfsz	((??_main+0)^080h+0),f
  1691  0090  0BAD               	goto	u3567
  1692  0091  2890               	decfsz	((??_main+0)^080h+0+1),f
  1693  0092  0BAE               	goto	u3567
  1694  0093  2890               opt asmopt_pop
  1695                           
  1696                           	line	71
  1697                           	
  1698                           l2559:	
  1699  0094                     ;mainM.c: 71:         sensorF1 = (float) adc * 5/255;
  1700                           	movlw	0x43
  1701  0094  3043               	bcf	status, 5	;RP0=0, select bank0
  1702  0095  1283               	bcf	status, 6	;RP1=0, select bank0
  1703  0096  1303               	movwf	(___fldiv@a+3)
  1704  0097  00D9               	movlw	0x7f
  1705  0098  307F               	movwf	(___fldiv@a+2)
  1706  0099  00D8               	movlw	0x0
  1707  009A  3000               	movwf	(___fldiv@a+1)
  1708  009B  00D7               	movlw	0x0
  1709  009C  3000               	movwf	(___fldiv@a)
  1710  009D  00D6               
  1711                           	movlw	0x40
  1712  009E  3040               	movwf	(___flmul@b+3)
  1713  009F  00BF               	movlw	0xa0
  1714  00A0  30A0               	movwf	(___flmul@b+2)
  1715  00A1  00BE               	movlw	0x0
  1716  00A2  3000               	movwf	(___flmul@b+1)
  1717  00A3  00BD               	movlw	0x0
  1718  00A4  3000               	movwf	(___flmul@b)
  1719  00A5  00BC               
  1720                           	bsf	status, 5	;RP0=1, select bank1
  1721  00A6  1683               	bcf	status, 6	;RP1=0, select bank1
  1722  00A7  1303               	movf	(_adc)^080h,w
  1723  00A8  082B               	movwf	(??_main+0)^080h+0
  1724  00A9  00AD               	clrf	(??_main+0)^080h+0+1
  1725  00AA  01AE               	clrf	(??_main+0)^080h+0+2
  1726  00AB  01AF               	clrf	(??_main+0)^080h+0+3
  1727  00AC  01B0               	movf	3+(??_main+0)^080h+0,w
  1728  00AD  0830               	movwf	(___xxtofl@val+3)
  1729  00AE  00F3               	movf	2+(??_main+0)^080h+0,w
  1730  00AF  082F               	movwf	(___xxtofl@val+2)
  1731  00B0  00F2               	movf	1+(??_main+0)^080h+0,w
  1732  00B1  082E               	movwf	(___xxtofl@val+1)
  1733  00B2  00F1               	movf	0+(??_main+0)^080h+0,w
  1734  00B3  082D               	movwf	(___xxtofl@val)
  1735  00B4  00F0               
  1736                           	movlw	low(0)
  1737  00B5  3000               	fcall	___xxtofl
  1738  00B6  120A  158A  2435  120A  118A  	movf	(3+(?___xxtofl)),w
  1739  00BB  0873               	bcf	status, 5	;RP0=0, select bank0
  1740  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
  1741  00BD  1303               	movwf	(___flmul@a+3)
  1742  00BE  00C3               	movf	(2+(?___xxtofl)),w
  1743  00BF  0872               	movwf	(___flmul@a+2)
  1744  00C0  00C2               	movf	(1+(?___xxtofl)),w
  1745  00C1  0871               	movwf	(___flmul@a+1)
  1746  00C2  00C1               	movf	(0+(?___xxtofl)),w
  1747  00C3  0870               	movwf	(___flmul@a)
  1748  00C4  00C0               
  1749                           	fcall	___flmul
  1750  00C5  120A  118A  2478  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1751  00CA  1283               	bcf	status, 6	;RP1=0, select bank0
  1752  00CB  1303               	movf	(3+(?___flmul)),w
  1753  00CC  083F               	movwf	(___fldiv@b+3)
  1754  00CD  00DD               	movf	(2+(?___flmul)),w
  1755  00CE  083E               	movwf	(___fldiv@b+2)
  1756  00CF  00DC               	movf	(1+(?___flmul)),w
  1757  00D0  083D               	movwf	(___fldiv@b+1)
  1758  00D1  00DB               	movf	(0+(?___flmul)),w
  1759  00D2  083C               	movwf	(___fldiv@b)
  1760  00D3  00DA               
  1761                           	fcall	___fldiv
  1762  00D4  120A  158A  25F7  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1763  00D9  1283               	bcf	status, 6	;RP1=0, select bank0
  1764  00DA  1303               	movf	(3+(?___fldiv)),w
  1765  00DB  0859               	bsf	status, 5	;RP0=1, select bank1
  1766  00DC  1683               	bcf	status, 6	;RP1=0, select bank1
  1767  00DD  1303               	movwf	(_sensorF1+3)^080h
  1768  00DE  00A7               	bcf	status, 5	;RP0=0, select bank0
  1769  00DF  1283               	bcf	status, 6	;RP1=0, select bank0
  1770  00E0  1303               	movf	(2+(?___fldiv)),w
  1771  00E1  0858               	bsf	status, 5	;RP0=1, select bank1
  1772  00E2  1683               	bcf	status, 6	;RP1=0, select bank1
  1773  00E3  1303               	movwf	(_sensorF1+2)^080h
  1774  00E4  00A6               	bcf	status, 5	;RP0=0, select bank0
  1775  00E5  1283               	bcf	status, 6	;RP1=0, select bank0
  1776  00E6  1303               	movf	(1+(?___fldiv)),w
  1777  00E7  0857               	bsf	status, 5	;RP0=1, select bank1
  1778  00E8  1683               	bcf	status, 6	;RP1=0, select bank1
  1779  00E9  1303               	movwf	(_sensorF1+1)^080h
  1780  00EA  00A5               	bcf	status, 5	;RP0=0, select bank0
  1781  00EB  1283               	bcf	status, 6	;RP1=0, select bank0
  1782  00EC  1303               	movf	(0+(?___fldiv)),w
  1783  00ED  0856               	bsf	status, 5	;RP0=1, select bank1
  1784  00EE  1683               	bcf	status, 6	;RP1=0, select bank1
  1785  00EF  1303               	movwf	(_sensorF1)^080h
  1786  00F0  00A4               
  1787                           	line	72
  1788                           	
  1789                           l2561:	
  1790  00F1                     ;mainM.c: 72:         entero1 = (int) sensorF1;
  1791                           	movf	(_sensorF1+3)^080h,w
  1792  00F1  0827               	movwf	(___fltol@f1+3)
  1793  00F2  00F3               	movf	(_sensorF1+2)^080h,w
  1794  00F3  0826               	movwf	(___fltol@f1+2)
  1795  00F4  00F2               	movf	(_sensorF1+1)^080h,w
  1796  00F5  0825               	movwf	(___fltol@f1+1)
  1797  00F6  00F1               	movf	(_sensorF1)^080h,w
  1798  00F7  0824               	movwf	(___fltol@f1)
  1799  00F8  00F0               
  1800                           	fcall	___fltol
  1801  00F9  120A  158A  239B  120A  118A  	movf	(0+(?___fltol)),w
  1802  00FE  0870               	bsf	status, 5	;RP0=1, select bank1
  1803  00FF  1683               	bcf	status, 6	;RP1=0, select bank1
  1804  0100  1303               	movwf	(??_main+0)^080h+0
  1805  0101  00AD               	movf	(??_main+0)^080h+0,w
  1806  0102  082D               	movwf	(_entero1)^080h
  1807  0103  00AA               	line	73
  1808                           	
  1809                           l2563:	
  1810  0104                     ;mainM.c: 73:         float1 = (sensorF1 - entero1)*100;
  1811                           	movlw	0x42
  1812  0104  3042               	bcf	status, 5	;RP0=0, select bank0
  1813  0105  1283               	bcf	status, 6	;RP1=0, select bank0
  1814  0106  1303               	movwf	(___flmul@b+3)
  1815  0107  00BF               	movlw	0xc8
  1816  0108  30C8               	movwf	(___flmul@b+2)
  1817  0109  00BE               	movlw	0x0
  1818  010A  3000               	movwf	(___flmul@b+1)
  1819  010B  00BD               	movlw	0x0
  1820  010C  3000               	movwf	(___flmul@b)
  1821  010D  00BC               
  1822                           	bsf	status, 5	;RP0=1, select bank1
  1823  010E  1683               	bcf	status, 6	;RP1=0, select bank1
  1824  010F  1303               	movf	(_sensorF1+3)^080h,w
  1825  0110  0827               	bcf	status, 5	;RP0=0, select bank0
  1826  0111  1283               	bcf	status, 6	;RP1=0, select bank0
  1827  0112  1303               	movwf	(___fladd@b+3)
  1828  0113  00A7               	bsf	status, 5	;RP0=1, select bank1
  1829  0114  1683               	bcf	status, 6	;RP1=0, select bank1
  1830  0115  1303               	movf	(_sensorF1+2)^080h,w
  1831  0116  0826               	bcf	status, 5	;RP0=0, select bank0
  1832  0117  1283               	bcf	status, 6	;RP1=0, select bank0
  1833  0118  1303               	movwf	(___fladd@b+2)
  1834  0119  00A6               	bsf	status, 5	;RP0=1, select bank1
  1835  011A  1683               	bcf	status, 6	;RP1=0, select bank1
  1836  011B  1303               	movf	(_sensorF1+1)^080h,w
  1837  011C  0825               	bcf	status, 5	;RP0=0, select bank0
  1838  011D  1283               	bcf	status, 6	;RP1=0, select bank0
  1839  011E  1303               	movwf	(___fladd@b+1)
  1840  011F  00A5               	bsf	status, 5	;RP0=1, select bank1
  1841  0120  1683               	bcf	status, 6	;RP1=0, select bank1
  1842  0121  1303               	movf	(_sensorF1)^080h,w
  1843  0122  0824               	bcf	status, 5	;RP0=0, select bank0
  1844  0123  1283               	bcf	status, 6	;RP1=0, select bank0
  1845  0124  1303               	movwf	(___fladd@b)
  1846  0125  00A4               
  1847                           	bsf	status, 5	;RP0=1, select bank1
  1848  0126  1683               	bcf	status, 6	;RP1=0, select bank1
  1849  0127  1303               	movf	(_entero1)^080h,w
  1850  0128  082A               	movwf	(??_main+0)^080h+0
  1851  0129  00AD               	clrf	(??_main+0)^080h+0+1
  1852  012A  01AE               	clrf	(??_main+0)^080h+0+2
  1853  012B  01AF               	clrf	(??_main+0)^080h+0+3
  1854  012C  01B0               	movf	3+(??_main+0)^080h+0,w
  1855  012D  0830               	movwf	(___xxtofl@val+3)
  1856  012E  00F3               	movf	2+(??_main+0)^080h+0,w
  1857  012F  082F               	movwf	(___xxtofl@val+2)
  1858  0130  00F2               	movf	1+(??_main+0)^080h+0,w
  1859  0131  082E               	movwf	(___xxtofl@val+1)
  1860  0132  00F1               	movf	0+(??_main+0)^080h+0,w
  1861  0133  082D               	movwf	(___xxtofl@val)
  1862  0134  00F0               
  1863                           	movlw	low(01h)
  1864  0135  3001               	fcall	___xxtofl
  1865  0136  120A  158A  2435  120A  118A  	movf	(3+(?___xxtofl)),w
  1866  013B  0873               	bcf	status, 5	;RP0=0, select bank0
  1867  013C  1283               	bcf	status, 6	;RP1=0, select bank0
  1868  013D  1303               	movwf	(___flneg@f1+3)
  1869  013E  00A3               	movf	(2+(?___xxtofl)),w
  1870  013F  0872               	movwf	(___flneg@f1+2)
  1871  0140  00A2               	movf	(1+(?___xxtofl)),w
  1872  0141  0871               	movwf	(___flneg@f1+1)
  1873  0142  00A1               	movf	(0+(?___xxtofl)),w
  1874  0143  0870               	movwf	(___flneg@f1)
  1875  0144  00A0               
  1876                           	fcall	___flneg
  1877  0145  120A  158A  2096  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1878  014A  1283               	bcf	status, 6	;RP1=0, select bank0
  1879  014B  1303               	movf	(3+(?___flneg)),w
  1880  014C  0823               	movwf	(___fladd@a+3)
  1881  014D  00AB               	movf	(2+(?___flneg)),w
  1882  014E  0822               	movwf	(___fladd@a+2)
  1883  014F  00AA               	movf	(1+(?___flneg)),w
  1884  0150  0821               	movwf	(___fladd@a+1)
  1885  0151  00A9               	movf	(0+(?___flneg)),w
  1886  0152  0820               	movwf	(___fladd@a)
  1887  0153  00A8               
  1888                           	fcall	___fladd
  1889  0154  120A  118A  21BC  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1890  0159  1283               	bcf	status, 6	;RP1=0, select bank0
  1891  015A  1303               	movf	(3+(?___fladd)),w
  1892  015B  0827               	movwf	(___flmul@a+3)
  1893  015C  00C3               	movf	(2+(?___fladd)),w
  1894  015D  0826               	movwf	(___flmul@a+2)
  1895  015E  00C2               	movf	(1+(?___fladd)),w
  1896  015F  0825               	movwf	(___flmul@a+1)
  1897  0160  00C1               	movf	(0+(?___fladd)),w
  1898  0161  0824               	movwf	(___flmul@a)
  1899  0162  00C0               
  1900                           	fcall	___flmul
  1901  0163  120A  118A  2478  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1902  0168  1283               	bcf	status, 6	;RP1=0, select bank0
  1903  0169  1303               	movf	(3+(?___flmul)),w
  1904  016A  083F               	bsf	status, 5	;RP0=1, select bank1
  1905  016B  1683               	bcf	status, 6	;RP1=0, select bank1
  1906  016C  1303               	movwf	(_float1+3)^080h
  1907  016D  00A3               	bcf	status, 5	;RP0=0, select bank0
  1908  016E  1283               	bcf	status, 6	;RP1=0, select bank0
  1909  016F  1303               	movf	(2+(?___flmul)),w
  1910  0170  083E               	bsf	status, 5	;RP0=1, select bank1
  1911  0171  1683               	bcf	status, 6	;RP1=0, select bank1
  1912  0172  1303               	movwf	(_float1+2)^080h
  1913  0173  00A2               	bcf	status, 5	;RP0=0, select bank0
  1914  0174  1283               	bcf	status, 6	;RP1=0, select bank0
  1915  0175  1303               	movf	(1+(?___flmul)),w
  1916  0176  083D               	bsf	status, 5	;RP0=1, select bank1
  1917  0177  1683               	bcf	status, 6	;RP1=0, select bank1
  1918  0178  1303               	movwf	(_float1+1)^080h
  1919  0179  00A1               	bcf	status, 5	;RP0=0, select bank0
  1920  017A  1283               	bcf	status, 6	;RP1=0, select bank0
  1921  017B  1303               	movf	(0+(?___flmul)),w
  1922  017C  083C               	bsf	status, 5	;RP0=1, select bank1
  1923  017D  1683               	bcf	status, 6	;RP1=0, select bank1
  1924  017E  1303               	movwf	(_float1)^080h
  1925  017F  00A0               
  1926                           	line	74
  1927                           	
  1928                           l2565:	
  1929  0180                     ;mainM.c: 74:         dec1 = (int) float1;
  1930                           	movf	(_float1+3)^080h,w
  1931  0180  0823               	movwf	(___fltol@f1+3)
  1932  0181  00F3               	movf	(_float1+2)^080h,w
  1933  0182  0822               	movwf	(___fltol@f1+2)
  1934  0183  00F2               	movf	(_float1+1)^080h,w
  1935  0184  0821               	movwf	(___fltol@f1+1)
  1936  0185  00F1               	movf	(_float1)^080h,w
  1937  0186  0820               	movwf	(___fltol@f1)
  1938  0187  00F0               
  1939                           	fcall	___fltol
  1940  0188  120A  158A  239B  120A  118A  	movf	(0+(?___fltol)),w
  1941  018D  0870               	bsf	status, 5	;RP0=1, select bank1
  1942  018E  1683               	bcf	status, 6	;RP1=0, select bank1
  1943  018F  1303               	movwf	(??_main+0)^080h+0
  1944  0190  00AD               	movf	(??_main+0)^080h+0,w
  1945  0191  082D               	movwf	(_dec1)^080h
  1946  0192  00A9               	line	76
  1947                           ;mainM.c: 76:         writeFloat(entero1, dec1, 1);
  1948                           	movf	(_dec1)^080h,w
  1949  0193  0829               	movwf	(??_main+0)^080h+0
  1950  0194  00AD               	movf	(??_main+0)^080h+0,w
  1951  0195  082D               	bcf	status, 5	;RP0=0, select bank0
  1952  0196  1283               	bcf	status, 6	;RP1=0, select bank0
  1953  0197  1303               	movwf	(writeFloat@decimal)
  1954  0198  00B5               	clrf	(writeFloat@initPos)
  1955  0199  01B6               	incf	(writeFloat@initPos),f
  1956  019A  0AB6               	bsf	status, 5	;RP0=1, select bank1
  1957  019B  1683               	bcf	status, 6	;RP1=0, select bank1
  1958  019C  1303               	movf	(_entero1)^080h,w
  1959  019D  082A               	fcall	_writeFloat
  1960  019E  120A  158A  22CE  120A  118A  	line	77
  1961                           	
  1962                           l2567:	
  1963  01A3                     ;mainM.c: 77:         setCursorLCD(2, 7);
  1964                           	movlw	low(07h)
  1965  01A3  3007               	bsf	status, 5	;RP0=1, select bank1
  1966  01A4  1683               	bcf	status, 6	;RP1=0, select bank1
  1967  01A5  1303               	movwf	(??_main+0)^080h+0
  1968  01A6  00AD               	movf	(??_main+0)^080h+0,w
  1969  01A7  082D               	movwf	(setCursorLCD@x)
  1970  01A8  00F3               	movlw	low(02h)
  1971  01A9  3002               	fcall	_setCursorLCD
  1972  01AA  120A  158A  20C8  120A  118A  	line	78
  1973                           	
  1974                           l2569:	
  1975  01AF                     ;mainM.c: 78:         writeIntLCD(counter);
  1976                           	bsf	status, 5	;RP0=1, select bank1
  1977  01AF  1683               	bcf	status, 6	;RP1=0, select bank1
  1978  01B0  1303               	movf	(_counter)^080h,w
  1979  01B1  0828               	fcall	_writeIntLCD
  1980  01B2  120A  158A  20E5  120A  118A  	goto	l2539
  1981  01B7  283E               	line	79
  1982                           ;mainM.c: 79:     }
  1983                           	
  1984                           l58:	
  1985  01B8                     	goto	l2539
  1986  01B8  283E               	
  1987                           l59:	
  1988  01B9                     	line	81
  1989                           ;mainM.c: 80:     return;
  1990                           	
  1991                           l60:	
  1992  01B9                     	global	start
  1993                           	ljmp	start
  1994  01B9  120A  118A  2800   	opt stack 0
  1995                           GLOBAL	__end_of_main
  1996                           	__end_of_main:
  1997  01BC                     	signat	_main,89
  1998                           	global	_writeFloat
  1999                           
  2000 ;; *************** function _writeFloat *****************
  2001 ;; Defined at:
  2002 ;;		line 63 in file "LCD.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  integer         1    wreg     unsigned char 
  2005 ;;  decimal         1   21[BANK0 ] unsigned char 
  2006 ;;  initPos         1   22[BANK0 ] unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  integer         1   24[BANK0 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       2       0       0       0
  2019 ;;      Locals:         0       1       0       0       0
  2020 ;;      Temps:          0       1       0       0       0
  2021 ;;      Totals:         0       4       0       0       0
  2022 ;;Total ram usage:        4 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    3
  2025 ;; This function calls:
  2026 ;;		_setCursorLCD
  2027 ;;		_writeCharLCD
  2028 ;;		_writeIntLCD
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2034                           	file	"LCD.c"
  2035                           	line	63
  2036                           global __ptext1
  2037                           __ptext1:	;psect for function _writeFloat
  2038  0ACE                     psect	text1
  2039                           	file	"LCD.c"
  2040                           	line	63
  2041                           	global	__size_of_writeFloat
  2042                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2043  0060                     	
  2044                           _writeFloat:	
  2045  0ACE                     ;incstack = 0
  2046                           	opt	stack 4
  2047                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2048                           ;writeFloat@integer stored from wreg
  2049                           	bcf	status, 5	;RP0=0, select bank0
  2050  0ACE  1283               	bcf	status, 6	;RP1=0, select bank0
  2051  0ACF  1303               	movwf	(writeFloat@integer)
  2052  0AD0  00B8               	line	66
  2053                           	
  2054                           l1953:	
  2055  0AD1                     ;LCD.c: 66:     setCursorLCD(2, initPos);
  2056                           	movf	(writeFloat@initPos),w
  2057  0AD1  0836               	movwf	(??_writeFloat+0)+0
  2058  0AD2  00B7               	movf	(??_writeFloat+0)+0,w
  2059  0AD3  0837               	movwf	(setCursorLCD@x)
  2060  0AD4  00F3               	movlw	low(02h)
  2061  0AD5  3002               	fcall	_setCursorLCD
  2062  0AD6  120A  158A  20C8  120A  158A  	line	67
  2063                           	
  2064                           l1955:	
  2065  0ADB                     ;LCD.c: 67:     writeIntLCD(integer);
  2066                           	bcf	status, 5	;RP0=0, select bank0
  2067  0ADB  1283               	bcf	status, 6	;RP1=0, select bank0
  2068  0ADC  1303               	movf	(writeFloat@integer),w
  2069  0ADD  0838               	fcall	_writeIntLCD
  2070  0ADE  120A  158A  20E5  120A  158A  	line	68
  2071                           	
  2072                           l1957:	
  2073  0AE3                     ;LCD.c: 68:     setCursorLCD(2, initPos + 1);
  2074                           	bcf	status, 5	;RP0=0, select bank0
  2075  0AE3  1283               	bcf	status, 6	;RP1=0, select bank0
  2076  0AE4  1303               	movf	(writeFloat@initPos),w
  2077  0AE5  0836               	addlw	01h
  2078  0AE6  3E01               	movwf	(??_writeFloat+0)+0
  2079  0AE7  00B7               	movf	(??_writeFloat+0)+0,w
  2080  0AE8  0837               	movwf	(setCursorLCD@x)
  2081  0AE9  00F3               	movlw	low(02h)
  2082  0AEA  3002               	fcall	_setCursorLCD
  2083  0AEB  120A  158A  20C8  120A  158A  	line	69
  2084                           	
  2085                           l1959:	
  2086  0AF0                     ;LCD.c: 69:     writeCharLCD('.');
  2087                           	movlw	low(02Eh)
  2088  0AF0  302E               	fcall	_writeCharLCD
  2089  0AF1  120A  158A  20A5  120A  158A  	line	70
  2090                           	
  2091                           l1961:	
  2092  0AF6                     ;LCD.c: 70:     setCursorLCD(2, initPos + 2);
  2093                           	bcf	status, 5	;RP0=0, select bank0
  2094  0AF6  1283               	bcf	status, 6	;RP1=0, select bank0
  2095  0AF7  1303               	movf	(writeFloat@initPos),w
  2096  0AF8  0836               	addlw	02h
  2097  0AF9  3E02               	movwf	(??_writeFloat+0)+0
  2098  0AFA  00B7               	movf	(??_writeFloat+0)+0,w
  2099  0AFB  0837               	movwf	(setCursorLCD@x)
  2100  0AFC  00F3               	movlw	low(02h)
  2101  0AFD  3002               	fcall	_setCursorLCD
  2102  0AFE  120A  158A  20C8  120A  158A  	line	72
  2103                           	
  2104                           l1963:	
  2105  0B03                     ;LCD.c: 72:     if(decimal < 10){
  2106                           	movlw	low(0Ah)
  2107  0B03  300A               	bcf	status, 5	;RP0=0, select bank0
  2108  0B04  1283               	bcf	status, 6	;RP1=0, select bank0
  2109  0B05  1303               	subwf	(writeFloat@decimal),w
  2110  0B06  0235               	skipnc
  2111  0B07  1803               	goto	u2171
  2112  0B08  2B0A               	goto	u2170
  2113  0B09  2B0B               u2171:
  2114  0B0A                     	goto	l1967
  2115  0B0A  2B12               u2170:
  2116  0B0B                     	line	73
  2117                           	
  2118                           l1965:	
  2119  0B0B                     ;LCD.c: 73:         writeCharLCD('0');
  2120                           	movlw	low(030h)
  2121  0B0B  3030               	fcall	_writeCharLCD
  2122  0B0C  120A  158A  20A5  120A  158A  	goto	l1967
  2123  0B11  2B12               	line	74
  2124                           ;LCD.c: 74:     }
  2125                           	
  2126                           l163:	
  2127  0B12                     	line	75
  2128                           	
  2129                           l1967:	
  2130  0B12                     ;LCD.c: 75:     writeIntLCD(decimal);
  2131                           	bcf	status, 5	;RP0=0, select bank0
  2132  0B12  1283               	bcf	status, 6	;RP1=0, select bank0
  2133  0B13  1303               	movf	(writeFloat@decimal),w
  2134  0B14  0835               	fcall	_writeIntLCD
  2135  0B15  120A  158A  20E5  120A  158A  	line	77
  2136                           	
  2137                           l1969:	
  2138  0B1A                     ;LCD.c: 77:     setCursorLCD(2, initPos + 4);
  2139                           	bcf	status, 5	;RP0=0, select bank0
  2140  0B1A  1283               	bcf	status, 6	;RP1=0, select bank0
  2141  0B1B  1303               	movf	(writeFloat@initPos),w
  2142  0B1C  0836               	addlw	04h
  2143  0B1D  3E04               	movwf	(??_writeFloat+0)+0
  2144  0B1E  00B7               	movf	(??_writeFloat+0)+0,w
  2145  0B1F  0837               	movwf	(setCursorLCD@x)
  2146  0B20  00F3               	movlw	low(02h)
  2147  0B21  3002               	fcall	_setCursorLCD
  2148  0B22  120A  158A  20C8  120A  158A  	line	78
  2149                           	
  2150                           l1971:	
  2151  0B27                     ;LCD.c: 78:     writeCharLCD('V');
  2152                           	movlw	low(056h)
  2153  0B27  3056               	fcall	_writeCharLCD
  2154  0B28  120A  158A  20A5  120A  158A  	line	79
  2155                           	
  2156                           l164:	
  2157  0B2D                     	return
  2158  0B2D  0008               	opt stack 0
  2159                           GLOBAL	__end_of_writeFloat
  2160                           	__end_of_writeFloat:
  2161  0B2E                     	signat	_writeFloat,12409
  2162                           	global	_writeIntLCD
  2163                           
  2164 ;; *************** function _writeIntLCD *****************
  2165 ;; Defined at:
  2166 ;;		line 57 in file "LCD.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  numero          1    wreg     unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  numero          1   20[BANK0 ] unsigned char 
  2171 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       0       0       0       0
  2182 ;;      Locals:         0       5       0       0       0
  2183 ;;      Temps:          0       3       0       0       0
  2184 ;;      Totals:         0       8       0       0       0
  2185 ;;Total ram usage:        8 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    2
  2188 ;; This function calls:
  2189 ;;		_sprintf
  2190 ;;		_writeStrLCD
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;;		_writeFloat
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2197                           	line	57
  2198                           global __ptext2
  2199                           __ptext2:	;psect for function _writeIntLCD
  2200  08E5                     psect	text2
  2201                           	file	"LCD.c"
  2202                           	line	57
  2203                           	global	__size_of_writeIntLCD
  2204                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2205  001E                     	
  2206                           _writeIntLCD:	
  2207  08E5                     ;incstack = 0
  2208                           	opt	stack 5
  2209                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2210                           ;writeIntLCD@numero stored from wreg
  2211                           	bcf	status, 5	;RP0=0, select bank0
  2212  08E5  1283               	bcf	status, 6	;RP1=0, select bank0
  2213  08E6  1303               	movwf	(writeIntLCD@numero)
  2214  08E7  00B4               	line	59
  2215                           	
  2216                           l1853:	
  2217  08E8                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2218                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2219  08E8  300B               	movwf	(??_writeIntLCD+0)+0
  2220  08E9  00AD               	movf	(??_writeIntLCD+0)+0,w
  2221  08EA  082D               	movwf	(sprintf@f)
  2222  08EB  00A0               	movf	(writeIntLCD@numero),w
  2223  08EC  0834               	movwf	(??_writeIntLCD+1)+0
  2224  08ED  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2225  08EE  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2226  08EF  082E               	movwf	0+(?_sprintf)+01h
  2227  08F0  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2228  08F1  082F               	movwf	1+(?_sprintf)+01h
  2229  08F2  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2230  08F3  3030               	fcall	_sprintf
  2231  08F4  120A  158A  24F7  120A  158A  	line	60
  2232                           ;LCD.c: 60:     writeStrLCD(buffer);
  2233                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2234  08F9  3030               	movwf	(writeStrLCD@string)
  2235  08FA  00F2               	movlw	(0x0)
  2236  08FB  3000               	movwf	(writeStrLCD@string+1)
  2237  08FC  00F3               	fcall	_writeStrLCD
  2238  08FD  120A  158A  21E0  120A  158A  	line	61
  2239                           	
  2240                           l160:	
  2241  0902                     	return
  2242  0902  0008               	opt stack 0
  2243                           GLOBAL	__end_of_writeIntLCD
  2244                           	__end_of_writeIntLCD:
  2245  0903                     	signat	_writeIntLCD,4217
  2246                           	global	_sprintf
  2247                           
  2248 ;; *************** function _sprintf *****************
  2249 ;; Defined at:
  2250 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  sp              1    wreg     PTR unsigned char 
  2253 ;;		 -> writeIntLCD@buffer(4), 
  2254 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2255 ;;		 -> STR_4(3), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2258 ;;		 -> writeIntLCD@buffer(4), 
  2259 ;;  tmpval          4    0        struct .
  2260 ;;  val             2    9[BANK0 ] unsigned int 
  2261 ;;  cp              2    0        PTR const unsigned char 
  2262 ;;  len             2    0        unsigned int 
  2263 ;;  c               1   12[BANK0 ] unsigned char 
  2264 ;;  prec            1    8[BANK0 ] char 
  2265 ;;  flag            1    7[BANK0 ] unsigned char 
  2266 ;;  ap              1    6[BANK0 ] PTR void [1]
  2267 ;;		 -> ?_sprintf(2), 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    0[BANK0 ] int 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       3       0       0       0
  2278 ;;      Locals:         0       7       0       0       0
  2279 ;;      Temps:          0       3       0       0       0
  2280 ;;      Totals:         0      13       0       0       0
  2281 ;;Total ram usage:       13 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    1
  2284 ;; This function calls:
  2285 ;;		___lwdiv
  2286 ;;		___lwmod
  2287 ;; This function is called by:
  2288 ;;		_writeIntLCD
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2292                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2293                           	line	500
  2294                           global __ptext3
  2295                           __ptext3:	;psect for function _sprintf
  2296  0CF7                     psect	text3
  2297                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2298                           	line	500
  2299                           	global	__size_of_sprintf
  2300                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2301  0100                     	
  2302                           _sprintf:	
  2303  0CF7                     ;incstack = 0
  2304                           	opt	stack 5
  2305                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2306                           ;sprintf@sp stored from wreg
  2307                           	bcf	status, 5	;RP0=0, select bank0
  2308  0CF7  1283               	bcf	status, 6	;RP1=0, select bank0
  2309  0CF8  1303               	movwf	(sprintf@sp)
  2310  0CF9  00AB               	line	545
  2311                           	
  2312                           l1759:	
  2313  0CFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2314                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2315  0CFA  3021               	movwf	(??_sprintf+0)+0
  2316  0CFB  00A3               	movf	(??_sprintf+0)+0,w
  2317  0CFC  0823               	movwf	(sprintf@ap)
  2318  0CFD  00A6               	line	548
  2319                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2320                           	goto	l1811
  2321  0CFE  2DDD               	
  2322                           l256:	
  2323  0CFF                     	line	550
  2324                           	
  2325                           l1761:	
  2326  0CFF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2327                           		movlw	37
  2328  0CFF  3025               	xorwf	((sprintf@c)),w
  2329  0D00  062C               	btfsc	status,2
  2330  0D01  1903               	goto	u1941
  2331  0D02  2D04               	goto	u1940
  2332  0D03  2D05               u1941:
  2333  0D04                     	goto	l1767
  2334  0D04  2D11               u1940:
  2335  0D05                     	line	553
  2336                           	
  2337                           l1763:	
  2338  0D05                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2339                           	movf	(sprintf@c),w
  2340  0D05  082C               	movwf	(??_sprintf+0)+0
  2341  0D06  00A3               	movf	(sprintf@sp),w
  2342  0D07  082B               	movwf	fsr0
  2343  0D08  0084               	movf	(??_sprintf+0)+0,w
  2344  0D09  0823               	bcf	status, 7	;select IRP bank0
  2345  0D0A  1383               	movwf	indf
  2346  0D0B  0080               	
  2347                           l1765:	
  2348  0D0C                     	movlw	low(01h)
  2349  0D0C  3001               	movwf	(??_sprintf+0)+0
  2350  0D0D  00A3               	movf	(??_sprintf+0)+0,w
  2351  0D0E  0823               	addwf	(sprintf@sp),f
  2352  0D0F  07AB               	line	554
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2354                           	goto	l1811
  2355  0D10  2DDD               	line	555
  2356                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2357                           	
  2358                           l257:	
  2359  0D11                     	line	560
  2360                           	
  2361                           l1767:	
  2362  0D11                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2363                           	clrf	(sprintf@flag)
  2364  0D11  01A7               	line	654
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2366                           	goto	l1771
  2367  0D12  2D18               	line	656
  2368                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2369                           	
  2370                           l259:	
  2371  0D13                     	line	657
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2373                           	goto	l1813
  2374  0D13  2DF1               	line	716
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2376                           	
  2377                           l261:	
  2378  0D14                     	goto	l1773
  2379  0D14  2D35               	line	717
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2381                           	
  2382                           l262:	
  2383  0D15                     	line	718
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2385                           	goto	l1773
  2386  0D15  2D35               	line	821
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2388                           	
  2389                           l264:	
  2390  0D16                     	line	832
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2392                           	goto	l1811
  2393  0D16  2DDD               	line	841
  2394                           	
  2395                           l1769:	
  2396  0D17                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2397                           	goto	l1773
  2398  0D17  2D35               	
  2399                           l258:	
  2400  0D18                     	
  2401                           l1771:	
  2402  0D18                     	movlw	01h
  2403  0D18  3001               	addwf	(sprintf@f),f
  2404  0D19  07A0               	movlw	-01h
  2405  0D1A  30FF               	addwf	(sprintf@f),w
  2406  0D1B  0720               	movwf	fsr0
  2407  0D1C  0084               	fcall	stringdir
  2408  0D1D  120A  158A  200A  120A  158A  	movwf	(sprintf@c)
  2409  0D22  00AC               	movwf	(??_sprintf+0)+0
  2410  0D23  00A3               	clrf	(??_sprintf+0)+0+1
  2411  0D24  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2412                           ; Switch size 1, requested type "space"
  2413                           ; Number of cases is 1, Range of values is 0 to 0
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte            4     3 (average)
  2417                           ; direct_byte           11     8 (fixed)
  2418                           ; jumptable            260     6 (fixed)
  2419                           ;	Chosen strategy is simple_byte
  2420                           
  2421                           	movf 1+(??_sprintf+0)+0,w
  2422  0D25  0824               	opt asmopt_push
  2423                           	opt asmopt_off
  2424                           	xorlw	0^0	; case 0
  2425  0D26  3A00               	skipnz
  2426  0D27  1903               	goto	l2595
  2427  0D28  2D2A               	goto	l1811
  2428  0D29  2DDD               	opt asmopt_pop
  2429                           	
  2430                           l2595:	
  2431  0D2A                     ; Switch size 1, requested type "space"
  2432                           ; Number of cases is 3, Range of values is 0 to 105
  2433                           ; switch strategies available:
  2434                           ; Name         Instructions Cycles
  2435                           ; simple_byte           10     6 (average)
  2436                           ; jumptable            260     6 (fixed)
  2437                           ;	Chosen strategy is simple_byte
  2438                           
  2439                           	movf 0+(??_sprintf+0)+0,w
  2440  0D2A  0823               	opt asmopt_push
  2441                           	opt asmopt_off
  2442                           	xorlw	0^0	; case 0
  2443  0D2B  3A00               	skipnz
  2444  0D2C  1903               	goto	l1813
  2445  0D2D  2DF1               	xorlw	100^0	; case 100
  2446  0D2E  3A64               	skipnz
  2447  0D2F  1903               	goto	l1773
  2448  0D30  2D35               	xorlw	105^100	; case 105
  2449  0D31  3A0D               	skipnz
  2450  0D32  1903               	goto	l1773
  2451  0D33  2D35               	goto	l1811
  2452  0D34  2DDD               	opt asmopt_pop
  2453                           
  2454                           	
  2455                           l263:	
  2456  0D35                     	line	1278
  2457                           	
  2458                           l1773:	
  2459  0D35                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2460                           	movf	(sprintf@ap),w
  2461  0D35  0826               	movwf	fsr0
  2462  0D36  0084               	bcf	status, 7	;select IRP bank0
  2463  0D37  1383               	movf	indf,w
  2464  0D38  0800               	movwf	(sprintf@val)
  2465  0D39  00A9               	incf	fsr0,f
  2466  0D3A  0A84               	movf	indf,w
  2467  0D3B  0800               	movwf	(sprintf@val+1)
  2468  0D3C  00AA               	
  2469                           l1775:	
  2470  0D3D                     	movlw	low(02h)
  2471  0D3D  3002               	movwf	(??_sprintf+0)+0
  2472  0D3E  00A3               	movf	(??_sprintf+0)+0,w
  2473  0D3F  0823               	addwf	(sprintf@ap),f
  2474  0D40  07A6               	line	1280
  2475                           	
  2476                           l1777:	
  2477  0D41                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2478                           	btfss	(sprintf@val+1),7
  2479  0D41  1FAA               	goto	u1951
  2480  0D42  2D44               	goto	u1950
  2481  0D43  2D45               u1951:
  2482  0D44                     	goto	l1783
  2483  0D44  2D4F               u1950:
  2484  0D45                     	line	1281
  2485                           	
  2486                           l1779:	
  2487  0D45                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2488                           	movlw	low(03h)
  2489  0D45  3003               	movwf	(??_sprintf+0)+0
  2490  0D46  00A3               	movf	(??_sprintf+0)+0,w
  2491  0D47  0823               	iorwf	(sprintf@flag),f
  2492  0D48  04A7               	line	1282
  2493                           	
  2494                           l1781:	
  2495  0D49                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2496                           	comf	(sprintf@val),f
  2497  0D49  09A9               	comf	(sprintf@val+1),f
  2498  0D4A  09AA               	incf	(sprintf@val),f
  2499  0D4B  0AA9               	skipnz
  2500  0D4C  1903               	incf	(sprintf@val+1),f
  2501  0D4D  0AAA               	goto	l1783
  2502  0D4E  2D4F               	line	1283
  2503                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2504                           	
  2505                           l265:	
  2506  0D4F                     	line	1324
  2507                           	
  2508                           l1783:	
  2509  0D4F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2510                           	clrf	(sprintf@c)
  2511  0D4F  01AC               	incf	(sprintf@c),f
  2512  0D50  0AAC               	
  2513                           l1785:	
  2514  0D51                     		movlw	5
  2515  0D51  3005               	xorwf	((sprintf@c)),w
  2516  0D52  062C               	btfss	status,2
  2517  0D53  1D03               	goto	u1961
  2518  0D54  2D56               	goto	u1960
  2519  0D55  2D57               u1961:
  2520  0D56                     	goto	l1789
  2521  0D56  2D59               u1960:
  2522  0D57                     	goto	l1795
  2523  0D57  2D81               	
  2524                           l1787:	
  2525  0D58                     	goto	l1795
  2526  0D58  2D81               	
  2527                           l266:	
  2528  0D59                     	line	1325
  2529                           	
  2530                           l1789:	
  2531  0D59                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2532                           	movf	(sprintf@c),w
  2533  0D59  082C               	movwf	(??_sprintf+0)+0
  2534  0D5A  00A3               	addwf	(??_sprintf+0)+0,w
  2535  0D5B  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2536  0D5C  3E01               	movwf	fsr0
  2537  0D5D  0084               	fcall	stringdir
  2538  0D5E  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0
  2539  0D63  00A4               	fcall	stringdir
  2540  0D64  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0+1
  2541  0D69  00A5               	movf	1+(??_sprintf+1)+0,w
  2542  0D6A  0825               	subwf	(sprintf@val+1),w
  2543  0D6B  022A               	skipz
  2544  0D6C  1D03               	goto	u1975
  2545  0D6D  2D70               	movf	0+(??_sprintf+1)+0,w
  2546  0D6E  0824               	subwf	(sprintf@val),w
  2547  0D6F  0229               u1975:
  2548  0D70                     	skipnc
  2549  0D70  1803               	goto	u1971
  2550  0D71  2D73               	goto	u1970
  2551  0D72  2D74               u1971:
  2552  0D73                     	goto	l1793
  2553  0D73  2D76               u1970:
  2554  0D74                     	goto	l1795
  2555  0D74  2D81               	line	1326
  2556                           	
  2557                           l1791:	
  2558  0D75                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2559                           	goto	l1795
  2560  0D75  2D81               	
  2561                           l268:	
  2562  0D76                     	
  2563                           l1793:	
  2564  0D76                     	movlw	low(01h)
  2565  0D76  3001               	movwf	(??_sprintf+0)+0
  2566  0D77  00A3               	movf	(??_sprintf+0)+0,w
  2567  0D78  0823               	addwf	(sprintf@c),f
  2568  0D79  07AC               		movlw	5
  2569  0D7A  3005               	xorwf	((sprintf@c)),w
  2570  0D7B  062C               	btfss	status,2
  2571  0D7C  1D03               	goto	u1981
  2572  0D7D  2D7F               	goto	u1980
  2573  0D7E  2D80               u1981:
  2574  0D7F                     	goto	l1789
  2575  0D7F  2D59               u1980:
  2576  0D80                     	goto	l1795
  2577  0D80  2D81               	
  2578                           l267:	
  2579  0D81                     	line	1457
  2580                           	
  2581                           l1795:	
  2582  0D81                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2583                           	movf	(sprintf@flag),w
  2584  0D81  0827               	andlw	03h
  2585  0D82  3903               	btfsc	status,2
  2586  0D83  1903               	goto	u1991
  2587  0D84  2D86               	goto	u1990
  2588  0D85  2D87               u1991:
  2589  0D86                     	goto	l1801
  2590  0D86  2D93               u1990:
  2591  0D87                     	line	1458
  2592                           	
  2593                           l1797:	
  2594  0D87                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2595                           	movlw	low(02Dh)
  2596  0D87  302D               	movwf	(??_sprintf+0)+0
  2597  0D88  00A3               	movf	(sprintf@sp),w
  2598  0D89  082B               	movwf	fsr0
  2599  0D8A  0084               	movf	(??_sprintf+0)+0,w
  2600  0D8B  0823               	bcf	status, 7	;select IRP bank0
  2601  0D8C  1383               	movwf	indf
  2602  0D8D  0080               	
  2603                           l1799:	
  2604  0D8E                     	movlw	low(01h)
  2605  0D8E  3001               	movwf	(??_sprintf+0)+0
  2606  0D8F  00A3               	movf	(??_sprintf+0)+0,w
  2607  0D90  0823               	addwf	(sprintf@sp),f
  2608  0D91  07AB               	goto	l1801
  2609  0D92  2D93               	
  2610                           l269:	
  2611  0D93                     	line	1491
  2612                           	
  2613                           l1801:	
  2614  0D93                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2615                           	movf	(sprintf@c),w
  2616  0D93  082C               	movwf	(??_sprintf+0)+0
  2617  0D94  00A3               	movf	(??_sprintf+0)+0,w
  2618  0D95  0823               	movwf	(sprintf@prec)
  2619  0D96  00A8               	line	1493
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2621                           	goto	l1809
  2622  0D97  2DD2               	
  2623                           l271:	
  2624  0D98                     	line	1508
  2625                           	
  2626                           l1803:	
  2627  0D98                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2628                           	movlw	0Ah
  2629  0D98  300A               	movwf	(___lwmod@divisor)
  2630  0D99  00F8               	movlw	0
  2631  0D9A  3000               	movwf	((___lwmod@divisor))+1
  2632  0D9B  00F9               	movf	(sprintf@prec),w
  2633  0D9C  0828               	movwf	(??_sprintf+0)+0
  2634  0D9D  00A3               	addwf	(??_sprintf+0)+0,w
  2635  0D9E  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2636  0D9F  3E01               	movwf	fsr0
  2637  0DA0  0084               	fcall	stringdir
  2638  0DA1  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor)
  2639  0DA6  00F0               	fcall	stringdir
  2640  0DA7  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor+1)
  2641  0DAC  00F1               	movf	(sprintf@val+1),w
  2642  0DAD  082A               	movwf	(___lwdiv@dividend+1)
  2643  0DAE  00F3               	movf	(sprintf@val),w
  2644  0DAF  0829               	movwf	(___lwdiv@dividend)
  2645  0DB0  00F2               	fcall	___lwdiv
  2646  0DB1  120A  158A  2224  120A  158A  	movf	(1+(?___lwdiv)),w
  2647  0DB6  0871               	movwf	(___lwmod@dividend+1)
  2648  0DB7  00FB               	movf	(0+(?___lwdiv)),w
  2649  0DB8  0870               	movwf	(___lwmod@dividend)
  2650  0DB9  00FA               	fcall	___lwmod
  2651  0DBA  120A  158A  219F  120A  158A  	movf	(0+(?___lwmod)),w
  2652  0DBF  0878               	addlw	030h
  2653  0DC0  3E30               	bcf	status, 5	;RP0=0, select bank0
  2654  0DC1  1283               	bcf	status, 6	;RP1=0, select bank0
  2655  0DC2  1303               	movwf	(??_sprintf+1)+0
  2656  0DC3  00A4               	movf	(??_sprintf+1)+0,w
  2657  0DC4  0824               	movwf	(sprintf@c)
  2658  0DC5  00AC               	line	1543
  2659                           	
  2660                           l1805:	
  2661  0DC6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2662                           	movf	(sprintf@c),w
  2663  0DC6  082C               	movwf	(??_sprintf+0)+0
  2664  0DC7  00A3               	movf	(sprintf@sp),w
  2665  0DC8  082B               	movwf	fsr0
  2666  0DC9  0084               	movf	(??_sprintf+0)+0,w
  2667  0DCA  0823               	bcf	status, 7	;select IRP bank0
  2668  0DCB  1383               	movwf	indf
  2669  0DCC  0080               	
  2670                           l1807:	
  2671  0DCD                     	movlw	low(01h)
  2672  0DCD  3001               	movwf	(??_sprintf+0)+0
  2673  0DCE  00A3               	movf	(??_sprintf+0)+0,w
  2674  0DCF  0823               	addwf	(sprintf@sp),f
  2675  0DD0  07AB               	goto	l1809
  2676  0DD1  2DD2               	line	1544
  2677                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2678                           	
  2679                           l270:	
  2680  0DD2                     	line	1493
  2681                           	
  2682                           l1809:	
  2683  0DD2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2684                           	movlw	low(-1)
  2685  0DD2  30FF               	movwf	(??_sprintf+0)+0
  2686  0DD3  00A3               	movf	(??_sprintf+0)+0,w
  2687  0DD4  0823               	addwf	(sprintf@prec),f
  2688  0DD5  07A8               		incf	(((sprintf@prec))),w
  2689  0DD6  0A28               	btfss	status,2
  2690  0DD7  1D03               	goto	u2001
  2691  0DD8  2DDA               	goto	u2000
  2692  0DD9  2DDB               u2001:
  2693  0DDA                     	goto	l1803
  2694  0DDA  2D98               u2000:
  2695  0DDB                     	goto	l1811
  2696  0DDB  2DDD               	
  2697                           l272:	
  2698  0DDC                     	goto	l1811
  2699  0DDC  2DDD               	line	1552
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2701                           	
  2702                           l255:	
  2703  0DDD                     	line	548
  2704                           	
  2705                           l1811:	
  2706  0DDD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2707                           	movlw	01h
  2708  0DDD  3001               	addwf	(sprintf@f),f
  2709  0DDE  07A0               	movlw	-01h
  2710  0DDF  30FF               	addwf	(sprintf@f),w
  2711  0DE0  0720               	movwf	fsr0
  2712  0DE1  0084               	fcall	stringdir
  2713  0DE2  120A  158A  200A  120A  158A  	movwf	(??_sprintf+0)+0
  2714  0DE7  00A3               	movf	(??_sprintf+0)+0,w
  2715  0DE8  0823               	movwf	(sprintf@c)
  2716  0DE9  00AC               	movf	(((sprintf@c))),w
  2717  0DEA  082C               	btfss	status,2
  2718  0DEB  1D03               	goto	u2011
  2719  0DEC  2DEE               	goto	u2010
  2720  0DED  2DEF               u2011:
  2721  0DEE                     	goto	l1761
  2722  0DEE  2CFF               u2010:
  2723  0DEF                     	goto	l1813
  2724  0DEF  2DF1               	
  2725                           l273:	
  2726  0DF0                     	goto	l1813
  2727  0DF0  2DF1               	line	1554
  2728                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2729                           	
  2730                           l260:	
  2731  0DF1                     	line	1557
  2732                           	
  2733                           l1813:	
  2734  0DF1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2735                           	movf	(sprintf@sp),w
  2736  0DF1  082B               	movwf	fsr0
  2737  0DF2  0084               	bcf	status, 7	;select IRP bank0
  2738  0DF3  1383               	clrf	indf
  2739  0DF4  0180               	goto	l274
  2740  0DF5  2DF6               	line	1559
  2741                           	
  2742                           l1815:	
  2743  0DF6                     	line	1560
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2745                           	
  2746                           l274:	
  2747  0DF6                     	return
  2748  0DF6  0008               	opt stack 0
  2749                           GLOBAL	__end_of_sprintf
  2750                           	__end_of_sprintf:
  2751  0DF7                     	signat	_sprintf,4698
  2752                           	global	___lwmod
  2753                           
  2754 ;; *************** function ___lwmod *****************
  2755 ;; Defined at:
  2756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  divisor         2    8[COMMON] unsigned int 
  2759 ;;  dividend        2   10[COMMON] unsigned int 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  counter         1   13[COMMON] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2    8[COMMON] unsigned int 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         4       0       0       0       0
  2772 ;;      Locals:         1       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0
  2774 ;;      Totals:         6       0       0       0       0
  2775 ;;Total ram usage:        6 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_sprintf
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2784                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2785                           	line	5
  2786                           global __ptext4
  2787                           __ptext4:	;psect for function ___lwmod
  2788  099F                     psect	text4
  2789                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2790                           	line	5
  2791                           	global	__size_of___lwmod
  2792                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2793  0041                     	
  2794                           ___lwmod:	
  2795  099F                     ;incstack = 0
  2796                           	opt	stack 5
  2797                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2798                           	line	12
  2799                           	
  2800                           l1721:	
  2801  099F                     	movf	((___lwmod@divisor)),w
  2802  099F  0878               iorwf	((___lwmod@divisor+1)),w
  2803  09A0  0479               	btfsc	status,2
  2804  09A1  1903               	goto	u1851
  2805  09A2  29A4               	goto	u1850
  2806  09A3  29A5               u1851:
  2807  09A4                     	goto	l1739
  2808  09A4  29DA               u1850:
  2809  09A5                     	line	13
  2810                           	
  2811                           l1723:	
  2812  09A5                     	clrf	(___lwmod@counter)
  2813  09A5  01FD               	incf	(___lwmod@counter),f
  2814  09A6  0AFD               	line	14
  2815                           	goto	l1729
  2816  09A7  29B4               	
  2817                           l555:	
  2818  09A8                     	line	15
  2819                           	
  2820                           l1725:	
  2821  09A8                     	movlw	01h
  2822  09A8  3001               	
  2823                           u1865:
  2824  09A9                     	clrc
  2825  09A9  1003               	rlf	(___lwmod@divisor),f
  2826  09AA  0DF8               	rlf	(___lwmod@divisor+1),f
  2827  09AB  0DF9               	addlw	-1
  2828  09AC  3EFF               	skipz
  2829  09AD  1D03               	goto	u1865
  2830  09AE  29A9               	line	16
  2831                           	
  2832                           l1727:	
  2833  09AF                     	movlw	low(01h)
  2834  09AF  3001               	movwf	(??___lwmod+0)+0
  2835  09B0  00FC               	movf	(??___lwmod+0)+0,w
  2836  09B1  087C               	addwf	(___lwmod@counter),f
  2837  09B2  07FD               	goto	l1729
  2838  09B3  29B4               	line	17
  2839                           	
  2840                           l554:	
  2841  09B4                     	line	14
  2842                           	
  2843                           l1729:	
  2844  09B4                     	btfss	(___lwmod@divisor+1),(15)&7
  2845  09B4  1FF9               	goto	u1871
  2846  09B5  29B7               	goto	u1870
  2847  09B6  29B8               u1871:
  2848  09B7                     	goto	l1725
  2849  09B7  29A8               u1870:
  2850  09B8                     	goto	l1731
  2851  09B8  29BA               	
  2852                           l556:	
  2853  09B9                     	goto	l1731
  2854  09B9  29BA               	line	18
  2855                           	
  2856                           l557:	
  2857  09BA                     	line	19
  2858                           	
  2859                           l1731:	
  2860  09BA                     	movf	(___lwmod@divisor+1),w
  2861  09BA  0879               	subwf	(___lwmod@dividend+1),w
  2862  09BB  027B               	skipz
  2863  09BC  1D03               	goto	u1885
  2864  09BD  29C0               	movf	(___lwmod@divisor),w
  2865  09BE  0878               	subwf	(___lwmod@dividend),w
  2866  09BF  027A               u1885:
  2867  09C0                     	skipc
  2868  09C0  1C03               	goto	u1881
  2869  09C1  29C3               	goto	u1880
  2870  09C2  29C4               u1881:
  2871  09C3                     	goto	l1735
  2872  09C3  29CB               u1880:
  2873  09C4                     	line	20
  2874                           	
  2875                           l1733:	
  2876  09C4                     	movf	(___lwmod@divisor),w
  2877  09C4  0878               	subwf	(___lwmod@dividend),f
  2878  09C5  02FA               	movf	(___lwmod@divisor+1),w
  2879  09C6  0879               	skipc
  2880  09C7  1C03               	decf	(___lwmod@dividend+1),f
  2881  09C8  03FB               	subwf	(___lwmod@dividend+1),f
  2882  09C9  02FB               	goto	l1735
  2883  09CA  29CB               	
  2884                           l558:	
  2885  09CB                     	line	21
  2886                           	
  2887                           l1735:	
  2888  09CB                     	movlw	01h
  2889  09CB  3001               	
  2890                           u1895:
  2891  09CC                     	clrc
  2892  09CC  1003               	rrf	(___lwmod@divisor+1),f
  2893  09CD  0CF9               	rrf	(___lwmod@divisor),f
  2894  09CE  0CF8               	addlw	-1
  2895  09CF  3EFF               	skipz
  2896  09D0  1D03               	goto	u1895
  2897  09D1  29CC               	line	22
  2898                           	
  2899                           l1737:	
  2900  09D2                     	movlw	01h
  2901  09D2  3001               	subwf	(___lwmod@counter),f
  2902  09D3  02FD               	btfss	status,2
  2903  09D4  1D03               	goto	u1901
  2904  09D5  29D7               	goto	u1900
  2905  09D6  29D8               u1901:
  2906  09D7                     	goto	l1731
  2907  09D7  29BA               u1900:
  2908  09D8                     	goto	l1739
  2909  09D8  29DA               	
  2910                           l559:	
  2911  09D9                     	goto	l1739
  2912  09D9  29DA               	line	23
  2913                           	
  2914                           l553:	
  2915  09DA                     	line	24
  2916                           	
  2917                           l1739:	
  2918  09DA                     	movf	(___lwmod@dividend+1),w
  2919  09DA  087B               	movwf	(?___lwmod+1)
  2920  09DB  00F9               	movf	(___lwmod@dividend),w
  2921  09DC  087A               	movwf	(?___lwmod)
  2922  09DD  00F8               	goto	l560
  2923  09DE  29DF               	
  2924                           l1741:	
  2925  09DF                     	line	25
  2926                           	
  2927                           l560:	
  2928  09DF                     	return
  2929  09DF  0008               	opt stack 0
  2930                           GLOBAL	__end_of___lwmod
  2931                           	__end_of___lwmod:
  2932  09E0                     	signat	___lwmod,8314
  2933                           	global	___lwdiv
  2934                           
  2935 ;; *************** function ___lwdiv *****************
  2936 ;; Defined at:
  2937 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  divisor         2    0[COMMON] unsigned int 
  2940 ;;  dividend        2    2[COMMON] unsigned int 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  quotient        2    5[COMMON] unsigned int 
  2943 ;;  counter         1    7[COMMON] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2    0[COMMON] unsigned int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         4       0       0       0       0
  2954 ;;      Locals:         3       0       0       0       0
  2955 ;;      Temps:          1       0       0       0       0
  2956 ;;      Totals:         8       0       0       0       0
  2957 ;;Total ram usage:        8 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_sprintf
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2966                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2967                           	line	5
  2968                           global __ptext5
  2969                           __ptext5:	;psect for function ___lwdiv
  2970  0A24                     psect	text5
  2971                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2972                           	line	5
  2973                           	global	__size_of___lwdiv
  2974                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2975  004B                     	
  2976                           ___lwdiv:	
  2977  0A24                     ;incstack = 0
  2978                           	opt	stack 5
  2979                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2980                           	line	13
  2981                           	
  2982                           l1695:	
  2983  0A24                     	clrf	(___lwdiv@quotient)
  2984  0A24  01F5               	clrf	(___lwdiv@quotient+1)
  2985  0A25  01F6               	line	14
  2986                           	
  2987                           l1697:	
  2988  0A26                     	movf	((___lwdiv@divisor)),w
  2989  0A26  0870               iorwf	((___lwdiv@divisor+1)),w
  2990  0A27  0471               	btfsc	status,2
  2991  0A28  1903               	goto	u1781
  2992  0A29  2A2B               	goto	u1780
  2993  0A2A  2A2C               u1781:
  2994  0A2B                     	goto	l1717
  2995  0A2B  2A69               u1780:
  2996  0A2C                     	line	15
  2997                           	
  2998                           l1699:	
  2999  0A2C                     	clrf	(___lwdiv@counter)
  3000  0A2C  01F7               	incf	(___lwdiv@counter),f
  3001  0A2D  0AF7               	line	16
  3002                           	goto	l1705
  3003  0A2E  2A3B               	
  3004                           l545:	
  3005  0A2F                     	line	17
  3006                           	
  3007                           l1701:	
  3008  0A2F                     	movlw	01h
  3009  0A2F  3001               	
  3010                           u1795:
  3011  0A30                     	clrc
  3012  0A30  1003               	rlf	(___lwdiv@divisor),f
  3013  0A31  0DF0               	rlf	(___lwdiv@divisor+1),f
  3014  0A32  0DF1               	addlw	-1
  3015  0A33  3EFF               	skipz
  3016  0A34  1D03               	goto	u1795
  3017  0A35  2A30               	line	18
  3018                           	
  3019                           l1703:	
  3020  0A36                     	movlw	low(01h)
  3021  0A36  3001               	movwf	(??___lwdiv+0)+0
  3022  0A37  00F4               	movf	(??___lwdiv+0)+0,w
  3023  0A38  0874               	addwf	(___lwdiv@counter),f
  3024  0A39  07F7               	goto	l1705
  3025  0A3A  2A3B               	line	19
  3026                           	
  3027                           l544:	
  3028  0A3B                     	line	16
  3029                           	
  3030                           l1705:	
  3031  0A3B                     	btfss	(___lwdiv@divisor+1),(15)&7
  3032  0A3B  1FF1               	goto	u1801
  3033  0A3C  2A3E               	goto	u1800
  3034  0A3D  2A3F               u1801:
  3035  0A3E                     	goto	l1701
  3036  0A3E  2A2F               u1800:
  3037  0A3F                     	goto	l1707
  3038  0A3F  2A41               	
  3039                           l546:	
  3040  0A40                     	goto	l1707
  3041  0A40  2A41               	line	20
  3042                           	
  3043                           l547:	
  3044  0A41                     	line	21
  3045                           	
  3046                           l1707:	
  3047  0A41                     	movlw	01h
  3048  0A41  3001               	
  3049                           u1815:
  3050  0A42                     	clrc
  3051  0A42  1003               	rlf	(___lwdiv@quotient),f
  3052  0A43  0DF5               	rlf	(___lwdiv@quotient+1),f
  3053  0A44  0DF6               	addlw	-1
  3054  0A45  3EFF               	skipz
  3055  0A46  1D03               	goto	u1815
  3056  0A47  2A42               	line	22
  3057                           	movf	(___lwdiv@divisor+1),w
  3058  0A48  0871               	subwf	(___lwdiv@dividend+1),w
  3059  0A49  0273               	skipz
  3060  0A4A  1D03               	goto	u1825
  3061  0A4B  2A4E               	movf	(___lwdiv@divisor),w
  3062  0A4C  0870               	subwf	(___lwdiv@dividend),w
  3063  0A4D  0272               u1825:
  3064  0A4E                     	skipc
  3065  0A4E  1C03               	goto	u1821
  3066  0A4F  2A51               	goto	u1820
  3067  0A50  2A52               u1821:
  3068  0A51                     	goto	l1713
  3069  0A51  2A5A               u1820:
  3070  0A52                     	line	23
  3071                           	
  3072                           l1709:	
  3073  0A52                     	movf	(___lwdiv@divisor),w
  3074  0A52  0870               	subwf	(___lwdiv@dividend),f
  3075  0A53  02F2               	movf	(___lwdiv@divisor+1),w
  3076  0A54  0871               	skipc
  3077  0A55  1C03               	decf	(___lwdiv@dividend+1),f
  3078  0A56  03F3               	subwf	(___lwdiv@dividend+1),f
  3079  0A57  02F3               	line	24
  3080                           	
  3081                           l1711:	
  3082  0A58                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3083  0A58  1475               	goto	l1713
  3084  0A59  2A5A               	line	25
  3085                           	
  3086                           l548:	
  3087  0A5A                     	line	26
  3088                           	
  3089                           l1713:	
  3090  0A5A                     	movlw	01h
  3091  0A5A  3001               	
  3092                           u1835:
  3093  0A5B                     	clrc
  3094  0A5B  1003               	rrf	(___lwdiv@divisor+1),f
  3095  0A5C  0CF1               	rrf	(___lwdiv@divisor),f
  3096  0A5D  0CF0               	addlw	-1
  3097  0A5E  3EFF               	skipz
  3098  0A5F  1D03               	goto	u1835
  3099  0A60  2A5B               	line	27
  3100                           	
  3101                           l1715:	
  3102  0A61                     	movlw	01h
  3103  0A61  3001               	subwf	(___lwdiv@counter),f
  3104  0A62  02F7               	btfss	status,2
  3105  0A63  1D03               	goto	u1841
  3106  0A64  2A66               	goto	u1840
  3107  0A65  2A67               u1841:
  3108  0A66                     	goto	l1707
  3109  0A66  2A41               u1840:
  3110  0A67                     	goto	l1717
  3111  0A67  2A69               	
  3112                           l549:	
  3113  0A68                     	goto	l1717
  3114  0A68  2A69               	line	28
  3115                           	
  3116                           l543:	
  3117  0A69                     	line	29
  3118                           	
  3119                           l1717:	
  3120  0A69                     	movf	(___lwdiv@quotient+1),w
  3121  0A69  0876               	movwf	(?___lwdiv+1)
  3122  0A6A  00F1               	movf	(___lwdiv@quotient),w
  3123  0A6B  0875               	movwf	(?___lwdiv)
  3124  0A6C  00F0               	goto	l550
  3125  0A6D  2A6E               	
  3126                           l1719:	
  3127  0A6E                     	line	30
  3128                           	
  3129                           l550:	
  3130  0A6E                     	return
  3131  0A6E  0008               	opt stack 0
  3132                           GLOBAL	__end_of___lwdiv
  3133                           	__end_of___lwdiv:
  3134  0A6F                     	signat	___lwdiv,8314
  3135                           	global	_setup
  3136                           
  3137 ;; *************** function _setup *****************
  3138 ;; Defined at:
  3139 ;;		line 85 in file "mainM.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          0       1       0       0       0
  3156 ;;      Totals:         0       1       0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    2
  3160 ;; This function calls:
  3161 ;;		_I2C_Master_Init
  3162 ;;		_clcLCD
  3163 ;;		_initLCD
  3164 ;;		_setCursorLCD
  3165 ;;		_writeStrLCD
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3171                           	file	"mainM.c"
  3172                           	line	85
  3173                           global __ptext6
  3174                           __ptext6:	;psect for function _setup
  3175  0A6F                     psect	text6
  3176                           	file	"mainM.c"
  3177                           	line	85
  3178                           	global	__size_of_setup
  3179                           	__size_of_setup	equ	__end_of_setup-_setup
  3180  005F                     	
  3181                           _setup:	
  3182  0A6F                     ;incstack = 0
  3183                           	opt	stack 5
  3184                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3185                           	line	87
  3186                           	
  3187                           l1905:	
  3188  0A6F                     ;mainM.c: 87:     ANSEL = 0;
  3189                           	bsf	status, 5	;RP0=1, select bank3
  3190  0A6F  1683               	bsf	status, 6	;RP1=1, select bank3
  3191  0A70  1703               	clrf	(392)^0180h	;volatile
  3192  0A71  0188               	line	88
  3193                           ;mainM.c: 88:     ANSELH = 0;
  3194                           	clrf	(393)^0180h	;volatile
  3195  0A72  0189               	line	89
  3196                           ;mainM.c: 89:     TRISB = 0;
  3197                           	bsf	status, 5	;RP0=1, select bank1
  3198  0A73  1683               	bcf	status, 6	;RP1=0, select bank1
  3199  0A74  1303               	clrf	(134)^080h	;volatile
  3200  0A75  0186               	line	90
  3201                           ;mainM.c: 90:     TRISD = 0;
  3202                           	clrf	(136)^080h	;volatile
  3203  0A76  0188               	line	91
  3204                           ;mainM.c: 91:     PORTB = 0;
  3205                           	bcf	status, 5	;RP0=0, select bank0
  3206  0A77  1283               	bcf	status, 6	;RP1=0, select bank0
  3207  0A78  1303               	clrf	(6)	;volatile
  3208  0A79  0186               	line	92
  3209                           ;mainM.c: 92:     PORTD = 0;
  3210                           	clrf	(8)	;volatile
  3211  0A7A  0188               	line	93
  3212                           	
  3213                           l1907:	
  3214  0A7B                     ;mainM.c: 93:     I2C_Master_Init(100000);
  3215                           	movlw	0
  3216  0A7B  3000               	movwf	(I2C_Master_Init@c+3)
  3217  0A7C  00A3               	movlw	01h
  3218  0A7D  3001               	movwf	(I2C_Master_Init@c+2)
  3219  0A7E  00A2               	movlw	086h
  3220  0A7F  3086               	movwf	(I2C_Master_Init@c+1)
  3221  0A80  00A1               	movlw	0A0h
  3222  0A81  30A0               	movwf	(I2C_Master_Init@c)
  3223  0A82  00A0               
  3224                           	fcall	_I2C_Master_Init
  3225  0A83  120A  158A  212D  120A  158A  	line	95
  3226                           	
  3227                           l1909:	
  3228  0A88                     ;mainM.c: 95:     initLCD();
  3229                           	fcall	_initLCD
  3230  0A88  120A  158A  2165  120A  158A  	line	96
  3231                           	
  3232                           l1911:	
  3233  0A8D                     ;mainM.c: 96:     clcLCD();
  3234                           	fcall	_clcLCD
  3235  0A8D  120A  158A  2064  120A  158A  	line	99
  3236                           	
  3237                           l1913:	
  3238  0A92                     ;mainM.c: 99:     setCursorLCD(1, 1);
  3239                           	clrf	(setCursorLCD@x)
  3240  0A92  01F3               	incf	(setCursorLCD@x),f
  3241  0A93  0AF3               	movlw	low(01h)
  3242  0A94  3001               	fcall	_setCursorLCD
  3243  0A95  120A  158A  20C8  120A  158A  	line	100
  3244                           	
  3245                           l1915:	
  3246  0A9A                     ;mainM.c: 100:     writeStrLCD("S1");
  3247                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3248  0A9A  300E               	movwf	(writeStrLCD@string)
  3249  0A9B  00F2               	movlw	80h
  3250  0A9C  3080               	movwf	(writeStrLCD@string+1)
  3251  0A9D  00F3               	fcall	_writeStrLCD
  3252  0A9E  120A  158A  21E0  120A  158A  	line	101
  3253                           	
  3254                           l1917:	
  3255  0AA3                     ;mainM.c: 101:     setCursorLCD(1, 7);
  3256                           	movlw	low(07h)
  3257  0AA3  3007               	bcf	status, 5	;RP0=0, select bank0
  3258  0AA4  1283               	bcf	status, 6	;RP1=0, select bank0
  3259  0AA5  1303               	movwf	(??_setup+0)+0
  3260  0AA6  00A8               	movf	(??_setup+0)+0,w
  3261  0AA7  0828               	movwf	(setCursorLCD@x)
  3262  0AA8  00F3               	movlw	low(01h)
  3263  0AA9  3001               	fcall	_setCursorLCD
  3264  0AAA  120A  158A  20C8  120A  158A  	line	102
  3265                           	
  3266                           l1919:	
  3267  0AAF                     ;mainM.c: 102:     writeStrLCD("S2");
  3268                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3269  0AAF  3011               	movwf	(writeStrLCD@string)
  3270  0AB0  00F2               	movlw	80h
  3271  0AB1  3080               	movwf	(writeStrLCD@string+1)
  3272  0AB2  00F3               	fcall	_writeStrLCD
  3273  0AB3  120A  158A  21E0  120A  158A  	line	103
  3274                           	
  3275                           l1921:	
  3276  0AB8                     ;mainM.c: 103:     setCursorLCD(1, 13);
  3277                           	movlw	low(0Dh)
  3278  0AB8  300D               	bcf	status, 5	;RP0=0, select bank0
  3279  0AB9  1283               	bcf	status, 6	;RP1=0, select bank0
  3280  0ABA  1303               	movwf	(??_setup+0)+0
  3281  0ABB  00A8               	movf	(??_setup+0)+0,w
  3282  0ABC  0828               	movwf	(setCursorLCD@x)
  3283  0ABD  00F3               	movlw	low(01h)
  3284  0ABE  3001               	fcall	_setCursorLCD
  3285  0ABF  120A  158A  20C8  120A  158A  	line	104
  3286                           	
  3287                           l1923:	
  3288  0AC4                     ;mainM.c: 104:     writeStrLCD("S3");
  3289                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3290  0AC4  3014               	movwf	(writeStrLCD@string)
  3291  0AC5  00F2               	movlw	80h
  3292  0AC6  3080               	movwf	(writeStrLCD@string+1)
  3293  0AC7  00F3               	fcall	_writeStrLCD
  3294  0AC8  120A  158A  21E0  120A  158A  	line	105
  3295                           	
  3296                           l63:	
  3297  0ACD                     	return
  3298  0ACD  0008               	opt stack 0
  3299                           GLOBAL	__end_of_setup
  3300                           	__end_of_setup:
  3301  0ACE                     	signat	_setup,89
  3302                           	global	_writeStrLCD
  3303                           
  3304 ;; *************** function _writeStrLCD *****************
  3305 ;; Defined at:
  3306 ;;		line 21 in file "LCD.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  string          2    2[COMMON] PTR unsigned char 
  3309 ;;		 -> writeIntLCD@buffer(4), STR_3(3), STR_2(3), STR_1(3), 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  cont            2    7[COMMON] int 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         2       0       0       0       0
  3322 ;;      Locals:         2       0       0       0       0
  3323 ;;      Temps:          3       0       0       0       0
  3324 ;;      Totals:         7       0       0       0       0
  3325 ;;Total ram usage:        7 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    1
  3328 ;; This function calls:
  3329 ;;		_writeCharLCD
  3330 ;; This function is called by:
  3331 ;;		_setup
  3332 ;;		_writeIntLCD
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3336                           	file	"LCD.c"
  3337                           	line	21
  3338                           global __ptext7
  3339                           __ptext7:	;psect for function _writeStrLCD
  3340  09E0                     psect	text7
  3341                           	file	"LCD.c"
  3342                           	line	21
  3343                           	global	__size_of_writeStrLCD
  3344                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3345  0044                     	
  3346                           _writeStrLCD:	
  3347  09E0                     ;incstack = 0
  3348                           	opt	stack 5
  3349                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3350                           	line	23
  3351                           	
  3352                           l1743:	
  3353  09E0                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3354                           	clrf	(writeStrLCD@cont)
  3355  09E0  01F7               	clrf	(writeStrLCD@cont+1)
  3356  09E1  01F8               	goto	l1749
  3357  09E2  2A06               	
  3358                           l146:	
  3359  09E3                     	line	24
  3360                           	
  3361                           l1745:	
  3362  09E3                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3363                           	movf	(writeStrLCD@cont),w
  3364  09E3  0877               	addwf	(writeStrLCD@string),w
  3365  09E4  0772               	movwf	(??_writeStrLCD+1)+0
  3366  09E5  00F5               	movf	(writeStrLCD@string+1),w
  3367  09E6  0873               	movwf	(??_writeStrLCD+0)+0
  3368  09E7  00F4               	skipnc
  3369  09E8  1803               	incf	(??_writeStrLCD+0)+0,f
  3370  09E9  0AF4               	btfss	(writeStrLCD@cont),7
  3371  09EA  1FF7               	goto	u1910
  3372  09EB  29ED               	decf	(??_writeStrLCD+0)+0,f
  3373  09EC  03F4               u1910:
  3374  09ED                     	movf	(??_writeStrLCD+0)+0,w
  3375  09ED  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3376  09EE  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3377  09EF  0876               	bcf	status, 5	;RP0=0, select bank0
  3378  09F0  1283               	bcf	status, 6	;RP1=0, select bank0
  3379  09F1  1303               	movwf	btemp+1
  3380  09F2  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3381  09F3  0875               	movwf	fsr0
  3382  09F4  0084               	fcall	stringtab
  3383  09F5  120A  158A  2000  120A  158A  	fcall	_writeCharLCD
  3384  09FA  120A  158A  20A5  120A  158A  	line	25
  3385                           	
  3386                           l1747:	
  3387  09FF                     ;LCD.c: 25:     }
  3388                           	movlw	01h
  3389  09FF  3001               	addwf	(writeStrLCD@cont),f
  3390  0A00  07F7               	skipnc
  3391  0A01  1803               	incf	(writeStrLCD@cont+1),f
  3392  0A02  0AF8               	movlw	0
  3393  0A03  3000               	addwf	(writeStrLCD@cont+1),f
  3394  0A04  07F8               	goto	l1749
  3395  0A05  2A06               	
  3396                           l145:	
  3397  0A06                     	
  3398                           l1749:	
  3399  0A06                     	movf	(writeStrLCD@cont),w
  3400  0A06  0877               	addwf	(writeStrLCD@string),w
  3401  0A07  0772               	movwf	(??_writeStrLCD+1)+0
  3402  0A08  00F5               	movf	(writeStrLCD@string+1),w
  3403  0A09  0873               	movwf	(??_writeStrLCD+0)+0
  3404  0A0A  00F4               	skipnc
  3405  0A0B  1803               	incf	(??_writeStrLCD+0)+0,f
  3406  0A0C  0AF4               	btfss	(writeStrLCD@cont),7
  3407  0A0D  1FF7               	goto	u1920
  3408  0A0E  2A10               	decf	(??_writeStrLCD+0)+0,f
  3409  0A0F  03F4               u1920:
  3410  0A10                     	movf	(??_writeStrLCD+0)+0,w
  3411  0A10  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3412  0A11  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3413  0A12  0876               	bcf	status, 5	;RP0=0, select bank0
  3414  0A13  1283               	bcf	status, 6	;RP1=0, select bank0
  3415  0A14  1303               	movwf	btemp+1
  3416  0A15  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3417  0A16  0875               	movwf	fsr0
  3418  0A17  0084               	fcall	stringtab
  3419  0A18  120A  158A  2000  120A  158A  	xorlw	0
  3420  0A1D  3A00               	skipz
  3421  0A1E  1D03               	goto	u1931
  3422  0A1F  2A21               	goto	u1930
  3423  0A20  2A22               u1931:
  3424  0A21                     	goto	l1745
  3425  0A21  29E3               u1930:
  3426  0A22                     	goto	l148
  3427  0A22  2A23               	
  3428                           l147:	
  3429  0A23                     	line	26
  3430                           	
  3431                           l148:	
  3432  0A23                     	return
  3433  0A23  0008               	opt stack 0
  3434                           GLOBAL	__end_of_writeStrLCD
  3435                           	__end_of_writeStrLCD:
  3436  0A24                     	signat	_writeStrLCD,4217
  3437                           	global	_writeCharLCD
  3438                           
  3439 ;; *************** function _writeCharLCD *****************
  3440 ;; Defined at:
  3441 ;;		line 28 in file "LCD.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  character       1    wreg     unsigned char 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  character       1    1[COMMON] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         0       0       0       0       0
  3456 ;;      Locals:         1       0       0       0       0
  3457 ;;      Temps:          1       0       0       0       0
  3458 ;;      Totals:         2       0       0       0       0
  3459 ;;Total ram usage:        2 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_writeStrLCD
  3465 ;;		_writeFloat
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3469                           	line	28
  3470                           global __ptext8
  3471                           __ptext8:	;psect for function _writeCharLCD
  3472  08A5                     psect	text8
  3473                           	file	"LCD.c"
  3474                           	line	28
  3475                           	global	__size_of_writeCharLCD
  3476                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3477  000F                     	
  3478                           _writeCharLCD:	
  3479  08A5                     ;incstack = 0
  3480                           	opt	stack 5
  3481                           ; Regs used in _writeCharLCD: [wreg]
  3482                           ;writeCharLCD@character stored from wreg
  3483                           	movwf	(writeCharLCD@character)
  3484  08A5  00F1               	line	29
  3485                           	
  3486                           l1687:	
  3487  08A6                     ;LCD.c: 29:    RD0 = 1;
  3488                           	bcf	status, 5	;RP0=0, select bank0
  3489  08A6  1283               	bcf	status, 6	;RP1=0, select bank0
  3490  08A7  1303               	bsf	(64/8),(64)&7	;volatile
  3491  08A8  1408               	line	30
  3492                           	
  3493                           l1689:	
  3494  08A9                     ;LCD.c: 30:    PORTB = character;
  3495                           	movf	(writeCharLCD@character),w
  3496  08A9  0871               	movwf	(6)	;volatile
  3497  08AA  0086               	line	31
  3498                           	
  3499                           l1691:	
  3500  08AB                     ;LCD.c: 31:    RD1 = 1;
  3501                           	bsf	(65/8),(65)&7	;volatile
  3502  08AB  1488               	line	32
  3503                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3504                           	opt asmopt_push
  3505                           opt asmopt_off
  3506                           	movlw	13
  3507  08AC  300D               movwf	((??_writeCharLCD+0)+0),f
  3508  08AD  00F0               	u3577:
  3509  08AE                     decfsz	(??_writeCharLCD+0)+0,f
  3510  08AE  0BF0               	goto	u3577
  3511  08AF  28AE               opt asmopt_pop
  3512                           
  3513                           	line	33
  3514                           	
  3515                           l1693:	
  3516  08B0                     ;LCD.c: 33:    RD1 = 0;
  3517                           	bcf	status, 5	;RP0=0, select bank0
  3518  08B0  1283               	bcf	status, 6	;RP1=0, select bank0
  3519  08B1  1303               	bcf	(65/8),(65)&7	;volatile
  3520  08B2  1088               	line	34
  3521                           	
  3522                           l151:	
  3523  08B3                     	return
  3524  08B3  0008               	opt stack 0
  3525                           GLOBAL	__end_of_writeCharLCD
  3526                           	__end_of_writeCharLCD:
  3527  08B4                     	signat	_writeCharLCD,4217
  3528                           	global	_setCursorLCD
  3529                           
  3530 ;; *************** function _setCursorLCD *****************
  3531 ;; Defined at:
  3532 ;;		line 8 in file "LCD.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  y               1    wreg     unsigned char 
  3535 ;;  x               1    3[COMMON] unsigned char 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  y               1    5[COMMON] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0, pclath, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3547 ;;      Params:         1       0       0       0       0
  3548 ;;      Locals:         1       0       0       0       0
  3549 ;;      Temps:          1       0       0       0       0
  3550 ;;      Totals:         3       0       0       0       0
  3551 ;;Total ram usage:        3 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    1
  3554 ;; This function calls:
  3555 ;;		_cmdLCD
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;;		_setup
  3559 ;;		_writeFloat
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3563                           	line	8
  3564                           global __ptext9
  3565                           __ptext9:	;psect for function _setCursorLCD
  3566  08C8                     psect	text9
  3567                           	file	"LCD.c"
  3568                           	line	8
  3569                           	global	__size_of_setCursorLCD
  3570                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  3571  001D                     	
  3572                           _setCursorLCD:	
  3573  08C8                     ;incstack = 0
  3574                           	opt	stack 5
  3575                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  3576                           ;setCursorLCD@y stored from wreg
  3577                           	movwf	(setCursorLCD@y)
  3578  08C8  00F5               	line	9
  3579                           	
  3580                           l1845:	
  3581  08C9                     ;LCD.c: 9:     if(y == 1){
  3582                           		decf	((setCursorLCD@y)),w
  3583  08C9  0375               	btfss	status,2
  3584  08CA  1D03               	goto	u2091
  3585  08CB  28CD               	goto	u2090
  3586  08CC  28CE               u2091:
  3587  08CD                     	goto	l1849
  3588  08CD  28D6               u2090:
  3589  08CE                     	line	10
  3590                           	
  3591                           l1847:	
  3592  08CE                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  3593                           	movf	(setCursorLCD@x),w
  3594  08CE  0873               	addlw	07Fh
  3595  08CF  3E7F               	movwf	(??_setCursorLCD+0)+0
  3596  08D0  00F4               	movf	(??_setCursorLCD+0)+0,w
  3597  08D1  0874               	bsf	status, 5	;RP0=1, select bank1
  3598  08D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3599  08D3  1303               	movwf	(_cursor)^080h
  3600  08D4  00AC               	line	11
  3601                           ;LCD.c: 11:     }else{
  3602                           	goto	l1851
  3603  08D5  28DE               	
  3604                           l137:	
  3605  08D6                     	line	12
  3606                           	
  3607                           l1849:	
  3608  08D6                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  3609                           	movf	(setCursorLCD@x),w
  3610  08D6  0873               	addlw	0BFh
  3611  08D7  3EBF               	movwf	(??_setCursorLCD+0)+0
  3612  08D8  00F4               	movf	(??_setCursorLCD+0)+0,w
  3613  08D9  0874               	bsf	status, 5	;RP0=1, select bank1
  3614  08DA  1683               	bcf	status, 6	;RP1=0, select bank1
  3615  08DB  1303               	movwf	(_cursor)^080h
  3616  08DC  00AC               	goto	l1851
  3617  08DD  28DE               	line	13
  3618                           ;LCD.c: 13:     }
  3619                           	
  3620                           l138:	
  3621  08DE                     	line	14
  3622                           	
  3623                           l1851:	
  3624  08DE                     ;LCD.c: 14:     cmdLCD(cursor);
  3625                           	movf	(_cursor)^080h,w
  3626  08DE  082C               	fcall	_cmdLCD
  3627  08DF  120A  158A  20B4  120A  158A  	line	15
  3628                           	
  3629                           l139:	
  3630  08E4                     	return
  3631  08E4  0008               	opt stack 0
  3632                           GLOBAL	__end_of_setCursorLCD
  3633                           	__end_of_setCursorLCD:
  3634  08E5                     	signat	_setCursorLCD,8313
  3635                           	global	_initLCD
  3636                           
  3637 ;; *************** function _initLCD *****************
  3638 ;; Defined at:
  3639 ;;		line 36 in file "LCD.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0
  3655 ;;      Temps:          2       0       0       0       0
  3656 ;;      Totals:         2       0       0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    1
  3660 ;; This function calls:
  3661 ;;		_cmdLCD
  3662 ;; This function is called by:
  3663 ;;		_setup
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3667                           	line	36
  3668                           global __ptext10
  3669                           __ptext10:	;psect for function _initLCD
  3670  0965                     psect	text10
  3671                           	file	"LCD.c"
  3672                           	line	36
  3673                           	global	__size_of_initLCD
  3674                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3675  003A                     	
  3676                           _initLCD:	
  3677  0965                     ;incstack = 0
  3678                           	opt	stack 5
  3679                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3680                           	line	37
  3681                           	
  3682                           l1867:	
  3683  0965                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  3684                           	opt asmopt_push
  3685                           opt asmopt_off
  3686                           movlw	20
  3687  0965  3014               movwf	((??_initLCD+0)+0+1),f
  3688  0966  00F4               	movlw	121
  3689  0967  3079               movwf	((??_initLCD+0)+0),f
  3690  0968  00F3               	u3587:
  3691  0969                     decfsz	((??_initLCD+0)+0),f
  3692  0969  0BF3               	goto	u3587
  3693  096A  2969               	decfsz	((??_initLCD+0)+0+1),f
  3694  096B  0BF4               	goto	u3587
  3695  096C  2969               	nop2
  3696  096D  296E               opt asmopt_pop
  3697                           
  3698                           	line	38
  3699                           	
  3700                           l1869:	
  3701  096E                     ;LCD.c: 38:     cmdLCD(0x030);
  3702                           	movlw	low(030h)
  3703  096E  3030               	fcall	_cmdLCD
  3704  096F  120A  158A  20B4  120A  158A  	line	39
  3705                           	
  3706                           l1871:	
  3707  0974                     ;LCD.c: 39:     cmdLCD(0x030);
  3708                           	movlw	low(030h)
  3709  0974  3030               	fcall	_cmdLCD
  3710  0975  120A  158A  20B4  120A  158A  	line	40
  3711                           	
  3712                           l1873:	
  3713  097A                     ;LCD.c: 40:     cmdLCD(0x030);
  3714                           	movlw	low(030h)
  3715  097A  3030               	fcall	_cmdLCD
  3716  097B  120A  158A  20B4  120A  158A  	line	42
  3717                           	
  3718                           l1875:	
  3719  0980                     ;LCD.c: 42:     cmdLCD(0x38);
  3720                           	movlw	low(038h)
  3721  0980  3038               	fcall	_cmdLCD
  3722  0981  120A  158A  20B4  120A  158A  	line	43
  3723                           	
  3724                           l1877:	
  3725  0986                     ;LCD.c: 43:     cmdLCD(0x10);
  3726                           	movlw	low(010h)
  3727  0986  3010               	fcall	_cmdLCD
  3728  0987  120A  158A  20B4  120A  158A  	line	44
  3729                           	
  3730                           l1879:	
  3731  098C                     ;LCD.c: 44:     cmdLCD(0x01);
  3732                           	movlw	low(01h)
  3733  098C  3001               	fcall	_cmdLCD
  3734  098D  120A  158A  20B4  120A  158A  	line	45
  3735                           	
  3736                           l1881:	
  3737  0992                     ;LCD.c: 45:     cmdLCD(0x06);
  3738                           	movlw	low(06h)
  3739  0992  3006               	fcall	_cmdLCD
  3740  0993  120A  158A  20B4  120A  158A  	line	46
  3741                           	
  3742                           l1883:	
  3743  0998                     ;LCD.c: 46:     cmdLCD(0x0E);
  3744                           	movlw	low(0Eh)
  3745  0998  300E               	fcall	_cmdLCD
  3746  0999  120A  158A  20B4  120A  158A  	line	47
  3747                           	
  3748                           l154:	
  3749  099E                     	return
  3750  099E  0008               	opt stack 0
  3751                           GLOBAL	__end_of_initLCD
  3752                           	__end_of_initLCD:
  3753  099F                     	signat	_initLCD,89
  3754                           	global	_clcLCD
  3755                           
  3756 ;; *************** function _clcLCD *****************
  3757 ;; Defined at:
  3758 ;;		line 17 in file "LCD.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    1
  3779 ;; This function calls:
  3780 ;;		_cmdLCD
  3781 ;; This function is called by:
  3782 ;;		_setup
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3786                           	line	17
  3787                           global __ptext11
  3788                           __ptext11:	;psect for function _clcLCD
  3789  0864                     psect	text11
  3790                           	file	"LCD.c"
  3791                           	line	17
  3792                           	global	__size_of_clcLCD
  3793                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  3794  0007                     	
  3795                           _clcLCD:	
  3796  0864                     ;incstack = 0
  3797                           	opt	stack 5
  3798                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  3799                           	line	18
  3800                           	
  3801                           l1885:	
  3802  0864                     ;LCD.c: 18:     cmdLCD(0x01);
  3803                           	movlw	low(01h)
  3804  0864  3001               	fcall	_cmdLCD
  3805  0865  120A  158A  20B4  120A  158A  	line	19
  3806                           	
  3807                           l142:	
  3808  086A                     	return
  3809  086A  0008               	opt stack 0
  3810                           GLOBAL	__end_of_clcLCD
  3811                           	__end_of_clcLCD:
  3812  086B                     	signat	_clcLCD,89
  3813                           	global	_cmdLCD
  3814                           
  3815 ;; *************** function _cmdLCD *****************
  3816 ;; Defined at:
  3817 ;;		line 49 in file "LCD.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  cmd             1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  cmd             1    2[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0
  3833 ;;      Temps:          2       0       0       0       0
  3834 ;;      Totals:         3       0       0       0       0
  3835 ;;Total ram usage:        3 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_setCursorLCD
  3841 ;;		_clcLCD
  3842 ;;		_initLCD
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3846                           	line	49
  3847                           global __ptext12
  3848                           __ptext12:	;psect for function _cmdLCD
  3849  08B4                     psect	text12
  3850                           	file	"LCD.c"
  3851                           	line	49
  3852                           	global	__size_of_cmdLCD
  3853                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  3854  0014                     	
  3855                           _cmdLCD:	
  3856  08B4                     ;incstack = 0
  3857                           	opt	stack 5
  3858                           ; Regs used in _cmdLCD: [wreg]
  3859                           ;cmdLCD@cmd stored from wreg
  3860                           	movwf	(cmdLCD@cmd)
  3861  08B4  00F2               	line	50
  3862                           	
  3863                           l1751:	
  3864  08B5                     ;LCD.c: 50:     RD0 = 0;
  3865                           	bcf	status, 5	;RP0=0, select bank0
  3866  08B5  1283               	bcf	status, 6	;RP1=0, select bank0
  3867  08B6  1303               	bcf	(64/8),(64)&7	;volatile
  3868  08B7  1008               	line	51
  3869                           	
  3870                           l1753:	
  3871  08B8                     ;LCD.c: 51:  PORTB = cmd;
  3872                           	movf	(cmdLCD@cmd),w
  3873  08B8  0872               	movwf	(6)	;volatile
  3874  08B9  0086               	line	52
  3875                           	
  3876                           l1755:	
  3877  08BA                     ;LCD.c: 52:  RD1 = 1;
  3878                           	bsf	(65/8),(65)&7	;volatile
  3879  08BA  1488               	line	53
  3880                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3881                           	opt asmopt_push
  3882                           opt asmopt_off
  3883                           movlw	6
  3884  08BB  3006               movwf	((??_cmdLCD+0)+0+1),f
  3885  08BC  00F1               	movlw	48
  3886  08BD  3030               movwf	((??_cmdLCD+0)+0),f
  3887  08BE  00F0               	u3597:
  3888  08BF                     decfsz	((??_cmdLCD+0)+0),f
  3889  08BF  0BF0               	goto	u3597
  3890  08C0  28BF               	decfsz	((??_cmdLCD+0)+0+1),f
  3891  08C1  0BF1               	goto	u3597
  3892  08C2  28BF               	nop
  3893  08C3  0000               opt asmopt_pop
  3894                           
  3895                           	line	54
  3896                           	
  3897                           l1757:	
  3898  08C4                     ;LCD.c: 54:     RD1 = 0;
  3899                           	bcf	status, 5	;RP0=0, select bank0
  3900  08C4  1283               	bcf	status, 6	;RP1=0, select bank0
  3901  08C5  1303               	bcf	(65/8),(65)&7	;volatile
  3902  08C6  1088               	line	55
  3903                           	
  3904                           l157:	
  3905  08C7                     	return
  3906  08C7  0008               	opt stack 0
  3907                           GLOBAL	__end_of_cmdLCD
  3908                           	__end_of_cmdLCD:
  3909  08C8                     	signat	_cmdLCD,4217
  3910                           	global	_I2C_Master_Init
  3911                           
  3912 ;; *************** function _I2C_Master_Init *****************
  3913 ;; Defined at:
  3914 ;;		line 16 in file "I2C.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  c               4    0[BANK0 ] const unsigned long 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       4       0       0       0
  3929 ;;      Locals:         0       0       0       0       0
  3930 ;;      Temps:          0       4       0       0       0
  3931 ;;      Totals:         0       8       0       0       0
  3932 ;;Total ram usage:        8 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    1
  3935 ;; This function calls:
  3936 ;;		___lldiv
  3937 ;; This function is called by:
  3938 ;;		_setup
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3942                           	file	"I2C.c"
  3943                           	line	16
  3944                           global __ptext13
  3945                           __ptext13:	;psect for function _I2C_Master_Init
  3946  092D                     psect	text13
  3947                           	file	"I2C.c"
  3948                           	line	16
  3949                           	global	__size_of_I2C_Master_Init
  3950                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  3951  0038                     	
  3952                           _I2C_Master_Init:	
  3953  092D                     ;incstack = 0
  3954                           	opt	stack 5
  3955                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3956                           	line	18
  3957                           	
  3958                           l1855:	
  3959  092D                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  3960                           	movlw	low(028h)
  3961  092D  3028               	bcf	status, 5	;RP0=0, select bank0
  3962  092E  1283               	bcf	status, 6	;RP1=0, select bank0
  3963  092F  1303               	movwf	(20)	;volatile
  3964  0930  0094               	line	19
  3965                           	
  3966                           l1857:	
  3967  0931                     ;I2C.c: 19:     SSPCON2 = 0;
  3968                           	bsf	status, 5	;RP0=1, select bank1
  3969  0931  1683               	bcf	status, 6	;RP1=0, select bank1
  3970  0932  1303               	clrf	(145)^080h	;volatile
  3971  0933  0191               	line	20
  3972                           	
  3973                           l1859:	
  3974  0934                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  3975                           	bcf	status, 5	;RP0=0, select bank0
  3976  0934  1283               	bcf	status, 6	;RP1=0, select bank0
  3977  0935  1303               	movf	(I2C_Master_Init@c),w
  3978  0936  0820               	movwf	(??_I2C_Master_Init+0)+0
  3979  0937  00A4               	movf	(I2C_Master_Init@c+1),w
  3980  0938  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  3981  0939  00A5               	movf	(I2C_Master_Init@c+2),w
  3982  093A  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  3983  093B  00A6               	movf	(I2C_Master_Init@c+3),w
  3984  093C  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  3985  093D  00A7               	movlw	02h
  3986  093E  3002               u2105:
  3987  093F                     	clrc
  3988  093F  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  3989  0940  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  3990  0941  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  3991  0942  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  3992  0943  0DA7               u2100:
  3993  0944                     	addlw	-1
  3994  0944  3EFF               	skipz
  3995  0945  1D03               	goto	u2105
  3996  0946  293F               	movf	3+(??_I2C_Master_Init+0)+0,w
  3997  0947  0827               	movwf	(___lldiv@divisor+3)
  3998  0948  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  3999  0949  0826               	movwf	(___lldiv@divisor+2)
  4000  094A  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4001  094B  0825               	movwf	(___lldiv@divisor+1)
  4002  094C  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4003  094D  0824               	movwf	(___lldiv@divisor)
  4004  094E  00F0               
  4005                           	movlw	0
  4006  094F  3000               	movwf	(___lldiv@dividend+3)
  4007  0950  00F7               	movlw	03Dh
  4008  0951  303D               	movwf	(___lldiv@dividend+2)
  4009  0952  00F6               	movlw	09h
  4010  0953  3009               	movwf	(___lldiv@dividend+1)
  4011  0954  00F5               	movlw	0
  4012  0955  3000               	movwf	(___lldiv@dividend)
  4013  0956  00F4               
  4014                           	fcall	___lldiv
  4015  0957  120A  158A  232E  120A  158A  	movf	(0+(?___lldiv)),w
  4016  095C  0870               	addlw	0FFh
  4017  095D  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4018  095E  1683               	bcf	status, 6	;RP1=0, select bank1
  4019  095F  1303               	movwf	(147)^080h	;volatile
  4020  0960  0093               	line	21
  4021                           	
  4022                           l1861:	
  4023  0961                     ;I2C.c: 21:     SSPSTAT = 0;
  4024                           	clrf	(148)^080h	;volatile
  4025  0961  0194               	line	22
  4026                           	
  4027                           l1863:	
  4028  0962                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4029                           	bsf	(135)^080h,3	;volatile
  4030  0962  1587               	line	23
  4031                           	
  4032                           l1865:	
  4033  0963                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4034                           	bsf	(135)^080h,4	;volatile
  4035  0963  1607               	line	24
  4036                           	
  4037                           l92:	
  4038  0964                     	return
  4039  0964  0008               	opt stack 0
  4040                           GLOBAL	__end_of_I2C_Master_Init
  4041                           	__end_of_I2C_Master_Init:
  4042  0965                     	signat	_I2C_Master_Init,4217
  4043                           	global	___lldiv
  4044                           
  4045 ;; *************** function ___lldiv *****************
  4046 ;; Defined at:
  4047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  divisor         4    0[COMMON] unsigned long 
  4050 ;;  dividend        4    4[COMMON] unsigned long 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  quotient        4    9[COMMON] unsigned long 
  4053 ;;  counter         1   13[COMMON] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  4    0[COMMON] unsigned long 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         8       0       0       0       0
  4064 ;;      Locals:         5       0       0       0       0
  4065 ;;      Temps:          1       0       0       0       0
  4066 ;;      Totals:        14       0       0       0       0
  4067 ;;Total ram usage:       14 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_I2C_Master_Init
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4076                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4077                           	line	5
  4078                           global __ptext14
  4079                           __ptext14:	;psect for function ___lldiv
  4080  0B2E                     psect	text14
  4081                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4082                           	line	5
  4083                           	global	__size_of___lldiv
  4084                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4085  006D                     	
  4086                           ___lldiv:	
  4087  0B2E                     ;incstack = 0
  4088                           	opt	stack 5
  4089                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4090                           	line	13
  4091                           	
  4092                           l1821:	
  4093  0B2E                     	movlw	high highword(0)
  4094  0B2E  3000               	movwf	(___lldiv@quotient+3)
  4095  0B2F  00FC               	movlw	low highword(0)
  4096  0B30  3000               	movwf	(___lldiv@quotient+2)
  4097  0B31  00FB               	movlw	high(0)
  4098  0B32  3000               	movwf	(___lldiv@quotient+1)
  4099  0B33  00FA               	movlw	low(0)
  4100  0B34  3000               	movwf	(___lldiv@quotient)
  4101  0B35  00F9               
  4102                           	line	14
  4103                           	movf	(___lldiv@divisor+3),w
  4104  0B36  0873               	iorwf	(___lldiv@divisor+2),w
  4105  0B37  0472               	iorwf	(___lldiv@divisor+1),w
  4106  0B38  0471               	iorwf	(___lldiv@divisor),w
  4107  0B39  0470               	skipnz
  4108  0B3A  1903               	goto	u2021
  4109  0B3B  2B3D               	goto	u2020
  4110  0B3C  2B3E               u2021:
  4111  0B3D                     	goto	l1841
  4112  0B3D  2B91               u2020:
  4113  0B3E                     	line	15
  4114                           	
  4115                           l1823:	
  4116  0B3E                     	clrf	(___lldiv@counter)
  4117  0B3E  01FD               	incf	(___lldiv@counter),f
  4118  0B3F  0AFD               	line	16
  4119                           	goto	l1827
  4120  0B40  2B4F               	
  4121                           l309:	
  4122  0B41                     	line	17
  4123                           	
  4124                           l1825:	
  4125  0B41                     	movlw	01h
  4126  0B41  3001               	movwf	(??___lldiv+0)+0
  4127  0B42  00F8               u2035:
  4128  0B43                     	clrc
  4129  0B43  1003               	rlf	(___lldiv@divisor),f
  4130  0B44  0DF0               	rlf	(___lldiv@divisor+1),f
  4131  0B45  0DF1               	rlf	(___lldiv@divisor+2),f
  4132  0B46  0DF2               	rlf	(___lldiv@divisor+3),f
  4133  0B47  0DF3               	decfsz	(??___lldiv+0)+0
  4134  0B48  0BF8               	goto	u2035
  4135  0B49  2B43               	line	18
  4136                           	movlw	low(01h)
  4137  0B4A  3001               	movwf	(??___lldiv+0)+0
  4138  0B4B  00F8               	movf	(??___lldiv+0)+0,w
  4139  0B4C  0878               	addwf	(___lldiv@counter),f
  4140  0B4D  07FD               	goto	l1827
  4141  0B4E  2B4F               	line	19
  4142                           	
  4143                           l308:	
  4144  0B4F                     	line	16
  4145                           	
  4146                           l1827:	
  4147  0B4F                     	btfss	(___lldiv@divisor+3),(31)&7
  4148  0B4F  1FF3               	goto	u2041
  4149  0B50  2B52               	goto	u2040
  4150  0B51  2B53               u2041:
  4151  0B52                     	goto	l1825
  4152  0B52  2B41               u2040:
  4153  0B53                     	goto	l1829
  4154  0B53  2B55               	
  4155                           l310:	
  4156  0B54                     	goto	l1829
  4157  0B54  2B55               	line	20
  4158                           	
  4159                           l311:	
  4160  0B55                     	line	21
  4161                           	
  4162                           l1829:	
  4163  0B55                     	movlw	01h
  4164  0B55  3001               	movwf	(??___lldiv+0)+0
  4165  0B56  00F8               u2055:
  4166  0B57                     	clrc
  4167  0B57  1003               	rlf	(___lldiv@quotient),f
  4168  0B58  0DF9               	rlf	(___lldiv@quotient+1),f
  4169  0B59  0DFA               	rlf	(___lldiv@quotient+2),f
  4170  0B5A  0DFB               	rlf	(___lldiv@quotient+3),f
  4171  0B5B  0DFC               	decfsz	(??___lldiv+0)+0
  4172  0B5C  0BF8               	goto	u2055
  4173  0B5D  2B57               	line	22
  4174                           	
  4175                           l1831:	
  4176  0B5E                     	movf	(___lldiv@divisor+3),w
  4177  0B5E  0873               	subwf	(___lldiv@dividend+3),w
  4178  0B5F  0277               	skipz
  4179  0B60  1D03               	goto	u2065
  4180  0B61  2B6C               	movf	(___lldiv@divisor+2),w
  4181  0B62  0872               	subwf	(___lldiv@dividend+2),w
  4182  0B63  0276               	skipz
  4183  0B64  1D03               	goto	u2065
  4184  0B65  2B6C               	movf	(___lldiv@divisor+1),w
  4185  0B66  0871               	subwf	(___lldiv@dividend+1),w
  4186  0B67  0275               	skipz
  4187  0B68  1D03               	goto	u2065
  4188  0B69  2B6C               	movf	(___lldiv@divisor),w
  4189  0B6A  0870               	subwf	(___lldiv@dividend),w
  4190  0B6B  0274               u2065:
  4191  0B6C                     	skipc
  4192  0B6C  1C03               	goto	u2061
  4193  0B6D  2B6F               	goto	u2060
  4194  0B6E  2B70               u2061:
  4195  0B6F                     	goto	l1837
  4196  0B6F  2B80               u2060:
  4197  0B70                     	line	23
  4198                           	
  4199                           l1833:	
  4200  0B70                     	movf	(___lldiv@divisor),w
  4201  0B70  0870               	subwf	(___lldiv@dividend),f
  4202  0B71  02F4               	movf	(___lldiv@divisor+1),w
  4203  0B72  0871               	skipc
  4204  0B73  1C03               	incfsz	(___lldiv@divisor+1),w
  4205  0B74  0F71               	subwf	(___lldiv@dividend+1),f
  4206  0B75  02F5               	movf	(___lldiv@divisor+2),w
  4207  0B76  0872               	skipc
  4208  0B77  1C03               	incfsz	(___lldiv@divisor+2),w
  4209  0B78  0F72               	subwf	(___lldiv@dividend+2),f
  4210  0B79  02F6               	movf	(___lldiv@divisor+3),w
  4211  0B7A  0873               	skipc
  4212  0B7B  1C03               	incfsz	(___lldiv@divisor+3),w
  4213  0B7C  0F73               	subwf	(___lldiv@dividend+3),f
  4214  0B7D  02F7               	line	24
  4215                           	
  4216                           l1835:	
  4217  0B7E                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4218  0B7E  1479               	goto	l1837
  4219  0B7F  2B80               	line	25
  4220                           	
  4221                           l312:	
  4222  0B80                     	line	26
  4223                           	
  4224                           l1837:	
  4225  0B80                     	movlw	01h
  4226  0B80  3001               u2075:
  4227  0B81                     	clrc
  4228  0B81  1003               	rrf	(___lldiv@divisor+3),f
  4229  0B82  0CF3               	rrf	(___lldiv@divisor+2),f
  4230  0B83  0CF2               	rrf	(___lldiv@divisor+1),f
  4231  0B84  0CF1               	rrf	(___lldiv@divisor),f
  4232  0B85  0CF0               	addlw	-1
  4233  0B86  3EFF               	skipz
  4234  0B87  1D03               	goto	u2075
  4235  0B88  2B81               
  4236                           	line	27
  4237                           	
  4238                           l1839:	
  4239  0B89                     	movlw	01h
  4240  0B89  3001               	subwf	(___lldiv@counter),f
  4241  0B8A  02FD               	btfss	status,2
  4242  0B8B  1D03               	goto	u2081
  4243  0B8C  2B8E               	goto	u2080
  4244  0B8D  2B8F               u2081:
  4245  0B8E                     	goto	l1829
  4246  0B8E  2B55               u2080:
  4247  0B8F                     	goto	l1841
  4248  0B8F  2B91               	
  4249                           l313:	
  4250  0B90                     	goto	l1841
  4251  0B90  2B91               	line	28
  4252                           	
  4253                           l307:	
  4254  0B91                     	line	29
  4255                           	
  4256                           l1841:	
  4257  0B91                     	movf	(___lldiv@quotient+3),w
  4258  0B91  087C               	movwf	(?___lldiv+3)
  4259  0B92  00F3               	movf	(___lldiv@quotient+2),w
  4260  0B93  087B               	movwf	(?___lldiv+2)
  4261  0B94  00F2               	movf	(___lldiv@quotient+1),w
  4262  0B95  087A               	movwf	(?___lldiv+1)
  4263  0B96  00F1               	movf	(___lldiv@quotient),w
  4264  0B97  0879               	movwf	(?___lldiv)
  4265  0B98  00F0               
  4266                           	goto	l314
  4267  0B99  2B9A               	
  4268                           l1843:	
  4269  0B9A                     	line	30
  4270                           	
  4271                           l314:	
  4272  0B9A                     	return
  4273  0B9A  0008               	opt stack 0
  4274                           GLOBAL	__end_of___lldiv
  4275                           	__end_of___lldiv:
  4276  0B9B                     	signat	___lldiv,8316
  4277                           	global	___xxtofl
  4278                           
  4279 ;; *************** function ___xxtofl *****************
  4280 ;; Defined at:
  4281 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  sign            1    wreg     unsigned char 
  4284 ;;  val             4    0[COMMON] long 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  sign            1    8[COMMON] unsigned char 
  4287 ;;  arg             4   10[COMMON] unsigned long 
  4288 ;;  exp             1    9[COMMON] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  4    0[COMMON] unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4298 ;;      Params:         4       0       0       0       0
  4299 ;;      Locals:         6       0       0       0       0
  4300 ;;      Temps:          4       0       0       0       0
  4301 ;;      Totals:        14       0       0       0       0
  4302 ;;Total ram usage:       14 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4311                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4312                           	line	10
  4313                           global __ptext15
  4314                           __ptext15:	;psect for function ___xxtofl
  4315  0C35                     psect	text15
  4316                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4317                           	line	10
  4318                           	global	__size_of___xxtofl
  4319                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4320  00C2                     	
  4321                           ___xxtofl:	
  4322  0C35                     ;incstack = 0
  4323                           	opt	stack 7
  4324                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4325                           ;___xxtofl@sign stored from wreg
  4326                           	movwf	(___xxtofl@sign)
  4327  0C35  00F8               	line	15
  4328                           	
  4329                           l2493:	
  4330  0C36                     	movf	((___xxtofl@sign)),w
  4331  0C36  0878               	btfsc	status,2
  4332  0C37  1903               	goto	u3411
  4333  0C38  2C3A               	goto	u3410
  4334  0C39  2C3B               u3411:
  4335  0C3A                     	goto	l2499
  4336  0C3A  2C4F               u3410:
  4337  0C3B                     	
  4338                           l2495:	
  4339  0C3B                     	btfss	(___xxtofl@val+3),7
  4340  0C3B  1FF3               	goto	u3421
  4341  0C3C  2C3E               	goto	u3420
  4342  0C3D  2C3F               u3421:
  4343  0C3E                     	goto	l2499
  4344  0C3E  2C4F               u3420:
  4345  0C3F                     	line	16
  4346                           	
  4347                           l2497:	
  4348  0C3F                     	comf	(___xxtofl@val)+0,w
  4349  0C3F  0970               	movwf	(___xxtofl@arg)
  4350  0C40  00FA               	comf	(___xxtofl@val)+1,w
  4351  0C41  0971               	movwf	(___xxtofl@arg+1)
  4352  0C42  00FB               	comf	(___xxtofl@val)+2,w
  4353  0C43  0972               	movwf	(___xxtofl@arg+2)
  4354  0C44  00FC               	comf	(___xxtofl@val)+3,w
  4355  0C45  0973               	movwf	(___xxtofl@arg+3)
  4356  0C46  00FD               	incf	(___xxtofl@arg),f
  4357  0C47  0AFA               	skipnz
  4358  0C48  1903               	incf	(___xxtofl@arg+1),f
  4359  0C49  0AFB               	skipnz
  4360  0C4A  1903               	incf	(___xxtofl@arg+2),f
  4361  0C4B  0AFC               	skipnz
  4362  0C4C  1903               	incf	(___xxtofl@arg+3),f
  4363  0C4D  0AFD               	line	17
  4364                           	goto	l686
  4365  0C4E  2C57               	line	18
  4366                           	
  4367                           l685:	
  4368  0C4F                     	line	19
  4369                           	
  4370                           l2499:	
  4371  0C4F                     	movf	(___xxtofl@val+3),w
  4372  0C4F  0873               	movwf	(___xxtofl@arg+3)
  4373  0C50  00FD               	movf	(___xxtofl@val+2),w
  4374  0C51  0872               	movwf	(___xxtofl@arg+2)
  4375  0C52  00FC               	movf	(___xxtofl@val+1),w
  4376  0C53  0871               	movwf	(___xxtofl@arg+1)
  4377  0C54  00FB               	movf	(___xxtofl@val),w
  4378  0C55  0870               	movwf	(___xxtofl@arg)
  4379  0C56  00FA               
  4380                           	line	20
  4381                           	
  4382                           l686:	
  4383  0C57                     	line	21
  4384                           	movf	(___xxtofl@val+3),w
  4385  0C57  0873               	iorwf	(___xxtofl@val+2),w
  4386  0C58  0472               	iorwf	(___xxtofl@val+1),w
  4387  0C59  0471               	iorwf	(___xxtofl@val),w
  4388  0C5A  0470               	skipz
  4389  0C5B  1D03               	goto	u3431
  4390  0C5C  2C5E               	goto	u3430
  4391  0C5D  2C5F               u3431:
  4392  0C5E                     	goto	l2505
  4393  0C5E  2C69               u3430:
  4394  0C5F                     	line	22
  4395                           	
  4396                           l2501:	
  4397  0C5F                     	movlw	0x0
  4398  0C5F  3000               	movwf	(?___xxtofl+3)
  4399  0C60  00F3               	movlw	0x0
  4400  0C61  3000               	movwf	(?___xxtofl+2)
  4401  0C62  00F2               	movlw	0x0
  4402  0C63  3000               	movwf	(?___xxtofl+1)
  4403  0C64  00F1               	movlw	0x0
  4404  0C65  3000               	movwf	(?___xxtofl)
  4405  0C66  00F0               
  4406                           	goto	l688
  4407  0C67  2CF6               	
  4408                           l2503:	
  4409  0C68                     	goto	l688
  4410  0C68  2CF6               	
  4411                           l687:	
  4412  0C69                     	line	23
  4413                           	
  4414                           l2505:	
  4415  0C69                     	movlw	low(096h)
  4416  0C69  3096               	movwf	(??___xxtofl+0)+0
  4417  0C6A  00F4               	movf	(??___xxtofl+0)+0,w
  4418  0C6B  0874               	movwf	(___xxtofl@exp)
  4419  0C6C  00F9               	line	24
  4420                           	goto	l2509
  4421  0C6D  2C7C               	
  4422                           l690:	
  4423  0C6E                     	line	25
  4424                           	
  4425                           l2507:	
  4426  0C6E                     	movlw	low(01h)
  4427  0C6E  3001               	movwf	(??___xxtofl+0)+0
  4428  0C6F  00F4               	movf	(??___xxtofl+0)+0,w
  4429  0C70  0874               	addwf	(___xxtofl@exp),f
  4430  0C71  07F9               	line	26
  4431                           	movlw	01h
  4432  0C72  3001               u3445:
  4433  0C73                     	clrc
  4434  0C73  1003               	rrf	(___xxtofl@arg+3),f
  4435  0C74  0CFD               	rrf	(___xxtofl@arg+2),f
  4436  0C75  0CFC               	rrf	(___xxtofl@arg+1),f
  4437  0C76  0CFB               	rrf	(___xxtofl@arg),f
  4438  0C77  0CFA               	addlw	-1
  4439  0C78  3EFF               	skipz
  4440  0C79  1D03               	goto	u3445
  4441  0C7A  2C73               
  4442                           	goto	l2509
  4443  0C7B  2C7C               	line	27
  4444                           	
  4445                           l689:	
  4446  0C7C                     	line	24
  4447                           	
  4448                           l2509:	
  4449  0C7C                     	movlw	high highword(0FE000000h)
  4450  0C7C  30FE               	andwf	(___xxtofl@arg+3),w
  4451  0C7D  057D               	btfss	status,2
  4452  0C7E  1D03               	goto	u3451
  4453  0C7F  2C81               	goto	u3450
  4454  0C80  2C82               u3451:
  4455  0C81                     	goto	l2507
  4456  0C81  2C6E               u3450:
  4457  0C82                     	goto	l692
  4458  0C82  2C9F               	
  4459                           l691:	
  4460  0C83                     	line	28
  4461                           	goto	l692
  4462  0C83  2C9F               	
  4463                           l693:	
  4464  0C84                     	line	29
  4465                           	
  4466                           l2511:	
  4467  0C84                     	movlw	low(01h)
  4468  0C84  3001               	movwf	(??___xxtofl+0)+0
  4469  0C85  00F4               	movf	(??___xxtofl+0)+0,w
  4470  0C86  0874               	addwf	(___xxtofl@exp),f
  4471  0C87  07F9               	line	30
  4472                           	
  4473                           l2513:	
  4474  0C88                     	movlw	01h
  4475  0C88  3001               	addwf	(___xxtofl@arg),f
  4476  0C89  07FA               	movlw	0
  4477  0C8A  3000               	skipnc
  4478  0C8B  1803               movlw 1
  4479  0C8C  3001               	addwf	(___xxtofl@arg+1),f
  4480  0C8D  07FB               	movlw	0
  4481  0C8E  3000               	skipnc
  4482  0C8F  1803               movlw 1
  4483  0C90  3001               	addwf	(___xxtofl@arg+2),f
  4484  0C91  07FC               	movlw	0
  4485  0C92  3000               	skipnc
  4486  0C93  1803               movlw 1
  4487  0C94  3001               	addwf	(___xxtofl@arg+3),f
  4488  0C95  07FD               	line	31
  4489                           	
  4490                           l2515:	
  4491  0C96                     	movlw	01h
  4492  0C96  3001               u3465:
  4493  0C97                     	clrc
  4494  0C97  1003               	rrf	(___xxtofl@arg+3),f
  4495  0C98  0CFD               	rrf	(___xxtofl@arg+2),f
  4496  0C99  0CFC               	rrf	(___xxtofl@arg+1),f
  4497  0C9A  0CFB               	rrf	(___xxtofl@arg),f
  4498  0C9B  0CFA               	addlw	-1
  4499  0C9C  3EFF               	skipz
  4500  0C9D  1D03               	goto	u3465
  4501  0C9E  2C97               
  4502                           	line	32
  4503                           	
  4504                           l692:	
  4505  0C9F                     	line	28
  4506                           	movlw	high highword(0FF000000h)
  4507  0C9F  30FF               	andwf	(___xxtofl@arg+3),w
  4508  0CA0  057D               	btfss	status,2
  4509  0CA1  1D03               	goto	u3471
  4510  0CA2  2CA4               	goto	u3470
  4511  0CA3  2CA5               u3471:
  4512  0CA4                     	goto	l2511
  4513  0CA4  2C84               u3470:
  4514  0CA5                     	goto	l2519
  4515  0CA5  2CB3               	
  4516                           l694:	
  4517  0CA6                     	line	33
  4518                           	goto	l2519
  4519  0CA6  2CB3               	
  4520                           l696:	
  4521  0CA7                     	line	34
  4522                           	
  4523                           l2517:	
  4524  0CA7                     	movlw	01h
  4525  0CA7  3001               	subwf	(___xxtofl@exp),f
  4526  0CA8  02F9               	line	35
  4527                           	movlw	01h
  4528  0CA9  3001               	movwf	(??___xxtofl+0)+0
  4529  0CAA  00F4               u3485:
  4530  0CAB                     	clrc
  4531  0CAB  1003               	rlf	(___xxtofl@arg),f
  4532  0CAC  0DFA               	rlf	(___xxtofl@arg+1),f
  4533  0CAD  0DFB               	rlf	(___xxtofl@arg+2),f
  4534  0CAE  0DFC               	rlf	(___xxtofl@arg+3),f
  4535  0CAF  0DFD               	decfsz	(??___xxtofl+0)+0
  4536  0CB0  0BF4               	goto	u3485
  4537  0CB1  2CAB               	goto	l2519
  4538  0CB2  2CB3               	line	36
  4539                           	
  4540                           l695:	
  4541  0CB3                     	line	33
  4542                           	
  4543                           l2519:	
  4544  0CB3                     	btfsc	(___xxtofl@arg+2),(23)&7
  4545  0CB3  1BFC               	goto	u3491
  4546  0CB4  2CB6               	goto	u3490
  4547  0CB5  2CB7               u3491:
  4548  0CB6                     	goto	l699
  4549  0CB6  2CBE               u3490:
  4550  0CB7                     	
  4551                           l2521:	
  4552  0CB7                     	movlw	low(02h)
  4553  0CB7  3002               	subwf	(___xxtofl@exp),w
  4554  0CB8  0279               	skipnc
  4555  0CB9  1803               	goto	u3501
  4556  0CBA  2CBC               	goto	u3500
  4557  0CBB  2CBD               u3501:
  4558  0CBC                     	goto	l2517
  4559  0CBC  2CA7               u3500:
  4560  0CBD                     	goto	l699
  4561  0CBD  2CBE               	
  4562                           l698:	
  4563  0CBE                     	
  4564                           l699:	
  4565  0CBE                     	line	37
  4566                           	btfsc	(___xxtofl@exp),(0)&7
  4567  0CBE  1879               	goto	u3511
  4568  0CBF  2CC1               	goto	u3510
  4569  0CC0  2CC2               u3511:
  4570  0CC1                     	goto	l700
  4571  0CC1  2CCA               u3510:
  4572  0CC2                     	line	38
  4573                           	
  4574                           l2523:	
  4575  0CC2                     	movlw	0FFh
  4576  0CC2  30FF               	andwf	(___xxtofl@arg),f
  4577  0CC3  05FA               	movlw	0FFh
  4578  0CC4  30FF               	andwf	(___xxtofl@arg+1),f
  4579  0CC5  05FB               	movlw	07Fh
  4580  0CC6  307F               	andwf	(___xxtofl@arg+2),f
  4581  0CC7  05FC               	movlw	0FFh
  4582  0CC8  30FF               	andwf	(___xxtofl@arg+3),f
  4583  0CC9  05FD               	
  4584                           l700:	
  4585  0CCA                     	line	39
  4586                           	clrc
  4587  0CCA  1003               	rrf	(___xxtofl@exp),f
  4588  0CCB  0CF9               
  4589                           	line	40
  4590                           	
  4591                           l2525:	
  4592  0CCC                     	movf	(___xxtofl@exp),w
  4593  0CCC  0879               	movwf	(??___xxtofl+0)+0
  4594  0CCD  00F4               	clrf	(??___xxtofl+0)+0+1
  4595  0CCE  01F5               	clrf	(??___xxtofl+0)+0+2
  4596  0CCF  01F6               	clrf	(??___xxtofl+0)+0+3
  4597  0CD0  01F7               	movlw	018h
  4598  0CD1  3018               u3525:
  4599  0CD2                     	clrc
  4600  0CD2  1003               	rlf	(??___xxtofl+0)+0,f
  4601  0CD3  0DF4               	rlf	(??___xxtofl+0)+1,f
  4602  0CD4  0DF5               	rlf	(??___xxtofl+0)+2,f
  4603  0CD5  0DF6               	rlf	(??___xxtofl+0)+3,f
  4604  0CD6  0DF7               u3520:
  4605  0CD7                     	addlw	-1
  4606  0CD7  3EFF               	skipz
  4607  0CD8  1D03               	goto	u3525
  4608  0CD9  2CD2               	movf	0+(??___xxtofl+0)+0,w
  4609  0CDA  0874               	iorwf	(___xxtofl@arg),f
  4610  0CDB  04FA               	movf	1+(??___xxtofl+0)+0,w
  4611  0CDC  0875               	iorwf	(___xxtofl@arg+1),f
  4612  0CDD  04FB               	movf	2+(??___xxtofl+0)+0,w
  4613  0CDE  0876               	iorwf	(___xxtofl@arg+2),f
  4614  0CDF  04FC               	movf	3+(??___xxtofl+0)+0,w
  4615  0CE0  0877               	iorwf	(___xxtofl@arg+3),f
  4616  0CE1  04FD               	line	41
  4617                           	
  4618                           l2527:	
  4619  0CE2                     	movf	((___xxtofl@sign)),w
  4620  0CE2  0878               	btfsc	status,2
  4621  0CE3  1903               	goto	u3531
  4622  0CE4  2CE6               	goto	u3530
  4623  0CE5  2CE7               u3531:
  4624  0CE6                     	goto	l2533
  4625  0CE6  2CED               u3530:
  4626  0CE7                     	
  4627                           l2529:	
  4628  0CE7                     	btfss	(___xxtofl@val+3),7
  4629  0CE7  1FF3               	goto	u3541
  4630  0CE8  2CEA               	goto	u3540
  4631  0CE9  2CEB               u3541:
  4632  0CEA                     	goto	l2533
  4633  0CEA  2CED               u3540:
  4634  0CEB                     	line	42
  4635                           	
  4636                           l2531:	
  4637  0CEB                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4638  0CEB  17FD               	goto	l2533
  4639  0CEC  2CED               	
  4640                           l701:	
  4641  0CED                     	line	43
  4642                           	
  4643                           l2533:	
  4644  0CED                     	movf	(___xxtofl@arg+3),w
  4645  0CED  087D               	movwf	(?___xxtofl+3)
  4646  0CEE  00F3               	movf	(___xxtofl@arg+2),w
  4647  0CEF  087C               	movwf	(?___xxtofl+2)
  4648  0CF0  00F2               	movf	(___xxtofl@arg+1),w
  4649  0CF1  087B               	movwf	(?___xxtofl+1)
  4650  0CF2  00F1               	movf	(___xxtofl@arg),w
  4651  0CF3  087A               	movwf	(?___xxtofl)
  4652  0CF4  00F0               
  4653                           	goto	l688
  4654  0CF5  2CF6               	
  4655                           l2535:	
  4656  0CF6                     	line	44
  4657                           	
  4658                           l688:	
  4659  0CF6                     	return
  4660  0CF6  0008               	opt stack 0
  4661                           GLOBAL	__end_of___xxtofl
  4662                           	__end_of___xxtofl:
  4663  0CF7                     	signat	___xxtofl,8316
  4664                           	global	___fltol
  4665                           
  4666 ;; *************** function ___fltol *****************
  4667 ;; Defined at:
  4668 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  f1              4    0[COMMON] unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  exp1            1   10[COMMON] unsigned char 
  4673 ;;  sign1           1    9[COMMON] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  4    0[COMMON] long 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4683 ;;      Params:         4       0       0       0       0
  4684 ;;      Locals:         2       0       0       0       0
  4685 ;;      Temps:          5       0       0       0       0
  4686 ;;      Totals:        11       0       0       0       0
  4687 ;;Total ram usage:       11 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  4696                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4697                           	line	43
  4698                           global __ptext16
  4699                           __ptext16:	;psect for function ___fltol
  4700  0B9B                     psect	text16
  4701                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4702                           	line	43
  4703                           	global	__size_of___fltol
  4704                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4705  009A                     	
  4706                           ___fltol:	
  4707  0B9B                     ;incstack = 0
  4708                           	opt	stack 7
  4709                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4710                           	line	47
  4711                           	
  4712                           l1981:	
  4713  0B9B                     	movf	(___fltol@f1),w
  4714  0B9B  0870               	movwf	(??___fltol+0)+0
  4715  0B9C  00F4               	movf	(___fltol@f1+1),w
  4716  0B9D  0871               	movwf	((??___fltol+0)+0+1)
  4717  0B9E  00F5               	movf	(___fltol@f1+2),w
  4718  0B9F  0872               	movwf	((??___fltol+0)+0+2)
  4719  0BA0  00F6               	movf	(___fltol@f1+3),w
  4720  0BA1  0873               	movwf	((??___fltol+0)+0+3)
  4721  0BA2  00F7               	clrc
  4722  0BA3  1003               	rlf	(??___fltol+0)+2,w
  4723  0BA4  0D76               	rlf	(??___fltol+0)+3,w
  4724  0BA5  0D77               	movwf	(??___fltol+4)+0
  4725  0BA6  00F8               	movf	(??___fltol+4)+0,w
  4726  0BA7  0878               	movwf	(___fltol@exp1)
  4727  0BA8  00FA               	movf	(((___fltol@exp1))),w
  4728  0BA9  087A               	btfss	status,2
  4729  0BAA  1D03               	goto	u2191
  4730  0BAB  2BAD               	goto	u2190
  4731  0BAC  2BAE               u2191:
  4732  0BAD                     	goto	l1987
  4733  0BAD  2BB8               u2190:
  4734  0BAE                     	line	48
  4735                           	
  4736                           l1983:	
  4737  0BAE                     	movlw	high highword(0)
  4738  0BAE  3000               	movwf	(?___fltol+3)
  4739  0BAF  00F3               	movlw	low highword(0)
  4740  0BB0  3000               	movwf	(?___fltol+2)
  4741  0BB1  00F2               	movlw	high(0)
  4742  0BB2  3000               	movwf	(?___fltol+1)
  4743  0BB3  00F1               	movlw	low(0)
  4744  0BB4  3000               	movwf	(?___fltol)
  4745  0BB5  00F0               
  4746                           	goto	l464
  4747  0BB6  2C34               	
  4748                           l1985:	
  4749  0BB7                     	goto	l464
  4750  0BB7  2C34               	
  4751                           l463:	
  4752  0BB8                     	line	49
  4753                           	
  4754                           l1987:	
  4755  0BB8                     	movf	(___fltol@f1),w
  4756  0BB8  0870               	movwf	(??___fltol+0)+0
  4757  0BB9  00F4               	movf	(___fltol@f1+1),w
  4758  0BBA  0871               	movwf	((??___fltol+0)+0+1)
  4759  0BBB  00F5               	movf	(___fltol@f1+2),w
  4760  0BBC  0872               	movwf	((??___fltol+0)+0+2)
  4761  0BBD  00F6               	movf	(___fltol@f1+3),w
  4762  0BBE  0873               	movwf	((??___fltol+0)+0+3)
  4763  0BBF  00F7               	movlw	01Fh
  4764  0BC0  301F               u2205:
  4765  0BC1                     	clrc
  4766  0BC1  1003               	rrf	(??___fltol+0)+3,f
  4767  0BC2  0CF7               	rrf	(??___fltol+0)+2,f
  4768  0BC3  0CF6               	rrf	(??___fltol+0)+1,f
  4769  0BC4  0CF5               	rrf	(??___fltol+0)+0,f
  4770  0BC5  0CF4               u2200:
  4771  0BC6                     	addlw	-1
  4772  0BC6  3EFF               	skipz
  4773  0BC7  1D03               	goto	u2205
  4774  0BC8  2BC1               	movf	0+(??___fltol+0)+0,w
  4775  0BC9  0874               	movwf	(??___fltol+4)+0
  4776  0BCA  00F8               	movf	(??___fltol+4)+0,w
  4777  0BCB  0878               	movwf	(___fltol@sign1)
  4778  0BCC  00F9               	line	50
  4779                           	
  4780                           l1989:	
  4781  0BCD                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4782  0BCD  17F2               	line	51
  4783                           	
  4784                           l1991:	
  4785  0BCE                     	movlw	0FFh
  4786  0BCE  30FF               	andwf	(___fltol@f1),f
  4787  0BCF  05F0               	movlw	0FFh
  4788  0BD0  30FF               	andwf	(___fltol@f1+1),f
  4789  0BD1  05F1               	movlw	0FFh
  4790  0BD2  30FF               	andwf	(___fltol@f1+2),f
  4791  0BD3  05F2               	movlw	0
  4792  0BD4  3000               	andwf	(___fltol@f1+3),f
  4793  0BD5  05F3               	line	52
  4794                           	
  4795                           l1993:	
  4796  0BD6                     	movlw	096h
  4797  0BD6  3096               	subwf	(___fltol@exp1),f
  4798  0BD7  02FA               	line	53
  4799                           	
  4800                           l1995:	
  4801  0BD8                     	btfss	(___fltol@exp1),7
  4802  0BD8  1FFA               	goto	u2211
  4803  0BD9  2BDB               	goto	u2210
  4804  0BDA  2BDC               u2211:
  4805  0BDB                     	goto	l2005
  4806  0BDB  2C01               u2210:
  4807  0BDC                     	line	54
  4808                           	
  4809                           l1997:	
  4810  0BDC                     	movf	(___fltol@exp1),w
  4811  0BDC  087A               	xorlw	80h
  4812  0BDD  3A80               	addlw	-((-23)^80h)
  4813  0BDE  3E97               	skipnc
  4814  0BDF  1803               	goto	u2221
  4815  0BE0  2BE2               	goto	u2220
  4816  0BE1  2BE3               u2221:
  4817  0BE2                     	goto	l2003
  4818  0BE2  2BEE               u2220:
  4819  0BE3                     	line	55
  4820                           	
  4821                           l1999:	
  4822  0BE3                     	movlw	high highword(0)
  4823  0BE3  3000               	movwf	(?___fltol+3)
  4824  0BE4  00F3               	movlw	low highword(0)
  4825  0BE5  3000               	movwf	(?___fltol+2)
  4826  0BE6  00F2               	movlw	high(0)
  4827  0BE7  3000               	movwf	(?___fltol+1)
  4828  0BE8  00F1               	movlw	low(0)
  4829  0BE9  3000               	movwf	(?___fltol)
  4830  0BEA  00F0               
  4831                           	goto	l464
  4832  0BEB  2C34               	
  4833                           l2001:	
  4834  0BEC                     	goto	l464
  4835  0BEC  2C34               	
  4836                           l466:	
  4837  0BED                     	goto	l2003
  4838  0BED  2BEE               	line	56
  4839                           	
  4840                           l467:	
  4841  0BEE                     	line	57
  4842                           	
  4843                           l2003:	
  4844  0BEE                     	movlw	01h
  4845  0BEE  3001               u2235:
  4846  0BEF                     	clrc
  4847  0BEF  1003               	rrf	(___fltol@f1+3),f
  4848  0BF0  0CF3               	rrf	(___fltol@f1+2),f
  4849  0BF1  0CF2               	rrf	(___fltol@f1+1),f
  4850  0BF2  0CF1               	rrf	(___fltol@f1),f
  4851  0BF3  0CF0               	addlw	-1
  4852  0BF4  3EFF               	skipz
  4853  0BF5  1D03               	goto	u2235
  4854  0BF6  2BEF               
  4855                           	line	58
  4856                           	movlw	low(01h)
  4857  0BF7  3001               	movwf	(??___fltol+0)+0
  4858  0BF8  00F4               	movf	(??___fltol+0)+0,w
  4859  0BF9  0874               	addwf	(___fltol@exp1),f
  4860  0BFA  07FA               	btfss	status,2
  4861  0BFB  1D03               	goto	u2241
  4862  0BFC  2BFE               	goto	u2240
  4863  0BFD  2BFF               u2241:
  4864  0BFE                     	goto	l2003
  4865  0BFE  2BEE               u2240:
  4866  0BFF                     	goto	l2013
  4867  0BFF  2C24               	
  4868                           l468:	
  4869  0C00                     	line	59
  4870                           	goto	l2013
  4871  0C00  2C24               	
  4872                           l465:	
  4873  0C01                     	line	60
  4874                           	
  4875                           l2005:	
  4876  0C01                     	movlw	low(020h)
  4877  0C01  3020               	subwf	(___fltol@exp1),w
  4878  0C02  027A               	skipc
  4879  0C03  1C03               	goto	u2251
  4880  0C04  2C06               	goto	u2250
  4881  0C05  2C07               u2251:
  4882  0C06                     	goto	l471
  4883  0C06  2C1D               u2250:
  4884  0C07                     	line	61
  4885                           	
  4886                           l2007:	
  4887  0C07                     	movlw	high highword(0)
  4888  0C07  3000               	movwf	(?___fltol+3)
  4889  0C08  00F3               	movlw	low highword(0)
  4890  0C09  3000               	movwf	(?___fltol+2)
  4891  0C0A  00F2               	movlw	high(0)
  4892  0C0B  3000               	movwf	(?___fltol+1)
  4893  0C0C  00F1               	movlw	low(0)
  4894  0C0D  3000               	movwf	(?___fltol)
  4895  0C0E  00F0               
  4896                           	goto	l464
  4897  0C0F  2C34               	
  4898                           l2009:	
  4899  0C10                     	goto	l464
  4900  0C10  2C34               	
  4901                           l470:	
  4902  0C11                     	line	62
  4903                           	goto	l471
  4904  0C11  2C1D               	
  4905                           l472:	
  4906  0C12                     	line	63
  4907                           	
  4908                           l2011:	
  4909  0C12                     	movlw	01h
  4910  0C12  3001               	movwf	(??___fltol+0)+0
  4911  0C13  00F4               u2265:
  4912  0C14                     	clrc
  4913  0C14  1003               	rlf	(___fltol@f1),f
  4914  0C15  0DF0               	rlf	(___fltol@f1+1),f
  4915  0C16  0DF1               	rlf	(___fltol@f1+2),f
  4916  0C17  0DF2               	rlf	(___fltol@f1+3),f
  4917  0C18  0DF3               	decfsz	(??___fltol+0)+0
  4918  0C19  0BF4               	goto	u2265
  4919  0C1A  2C14               	line	64
  4920                           	movlw	01h
  4921  0C1B  3001               	subwf	(___fltol@exp1),f
  4922  0C1C  02FA               	line	65
  4923                           	
  4924                           l471:	
  4925  0C1D                     	line	62
  4926                           	movf	((___fltol@exp1)),w
  4927  0C1D  087A               	btfss	status,2
  4928  0C1E  1D03               	goto	u2271
  4929  0C1F  2C21               	goto	u2270
  4930  0C20  2C22               u2271:
  4931  0C21                     	goto	l2011
  4932  0C21  2C12               u2270:
  4933  0C22                     	goto	l2013
  4934  0C22  2C24               	
  4935                           l473:	
  4936  0C23                     	goto	l2013
  4937  0C23  2C24               	line	66
  4938                           	
  4939                           l469:	
  4940  0C24                     	line	67
  4941                           	
  4942                           l2013:	
  4943  0C24                     	movf	((___fltol@sign1)),w
  4944  0C24  0879               	btfsc	status,2
  4945  0C25  1903               	goto	u2281
  4946  0C26  2C28               	goto	u2280
  4947  0C27  2C29               u2281:
  4948  0C28                     	goto	l474
  4949  0C28  2C34               u2280:
  4950  0C29                     	line	68
  4951                           	
  4952                           l2015:	
  4953  0C29                     	comf	(___fltol@f1),f
  4954  0C29  09F0               	comf	(___fltol@f1+1),f
  4955  0C2A  09F1               	comf	(___fltol@f1+2),f
  4956  0C2B  09F2               	comf	(___fltol@f1+3),f
  4957  0C2C  09F3               	incf	(___fltol@f1),f
  4958  0C2D  0AF0               	skipnz
  4959  0C2E  1903               	incf	(___fltol@f1+1),f
  4960  0C2F  0AF1               	skipnz
  4961  0C30  1903               	incf	(___fltol@f1+2),f
  4962  0C31  0AF2               	skipnz
  4963  0C32  1903               	incf	(___fltol@f1+3),f
  4964  0C33  0AF3               	
  4965                           l474:	
  4966  0C34                     	line	69
  4967                           	line	70
  4968                           	
  4969                           l464:	
  4970  0C34                     	return
  4971  0C34  0008               	opt stack 0
  4972                           GLOBAL	__end_of___fltol
  4973                           	__end_of___fltol:
  4974  0C35                     	signat	___fltol,4220
  4975                           	global	___flneg
  4976                           
  4977 ;; *************** function ___flneg *****************
  4978 ;; Defined at:
  4979 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  f1              4    0[BANK0 ] long 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  4    0[BANK0 ] long 
  4986 ;; Registers used:
  4987 ;;		wreg
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4993 ;;      Params:         0       4       0       0       0
  4994 ;;      Locals:         0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0
  4996 ;;      Totals:         0       4       0       0       0
  4997 ;;Total ram usage:        4 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_main
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5006                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5007                           	line	15
  5008                           global __ptext17
  5009                           __ptext17:	;psect for function ___flneg
  5010  0896                     psect	text17
  5011                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5012                           	line	15
  5013                           	global	__size_of___flneg
  5014                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5015  000F                     	
  5016                           ___flneg:	
  5017  0896                     ;incstack = 0
  5018                           	opt	stack 7
  5019                           ; Regs used in ___flneg: [wreg]
  5020                           	line	17
  5021                           	
  5022                           l1973:	
  5023  0896                     	bcf	status, 5	;RP0=0, select bank0
  5024  0896  1283               	bcf	status, 6	;RP1=0, select bank0
  5025  0897  1303               	movf	(___flneg@f1+3),w
  5026  0898  0823               	iorwf	(___flneg@f1+2),w
  5027  0899  0422               	iorwf	(___flneg@f1+1),w
  5028  089A  0421               	iorwf	(___flneg@f1),w
  5029  089B  0420               	skipnz
  5030  089C  1903               	goto	u2181
  5031  089D  289F               	goto	u2180
  5032  089E  28A0               u2181:
  5033  089F                     	goto	l1977
  5034  089F  28A3               u2180:
  5035  08A0                     	line	18
  5036                           	
  5037                           l1975:	
  5038  08A0                     	movlw	080h
  5039  08A0  3080               	xorwf	(___flneg@f1+3),f
  5040  08A1  06A3               	goto	l1977
  5041  08A2  28A3               	
  5042                           l459:	
  5043  08A3                     	line	19
  5044                           	
  5045                           l1977:	
  5046  08A3                     	goto	l460
  5047  08A3  28A4               	
  5048                           l1979:	
  5049  08A4                     	line	20
  5050                           	
  5051                           l460:	
  5052  08A4                     	return
  5053  08A4  0008               	opt stack 0
  5054                           GLOBAL	__end_of___flneg
  5055                           	__end_of___flneg:
  5056  08A5                     	signat	___flneg,4220
  5057                           	global	___flmul
  5058                           
  5059 ;; *************** function ___flmul *****************
  5060 ;; Defined at:
  5061 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  b               4   28[BANK0 ] long 
  5064 ;;  a               4   32[BANK0 ] long 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  prod            4   48[BANK0 ] struct .
  5067 ;;  grs             4   42[BANK0 ] unsigned long 
  5068 ;;  temp            2   52[BANK0 ] struct .
  5069 ;;  bexp            1   47[BANK0 ] unsigned char 
  5070 ;;  aexp            1   46[BANK0 ] unsigned char 
  5071 ;;  sign            1   41[BANK0 ] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  4   28[BANK0 ] unsigned char 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         0       8       0       0       0
  5082 ;;      Locals:         0      13       0       0       0
  5083 ;;      Temps:          0       5       0       0       0
  5084 ;;      Totals:         0      26       0       0       0
  5085 ;;Total ram usage:       26 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    1
  5088 ;; This function calls:
  5089 ;;		__Umul8_16
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5095                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5096                           	line	8
  5097                           global __ptext18
  5098                           __ptext18:	;psect for function ___flmul
  5099  0478                     psect	text18
  5100                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5101                           	line	8
  5102                           	global	__size_of___flmul
  5103                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5104  0375                     	
  5105                           ___flmul:	
  5106  0478                     ;incstack = 0
  5107                           	opt	stack 6
  5108                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5109                           	line	17
  5110                           	
  5111                           l2353:	
  5112  0478                     	bcf	status, 5	;RP0=0, select bank0
  5113  0478  1283               	bcf	status, 6	;RP1=0, select bank0
  5114  0479  1303               	movf	0+(___flmul@b)+03h,w
  5115  047A  083F               	andlw	080h
  5116  047B  3980               	movwf	(??___flmul+0)+0
  5117  047C  00C4               	movf	(??___flmul+0)+0,w
  5118  047D  0844               	movwf	(___flmul@sign)
  5119  047E  00C9               	line	18
  5120                           	
  5121                           l2355:	
  5122  047F                     	movf	0+(___flmul@b)+03h,w
  5123  047F  083F               	movwf	(??___flmul+0)+0
  5124  0480  00C4               	addwf	(??___flmul+0)+0,w
  5125  0481  0744               	movwf	(??___flmul+1)+0
  5126  0482  00C5               	movf	(??___flmul+1)+0,w
  5127  0483  0845               	movwf	(___flmul@bexp)
  5128  0484  00CF               	line	19
  5129                           	
  5130                           l2357:	
  5131  0485                     	btfss	0+(___flmul@b)+02h,(7)&7
  5132  0485  1FBE               	goto	u3041
  5133  0486  2C88               	goto	u3040
  5134  0487  2C89               u3041:
  5135  0488                     	goto	l2361
  5136  0488  2C8B               u3040:
  5137  0489                     	line	20
  5138                           	
  5139                           l2359:	
  5140  0489                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5141  0489  144F               	goto	l2361
  5142  048A  2C8B               	line	21
  5143                           	
  5144                           l656:	
  5145  048B                     	line	24
  5146                           	
  5147                           l2361:	
  5148  048B                     	movf	((___flmul@bexp)),w
  5149  048B  084F               	btfsc	status,2
  5150  048C  1903               	goto	u3051
  5151  048D  2C8F               	goto	u3050
  5152  048E  2C90               u3051:
  5153  048F                     	goto	l2369
  5154  048F  2CA0               u3050:
  5155  0490                     	line	26
  5156                           	
  5157                           l2363:	
  5158  0490                     		incf	((___flmul@bexp)),w
  5159  0490  0A4F               	btfss	status,2
  5160  0491  1D03               	goto	u3061
  5161  0492  2C94               	goto	u3060
  5162  0493  2C95               u3061:
  5163  0494                     	goto	l2367
  5164  0494  2C9E               u3060:
  5165  0495                     	line	28
  5166                           	
  5167                           l2365:	
  5168  0495                     	movlw	0x0
  5169  0495  3000               	movwf	(___flmul@b+3)
  5170  0496  00BF               	movlw	0x0
  5171  0497  3000               	movwf	(___flmul@b+2)
  5172  0498  00BE               	movlw	0x0
  5173  0499  3000               	movwf	(___flmul@b+1)
  5174  049A  00BD               	movlw	0x0
  5175  049B  3000               	movwf	(___flmul@b)
  5176  049C  00BC               
  5177                           	goto	l2367
  5178  049D  2C9E               	line	29
  5179                           	
  5180                           l658:	
  5181  049E                     	line	31
  5182                           	
  5183                           l2367:	
  5184  049E                     	bsf	(___flmul@b)+(23/8),(23)&7
  5185  049E  17BE               	line	33
  5186                           	goto	l2371
  5187  049F  2CA9               	line	34
  5188                           	
  5189                           l657:	
  5190  04A0                     	line	36
  5191                           	
  5192                           l2369:	
  5193  04A0                     	movlw	0x0
  5194  04A0  3000               	movwf	(___flmul@b+3)
  5195  04A1  00BF               	movlw	0x0
  5196  04A2  3000               	movwf	(___flmul@b+2)
  5197  04A3  00BE               	movlw	0x0
  5198  04A4  3000               	movwf	(___flmul@b+1)
  5199  04A5  00BD               	movlw	0x0
  5200  04A6  3000               	movwf	(___flmul@b)
  5201  04A7  00BC               
  5202                           	goto	l2371
  5203  04A8  2CA9               	line	37
  5204                           	
  5205                           l659:	
  5206  04A9                     	line	39
  5207                           	
  5208                           l2371:	
  5209  04A9                     	movf	0+(___flmul@a)+03h,w
  5210  04A9  0843               	andlw	080h
  5211  04AA  3980               	movwf	(??___flmul+0)+0
  5212  04AB  00C4               	movf	(??___flmul+0)+0,w
  5213  04AC  0844               	xorwf	(___flmul@sign),f
  5214  04AD  06C9               	line	40
  5215                           	
  5216                           l2373:	
  5217  04AE                     	movf	0+(___flmul@a)+03h,w
  5218  04AE  0843               	movwf	(??___flmul+0)+0
  5219  04AF  00C4               	addwf	(??___flmul+0)+0,w
  5220  04B0  0744               	movwf	(??___flmul+1)+0
  5221  04B1  00C5               	movf	(??___flmul+1)+0,w
  5222  04B2  0845               	movwf	(___flmul@aexp)
  5223  04B3  00CE               	line	41
  5224                           	
  5225                           l2375:	
  5226  04B4                     	btfss	0+(___flmul@a)+02h,(7)&7
  5227  04B4  1FC2               	goto	u3071
  5228  04B5  2CB7               	goto	u3070
  5229  04B6  2CB8               u3071:
  5230  04B7                     	goto	l2379
  5231  04B7  2CBA               u3070:
  5232  04B8                     	line	42
  5233                           	
  5234                           l2377:	
  5235  04B8                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5236  04B8  144E               	goto	l2379
  5237  04B9  2CBA               	line	43
  5238                           	
  5239                           l660:	
  5240  04BA                     	line	45
  5241                           	
  5242                           l2379:	
  5243  04BA                     	movf	((___flmul@aexp)),w
  5244  04BA  084E               	btfsc	status,2
  5245  04BB  1903               	goto	u3081
  5246  04BC  2CBE               	goto	u3080
  5247  04BD  2CBF               u3081:
  5248  04BE                     	goto	l2387
  5249  04BE  2CCF               u3080:
  5250  04BF                     	line	48
  5251                           	
  5252                           l2381:	
  5253  04BF                     		incf	((___flmul@aexp)),w
  5254  04BF  0A4E               	btfss	status,2
  5255  04C0  1D03               	goto	u3091
  5256  04C1  2CC3               	goto	u3090
  5257  04C2  2CC4               u3091:
  5258  04C3                     	goto	l2385
  5259  04C3  2CCD               u3090:
  5260  04C4                     	line	50
  5261                           	
  5262                           l2383:	
  5263  04C4                     	movlw	0x0
  5264  04C4  3000               	movwf	(___flmul@a+3)
  5265  04C5  00C3               	movlw	0x0
  5266  04C6  3000               	movwf	(___flmul@a+2)
  5267  04C7  00C2               	movlw	0x0
  5268  04C8  3000               	movwf	(___flmul@a+1)
  5269  04C9  00C1               	movlw	0x0
  5270  04CA  3000               	movwf	(___flmul@a)
  5271  04CB  00C0               
  5272                           	goto	l2385
  5273  04CC  2CCD               	line	51
  5274                           	
  5275                           l662:	
  5276  04CD                     	line	53
  5277                           	
  5278                           l2385:	
  5279  04CD                     	bsf	(___flmul@a)+(23/8),(23)&7
  5280  04CD  17C2               	line	54
  5281                           	goto	l2389
  5282  04CE  2CD8               	line	55
  5283                           	
  5284                           l661:	
  5285  04CF                     	line	57
  5286                           	
  5287                           l2387:	
  5288  04CF                     	movlw	0x0
  5289  04CF  3000               	movwf	(___flmul@a+3)
  5290  04D0  00C3               	movlw	0x0
  5291  04D1  3000               	movwf	(___flmul@a+2)
  5292  04D2  00C2               	movlw	0x0
  5293  04D3  3000               	movwf	(___flmul@a+1)
  5294  04D4  00C1               	movlw	0x0
  5295  04D5  3000               	movwf	(___flmul@a)
  5296  04D6  00C0               
  5297                           	goto	l2389
  5298  04D7  2CD8               	line	58
  5299                           	
  5300                           l663:	
  5301  04D8                     	line	65
  5302                           	
  5303                           l2389:	
  5304  04D8                     	movf	((___flmul@aexp)),w
  5305  04D8  084E               	btfsc	status,2
  5306  04D9  1903               	goto	u3101
  5307  04DA  2CDC               	goto	u3100
  5308  04DB  2CDD               u3101:
  5309  04DC                     	goto	l2393
  5310  04DC  2CE3               u3100:
  5311  04DD                     	
  5312                           l2391:	
  5313  04DD                     	movf	((___flmul@bexp)),w
  5314  04DD  084F               	btfss	status,2
  5315  04DE  1D03               	goto	u3111
  5316  04DF  2CE1               	goto	u3110
  5317  04E0  2CE2               u3111:
  5318  04E1                     	goto	l2397
  5319  04E1  2CED               u3110:
  5320  04E2                     	goto	l2393
  5321  04E2  2CE3               	
  5322                           l666:	
  5323  04E3                     	line	66
  5324                           	
  5325                           l2393:	
  5326  04E3                     	movlw	0x0
  5327  04E3  3000               	movwf	(?___flmul+3)
  5328  04E4  00BF               	movlw	0x0
  5329  04E5  3000               	movwf	(?___flmul+2)
  5330  04E6  00BE               	movlw	0x0
  5331  04E7  3000               	movwf	(?___flmul+1)
  5332  04E8  00BD               	movlw	0x0
  5333  04E9  3000               	movwf	(?___flmul)
  5334  04EA  00BC               
  5335                           	goto	l667
  5336  04EB  2FEC               	
  5337                           l2395:	
  5338  04EC                     	goto	l667
  5339  04EC  2FEC               	line	67
  5340                           	
  5341                           l664:	
  5342  04ED                     	line	119
  5343                           	
  5344                           l2397:	
  5345  04ED                     	movf	(___flmul@b),w
  5346  04ED  083C               	movwf	(??___flmul+0)+0
  5347  04EE  00C4               	movf	(??___flmul+0)+0,w
  5348  04EF  0844               	movwf	(__Umul8_16@multiplicand)
  5349  04F0  00F0               	movf	0+(___flmul@a)+02h,w
  5350  04F1  0842               	fcall	__Umul8_16
  5351  04F2  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5352  04F7  0871               	bcf	status, 5	;RP0=0, select bank0
  5353  04F8  1283               	bcf	status, 6	;RP1=0, select bank0
  5354  04F9  1303               	movwf	(___flmul@temp+1)
  5355  04FA  00D5               	movf	(0+(?__Umul8_16)),w
  5356  04FB  0870               	movwf	(___flmul@temp)
  5357  04FC  00D4               	line	120
  5358                           	
  5359                           l2399:	
  5360  04FD                     	movf	(___flmul@temp),w
  5361  04FD  0854               	movwf	(??___flmul+0)+0
  5362  04FE  00C4               	clrf	(??___flmul+0)+0+1
  5363  04FF  01C5               	clrf	(??___flmul+0)+0+2
  5364  0500  01C6               	clrf	(??___flmul+0)+0+3
  5365  0501  01C7               	movf	3+(??___flmul+0)+0,w
  5366  0502  0847               	movwf	(___flmul@grs+3)
  5367  0503  00CD               	movf	2+(??___flmul+0)+0,w
  5368  0504  0846               	movwf	(___flmul@grs+2)
  5369  0505  00CC               	movf	1+(??___flmul+0)+0,w
  5370  0506  0845               	movwf	(___flmul@grs+1)
  5371  0507  00CB               	movf	0+(??___flmul+0)+0,w
  5372  0508  0844               	movwf	(___flmul@grs)
  5373  0509  00CA               
  5374                           	line	121
  5375                           	
  5376                           l2401:	
  5377  050A                     	movf	0+(___flmul@temp)+01h,w
  5378  050A  0855               	movwf	(??___flmul+0)+0
  5379  050B  00C4               	clrf	(??___flmul+0)+0+1
  5380  050C  01C5               	clrf	(??___flmul+0)+0+2
  5381  050D  01C6               	clrf	(??___flmul+0)+0+3
  5382  050E  01C7               	movf	3+(??___flmul+0)+0,w
  5383  050F  0847               	movwf	(___flmul@prod+3)
  5384  0510  00D3               	movf	2+(??___flmul+0)+0,w
  5385  0511  0846               	movwf	(___flmul@prod+2)
  5386  0512  00D2               	movf	1+(??___flmul+0)+0,w
  5387  0513  0845               	movwf	(___flmul@prod+1)
  5388  0514  00D1               	movf	0+(??___flmul+0)+0,w
  5389  0515  0844               	movwf	(___flmul@prod)
  5390  0516  00D0               
  5391                           	line	122
  5392                           	movf	0+(___flmul@b)+01h,w
  5393  0517  083D               	movwf	(??___flmul+0)+0
  5394  0518  00C4               	movf	(??___flmul+0)+0,w
  5395  0519  0844               	movwf	(__Umul8_16@multiplicand)
  5396  051A  00F0               	movf	0+(___flmul@a)+01h,w
  5397  051B  0841               	fcall	__Umul8_16
  5398  051C  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5399  0521  0871               	bcf	status, 5	;RP0=0, select bank0
  5400  0522  1283               	bcf	status, 6	;RP1=0, select bank0
  5401  0523  1303               	movwf	(___flmul@temp+1)
  5402  0524  00D5               	movf	(0+(?__Umul8_16)),w
  5403  0525  0870               	movwf	(___flmul@temp)
  5404  0526  00D4               	line	123
  5405                           	
  5406                           l2403:	
  5407  0527                     	movf	(___flmul@temp),w
  5408  0527  0854               	movwf	(??___flmul+0)+0
  5409  0528  00C4               	clrf	(??___flmul+0)+0+1
  5410  0529  01C5               	clrf	(??___flmul+0)+0+2
  5411  052A  01C6               	clrf	(??___flmul+0)+0+3
  5412  052B  01C7               	movf	0+(??___flmul+0)+0,w
  5413  052C  0844               	addwf	(___flmul@grs),f
  5414  052D  07CA               	movf	1+(??___flmul+0)+0,w
  5415  052E  0845               	clrz
  5416  052F  1103               	skipnc
  5417  0530  1803               	addlw	1
  5418  0531  3E01               	skipnz
  5419  0532  1903               	goto	u3121
  5420  0533  2D35               	addwf	(___flmul@grs+1),f
  5421  0534  07CB               u3121:
  5422  0535                     	movf	2+(??___flmul+0)+0,w
  5423  0535  0846               	clrz
  5424  0536  1103               	skipnc
  5425  0537  1803               	addlw	1
  5426  0538  3E01               	skipnz
  5427  0539  1903               	goto	u3122
  5428  053A  2D3C               	addwf	(___flmul@grs+2),f
  5429  053B  07CC               u3122:
  5430  053C                     	movf	3+(??___flmul+0)+0,w
  5431  053C  0847               	clrz
  5432  053D  1103               	skipnc
  5433  053E  1803               	addlw	1
  5434  053F  3E01               	skipnz
  5435  0540  1903               	goto	u3123
  5436  0541  2D43               	addwf	(___flmul@grs+3),f
  5437  0542  07CD               u3123:
  5438  0543                     
  5439                           	line	124
  5440                           	
  5441                           l2405:	
  5442  0543                     	movf	0+(___flmul@temp)+01h,w
  5443  0543  0855               	movwf	(??___flmul+0)+0
  5444  0544  00C4               	clrf	(??___flmul+0)+0+1
  5445  0545  01C5               	clrf	(??___flmul+0)+0+2
  5446  0546  01C6               	clrf	(??___flmul+0)+0+3
  5447  0547  01C7               	movf	0+(??___flmul+0)+0,w
  5448  0548  0844               	addwf	(___flmul@prod),f
  5449  0549  07D0               	movf	1+(??___flmul+0)+0,w
  5450  054A  0845               	clrz
  5451  054B  1103               	skipnc
  5452  054C  1803               	addlw	1
  5453  054D  3E01               	skipnz
  5454  054E  1903               	goto	u3131
  5455  054F  2D51               	addwf	(___flmul@prod+1),f
  5456  0550  07D1               u3131:
  5457  0551                     	movf	2+(??___flmul+0)+0,w
  5458  0551  0846               	clrz
  5459  0552  1103               	skipnc
  5460  0553  1803               	addlw	1
  5461  0554  3E01               	skipnz
  5462  0555  1903               	goto	u3132
  5463  0556  2D58               	addwf	(___flmul@prod+2),f
  5464  0557  07D2               u3132:
  5465  0558                     	movf	3+(??___flmul+0)+0,w
  5466  0558  0847               	clrz
  5467  0559  1103               	skipnc
  5468  055A  1803               	addlw	1
  5469  055B  3E01               	skipnz
  5470  055C  1903               	goto	u3133
  5471  055D  2D5F               	addwf	(___flmul@prod+3),f
  5472  055E  07D3               u3133:
  5473  055F                     
  5474                           	line	125
  5475                           	movf	0+(___flmul@b)+02h,w
  5476  055F  083E               	movwf	(??___flmul+0)+0
  5477  0560  00C4               	movf	(??___flmul+0)+0,w
  5478  0561  0844               	movwf	(__Umul8_16@multiplicand)
  5479  0562  00F0               	movf	(___flmul@a),w
  5480  0563  0840               	fcall	__Umul8_16
  5481  0564  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5482  0569  0871               	bcf	status, 5	;RP0=0, select bank0
  5483  056A  1283               	bcf	status, 6	;RP1=0, select bank0
  5484  056B  1303               	movwf	(___flmul@temp+1)
  5485  056C  00D5               	movf	(0+(?__Umul8_16)),w
  5486  056D  0870               	movwf	(___flmul@temp)
  5487  056E  00D4               	line	126
  5488                           	
  5489                           l2407:	
  5490  056F                     	movf	(___flmul@temp),w
  5491  056F  0854               	movwf	(??___flmul+0)+0
  5492  0570  00C4               	clrf	(??___flmul+0)+0+1
  5493  0571  01C5               	clrf	(??___flmul+0)+0+2
  5494  0572  01C6               	clrf	(??___flmul+0)+0+3
  5495  0573  01C7               	movf	0+(??___flmul+0)+0,w
  5496  0574  0844               	addwf	(___flmul@grs),f
  5497  0575  07CA               	movf	1+(??___flmul+0)+0,w
  5498  0576  0845               	clrz
  5499  0577  1103               	skipnc
  5500  0578  1803               	addlw	1
  5501  0579  3E01               	skipnz
  5502  057A  1903               	goto	u3141
  5503  057B  2D7D               	addwf	(___flmul@grs+1),f
  5504  057C  07CB               u3141:
  5505  057D                     	movf	2+(??___flmul+0)+0,w
  5506  057D  0846               	clrz
  5507  057E  1103               	skipnc
  5508  057F  1803               	addlw	1
  5509  0580  3E01               	skipnz
  5510  0581  1903               	goto	u3142
  5511  0582  2D84               	addwf	(___flmul@grs+2),f
  5512  0583  07CC               u3142:
  5513  0584                     	movf	3+(??___flmul+0)+0,w
  5514  0584  0847               	clrz
  5515  0585  1103               	skipnc
  5516  0586  1803               	addlw	1
  5517  0587  3E01               	skipnz
  5518  0588  1903               	goto	u3143
  5519  0589  2D8B               	addwf	(___flmul@grs+3),f
  5520  058A  07CD               u3143:
  5521  058B                     
  5522                           	line	127
  5523                           	
  5524                           l2409:	
  5525  058B                     	movf	0+(___flmul@temp)+01h,w
  5526  058B  0855               	movwf	(??___flmul+0)+0
  5527  058C  00C4               	clrf	(??___flmul+0)+0+1
  5528  058D  01C5               	clrf	(??___flmul+0)+0+2
  5529  058E  01C6               	clrf	(??___flmul+0)+0+3
  5530  058F  01C7               	movf	0+(??___flmul+0)+0,w
  5531  0590  0844               	addwf	(___flmul@prod),f
  5532  0591  07D0               	movf	1+(??___flmul+0)+0,w
  5533  0592  0845               	clrz
  5534  0593  1103               	skipnc
  5535  0594  1803               	addlw	1
  5536  0595  3E01               	skipnz
  5537  0596  1903               	goto	u3151
  5538  0597  2D99               	addwf	(___flmul@prod+1),f
  5539  0598  07D1               u3151:
  5540  0599                     	movf	2+(??___flmul+0)+0,w
  5541  0599  0846               	clrz
  5542  059A  1103               	skipnc
  5543  059B  1803               	addlw	1
  5544  059C  3E01               	skipnz
  5545  059D  1903               	goto	u3152
  5546  059E  2DA0               	addwf	(___flmul@prod+2),f
  5547  059F  07D2               u3152:
  5548  05A0                     	movf	3+(??___flmul+0)+0,w
  5549  05A0  0847               	clrz
  5550  05A1  1103               	skipnc
  5551  05A2  1803               	addlw	1
  5552  05A3  3E01               	skipnz
  5553  05A4  1903               	goto	u3153
  5554  05A5  2DA7               	addwf	(___flmul@prod+3),f
  5555  05A6  07D3               u3153:
  5556  05A7                     
  5557                           	line	128
  5558                           	
  5559                           l2411:	
  5560  05A7                     	movlw	08h
  5561  05A7  3008               	movwf	(??___flmul+0)+0
  5562  05A8  00C4               u3165:
  5563  05A9                     	clrc
  5564  05A9  1003               	rlf	(___flmul@grs),f
  5565  05AA  0DCA               	rlf	(___flmul@grs+1),f
  5566  05AB  0DCB               	rlf	(___flmul@grs+2),f
  5567  05AC  0DCC               	rlf	(___flmul@grs+3),f
  5568  05AD  0DCD               	decfsz	(??___flmul+0)+0
  5569  05AE  0BC4               	goto	u3165
  5570  05AF  2DA9               	line	129
  5571                           	
  5572                           l2413:	
  5573  05B0                     	movf	0+(___flmul@b)+01h,w
  5574  05B0  083D               	movwf	(??___flmul+0)+0
  5575  05B1  00C4               	movf	(??___flmul+0)+0,w
  5576  05B2  0844               	movwf	(__Umul8_16@multiplicand)
  5577  05B3  00F0               	movf	(___flmul@a),w
  5578  05B4  0840               	fcall	__Umul8_16
  5579  05B5  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5580  05BA  0871               	bcf	status, 5	;RP0=0, select bank0
  5581  05BB  1283               	bcf	status, 6	;RP1=0, select bank0
  5582  05BC  1303               	movwf	(___flmul@temp+1)
  5583  05BD  00D5               	movf	(0+(?__Umul8_16)),w
  5584  05BE  0870               	movwf	(___flmul@temp)
  5585  05BF  00D4               	line	130
  5586                           	
  5587                           l2415:	
  5588  05C0                     	movf	(___flmul@temp),w
  5589  05C0  0854               	movwf	((??___flmul+0)+0)
  5590  05C1  00C4               	movf	(___flmul@temp+1),w
  5591  05C2  0855               	movwf	((??___flmul+0)+0+1)
  5592  05C3  00C5               	clrf	((??___flmul+0)+0+2)
  5593  05C4  01C6               	clrf	((??___flmul+0)+0+3)
  5594  05C5  01C7               	movf	0+(??___flmul+0)+0,w
  5595  05C6  0844               	addwf	(___flmul@grs),f
  5596  05C7  07CA               	movf	1+(??___flmul+0)+0,w
  5597  05C8  0845               	clrz
  5598  05C9  1103               	skipnc
  5599  05CA  1803               	addlw	1
  5600  05CB  3E01               	skipnz
  5601  05CC  1903               	goto	u3171
  5602  05CD  2DCF               	addwf	(___flmul@grs+1),f
  5603  05CE  07CB               u3171:
  5604  05CF                     	movf	2+(??___flmul+0)+0,w
  5605  05CF  0846               	clrz
  5606  05D0  1103               	skipnc
  5607  05D1  1803               	addlw	1
  5608  05D2  3E01               	skipnz
  5609  05D3  1903               	goto	u3172
  5610  05D4  2DD6               	addwf	(___flmul@grs+2),f
  5611  05D5  07CC               u3172:
  5612  05D6                     	movf	3+(??___flmul+0)+0,w
  5613  05D6  0847               	clrz
  5614  05D7  1103               	skipnc
  5615  05D8  1803               	addlw	1
  5616  05D9  3E01               	skipnz
  5617  05DA  1903               	goto	u3173
  5618  05DB  2DDD               	addwf	(___flmul@grs+3),f
  5619  05DC  07CD               u3173:
  5620  05DD                     
  5621                           	line	131
  5622                           	
  5623                           l2417:	
  5624  05DD                     	movf	(___flmul@b),w
  5625  05DD  083C               	movwf	(??___flmul+0)+0
  5626  05DE  00C4               	movf	(??___flmul+0)+0,w
  5627  05DF  0844               	movwf	(__Umul8_16@multiplicand)
  5628  05E0  00F0               	movf	0+(___flmul@a)+01h,w
  5629  05E1  0841               	fcall	__Umul8_16
  5630  05E2  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5631  05E7  0871               	bcf	status, 5	;RP0=0, select bank0
  5632  05E8  1283               	bcf	status, 6	;RP1=0, select bank0
  5633  05E9  1303               	movwf	(___flmul@temp+1)
  5634  05EA  00D5               	movf	(0+(?__Umul8_16)),w
  5635  05EB  0870               	movwf	(___flmul@temp)
  5636  05EC  00D4               	line	132
  5637                           	
  5638                           l2419:	
  5639  05ED                     	movf	(___flmul@temp),w
  5640  05ED  0854               	movwf	((??___flmul+0)+0)
  5641  05EE  00C4               	movf	(___flmul@temp+1),w
  5642  05EF  0855               	movwf	((??___flmul+0)+0+1)
  5643  05F0  00C5               	clrf	((??___flmul+0)+0+2)
  5644  05F1  01C6               	clrf	((??___flmul+0)+0+3)
  5645  05F2  01C7               	movf	0+(??___flmul+0)+0,w
  5646  05F3  0844               	addwf	(___flmul@grs),f
  5647  05F4  07CA               	movf	1+(??___flmul+0)+0,w
  5648  05F5  0845               	clrz
  5649  05F6  1103               	skipnc
  5650  05F7  1803               	addlw	1
  5651  05F8  3E01               	skipnz
  5652  05F9  1903               	goto	u3181
  5653  05FA  2DFC               	addwf	(___flmul@grs+1),f
  5654  05FB  07CB               u3181:
  5655  05FC                     	movf	2+(??___flmul+0)+0,w
  5656  05FC  0846               	clrz
  5657  05FD  1103               	skipnc
  5658  05FE  1803               	addlw	1
  5659  05FF  3E01               	skipnz
  5660  0600  1903               	goto	u3182
  5661  0601  2E03               	addwf	(___flmul@grs+2),f
  5662  0602  07CC               u3182:
  5663  0603                     	movf	3+(??___flmul+0)+0,w
  5664  0603  0847               	clrz
  5665  0604  1103               	skipnc
  5666  0605  1803               	addlw	1
  5667  0606  3E01               	skipnz
  5668  0607  1903               	goto	u3183
  5669  0608  2E0A               	addwf	(___flmul@grs+3),f
  5670  0609  07CD               u3183:
  5671  060A                     
  5672                           	line	133
  5673                           	
  5674                           l2421:	
  5675  060A                     	movlw	08h
  5676  060A  3008               	movwf	(??___flmul+0)+0
  5677  060B  00C4               u3195:
  5678  060C                     	clrc
  5679  060C  1003               	rlf	(___flmul@grs),f
  5680  060D  0DCA               	rlf	(___flmul@grs+1),f
  5681  060E  0DCB               	rlf	(___flmul@grs+2),f
  5682  060F  0DCC               	rlf	(___flmul@grs+3),f
  5683  0610  0DCD               	decfsz	(??___flmul+0)+0
  5684  0611  0BC4               	goto	u3195
  5685  0612  2E0C               	line	134
  5686                           	movf	(___flmul@b),w
  5687  0613  083C               	movwf	(??___flmul+0)+0
  5688  0614  00C4               	movf	(??___flmul+0)+0,w
  5689  0615  0844               	movwf	(__Umul8_16@multiplicand)
  5690  0616  00F0               	movf	(___flmul@a),w
  5691  0617  0840               	fcall	__Umul8_16
  5692  0618  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5693  061D  0871               	bcf	status, 5	;RP0=0, select bank0
  5694  061E  1283               	bcf	status, 6	;RP1=0, select bank0
  5695  061F  1303               	movwf	(___flmul@temp+1)
  5696  0620  00D5               	movf	(0+(?__Umul8_16)),w
  5697  0621  0870               	movwf	(___flmul@temp)
  5698  0622  00D4               	line	135
  5699                           	
  5700                           l2423:	
  5701  0623                     	movf	(___flmul@temp),w
  5702  0623  0854               	movwf	((??___flmul+0)+0)
  5703  0624  00C4               	movf	(___flmul@temp+1),w
  5704  0625  0855               	movwf	((??___flmul+0)+0+1)
  5705  0626  00C5               	clrf	((??___flmul+0)+0+2)
  5706  0627  01C6               	clrf	((??___flmul+0)+0+3)
  5707  0628  01C7               	movf	0+(??___flmul+0)+0,w
  5708  0629  0844               	addwf	(___flmul@grs),f
  5709  062A  07CA               	movf	1+(??___flmul+0)+0,w
  5710  062B  0845               	clrz
  5711  062C  1103               	skipnc
  5712  062D  1803               	addlw	1
  5713  062E  3E01               	skipnz
  5714  062F  1903               	goto	u3201
  5715  0630  2E32               	addwf	(___flmul@grs+1),f
  5716  0631  07CB               u3201:
  5717  0632                     	movf	2+(??___flmul+0)+0,w
  5718  0632  0846               	clrz
  5719  0633  1103               	skipnc
  5720  0634  1803               	addlw	1
  5721  0635  3E01               	skipnz
  5722  0636  1903               	goto	u3202
  5723  0637  2E39               	addwf	(___flmul@grs+2),f
  5724  0638  07CC               u3202:
  5725  0639                     	movf	3+(??___flmul+0)+0,w
  5726  0639  0847               	clrz
  5727  063A  1103               	skipnc
  5728  063B  1803               	addlw	1
  5729  063C  3E01               	skipnz
  5730  063D  1903               	goto	u3203
  5731  063E  2E40               	addwf	(___flmul@grs+3),f
  5732  063F  07CD               u3203:
  5733  0640                     
  5734                           	line	136
  5735                           	
  5736                           l2425:	
  5737  0640                     	movf	0+(___flmul@b)+01h,w
  5738  0640  083D               	movwf	(??___flmul+0)+0
  5739  0641  00C4               	movf	(??___flmul+0)+0,w
  5740  0642  0844               	movwf	(__Umul8_16@multiplicand)
  5741  0643  00F0               	movf	0+(___flmul@a)+02h,w
  5742  0644  0842               	fcall	__Umul8_16
  5743  0645  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5744  064A  0871               	bcf	status, 5	;RP0=0, select bank0
  5745  064B  1283               	bcf	status, 6	;RP1=0, select bank0
  5746  064C  1303               	movwf	(___flmul@temp+1)
  5747  064D  00D5               	movf	(0+(?__Umul8_16)),w
  5748  064E  0870               	movwf	(___flmul@temp)
  5749  064F  00D4               	line	137
  5750                           	movf	(___flmul@temp),w
  5751  0650  0854               	movwf	((??___flmul+0)+0)
  5752  0651  00C4               	movf	(___flmul@temp+1),w
  5753  0652  0855               	movwf	((??___flmul+0)+0+1)
  5754  0653  00C5               	clrf	((??___flmul+0)+0+2)
  5755  0654  01C6               	clrf	((??___flmul+0)+0+3)
  5756  0655  01C7               	movf	0+(??___flmul+0)+0,w
  5757  0656  0844               	addwf	(___flmul@prod),f
  5758  0657  07D0               	movf	1+(??___flmul+0)+0,w
  5759  0658  0845               	clrz
  5760  0659  1103               	skipnc
  5761  065A  1803               	addlw	1
  5762  065B  3E01               	skipnz
  5763  065C  1903               	goto	u3211
  5764  065D  2E5F               	addwf	(___flmul@prod+1),f
  5765  065E  07D1               u3211:
  5766  065F                     	movf	2+(??___flmul+0)+0,w
  5767  065F  0846               	clrz
  5768  0660  1103               	skipnc
  5769  0661  1803               	addlw	1
  5770  0662  3E01               	skipnz
  5771  0663  1903               	goto	u3212
  5772  0664  2E66               	addwf	(___flmul@prod+2),f
  5773  0665  07D2               u3212:
  5774  0666                     	movf	3+(??___flmul+0)+0,w
  5775  0666  0847               	clrz
  5776  0667  1103               	skipnc
  5777  0668  1803               	addlw	1
  5778  0669  3E01               	skipnz
  5779  066A  1903               	goto	u3213
  5780  066B  2E6D               	addwf	(___flmul@prod+3),f
  5781  066C  07D3               u3213:
  5782  066D                     
  5783                           	line	138
  5784                           	
  5785                           l2427:	
  5786  066D                     	movf	0+(___flmul@b)+02h,w
  5787  066D  083E               	movwf	(??___flmul+0)+0
  5788  066E  00C4               	movf	(??___flmul+0)+0,w
  5789  066F  0844               	movwf	(__Umul8_16@multiplicand)
  5790  0670  00F0               	movf	0+(___flmul@a)+01h,w
  5791  0671  0841               	fcall	__Umul8_16
  5792  0672  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5793  0677  0871               	bcf	status, 5	;RP0=0, select bank0
  5794  0678  1283               	bcf	status, 6	;RP1=0, select bank0
  5795  0679  1303               	movwf	(___flmul@temp+1)
  5796  067A  00D5               	movf	(0+(?__Umul8_16)),w
  5797  067B  0870               	movwf	(___flmul@temp)
  5798  067C  00D4               	line	139
  5799                           	
  5800                           l2429:	
  5801  067D                     	movf	(___flmul@temp),w
  5802  067D  0854               	movwf	((??___flmul+0)+0)
  5803  067E  00C4               	movf	(___flmul@temp+1),w
  5804  067F  0855               	movwf	((??___flmul+0)+0+1)
  5805  0680  00C5               	clrf	((??___flmul+0)+0+2)
  5806  0681  01C6               	clrf	((??___flmul+0)+0+3)
  5807  0682  01C7               	movf	0+(??___flmul+0)+0,w
  5808  0683  0844               	addwf	(___flmul@prod),f
  5809  0684  07D0               	movf	1+(??___flmul+0)+0,w
  5810  0685  0845               	clrz
  5811  0686  1103               	skipnc
  5812  0687  1803               	addlw	1
  5813  0688  3E01               	skipnz
  5814  0689  1903               	goto	u3221
  5815  068A  2E8C               	addwf	(___flmul@prod+1),f
  5816  068B  07D1               u3221:
  5817  068C                     	movf	2+(??___flmul+0)+0,w
  5818  068C  0846               	clrz
  5819  068D  1103               	skipnc
  5820  068E  1803               	addlw	1
  5821  068F  3E01               	skipnz
  5822  0690  1903               	goto	u3222
  5823  0691  2E93               	addwf	(___flmul@prod+2),f
  5824  0692  07D2               u3222:
  5825  0693                     	movf	3+(??___flmul+0)+0,w
  5826  0693  0847               	clrz
  5827  0694  1103               	skipnc
  5828  0695  1803               	addlw	1
  5829  0696  3E01               	skipnz
  5830  0697  1903               	goto	u3223
  5831  0698  2E9A               	addwf	(___flmul@prod+3),f
  5832  0699  07D3               u3223:
  5833  069A                     
  5834                           	line	140
  5835                           	movf	0+(___flmul@b)+02h,w
  5836  069A  083E               	movwf	(??___flmul+0)+0
  5837  069B  00C4               	movf	(??___flmul+0)+0,w
  5838  069C  0844               	movwf	(__Umul8_16@multiplicand)
  5839  069D  00F0               	movf	0+(___flmul@a)+02h,w
  5840  069E  0842               	fcall	__Umul8_16
  5841  069F  120A  158A  2103  120A  118A  	movf	(1+(?__Umul8_16)),w
  5842  06A4  0871               	bcf	status, 5	;RP0=0, select bank0
  5843  06A5  1283               	bcf	status, 6	;RP1=0, select bank0
  5844  06A6  1303               	movwf	(___flmul@temp+1)
  5845  06A7  00D5               	movf	(0+(?__Umul8_16)),w
  5846  06A8  0870               	movwf	(___flmul@temp)
  5847  06A9  00D4               	line	141
  5848                           	
  5849                           l2431:	
  5850  06AA                     	movf	(___flmul@temp),w
  5851  06AA  0854               	movwf	((??___flmul+0)+0)
  5852  06AB  00C4               	movf	(___flmul@temp+1),w
  5853  06AC  0855               	movwf	((??___flmul+0)+0+1)
  5854  06AD  00C5               	clrf	((??___flmul+0)+0+2)
  5855  06AE  01C6               	clrf	((??___flmul+0)+0+3)
  5856  06AF  01C7               	movlw	08h
  5857  06B0  3008               u3235:
  5858  06B1                     	clrc
  5859  06B1  1003               	rlf	(??___flmul+0)+0,f
  5860  06B2  0DC4               	rlf	(??___flmul+0)+1,f
  5861  06B3  0DC5               	rlf	(??___flmul+0)+2,f
  5862  06B4  0DC6               	rlf	(??___flmul+0)+3,f
  5863  06B5  0DC7               u3230:
  5864  06B6                     	addlw	-1
  5865  06B6  3EFF               	skipz
  5866  06B7  1D03               	goto	u3235
  5867  06B8  2EB1               	movf	0+(??___flmul+0)+0,w
  5868  06B9  0844               	addwf	(___flmul@prod),f
  5869  06BA  07D0               	movf	1+(??___flmul+0)+0,w
  5870  06BB  0845               	clrz
  5871  06BC  1103               	skipnc
  5872  06BD  1803               	addlw	1
  5873  06BE  3E01               	skipnz
  5874  06BF  1903               	goto	u3241
  5875  06C0  2EC2               	addwf	(___flmul@prod+1),f
  5876  06C1  07D1               u3241:
  5877  06C2                     	movf	2+(??___flmul+0)+0,w
  5878  06C2  0846               	clrz
  5879  06C3  1103               	skipnc
  5880  06C4  1803               	addlw	1
  5881  06C5  3E01               	skipnz
  5882  06C6  1903               	goto	u3242
  5883  06C7  2EC9               	addwf	(___flmul@prod+2),f
  5884  06C8  07D2               u3242:
  5885  06C9                     	movf	3+(??___flmul+0)+0,w
  5886  06C9  0847               	clrz
  5887  06CA  1103               	skipnc
  5888  06CB  1803               	addlw	1
  5889  06CC  3E01               	skipnz
  5890  06CD  1903               	goto	u3243
  5891  06CE  2ED0               	addwf	(___flmul@prod+3),f
  5892  06CF  07D3               u3243:
  5893  06D0                     
  5894                           	line	145
  5895                           	
  5896                           l2433:	
  5897  06D0                     	movf	(___flmul@grs),w
  5898  06D0  084A               	movwf	(??___flmul+0)+0
  5899  06D1  00C4               	movf	(___flmul@grs+1),w
  5900  06D2  084B               	movwf	((??___flmul+0)+0+1)
  5901  06D3  00C5               	movf	(___flmul@grs+2),w
  5902  06D4  084C               	movwf	((??___flmul+0)+0+2)
  5903  06D5  00C6               	movf	(___flmul@grs+3),w
  5904  06D6  084D               	movwf	((??___flmul+0)+0+3)
  5905  06D7  00C7               	movlw	018h
  5906  06D8  3018               u3255:
  5907  06D9                     	clrc
  5908  06D9  1003               	rrf	(??___flmul+0)+3,f
  5909  06DA  0CC7               	rrf	(??___flmul+0)+2,f
  5910  06DB  0CC6               	rrf	(??___flmul+0)+1,f
  5911  06DC  0CC5               	rrf	(??___flmul+0)+0,f
  5912  06DD  0CC4               u3250:
  5913  06DE                     	addlw	-1
  5914  06DE  3EFF               	skipz
  5915  06DF  1D03               	goto	u3255
  5916  06E0  2ED9               	movf	0+(??___flmul+0)+0,w
  5917  06E1  0844               	addwf	(___flmul@prod),f
  5918  06E2  07D0               	movf	1+(??___flmul+0)+0,w
  5919  06E3  0845               	clrz
  5920  06E4  1103               	skipnc
  5921  06E5  1803               	addlw	1
  5922  06E6  3E01               	skipnz
  5923  06E7  1903               	goto	u3261
  5924  06E8  2EEA               	addwf	(___flmul@prod+1),f
  5925  06E9  07D1               u3261:
  5926  06EA                     	movf	2+(??___flmul+0)+0,w
  5927  06EA  0846               	clrz
  5928  06EB  1103               	skipnc
  5929  06EC  1803               	addlw	1
  5930  06ED  3E01               	skipnz
  5931  06EE  1903               	goto	u3262
  5932  06EF  2EF1               	addwf	(___flmul@prod+2),f
  5933  06F0  07D2               u3262:
  5934  06F1                     	movf	3+(??___flmul+0)+0,w
  5935  06F1  0847               	clrz
  5936  06F2  1103               	skipnc
  5937  06F3  1803               	addlw	1
  5938  06F4  3E01               	skipnz
  5939  06F5  1903               	goto	u3263
  5940  06F6  2EF8               	addwf	(___flmul@prod+3),f
  5941  06F7  07D3               u3263:
  5942  06F8                     
  5943                           	line	146
  5944                           	
  5945                           l2435:	
  5946  06F8                     	movlw	08h
  5947  06F8  3008               	movwf	(??___flmul+0)+0
  5948  06F9  00C4               u3275:
  5949  06FA                     	clrc
  5950  06FA  1003               	rlf	(___flmul@grs),f
  5951  06FB  0DCA               	rlf	(___flmul@grs+1),f
  5952  06FC  0DCB               	rlf	(___flmul@grs+2),f
  5953  06FD  0DCC               	rlf	(___flmul@grs+3),f
  5954  06FE  0DCD               	decfsz	(??___flmul+0)+0
  5955  06FF  0BC4               	goto	u3275
  5956  0700  2EFA               	line	149
  5957                           	
  5958                           l2437:	
  5959  0701                     	movf	(___flmul@bexp),w
  5960  0701  084F               	addwf	(___flmul@aexp),w
  5961  0702  074E               	movwf	(??___flmul+0)+0
  5962  0703  00C4               	clrf	(??___flmul+0)+0+1
  5963  0704  01C5               	rlf	1+(??___flmul+0)+0,f
  5964  0705  0DC5               	
  5965                           	movf	0+(??___flmul+0)+0,w
  5966  0706  0844               	addlw	low(-126)
  5967  0707  3E82               	movwf	(___flmul@temp)
  5968  0708  00D4               	movf	1+(??___flmul+0)+0,w
  5969  0709  0845               	skipnc
  5970  070A  1803               	addlw	1
  5971  070B  3E01               	addlw	high(-126)
  5972  070C  3EFF               	movwf	1+(___flmul@temp)
  5973  070D  00D5               	line	152
  5974                           	goto	l2449
  5975  070E  2F2E               	
  5976                           l669:	
  5977  070F                     	line	153
  5978                           	
  5979                           l2439:	
  5980  070F                     	movlw	01h
  5981  070F  3001               	movwf	(??___flmul+0)+0
  5982  0710  00C4               u3285:
  5983  0711                     	clrc
  5984  0711  1003               	rlf	(___flmul@prod),f
  5985  0712  0DD0               	rlf	(___flmul@prod+1),f
  5986  0713  0DD1               	rlf	(___flmul@prod+2),f
  5987  0714  0DD2               	rlf	(___flmul@prod+3),f
  5988  0715  0DD3               	decfsz	(??___flmul+0)+0
  5989  0716  0BC4               	goto	u3285
  5990  0717  2F11               	line	154
  5991                           	
  5992                           l2441:	
  5993  0718                     	btfss	(___flmul@grs+3),(31)&7
  5994  0718  1FCD               	goto	u3291
  5995  0719  2F1B               	goto	u3290
  5996  071A  2F1C               u3291:
  5997  071B                     	goto	l2445
  5998  071B  2F1E               u3290:
  5999  071C                     	line	155
  6000                           	
  6001                           l2443:	
  6002  071C                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6003  071C  1450               	goto	l2445
  6004  071D  2F1E               	line	156
  6005                           	
  6006                           l670:	
  6007  071E                     	line	157
  6008                           	
  6009                           l2445:	
  6010  071E                     	movlw	01h
  6011  071E  3001               	movwf	(??___flmul+0)+0
  6012  071F  00C4               u3305:
  6013  0720                     	clrc
  6014  0720  1003               	rlf	(___flmul@grs),f
  6015  0721  0DCA               	rlf	(___flmul@grs+1),f
  6016  0722  0DCB               	rlf	(___flmul@grs+2),f
  6017  0723  0DCC               	rlf	(___flmul@grs+3),f
  6018  0724  0DCD               	decfsz	(??___flmul+0)+0
  6019  0725  0BC4               	goto	u3305
  6020  0726  2F20               	line	158
  6021                           	
  6022                           l2447:	
  6023  0727                     	movlw	0FFh
  6024  0727  30FF               	addwf	(___flmul@temp),f
  6025  0728  07D4               	skipnc
  6026  0729  1803               	incf	(___flmul@temp+1),f
  6027  072A  0AD5               	movlw	0FFh
  6028  072B  30FF               	addwf	(___flmul@temp+1),f
  6029  072C  07D5               	goto	l2449
  6030  072D  2F2E               	line	159
  6031                           	
  6032                           l668:	
  6033  072E                     	line	152
  6034                           	
  6035                           l2449:	
  6036  072E                     	btfss	(___flmul@prod+2),(23)&7
  6037  072E  1FD2               	goto	u3311
  6038  072F  2F31               	goto	u3310
  6039  0730  2F32               u3311:
  6040  0731                     	goto	l2439
  6041  0731  2F0F               u3310:
  6042  0732                     	goto	l2451
  6043  0732  2F33               	
  6044                           l671:	
  6045  0733                     	line	163
  6046                           	
  6047                           l2451:	
  6048  0733                     	clrf	(___flmul@aexp)
  6049  0733  01CE               	line	164
  6050                           	
  6051                           l2453:	
  6052  0734                     	btfss	(___flmul@grs+3),(31)&7
  6053  0734  1FCD               	goto	u3321
  6054  0735  2F37               	goto	u3320
  6055  0736  2F38               u3321:
  6056  0737                     	goto	l2461
  6057  0737  2F58               u3320:
  6058  0738                     	line	165
  6059                           	
  6060                           l2455:	
  6061  0738                     	movlw	0FFh
  6062  0738  30FF               	andwf	(___flmul@grs),w
  6063  0739  054A               	movwf	(??___flmul+0)+0
  6064  073A  00C4               	movlw	0FFh
  6065  073B  30FF               	andwf	(___flmul@grs+1),w
  6066  073C  054B               	movwf	((??___flmul+0)+0+1)
  6067  073D  00C5               	movlw	0FFh
  6068  073E  30FF               	andwf	(___flmul@grs+2),w
  6069  073F  054C               	movwf	((??___flmul+0)+0+2)
  6070  0740  00C6               	movlw	07Fh
  6071  0741  307F               	andwf	(___flmul@grs+3),w
  6072  0742  054D               	movwf	((??___flmul+0)+0+3)
  6073  0743  00C7               	movf	3+(??___flmul+0)+0,w
  6074  0744  0847               	iorwf	2+(??___flmul+0)+0,w
  6075  0745  0446               	iorwf	1+(??___flmul+0)+0,w
  6076  0746  0445               	iorwf	0+(??___flmul+0)+0,w
  6077  0747  0444               	skipnz
  6078  0748  1903               	goto	u3331
  6079  0749  2F4B               	goto	u3330
  6080  074A  2F4C               u3331:
  6081  074B                     	goto	l673
  6082  074B  2F4F               u3330:
  6083  074C                     	line	166
  6084                           	
  6085                           l2457:	
  6086  074C                     	clrf	(___flmul@aexp)
  6087  074C  01CE               	incf	(___flmul@aexp),f
  6088  074D  0ACE               	line	167
  6089                           	goto	l2461
  6090  074E  2F58               	line	168
  6091                           	
  6092                           l673:	
  6093  074F                     	line	169
  6094                           	btfss	(___flmul@prod),(0)&7
  6095  074F  1C50               	goto	u3341
  6096  0750  2F52               	goto	u3340
  6097  0751  2F53               u3341:
  6098  0752                     	goto	l2461
  6099  0752  2F58               u3340:
  6100  0753                     	line	170
  6101                           	
  6102                           l2459:	
  6103  0753                     	clrf	(___flmul@aexp)
  6104  0753  01CE               	incf	(___flmul@aexp),f
  6105  0754  0ACE               	goto	l2461
  6106  0755  2F58               	line	171
  6107                           	
  6108                           l675:	
  6109  0756                     	goto	l2461
  6110  0756  2F58               	line	172
  6111                           	
  6112                           l674:	
  6113  0757                     	goto	l2461
  6114  0757  2F58               	line	173
  6115                           	
  6116                           l672:	
  6117  0758                     	line	174
  6118                           	
  6119                           l2461:	
  6120  0758                     	movf	((___flmul@aexp)),w
  6121  0758  084E               	btfsc	status,2
  6122  0759  1903               	goto	u3351
  6123  075A  2F5C               	goto	u3350
  6124  075B  2F5D               u3351:
  6125  075C                     	goto	l2471
  6126  075C  2F90               u3350:
  6127  075D                     	line	175
  6128                           	
  6129                           l2463:	
  6130  075D                     	movlw	01h
  6131  075D  3001               	addwf	(___flmul@prod),f
  6132  075E  07D0               	movlw	0
  6133  075F  3000               	skipnc
  6134  0760  1803               movlw 1
  6135  0761  3001               	addwf	(___flmul@prod+1),f
  6136  0762  07D1               	movlw	0
  6137  0763  3000               	skipnc
  6138  0764  1803               movlw 1
  6139  0765  3001               	addwf	(___flmul@prod+2),f
  6140  0766  07D2               	movlw	0
  6141  0767  3000               	skipnc
  6142  0768  1803               movlw 1
  6143  0769  3001               	addwf	(___flmul@prod+3),f
  6144  076A  07D3               	line	176
  6145                           	
  6146                           l2465:	
  6147  076B                     	btfss	(___flmul@prod+3),(24)&7
  6148  076B  1C53               	goto	u3361
  6149  076C  2F6E               	goto	u3360
  6150  076D  2F6F               u3361:
  6151  076E                     	goto	l2471
  6152  076E  2F90               u3360:
  6153  076F                     	line	177
  6154                           	
  6155                           l2467:	
  6156  076F                     	movf	(___flmul@prod),w
  6157  076F  0850               	movwf	(??___flmul+0)+0
  6158  0770  00C4               	movf	(___flmul@prod+1),w
  6159  0771  0851               	movwf	((??___flmul+0)+0+1)
  6160  0772  00C5               	movf	(___flmul@prod+2),w
  6161  0773  0852               	movwf	((??___flmul+0)+0+2)
  6162  0774  00C6               	movf	(___flmul@prod+3),w
  6163  0775  0853               	movwf	((??___flmul+0)+0+3)
  6164  0776  00C7               	movlw	01h
  6165  0777  3001               	movwf	(??___flmul+4)+0
  6166  0778  00C8               u3375:
  6167  0779                     	rlf	(??___flmul+0)+3,w
  6168  0779  0D47               	rrf	(??___flmul+0)+3,f
  6169  077A  0CC7               	rrf	(??___flmul+0)+2,f
  6170  077B  0CC6               	rrf	(??___flmul+0)+1,f
  6171  077C  0CC5               	rrf	(??___flmul+0)+0,f
  6172  077D  0CC4               u3370:
  6173  077E                     	decfsz	(??___flmul+4)+0,f
  6174  077E  0BC8               	goto	u3375
  6175  077F  2F79               	movf	3+(??___flmul+0)+0,w
  6176  0780  0847               	movwf	(___flmul@prod+3)
  6177  0781  00D3               	movf	2+(??___flmul+0)+0,w
  6178  0782  0846               	movwf	(___flmul@prod+2)
  6179  0783  00D2               	movf	1+(??___flmul+0)+0,w
  6180  0784  0845               	movwf	(___flmul@prod+1)
  6181  0785  00D1               	movf	0+(??___flmul+0)+0,w
  6182  0786  0844               	movwf	(___flmul@prod)
  6183  0787  00D0               
  6184                           	line	178
  6185                           	
  6186                           l2469:	
  6187  0788                     	movlw	01h
  6188  0788  3001               	addwf	(___flmul@temp),f
  6189  0789  07D4               	skipnc
  6190  078A  1803               	incf	(___flmul@temp+1),f
  6191  078B  0AD5               	movlw	0
  6192  078C  3000               	addwf	(___flmul@temp+1),f
  6193  078D  07D5               	goto	l2471
  6194  078E  2F90               	line	179
  6195                           	
  6196                           l677:	
  6197  078F                     	goto	l2471
  6198  078F  2F90               	line	180
  6199                           	
  6200                           l676:	
  6201  0790                     	line	183
  6202                           	
  6203                           l2471:	
  6204  0790                     	movf	(___flmul@temp+1),w
  6205  0790  0855               	xorlw	80h
  6206  0791  3A80               	movwf	btemp+1
  6207  0792  00FF               	movlw	(0)^80h
  6208  0793  3080               	subwf	btemp+1,w
  6209  0794  027F               	skipz
  6210  0795  1D03               	goto	u3385
  6211  0796  2F99               	movlw	0FFh
  6212  0797  30FF               	subwf	(___flmul@temp),w
  6213  0798  0254               u3385:
  6214  0799                     
  6215                           	skipc
  6216  0799  1C03               	goto	u3381
  6217  079A  2F9C               	goto	u3380
  6218  079B  2F9D               u3381:
  6219  079C                     	goto	l2475
  6220  079C  2FA8               u3380:
  6221  079D                     	line	184
  6222                           	
  6223                           l2473:	
  6224  079D                     	movlw	07Fh
  6225  079D  307F               	bcf	status, 5	;RP0=0, select bank0
  6226  079E  1283               	bcf	status, 6	;RP1=0, select bank0
  6227  079F  1303               	movwf	(___flmul@prod+3)
  6228  07A0  00D3               	movlw	080h
  6229  07A1  3080               	movwf	(___flmul@prod+2)
  6230  07A2  00D2               	movlw	0
  6231  07A3  3000               	movwf	(___flmul@prod+1)
  6232  07A4  00D1               	movlw	0
  6233  07A5  3000               	movwf	(___flmul@prod)
  6234  07A6  00D0               
  6235                           	line	185
  6236                           	goto	l679
  6237  07A7  2FDF               	line	187
  6238                           	
  6239                           l678:	
  6240  07A8                     	
  6241                           l2475:	
  6242  07A8                     	bcf	status, 5	;RP0=0, select bank0
  6243  07A8  1283               	bcf	status, 6	;RP1=0, select bank0
  6244  07A9  1303               	movf	(___flmul@temp+1),w
  6245  07AA  0855               	xorlw	80h
  6246  07AB  3A80               	movwf	btemp+1
  6247  07AC  00FF               	movlw	(0)^80h
  6248  07AD  3080               	subwf	btemp+1,w
  6249  07AE  027F               	skipz
  6250  07AF  1D03               	goto	u3395
  6251  07B0  2FB3               	movlw	01h
  6252  07B1  3001               	subwf	(___flmul@temp),w
  6253  07B2  0254               u3395:
  6254  07B3                     
  6255                           	skipnc
  6256  07B3  1803               	goto	u3391
  6257  07B4  2FB6               	goto	u3390
  6258  07B5  2FB7               u3391:
  6259  07B6                     	goto	l2481
  6260  07B6  2FC3               u3390:
  6261  07B7                     	line	188
  6262                           	
  6263                           l2477:	
  6264  07B7                     	movlw	high highword(0)
  6265  07B7  3000               	bcf	status, 5	;RP0=0, select bank0
  6266  07B8  1283               	bcf	status, 6	;RP1=0, select bank0
  6267  07B9  1303               	movwf	(___flmul@prod+3)
  6268  07BA  00D3               	movlw	low highword(0)
  6269  07BB  3000               	movwf	(___flmul@prod+2)
  6270  07BC  00D2               	movlw	high(0)
  6271  07BD  3000               	movwf	(___flmul@prod+1)
  6272  07BE  00D1               	movlw	low(0)
  6273  07BF  3000               	movwf	(___flmul@prod)
  6274  07C0  00D0               
  6275                           	line	190
  6276                           	
  6277                           l2479:	
  6278  07C1                     	clrf	(___flmul@sign)
  6279  07C1  01C9               	line	191
  6280                           	goto	l679
  6281  07C2  2FDF               	line	192
  6282                           	
  6283                           l680:	
  6284  07C3                     	line	194
  6285                           	
  6286                           l2481:	
  6287  07C3                     	bcf	status, 5	;RP0=0, select bank0
  6288  07C3  1283               	bcf	status, 6	;RP1=0, select bank0
  6289  07C4  1303               	movf	(___flmul@temp),w
  6290  07C5  0854               	movwf	(??___flmul+0)+0
  6291  07C6  00C4               	movf	(??___flmul+0)+0,w
  6292  07C7  0844               	movwf	(___flmul@bexp)
  6293  07C8  00CF               	line	195
  6294                           	movlw	0FFh
  6295  07C9  30FF               	andwf	(___flmul@prod),f
  6296  07CA  05D0               	movlw	0FFh
  6297  07CB  30FF               	andwf	(___flmul@prod+1),f
  6298  07CC  05D1               	movlw	07Fh
  6299  07CD  307F               	andwf	(___flmul@prod+2),f
  6300  07CE  05D2               	movlw	0
  6301  07CF  3000               	andwf	(___flmul@prod+3),f
  6302  07D0  05D3               	line	196
  6303                           	
  6304                           l2483:	
  6305  07D1                     	btfss	(___flmul@bexp),(0)&7
  6306  07D1  1C4F               	goto	u3401
  6307  07D2  2FD4               	goto	u3400
  6308  07D3  2FD5               u3401:
  6309  07D4                     	goto	l2487
  6310  07D4  2FD7               u3400:
  6311  07D5                     	line	197
  6312                           	
  6313                           l2485:	
  6314  07D5                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6315  07D5  17D2               	goto	l2487
  6316  07D6  2FD7               	line	198
  6317                           	
  6318                           l682:	
  6319  07D7                     	line	199
  6320                           	
  6321                           l2487:	
  6322  07D7                     	movf	(___flmul@bexp),w
  6323  07D7  084F               	movwf	(??___flmul+0)+0
  6324  07D8  00C4               	clrc
  6325  07D9  1003               	rrf	(??___flmul+0)+0,w
  6326  07DA  0C44               	movwf	(??___flmul+1)+0
  6327  07DB  00C5               	movf	(??___flmul+1)+0,w
  6328  07DC  0845               	movwf	0+(___flmul@prod)+03h
  6329  07DD  00D3               	goto	l679
  6330  07DE  2FDF               	line	200
  6331                           	
  6332                           l681:	
  6333  07DF                     	
  6334                           l679:	
  6335  07DF                     	line	201
  6336                           	movf	(___flmul@sign),w
  6337  07DF  0849               	movwf	(??___flmul+0)+0
  6338  07E0  00C4               	movf	(??___flmul+0)+0,w
  6339  07E1  0844               	iorwf	0+(___flmul@prod)+03h,f
  6340  07E2  04D3               	line	203
  6341                           	
  6342                           l2489:	
  6343  07E3                     	movf	(___flmul@prod+3),w
  6344  07E3  0853               	movwf	(?___flmul+3)
  6345  07E4  00BF               	movf	(___flmul@prod+2),w
  6346  07E5  0852               	movwf	(?___flmul+2)
  6347  07E6  00BE               	movf	(___flmul@prod+1),w
  6348  07E7  0851               	movwf	(?___flmul+1)
  6349  07E8  00BD               	movf	(___flmul@prod),w
  6350  07E9  0850               	movwf	(?___flmul)
  6351  07EA  00BC               
  6352                           	goto	l667
  6353  07EB  2FEC               	
  6354                           l2491:	
  6355  07EC                     	line	205
  6356                           	
  6357                           l667:	
  6358  07EC                     	return
  6359  07EC  0008               	opt stack 0
  6360                           GLOBAL	__end_of___flmul
  6361                           	__end_of___flmul:
  6362  07ED                     	signat	___flmul,8316
  6363                           	global	__Umul8_16
  6364                           
  6365 ;; *************** function __Umul8_16 *****************
  6366 ;; Defined at:
  6367 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  multiplier      1    wreg     unsigned char 
  6370 ;;  multiplicand    1    0[COMMON] unsigned char 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  multiplier      1    8[COMMON] unsigned char 
  6373 ;;  word_mpld       2    6[COMMON] unsigned int 
  6374 ;;  product         2    4[COMMON] unsigned int 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  2    0[COMMON] unsigned int 
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6384 ;;      Params:         2       0       0       0       0
  6385 ;;      Locals:         5       0       0       0       0
  6386 ;;      Temps:          2       0       0       0       0
  6387 ;;      Totals:         9       0       0       0       0
  6388 ;;Total ram usage:        9 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		___flmul
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6397                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6398                           	line	4
  6399                           global __ptext19
  6400                           __ptext19:	;psect for function __Umul8_16
  6401  0903                     psect	text19
  6402                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6403                           	line	4
  6404                           	global	__size_of__Umul8_16
  6405                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6406  002A                     	
  6407                           __Umul8_16:	
  6408  0903                     ;incstack = 0
  6409                           	opt	stack 6
  6410                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6411                           ;__Umul8_16@multiplier stored from wreg
  6412                           	movwf	(__Umul8_16@multiplier)
  6413  0903  00F8               	line	5
  6414                           	
  6415                           l1891:	
  6416  0904                     	clrf	(__Umul8_16@product)
  6417  0904  01F4               	clrf	(__Umul8_16@product+1)
  6418  0905  01F5               	line	6
  6419                           	
  6420                           l1893:	
  6421  0906                     	movf	(__Umul8_16@multiplicand),w
  6422  0906  0870               	movwf	(??__Umul8_16+0)+0
  6423  0907  00F2               	clrf	(??__Umul8_16+0)+0+1
  6424  0908  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6425  0909  0872               	movwf	(__Umul8_16@word_mpld)
  6426  090A  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6427  090B  0873               	movwf	(__Umul8_16@word_mpld+1)
  6428  090C  00F7               	goto	l1895
  6429  090D  290E               	line	50
  6430                           	
  6431                           l704:	
  6432  090E                     	line	51
  6433                           	
  6434                           l1895:	
  6435  090E                     	btfss	(__Umul8_16@multiplier),(0)&7
  6436  090E  1C78               	goto	u2131
  6437  090F  2911               	goto	u2130
  6438  0910  2912               u2131:
  6439  0911                     	goto	l705
  6440  0911  2918               u2130:
  6441  0912                     	line	52
  6442                           	
  6443                           l1897:	
  6444  0912                     	movf	(__Umul8_16@word_mpld),w
  6445  0912  0876               	addwf	(__Umul8_16@product),f
  6446  0913  07F4               	skipnc
  6447  0914  1803               	incf	(__Umul8_16@product+1),f
  6448  0915  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6449  0916  0877               	addwf	(__Umul8_16@product+1),f
  6450  0917  07F5               	line	53
  6451                           	
  6452                           l705:	
  6453  0918                     	line	54
  6454                           	movlw	01h
  6455  0918  3001               	
  6456                           u2145:
  6457  0919                     	clrc
  6458  0919  1003               	rlf	(__Umul8_16@word_mpld),f
  6459  091A  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6460  091B  0DF7               	addlw	-1
  6461  091C  3EFF               	skipz
  6462  091D  1D03               	goto	u2145
  6463  091E  2919               	line	55
  6464                           	clrc
  6465  091F  1003               	rrf	(__Umul8_16@multiplier),f
  6466  0920  0CF8               
  6467                           	line	56
  6468                           	
  6469                           l1899:	
  6470  0921                     	movf	((__Umul8_16@multiplier)),w
  6471  0921  0878               	btfss	status,2
  6472  0922  1D03               	goto	u2151
  6473  0923  2925               	goto	u2150
  6474  0924  2926               u2151:
  6475  0925                     	goto	l1895
  6476  0925  290E               u2150:
  6477  0926                     	goto	l1901
  6478  0926  2927               	
  6479                           l706:	
  6480  0927                     	line	59
  6481                           	
  6482                           l1901:	
  6483  0927                     	movf	(__Umul8_16@product+1),w
  6484  0927  0875               	movwf	(?__Umul8_16+1)
  6485  0928  00F1               	movf	(__Umul8_16@product),w
  6486  0929  0874               	movwf	(?__Umul8_16)
  6487  092A  00F0               	goto	l707
  6488  092B  292C               	
  6489                           l1903:	
  6490  092C                     	line	60
  6491                           	
  6492                           l707:	
  6493  092C                     	return
  6494  092C  0008               	opt stack 0
  6495                           GLOBAL	__end_of__Umul8_16
  6496                           	__end_of__Umul8_16:
  6497  092D                     	signat	__Umul8_16,8314
  6498                           	global	___fldiv
  6499                           
  6500 ;; *************** function ___fldiv *****************
  6501 ;; Defined at:
  6502 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  a               4   54[BANK0 ] unsigned int 
  6505 ;;  b               4   58[BANK0 ] unsigned int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  grs             4   74[BANK0 ] unsigned long 
  6508 ;;  rem             4   67[BANK0 ] unsigned long 
  6509 ;;  new_exp         2   72[BANK0 ] int 
  6510 ;;  aexp            1   79[BANK0 ] unsigned char 
  6511 ;;  bexp            1   78[BANK0 ] unsigned char 
  6512 ;;  sign            1   71[BANK0 ] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  4   54[BANK0 ] unsigned char 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0, btemp+1
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6522 ;;      Params:         0       8       0       0       0
  6523 ;;      Locals:         0      13       0       0       0
  6524 ;;      Temps:          0       5       0       0       0
  6525 ;;      Totals:         0      26       0       0       0
  6526 ;;Total ram usage:       26 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6535                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6536                           	line	8
  6537                           global __ptext20
  6538                           __ptext20:	;psect for function ___fldiv
  6539  0DF7                     psect	text20
  6540                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6541                           	line	8
  6542                           	global	__size_of___fldiv
  6543                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  6544  0209                     	
  6545                           ___fldiv:	
  6546  0DF7                     ;incstack = 0
  6547                           	opt	stack 7
  6548                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6549                           	line	26
  6550                           	
  6551                           l2211:	
  6552  0DF7                     	bcf	status, 5	;RP0=0, select bank0
  6553  0DF7  1283               	bcf	status, 6	;RP1=0, select bank0
  6554  0DF8  1303               	movf	0+(___fldiv@b)+03h,w
  6555  0DF9  085D               	andlw	080h
  6556  0DFA  3980               	movwf	(??___fldiv+0)+0
  6557  0DFB  00DE               	movf	(??___fldiv+0)+0,w
  6558  0DFC  085E               	movwf	(___fldiv@sign)
  6559  0DFD  00E7               	line	27
  6560                           	
  6561                           l2213:	
  6562  0DFE                     	movf	0+(___fldiv@b)+03h,w
  6563  0DFE  085D               	movwf	(??___fldiv+0)+0
  6564  0DFF  00DE               	addwf	(??___fldiv+0)+0,w
  6565  0E00  075E               	movwf	(??___fldiv+1)+0
  6566  0E01  00DF               	movf	(??___fldiv+1)+0,w
  6567  0E02  085F               	movwf	(___fldiv@bexp)
  6568  0E03  00EE               	line	28
  6569                           	
  6570                           l2215:	
  6571  0E04                     	btfss	0+(___fldiv@b)+02h,(7)&7
  6572  0E04  1FDC               	goto	u2751
  6573  0E05  2E07               	goto	u2750
  6574  0E06  2E08               u2751:
  6575  0E07                     	goto	l2219
  6576  0E07  2E0A               u2750:
  6577  0E08                     	line	29
  6578                           	
  6579                           l2217:	
  6580  0E08                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  6581  0E08  146E               	goto	l2219
  6582  0E09  2E0A               	line	30
  6583                           	
  6584                           l620:	
  6585  0E0A                     	line	33
  6586                           	
  6587                           l2219:	
  6588  0E0A                     	movf	((___fldiv@bexp)),w
  6589  0E0A  086E               	btfsc	status,2
  6590  0E0B  1903               	goto	u2761
  6591  0E0C  2E0E               	goto	u2760
  6592  0E0D  2E0F               u2761:
  6593  0E0E                     	goto	l2229
  6594  0E0E  2E20               u2760:
  6595  0E0F                     	line	35
  6596                           	
  6597                           l2221:	
  6598  0E0F                     		incf	((___fldiv@bexp)),w
  6599  0E0F  0A6E               	btfss	status,2
  6600  0E10  1D03               	goto	u2771
  6601  0E11  2E13               	goto	u2770
  6602  0E12  2E14               u2771:
  6603  0E13                     	goto	l2225
  6604  0E13  2E1D               u2770:
  6605  0E14                     	line	37
  6606                           	
  6607                           l2223:	
  6608  0E14                     	movlw	0x0
  6609  0E14  3000               	movwf	(___fldiv@b+3)
  6610  0E15  00DD               	movlw	0x0
  6611  0E16  3000               	movwf	(___fldiv@b+2)
  6612  0E17  00DC               	movlw	0x0
  6613  0E18  3000               	movwf	(___fldiv@b+1)
  6614  0E19  00DB               	movlw	0x0
  6615  0E1A  3000               	movwf	(___fldiv@b)
  6616  0E1B  00DA               
  6617                           	goto	l2225
  6618  0E1C  2E1D               	line	38
  6619                           	
  6620                           l622:	
  6621  0E1D                     	line	40
  6622                           	
  6623                           l2225:	
  6624  0E1D                     	bsf	(___fldiv@b)+(23/8),(23)&7
  6625  0E1D  17DC               	line	42
  6626                           	
  6627                           l2227:	
  6628  0E1E                     	clrf	0+(___fldiv@b)+03h
  6629  0E1E  01DD               	line	43
  6630                           	goto	l2231
  6631  0E1F  2E29               	line	44
  6632                           	
  6633                           l621:	
  6634  0E20                     	line	46
  6635                           	
  6636                           l2229:	
  6637  0E20                     	movlw	0x0
  6638  0E20  3000               	movwf	(___fldiv@b+3)
  6639  0E21  00DD               	movlw	0x0
  6640  0E22  3000               	movwf	(___fldiv@b+2)
  6641  0E23  00DC               	movlw	0x0
  6642  0E24  3000               	movwf	(___fldiv@b+1)
  6643  0E25  00DB               	movlw	0x0
  6644  0E26  3000               	movwf	(___fldiv@b)
  6645  0E27  00DA               
  6646                           	goto	l2231
  6647  0E28  2E29               	line	47
  6648                           	
  6649                           l623:	
  6650  0E29                     	line	49
  6651                           	
  6652                           l2231:	
  6653  0E29                     	movf	0+(___fldiv@a)+03h,w
  6654  0E29  0859               	andlw	080h
  6655  0E2A  3980               	movwf	(??___fldiv+0)+0
  6656  0E2B  00DE               	movf	(??___fldiv+0)+0,w
  6657  0E2C  085E               	xorwf	(___fldiv@sign),f
  6658  0E2D  06E7               	line	50
  6659                           	
  6660                           l2233:	
  6661  0E2E                     	movf	0+(___fldiv@a)+03h,w
  6662  0E2E  0859               	movwf	(??___fldiv+0)+0
  6663  0E2F  00DE               	addwf	(??___fldiv+0)+0,w
  6664  0E30  075E               	movwf	(??___fldiv+1)+0
  6665  0E31  00DF               	movf	(??___fldiv+1)+0,w
  6666  0E32  085F               	movwf	(___fldiv@aexp)
  6667  0E33  00EF               	line	51
  6668                           	
  6669                           l2235:	
  6670  0E34                     	btfss	0+(___fldiv@a)+02h,(7)&7
  6671  0E34  1FD8               	goto	u2781
  6672  0E35  2E37               	goto	u2780
  6673  0E36  2E38               u2781:
  6674  0E37                     	goto	l2239
  6675  0E37  2E3A               u2780:
  6676  0E38                     	line	52
  6677                           	
  6678                           l2237:	
  6679  0E38                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  6680  0E38  146F               	goto	l2239
  6681  0E39  2E3A               	line	53
  6682                           	
  6683                           l624:	
  6684  0E3A                     	line	56
  6685                           	
  6686                           l2239:	
  6687  0E3A                     	movf	((___fldiv@aexp)),w
  6688  0E3A  086F               	btfsc	status,2
  6689  0E3B  1903               	goto	u2791
  6690  0E3C  2E3E               	goto	u2790
  6691  0E3D  2E3F               u2791:
  6692  0E3E                     	goto	l2249
  6693  0E3E  2E50               u2790:
  6694  0E3F                     	line	58
  6695                           	
  6696                           l2241:	
  6697  0E3F                     		incf	((___fldiv@aexp)),w
  6698  0E3F  0A6F               	btfss	status,2
  6699  0E40  1D03               	goto	u2801
  6700  0E41  2E43               	goto	u2800
  6701  0E42  2E44               u2801:
  6702  0E43                     	goto	l2245
  6703  0E43  2E4D               u2800:
  6704  0E44                     	line	60
  6705                           	
  6706                           l2243:	
  6707  0E44                     	movlw	0x0
  6708  0E44  3000               	movwf	(___fldiv@a+3)
  6709  0E45  00D9               	movlw	0x0
  6710  0E46  3000               	movwf	(___fldiv@a+2)
  6711  0E47  00D8               	movlw	0x0
  6712  0E48  3000               	movwf	(___fldiv@a+1)
  6713  0E49  00D7               	movlw	0x0
  6714  0E4A  3000               	movwf	(___fldiv@a)
  6715  0E4B  00D6               
  6716                           	goto	l2245
  6717  0E4C  2E4D               	line	61
  6718                           	
  6719                           l626:	
  6720  0E4D                     	line	63
  6721                           	
  6722                           l2245:	
  6723  0E4D                     	bsf	(___fldiv@a)+(23/8),(23)&7
  6724  0E4D  17D8               	line	65
  6725                           	
  6726                           l2247:	
  6727  0E4E                     	clrf	0+(___fldiv@a)+03h
  6728  0E4E  01D9               	line	66
  6729                           	goto	l627
  6730  0E4F  2E58               	line	67
  6731                           	
  6732                           l625:	
  6733  0E50                     	line	69
  6734                           	
  6735                           l2249:	
  6736  0E50                     	movlw	0x0
  6737  0E50  3000               	movwf	(___fldiv@a+3)
  6738  0E51  00D9               	movlw	0x0
  6739  0E52  3000               	movwf	(___fldiv@a+2)
  6740  0E53  00D8               	movlw	0x0
  6741  0E54  3000               	movwf	(___fldiv@a+1)
  6742  0E55  00D7               	movlw	0x0
  6743  0E56  3000               	movwf	(___fldiv@a)
  6744  0E57  00D6               
  6745                           	line	70
  6746                           	
  6747                           l627:	
  6748  0E58                     	line	75
  6749                           	movf	(___fldiv@a+3),w
  6750  0E58  0859               	iorwf	(___fldiv@a+2),w
  6751  0E59  0458               	iorwf	(___fldiv@a+1),w
  6752  0E5A  0457               	iorwf	(___fldiv@a),w
  6753  0E5B  0456               	skipz
  6754  0E5C  1D03               	goto	u2811
  6755  0E5D  2E5F               	goto	u2810
  6756  0E5E  2E60               u2811:
  6757  0E5F                     	goto	l2259
  6758  0E5F  2E7A               u2810:
  6759  0E60                     	line	76
  6760                           	
  6761                           l2251:	
  6762  0E60                     	movlw	high highword(0)
  6763  0E60  3000               	movwf	(___fldiv@b+3)
  6764  0E61  00DD               	movlw	low highword(0)
  6765  0E62  3000               	movwf	(___fldiv@b+2)
  6766  0E63  00DC               	movlw	high(0)
  6767  0E64  3000               	movwf	(___fldiv@b+1)
  6768  0E65  00DB               	movlw	low(0)
  6769  0E66  3000               	movwf	(___fldiv@b)
  6770  0E67  00DA               
  6771                           	line	77
  6772                           	movlw	080h
  6773  0E68  3080               	iorwf	0+(___fldiv@b)+02h,f
  6774  0E69  04DC               	movlw	07Fh
  6775  0E6A  307F               	iorwf	1+(___fldiv@b)+02h,f
  6776  0E6B  04DD               	line	78
  6777                           	
  6778                           l2253:	
  6779  0E6C                     	movf	(___fldiv@sign),w
  6780  0E6C  0867               	movwf	(??___fldiv+0)+0
  6781  0E6D  00DE               	movf	(??___fldiv+0)+0,w
  6782  0E6E  085E               	iorwf	0+(___fldiv@b)+03h,f
  6783  0E6F  04DD               	line	79
  6784                           	
  6785                           l2255:	
  6786  0E70                     	movf	(___fldiv@b+3),w
  6787  0E70  085D               	movwf	(?___fldiv+3)
  6788  0E71  00D9               	movf	(___fldiv@b+2),w
  6789  0E72  085C               	movwf	(?___fldiv+2)
  6790  0E73  00D8               	movf	(___fldiv@b+1),w
  6791  0E74  085B               	movwf	(?___fldiv+1)
  6792  0E75  00D7               	movf	(___fldiv@b),w
  6793  0E76  085A               	movwf	(?___fldiv)
  6794  0E77  00D6               
  6795                           	goto	l629
  6796  0E78  2FFF               	
  6797                           l2257:	
  6798  0E79                     	goto	l629
  6799  0E79  2FFF               	line	80
  6800                           	
  6801                           l628:	
  6802  0E7A                     	line	83
  6803                           	
  6804                           l2259:	
  6805  0E7A                     	movf	((___fldiv@bexp)),w
  6806  0E7A  086E               	btfss	status,2
  6807  0E7B  1D03               	goto	u2821
  6808  0E7C  2E7E               	goto	u2820
  6809  0E7D  2E7F               u2821:
  6810  0E7E                     	goto	l2265
  6811  0E7E  2E91               u2820:
  6812  0E7F                     	line	84
  6813                           	
  6814                           l2261:	
  6815  0E7F                     	movlw	high highword(0)
  6816  0E7F  3000               	movwf	(___fldiv@b+3)
  6817  0E80  00DD               	movlw	low highword(0)
  6818  0E81  3000               	movwf	(___fldiv@b+2)
  6819  0E82  00DC               	movlw	high(0)
  6820  0E83  3000               	movwf	(___fldiv@b+1)
  6821  0E84  00DB               	movlw	low(0)
  6822  0E85  3000               	movwf	(___fldiv@b)
  6823  0E86  00DA               
  6824                           	line	85
  6825                           	movf	(___fldiv@b+3),w
  6826  0E87  085D               	movwf	(?___fldiv+3)
  6827  0E88  00D9               	movf	(___fldiv@b+2),w
  6828  0E89  085C               	movwf	(?___fldiv+2)
  6829  0E8A  00D8               	movf	(___fldiv@b+1),w
  6830  0E8B  085B               	movwf	(?___fldiv+1)
  6831  0E8C  00D7               	movf	(___fldiv@b),w
  6832  0E8D  085A               	movwf	(?___fldiv)
  6833  0E8E  00D6               
  6834                           	goto	l629
  6835  0E8F  2FFF               	
  6836                           l2263:	
  6837  0E90                     	goto	l629
  6838  0E90  2FFF               	line	86
  6839                           	
  6840                           l630:	
  6841  0E91                     	line	89
  6842                           	
  6843                           l2265:	
  6844  0E91                     	movf	(___fldiv@aexp),w
  6845  0E91  086F               	movwf	(??___fldiv+0)+0
  6846  0E92  00DE               	clrf	(??___fldiv+0)+0+1
  6847  0E93  01DF               	comf	(??___fldiv+0)+0,f
  6848  0E94  09DE               	comf	(??___fldiv+0)+1,f
  6849  0E95  09DF               	incf	(??___fldiv+0)+0,f
  6850  0E96  0ADE               	skipnz
  6851  0E97  1903               	incf	(??___fldiv+0)+1,f
  6852  0E98  0ADF               	movf	(___fldiv@bexp),w
  6853  0E99  086E               	addwf	0+(??___fldiv+0)+0,w
  6854  0E9A  075E               	movwf	(??___fldiv+2)+0
  6855  0E9B  00E0               	movf	1+(??___fldiv+0)+0,w
  6856  0E9C  085F               	skipnc
  6857  0E9D  1803               	incf	1+(??___fldiv+0)+0,w
  6858  0E9E  0A5F               	movwf	((??___fldiv+2)+0)+1
  6859  0E9F  00E1               	movf	0+(??___fldiv+2)+0,w
  6860  0EA0  0860               	addlw	low(07Fh)
  6861  0EA1  3E7F               	movwf	(___fldiv@new_exp)
  6862  0EA2  00E8               	movf	1+(??___fldiv+2)+0,w
  6863  0EA3  0861               	skipnc
  6864  0EA4  1803               	addlw	1
  6865  0EA5  3E01               	addlw	high(07Fh)
  6866  0EA6  3E00               	movwf	1+(___fldiv@new_exp)
  6867  0EA7  00E9               	line	92
  6868                           	
  6869                           l2267:	
  6870  0EA8                     	movf	(___fldiv@b+3),w
  6871  0EA8  085D               	movwf	(___fldiv@rem+3)
  6872  0EA9  00E6               	movf	(___fldiv@b+2),w
  6873  0EAA  085C               	movwf	(___fldiv@rem+2)
  6874  0EAB  00E5               	movf	(___fldiv@b+1),w
  6875  0EAC  085B               	movwf	(___fldiv@rem+1)
  6876  0EAD  00E4               	movf	(___fldiv@b),w
  6877  0EAE  085A               	movwf	(___fldiv@rem)
  6878  0EAF  00E3               
  6879                           	line	93
  6880                           	
  6881                           l2269:	
  6882  0EB0                     	movlw	high highword(0)
  6883  0EB0  3000               	movwf	(___fldiv@b+3)
  6884  0EB1  00DD               	movlw	low highword(0)
  6885  0EB2  3000               	movwf	(___fldiv@b+2)
  6886  0EB3  00DC               	movlw	high(0)
  6887  0EB4  3000               	movwf	(___fldiv@b+1)
  6888  0EB5  00DB               	movlw	low(0)
  6889  0EB6  3000               	movwf	(___fldiv@b)
  6890  0EB7  00DA               
  6891                           	line	94
  6892                           	
  6893                           l2271:	
  6894  0EB8                     	movlw	high highword(0)
  6895  0EB8  3000               	movwf	(___fldiv@grs+3)
  6896  0EB9  00ED               	movlw	low highword(0)
  6897  0EBA  3000               	movwf	(___fldiv@grs+2)
  6898  0EBB  00EC               	movlw	high(0)
  6899  0EBC  3000               	movwf	(___fldiv@grs+1)
  6900  0EBD  00EB               	movlw	low(0)
  6901  0EBE  3000               	movwf	(___fldiv@grs)
  6902  0EBF  00EA               
  6903                           	line	96
  6904                           	
  6905                           l2273:	
  6906  0EC0                     	clrf	(___fldiv@aexp)
  6907  0EC0  01EF               	line	97
  6908                           	goto	l2293
  6909  0EC1  2F10               	
  6910                           l632:	
  6911  0EC2                     	line	100
  6912                           	
  6913                           l2275:	
  6914  0EC2                     	movf	((___fldiv@aexp)),w
  6915  0EC2  086F               	btfsc	status,2
  6916  0EC3  1903               	goto	u2831
  6917  0EC4  2EC6               	goto	u2830
  6918  0EC5  2EC7               u2831:
  6919  0EC6                     	goto	l2285
  6920  0EC6  2EE9               u2830:
  6921  0EC7                     	line	101
  6922                           	
  6923                           l2277:	
  6924  0EC7                     	movlw	01h
  6925  0EC7  3001               	movwf	(??___fldiv+0)+0
  6926  0EC8  00DE               u2845:
  6927  0EC9                     	clrc
  6928  0EC9  1003               	rlf	(___fldiv@rem),f
  6929  0ECA  0DE3               	rlf	(___fldiv@rem+1),f
  6930  0ECB  0DE4               	rlf	(___fldiv@rem+2),f
  6931  0ECC  0DE5               	rlf	(___fldiv@rem+3),f
  6932  0ECD  0DE6               	decfsz	(??___fldiv+0)+0
  6933  0ECE  0BDE               	goto	u2845
  6934  0ECF  2EC9               	line	102
  6935                           	movlw	01h
  6936  0ED0  3001               	movwf	(??___fldiv+0)+0
  6937  0ED1  00DE               u2855:
  6938  0ED2                     	clrc
  6939  0ED2  1003               	rlf	(___fldiv@b),f
  6940  0ED3  0DDA               	rlf	(___fldiv@b+1),f
  6941  0ED4  0DDB               	rlf	(___fldiv@b+2),f
  6942  0ED5  0DDC               	rlf	(___fldiv@b+3),f
  6943  0ED6  0DDD               	decfsz	(??___fldiv+0)+0
  6944  0ED7  0BDE               	goto	u2855
  6945  0ED8  2ED2               	line	103
  6946                           	
  6947                           l2279:	
  6948  0ED9                     	btfss	(___fldiv@grs+3),(31)&7
  6949  0ED9  1FED               	goto	u2861
  6950  0EDA  2EDC               	goto	u2860
  6951  0EDB  2EDD               u2861:
  6952  0EDC                     	goto	l2283
  6953  0EDC  2EDF               u2860:
  6954  0EDD                     	line	104
  6955                           	
  6956                           l2281:	
  6957  0EDD                     	bsf	(___fldiv@b)+(0/8),(0)&7
  6958  0EDD  145A               	goto	l2283
  6959  0EDE  2EDF               	line	105
  6960                           	
  6961                           l634:	
  6962  0EDF                     	line	106
  6963                           	
  6964                           l2283:	
  6965  0EDF                     	movlw	01h
  6966  0EDF  3001               	movwf	(??___fldiv+0)+0
  6967  0EE0  00DE               u2875:
  6968  0EE1                     	clrc
  6969  0EE1  1003               	rlf	(___fldiv@grs),f
  6970  0EE2  0DEA               	rlf	(___fldiv@grs+1),f
  6971  0EE3  0DEB               	rlf	(___fldiv@grs+2),f
  6972  0EE4  0DEC               	rlf	(___fldiv@grs+3),f
  6973  0EE5  0DED               	decfsz	(??___fldiv+0)+0
  6974  0EE6  0BDE               	goto	u2875
  6975  0EE7  2EE1               	goto	l2285
  6976  0EE8  2EE9               	line	107
  6977                           	
  6978                           l633:	
  6979  0EE9                     	line	112
  6980                           	
  6981                           l2285:	
  6982  0EE9                     	movf	(___fldiv@a+3),w
  6983  0EE9  0859               	subwf	(___fldiv@rem+3),w
  6984  0EEA  0266               	skipz
  6985  0EEB  1D03               	goto	u2885
  6986  0EEC  2EF7               	movf	(___fldiv@a+2),w
  6987  0EED  0858               	subwf	(___fldiv@rem+2),w
  6988  0EEE  0265               	skipz
  6989  0EEF  1D03               	goto	u2885
  6990  0EF0  2EF7               	movf	(___fldiv@a+1),w
  6991  0EF1  0857               	subwf	(___fldiv@rem+1),w
  6992  0EF2  0264               	skipz
  6993  0EF3  1D03               	goto	u2885
  6994  0EF4  2EF7               	movf	(___fldiv@a),w
  6995  0EF5  0856               	subwf	(___fldiv@rem),w
  6996  0EF6  0263               u2885:
  6997  0EF7                     	skipc
  6998  0EF7  1C03               	goto	u2881
  6999  0EF8  2EFA               	goto	u2880
  7000  0EF9  2EFB               u2881:
  7001  0EFA                     	goto	l2291
  7002  0EFA  2F0B               u2880:
  7003  0EFB                     	line	115
  7004                           	
  7005                           l2287:	
  7006  0EFB                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  7007  0EFB  176D               	line	116
  7008                           	
  7009                           l2289:	
  7010  0EFC                     	movf	(___fldiv@a),w
  7011  0EFC  0856               	subwf	(___fldiv@rem),f
  7012  0EFD  02E3               	movf	(___fldiv@a+1),w
  7013  0EFE  0857               	skipc
  7014  0EFF  1C03               	incfsz	(___fldiv@a+1),w
  7015  0F00  0F57               	subwf	(___fldiv@rem+1),f
  7016  0F01  02E4               	movf	(___fldiv@a+2),w
  7017  0F02  0858               	skipc
  7018  0F03  1C03               	incfsz	(___fldiv@a+2),w
  7019  0F04  0F58               	subwf	(___fldiv@rem+2),f
  7020  0F05  02E5               	movf	(___fldiv@a+3),w
  7021  0F06  0859               	skipc
  7022  0F07  1C03               	incfsz	(___fldiv@a+3),w
  7023  0F08  0F59               	subwf	(___fldiv@rem+3),f
  7024  0F09  02E6               	goto	l2291
  7025  0F0A  2F0B               	line	117
  7026                           	
  7027                           l635:	
  7028  0F0B                     	line	118
  7029                           	
  7030                           l2291:	
  7031  0F0B                     	movlw	low(01h)
  7032  0F0B  3001               	movwf	(??___fldiv+0)+0
  7033  0F0C  00DE               	movf	(??___fldiv+0)+0,w
  7034  0F0D  085E               	addwf	(___fldiv@aexp),f
  7035  0F0E  07EF               	goto	l2293
  7036  0F0F  2F10               	line	119
  7037                           	
  7038                           l631:	
  7039  0F10                     	line	97
  7040                           	
  7041                           l2293:	
  7042  0F10                     	movlw	low(01Ah)
  7043  0F10  301A               	subwf	(___fldiv@aexp),w
  7044  0F11  026F               	skipc
  7045  0F12  1C03               	goto	u2891
  7046  0F13  2F15               	goto	u2890
  7047  0F14  2F16               u2891:
  7048  0F15                     	goto	l2275
  7049  0F15  2EC2               u2890:
  7050  0F16                     	goto	l2295
  7051  0F16  2F17               	
  7052                           l636:	
  7053  0F17                     	line	122
  7054                           	
  7055                           l2295:	
  7056  0F17                     	movf	(___fldiv@rem+3),w
  7057  0F17  0866               	iorwf	(___fldiv@rem+2),w
  7058  0F18  0465               	iorwf	(___fldiv@rem+1),w
  7059  0F19  0464               	iorwf	(___fldiv@rem),w
  7060  0F1A  0463               	skipnz
  7061  0F1B  1903               	goto	u2901
  7062  0F1C  2F1E               	goto	u2900
  7063  0F1D  2F1F               u2901:
  7064  0F1E                     	goto	l2309
  7065  0F1E  2F41               u2900:
  7066  0F1F                     	line	123
  7067                           	
  7068                           l2297:	
  7069  0F1F                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  7070  0F1F  146A               	goto	l2309
  7071  0F20  2F41               	line	124
  7072                           	
  7073                           l637:	
  7074  0F21                     	line	127
  7075                           	goto	l2309
  7076  0F21  2F41               	
  7077                           l639:	
  7078  0F22                     	line	128
  7079                           	
  7080                           l2299:	
  7081  0F22                     	movlw	01h
  7082  0F22  3001               	movwf	(??___fldiv+0)+0
  7083  0F23  00DE               u2915:
  7084  0F24                     	clrc
  7085  0F24  1003               	rlf	(___fldiv@b),f
  7086  0F25  0DDA               	rlf	(___fldiv@b+1),f
  7087  0F26  0DDB               	rlf	(___fldiv@b+2),f
  7088  0F27  0DDC               	rlf	(___fldiv@b+3),f
  7089  0F28  0DDD               	decfsz	(??___fldiv+0)+0
  7090  0F29  0BDE               	goto	u2915
  7091  0F2A  2F24               	line	129
  7092                           	
  7093                           l2301:	
  7094  0F2B                     	btfss	(___fldiv@grs+3),(31)&7
  7095  0F2B  1FED               	goto	u2921
  7096  0F2C  2F2E               	goto	u2920
  7097  0F2D  2F2F               u2921:
  7098  0F2E                     	goto	l2305
  7099  0F2E  2F31               u2920:
  7100  0F2F                     	line	130
  7101                           	
  7102                           l2303:	
  7103  0F2F                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7104  0F2F  145A               	goto	l2305
  7105  0F30  2F31               	line	131
  7106                           	
  7107                           l640:	
  7108  0F31                     	line	132
  7109                           	
  7110                           l2305:	
  7111  0F31                     	movlw	01h
  7112  0F31  3001               	movwf	(??___fldiv+0)+0
  7113  0F32  00DE               u2935:
  7114  0F33                     	clrc
  7115  0F33  1003               	rlf	(___fldiv@grs),f
  7116  0F34  0DEA               	rlf	(___fldiv@grs+1),f
  7117  0F35  0DEB               	rlf	(___fldiv@grs+2),f
  7118  0F36  0DEC               	rlf	(___fldiv@grs+3),f
  7119  0F37  0DED               	decfsz	(??___fldiv+0)+0
  7120  0F38  0BDE               	goto	u2935
  7121  0F39  2F33               	line	133
  7122                           	
  7123                           l2307:	
  7124  0F3A                     	movlw	0FFh
  7125  0F3A  30FF               	addwf	(___fldiv@new_exp),f
  7126  0F3B  07E8               	skipnc
  7127  0F3C  1803               	incf	(___fldiv@new_exp+1),f
  7128  0F3D  0AE9               	movlw	0FFh
  7129  0F3E  30FF               	addwf	(___fldiv@new_exp+1),f
  7130  0F3F  07E9               	goto	l2309
  7131  0F40  2F41               	line	134
  7132                           	
  7133                           l638:	
  7134  0F41                     	line	127
  7135                           	
  7136                           l2309:	
  7137  0F41                     	btfss	(___fldiv@b+2),(23)&7
  7138  0F41  1FDC               	goto	u2941
  7139  0F42  2F44               	goto	u2940
  7140  0F43  2F45               u2941:
  7141  0F44                     	goto	l2299
  7142  0F44  2F22               u2940:
  7143  0F45                     	goto	l2311
  7144  0F45  2F46               	
  7145                           l641:	
  7146  0F46                     	line	139
  7147                           	
  7148                           l2311:	
  7149  0F46                     	clrf	(___fldiv@aexp)
  7150  0F46  01EF               	line	140
  7151                           	
  7152                           l2313:	
  7153  0F47                     	btfss	(___fldiv@grs+3),(31)&7
  7154  0F47  1FED               	goto	u2951
  7155  0F48  2F4A               	goto	u2950
  7156  0F49  2F4B               u2951:
  7157  0F4A                     	goto	l2321
  7158  0F4A  2F6B               u2950:
  7159  0F4B                     	line	141
  7160                           	
  7161                           l2315:	
  7162  0F4B                     	movlw	0FFh
  7163  0F4B  30FF               	andwf	(___fldiv@grs),w
  7164  0F4C  056A               	movwf	(??___fldiv+0)+0
  7165  0F4D  00DE               	movlw	0FFh
  7166  0F4E  30FF               	andwf	(___fldiv@grs+1),w
  7167  0F4F  056B               	movwf	((??___fldiv+0)+0+1)
  7168  0F50  00DF               	movlw	0FFh
  7169  0F51  30FF               	andwf	(___fldiv@grs+2),w
  7170  0F52  056C               	movwf	((??___fldiv+0)+0+2)
  7171  0F53  00E0               	movlw	07Fh
  7172  0F54  307F               	andwf	(___fldiv@grs+3),w
  7173  0F55  056D               	movwf	((??___fldiv+0)+0+3)
  7174  0F56  00E1               	movf	3+(??___fldiv+0)+0,w
  7175  0F57  0861               	iorwf	2+(??___fldiv+0)+0,w
  7176  0F58  0460               	iorwf	1+(??___fldiv+0)+0,w
  7177  0F59  045F               	iorwf	0+(??___fldiv+0)+0,w
  7178  0F5A  045E               	skipnz
  7179  0F5B  1903               	goto	u2961
  7180  0F5C  2F5E               	goto	u2960
  7181  0F5D  2F5F               u2961:
  7182  0F5E                     	goto	l643
  7183  0F5E  2F62               u2960:
  7184  0F5F                     	line	142
  7185                           	
  7186                           l2317:	
  7187  0F5F                     	clrf	(___fldiv@aexp)
  7188  0F5F  01EF               	incf	(___fldiv@aexp),f
  7189  0F60  0AEF               	line	143
  7190                           	goto	l2321
  7191  0F61  2F6B               	line	144
  7192                           	
  7193                           l643:	
  7194  0F62                     	line	145
  7195                           	btfss	(___fldiv@b),(0)&7
  7196  0F62  1C5A               	goto	u2971
  7197  0F63  2F65               	goto	u2970
  7198  0F64  2F66               u2971:
  7199  0F65                     	goto	l2321
  7200  0F65  2F6B               u2970:
  7201  0F66                     	line	146
  7202                           	
  7203                           l2319:	
  7204  0F66                     	clrf	(___fldiv@aexp)
  7205  0F66  01EF               	incf	(___fldiv@aexp),f
  7206  0F67  0AEF               	goto	l2321
  7207  0F68  2F6B               	line	147
  7208                           	
  7209                           l645:	
  7210  0F69                     	goto	l2321
  7211  0F69  2F6B               	line	148
  7212                           	
  7213                           l644:	
  7214  0F6A                     	goto	l2321
  7215  0F6A  2F6B               	line	149
  7216                           	
  7217                           l642:	
  7218  0F6B                     	line	150
  7219                           	
  7220                           l2321:	
  7221  0F6B                     	movf	((___fldiv@aexp)),w
  7222  0F6B  086F               	btfsc	status,2
  7223  0F6C  1903               	goto	u2981
  7224  0F6D  2F6F               	goto	u2980
  7225  0F6E  2F70               u2981:
  7226  0F6F                     	goto	l2331
  7227  0F6F  2FA3               u2980:
  7228  0F70                     	line	151
  7229                           	
  7230                           l2323:	
  7231  0F70                     	movlw	01h
  7232  0F70  3001               	addwf	(___fldiv@b),f
  7233  0F71  07DA               	movlw	0
  7234  0F72  3000               	skipnc
  7235  0F73  1803               movlw 1
  7236  0F74  3001               	addwf	(___fldiv@b+1),f
  7237  0F75  07DB               	movlw	0
  7238  0F76  3000               	skipnc
  7239  0F77  1803               movlw 1
  7240  0F78  3001               	addwf	(___fldiv@b+2),f
  7241  0F79  07DC               	movlw	0
  7242  0F7A  3000               	skipnc
  7243  0F7B  1803               movlw 1
  7244  0F7C  3001               	addwf	(___fldiv@b+3),f
  7245  0F7D  07DD               	line	152
  7246                           	
  7247                           l2325:	
  7248  0F7E                     	btfss	(___fldiv@b+3),(24)&7
  7249  0F7E  1C5D               	goto	u2991
  7250  0F7F  2F81               	goto	u2990
  7251  0F80  2F82               u2991:
  7252  0F81                     	goto	l2331
  7253  0F81  2FA3               u2990:
  7254  0F82                     	line	153
  7255                           	
  7256                           l2327:	
  7257  0F82                     	movf	(___fldiv@b),w
  7258  0F82  085A               	movwf	(??___fldiv+0)+0
  7259  0F83  00DE               	movf	(___fldiv@b+1),w
  7260  0F84  085B               	movwf	((??___fldiv+0)+0+1)
  7261  0F85  00DF               	movf	(___fldiv@b+2),w
  7262  0F86  085C               	movwf	((??___fldiv+0)+0+2)
  7263  0F87  00E0               	movf	(___fldiv@b+3),w
  7264  0F88  085D               	movwf	((??___fldiv+0)+0+3)
  7265  0F89  00E1               	movlw	01h
  7266  0F8A  3001               	movwf	(??___fldiv+4)+0
  7267  0F8B  00E2               u3005:
  7268  0F8C                     	rlf	(??___fldiv+0)+3,w
  7269  0F8C  0D61               	rrf	(??___fldiv+0)+3,f
  7270  0F8D  0CE1               	rrf	(??___fldiv+0)+2,f
  7271  0F8E  0CE0               	rrf	(??___fldiv+0)+1,f
  7272  0F8F  0CDF               	rrf	(??___fldiv+0)+0,f
  7273  0F90  0CDE               u3000:
  7274  0F91                     	decfsz	(??___fldiv+4)+0,f
  7275  0F91  0BE2               	goto	u3005
  7276  0F92  2F8C               	movf	3+(??___fldiv+0)+0,w
  7277  0F93  0861               	movwf	(___fldiv@b+3)
  7278  0F94  00DD               	movf	2+(??___fldiv+0)+0,w
  7279  0F95  0860               	movwf	(___fldiv@b+2)
  7280  0F96  00DC               	movf	1+(??___fldiv+0)+0,w
  7281  0F97  085F               	movwf	(___fldiv@b+1)
  7282  0F98  00DB               	movf	0+(??___fldiv+0)+0,w
  7283  0F99  085E               	movwf	(___fldiv@b)
  7284  0F9A  00DA               
  7285                           	line	154
  7286                           	
  7287                           l2329:	
  7288  0F9B                     	movlw	01h
  7289  0F9B  3001               	addwf	(___fldiv@new_exp),f
  7290  0F9C  07E8               	skipnc
  7291  0F9D  1803               	incf	(___fldiv@new_exp+1),f
  7292  0F9E  0AE9               	movlw	0
  7293  0F9F  3000               	addwf	(___fldiv@new_exp+1),f
  7294  0FA0  07E9               	goto	l2331
  7295  0FA1  2FA3               	line	155
  7296                           	
  7297                           l647:	
  7298  0FA2                     	goto	l2331
  7299  0FA2  2FA3               	line	156
  7300                           	
  7301                           l646:	
  7302  0FA3                     	line	159
  7303                           	
  7304                           l2331:	
  7305  0FA3                     	movf	(___fldiv@new_exp+1),w
  7306  0FA3  0869               	xorlw	80h
  7307  0FA4  3A80               	movwf	btemp+1
  7308  0FA5  00FF               	movlw	(0)^80h
  7309  0FA6  3080               	subwf	btemp+1,w
  7310  0FA7  027F               	skipz
  7311  0FA8  1D03               	goto	u3015
  7312  0FA9  2FAC               	movlw	0FFh
  7313  0FAA  30FF               	subwf	(___fldiv@new_exp),w
  7314  0FAB  0268               u3015:
  7315  0FAC                     
  7316                           	skipc
  7317  0FAC  1C03               	goto	u3011
  7318  0FAD  2FAF               	goto	u3010
  7319  0FAE  2FB0               u3011:
  7320  0FAF                     	goto	l2335
  7321  0FAF  2FBF               u3010:
  7322  0FB0                     	line	160
  7323                           	
  7324                           l2333:	
  7325  0FB0                     	movlw	0FFh
  7326  0FB0  30FF               	bcf	status, 5	;RP0=0, select bank0
  7327  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  7328  0FB2  1303               	movwf	(___fldiv@new_exp)
  7329  0FB3  00E8               	movlw	0
  7330  0FB4  3000               	movwf	((___fldiv@new_exp))+1
  7331  0FB5  00E9               	line	161
  7332                           	movlw	high highword(0)
  7333  0FB6  3000               	movwf	(___fldiv@b+3)
  7334  0FB7  00DD               	movlw	low highword(0)
  7335  0FB8  3000               	movwf	(___fldiv@b+2)
  7336  0FB9  00DC               	movlw	high(0)
  7337  0FBA  3000               	movwf	(___fldiv@b+1)
  7338  0FBB  00DB               	movlw	low(0)
  7339  0FBC  3000               	movwf	(___fldiv@b)
  7340  0FBD  00DA               
  7341                           	goto	l2335
  7342  0FBE  2FBF               	line	162
  7343                           	
  7344                           l648:	
  7345  0FBF                     	line	165
  7346                           	
  7347                           l2335:	
  7348  0FBF                     	bcf	status, 5	;RP0=0, select bank0
  7349  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  7350  0FC0  1303               	movf	(___fldiv@new_exp+1),w
  7351  0FC1  0869               	xorlw	80h
  7352  0FC2  3A80               	movwf	btemp+1
  7353  0FC3  00FF               	movlw	(0)^80h
  7354  0FC4  3080               	subwf	btemp+1,w
  7355  0FC5  027F               	skipz
  7356  0FC6  1D03               	goto	u3025
  7357  0FC7  2FCA               	movlw	01h
  7358  0FC8  3001               	subwf	(___fldiv@new_exp),w
  7359  0FC9  0268               u3025:
  7360  0FCA                     
  7361                           	skipnc
  7362  0FCA  1803               	goto	u3021
  7363  0FCB  2FCD               	goto	u3020
  7364  0FCC  2FCE               u3021:
  7365  0FCD                     	goto	l649
  7366  0FCD  2FDB               u3020:
  7367  0FCE                     	line	166
  7368                           	
  7369                           l2337:	
  7370  0FCE                     	bcf	status, 5	;RP0=0, select bank0
  7371  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7372  0FCF  1303               	clrf	(___fldiv@new_exp)
  7373  0FD0  01E8               	clrf	(___fldiv@new_exp+1)
  7374  0FD1  01E9               	line	167
  7375                           	
  7376                           l2339:	
  7377  0FD2                     	movlw	high highword(0)
  7378  0FD2  3000               	movwf	(___fldiv@b+3)
  7379  0FD3  00DD               	movlw	low highword(0)
  7380  0FD4  3000               	movwf	(___fldiv@b+2)
  7381  0FD5  00DC               	movlw	high(0)
  7382  0FD6  3000               	movwf	(___fldiv@b+1)
  7383  0FD7  00DB               	movlw	low(0)
  7384  0FD8  3000               	movwf	(___fldiv@b)
  7385  0FD9  00DA               
  7386                           	line	169
  7387                           	
  7388                           l2341:	
  7389  0FDA                     	clrf	(___fldiv@sign)
  7390  0FDA  01E7               	line	170
  7391                           	
  7392                           l649:	
  7393  0FDB                     	line	173
  7394                           	bcf	status, 5	;RP0=0, select bank0
  7395  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  7396  0FDC  1303               	movf	(___fldiv@new_exp),w
  7397  0FDD  0868               	movwf	(??___fldiv+0)+0
  7398  0FDE  00DE               	movf	(??___fldiv+0)+0,w
  7399  0FDF  085E               	movwf	(___fldiv@bexp)
  7400  0FE0  00EE               	line	175
  7401                           	
  7402                           l2343:	
  7403  0FE1                     	btfss	(___fldiv@bexp),(0)&7
  7404  0FE1  1C6E               	goto	u3031
  7405  0FE2  2FE4               	goto	u3030
  7406  0FE3  2FE5               u3031:
  7407  0FE4                     	goto	l2347
  7408  0FE4  2FE7               u3030:
  7409  0FE5                     	line	176
  7410                           	
  7411                           l2345:	
  7412  0FE5                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  7413  0FE5  17DC               	line	177
  7414                           	goto	l651
  7415  0FE6  2FEB               	line	179
  7416                           	
  7417                           l650:	
  7418  0FE7                     	line	180
  7419                           	
  7420                           l2347:	
  7421  0FE7                     	movlw	low(07Fh)
  7422  0FE7  307F               	movwf	(??___fldiv+0)+0
  7423  0FE8  00DE               	movf	(??___fldiv+0)+0,w
  7424  0FE9  085E               	andwf	0+(___fldiv@b)+02h,f
  7425  0FEA  05DC               	line	181
  7426                           	
  7427                           l651:	
  7428  0FEB                     	line	182
  7429                           	movf	(___fldiv@bexp),w
  7430  0FEB  086E               	movwf	(??___fldiv+0)+0
  7431  0FEC  00DE               	clrc
  7432  0FED  1003               	rrf	(??___fldiv+0)+0,w
  7433  0FEE  0C5E               	movwf	(??___fldiv+1)+0
  7434  0FEF  00DF               	movf	(??___fldiv+1)+0,w
  7435  0FF0  085F               	movwf	0+(___fldiv@b)+03h
  7436  0FF1  00DD               	line	183
  7437                           	movf	(___fldiv@sign),w
  7438  0FF2  0867               	movwf	(??___fldiv+0)+0
  7439  0FF3  00DE               	movf	(??___fldiv+0)+0,w
  7440  0FF4  085E               	iorwf	0+(___fldiv@b)+03h,f
  7441  0FF5  04DD               	line	184
  7442                           	
  7443                           l2349:	
  7444  0FF6                     	movf	(___fldiv@b+3),w
  7445  0FF6  085D               	movwf	(?___fldiv+3)
  7446  0FF7  00D9               	movf	(___fldiv@b+2),w
  7447  0FF8  085C               	movwf	(?___fldiv+2)
  7448  0FF9  00D8               	movf	(___fldiv@b+1),w
  7449  0FFA  085B               	movwf	(?___fldiv+1)
  7450  0FFB  00D7               	movf	(___fldiv@b),w
  7451  0FFC  085A               	movwf	(?___fldiv)
  7452  0FFD  00D6               
  7453                           	goto	l629
  7454  0FFE  2FFF               	
  7455                           l2351:	
  7456  0FFF                     	line	185
  7457                           	
  7458                           l629:	
  7459  0FFF                     	return
  7460  0FFF  0008               	opt stack 0
  7461                           GLOBAL	__end_of___fldiv
  7462                           	__end_of___fldiv:
  7463  1000                     	signat	___fldiv,8316
  7464                           	global	___fladd
  7465                           
  7466 ;; *************** function ___fladd *****************
  7467 ;; Defined at:
  7468 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  b               4    4[BANK0 ] unsigned char 
  7471 ;;  a               4    8[BANK0 ] unsigned char 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  grs             1   27[BANK0 ] unsigned char 
  7474 ;;  bexp            1   26[BANK0 ] unsigned char 
  7475 ;;  aexp            1   25[BANK0 ] unsigned char 
  7476 ;;  signs           1   24[BANK0 ] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  4    4[BANK0 ] unsigned char 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, btemp+1
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7486 ;;      Params:         0       8       0       0       0
  7487 ;;      Locals:         0       4       0       0       0
  7488 ;;      Temps:          0      12       0       0       0
  7489 ;;      Totals:         0      24       0       0       0
  7490 ;;Total ram usage:       24 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_main
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  7499                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7500                           	line	10
  7501                           global __ptext21
  7502                           __ptext21:	;psect for function ___fladd
  7503  01BC                     psect	text21
  7504                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7505                           	line	10
  7506                           	global	__size_of___fladd
  7507                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  7508  02BC                     	
  7509                           ___fladd:	
  7510  01BC                     ;incstack = 0
  7511                           	opt	stack 7
  7512                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7513                           	line	21
  7514                           	
  7515                           l2017:	
  7516  01BC                     	bcf	status, 5	;RP0=0, select bank0
  7517  01BC  1283               	bcf	status, 6	;RP1=0, select bank0
  7518  01BD  1303               	movf	0+(___fladd@b)+03h,w
  7519  01BE  0827               	andlw	080h
  7520  01BF  3980               	movwf	(??___fladd+0)+0
  7521  01C0  00AC               	movf	(??___fladd+0)+0,w
  7522  01C1  082C               	movwf	(___fladd@signs)
  7523  01C2  00B8               	line	22
  7524                           	
  7525                           l2019:	
  7526  01C3                     	movf	0+(___fladd@b)+03h,w
  7527  01C3  0827               	movwf	(??___fladd+0)+0
  7528  01C4  00AC               	addwf	(??___fladd+0)+0,w
  7529  01C5  072C               	movwf	(??___fladd+1)+0
  7530  01C6  00AD               	movf	(??___fladd+1)+0,w
  7531  01C7  082D               	movwf	(___fladd@bexp)
  7532  01C8  00BA               	line	23
  7533                           	
  7534                           l2021:	
  7535  01C9                     	btfss	0+(___fladd@b)+02h,(7)&7
  7536  01C9  1FA6               	goto	u2291
  7537  01CA  29CC               	goto	u2290
  7538  01CB  29CD               u2291:
  7539  01CC                     	goto	l2025
  7540  01CC  29CF               u2290:
  7541  01CD                     	line	24
  7542                           	
  7543                           l2023:	
  7544  01CD                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  7545  01CD  143A               	goto	l2025
  7546  01CE  29CF               	line	25
  7547                           	
  7548                           l563:	
  7549  01CF                     	line	28
  7550                           	
  7551                           l2025:	
  7552  01CF                     	movf	((___fladd@bexp)),w
  7553  01CF  083A               	btfsc	status,2
  7554  01D0  1903               	goto	u2301
  7555  01D1  29D3               	goto	u2300
  7556  01D2  29D4               u2301:
  7557  01D3                     	goto	l2035
  7558  01D3  29E5               u2300:
  7559  01D4                     	line	30
  7560                           	
  7561                           l2027:	
  7562  01D4                     		incf	((___fladd@bexp)),w
  7563  01D4  0A3A               	btfss	status,2
  7564  01D5  1D03               	goto	u2311
  7565  01D6  29D8               	goto	u2310
  7566  01D7  29D9               u2311:
  7567  01D8                     	goto	l2031
  7568  01D8  29E2               u2310:
  7569  01D9                     	line	32
  7570                           	
  7571                           l2029:	
  7572  01D9                     	movlw	0x0
  7573  01D9  3000               	movwf	(___fladd@b+3)
  7574  01DA  00A7               	movlw	0x0
  7575  01DB  3000               	movwf	(___fladd@b+2)
  7576  01DC  00A6               	movlw	0x0
  7577  01DD  3000               	movwf	(___fladd@b+1)
  7578  01DE  00A5               	movlw	0x0
  7579  01DF  3000               	movwf	(___fladd@b)
  7580  01E0  00A4               
  7581                           	goto	l2031
  7582  01E1  29E2               	line	33
  7583                           	
  7584                           l565:	
  7585  01E2                     	line	35
  7586                           	
  7587                           l2031:	
  7588  01E2                     	bsf	(___fladd@b)+(23/8),(23)&7
  7589  01E2  17A6               	line	37
  7590                           	
  7591                           l2033:	
  7592  01E3                     	clrf	0+(___fladd@b)+03h
  7593  01E3  01A7               	line	38
  7594                           	goto	l2037
  7595  01E4  29EE               	line	39
  7596                           	
  7597                           l564:	
  7598  01E5                     	line	41
  7599                           	
  7600                           l2035:	
  7601  01E5                     	movlw	0x0
  7602  01E5  3000               	movwf	(___fladd@b+3)
  7603  01E6  00A7               	movlw	0x0
  7604  01E7  3000               	movwf	(___fladd@b+2)
  7605  01E8  00A6               	movlw	0x0
  7606  01E9  3000               	movwf	(___fladd@b+1)
  7607  01EA  00A5               	movlw	0x0
  7608  01EB  3000               	movwf	(___fladd@b)
  7609  01EC  00A4               
  7610                           	goto	l2037
  7611  01ED  29EE               	line	42
  7612                           	
  7613                           l566:	
  7614  01EE                     	line	44
  7615                           	
  7616                           l2037:	
  7617  01EE                     	movf	0+(___fladd@a)+03h,w
  7618  01EE  082B               	andlw	080h
  7619  01EF  3980               	movwf	(??___fladd+0)+0
  7620  01F0  00AC               	movf	(??___fladd+0)+0,w
  7621  01F1  082C               	movwf	(___fladd@aexp)
  7622  01F2  00B9               	line	46
  7623                           	
  7624                           l2039:	
  7625  01F3                     	movf	(___fladd@aexp),w
  7626  01F3  0839               	xorwf	(___fladd@signs),w
  7627  01F4  0638               	skipnz
  7628  01F5  1903               	goto	u2321
  7629  01F6  29F8               	goto	u2320
  7630  01F7  29F9               u2321:
  7631  01F8                     	goto	l2043
  7632  01F8  29FB               u2320:
  7633  01F9                     	line	47
  7634                           	
  7635                           l2041:	
  7636  01F9                     	bsf	(___fladd@signs)+(6/8),(6)&7
  7637  01F9  1738               	goto	l2043
  7638  01FA  29FB               	line	48
  7639                           	
  7640                           l567:	
  7641  01FB                     	line	49
  7642                           	
  7643                           l2043:	
  7644  01FB                     	movf	0+(___fladd@a)+03h,w
  7645  01FB  082B               	movwf	(??___fladd+0)+0
  7646  01FC  00AC               	addwf	(??___fladd+0)+0,w
  7647  01FD  072C               	movwf	(??___fladd+1)+0
  7648  01FE  00AD               	movf	(??___fladd+1)+0,w
  7649  01FF  082D               	movwf	(___fladd@aexp)
  7650  0200  00B9               	line	50
  7651                           	
  7652                           l2045:	
  7653  0201                     	btfss	0+(___fladd@a)+02h,(7)&7
  7654  0201  1FAA               	goto	u2331
  7655  0202  2A04               	goto	u2330
  7656  0203  2A05               u2331:
  7657  0204                     	goto	l2049
  7658  0204  2A07               u2330:
  7659  0205                     	line	51
  7660                           	
  7661                           l2047:	
  7662  0205                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  7663  0205  1439               	goto	l2049
  7664  0206  2A07               	line	52
  7665                           	
  7666                           l568:	
  7667  0207                     	line	55
  7668                           	
  7669                           l2049:	
  7670  0207                     	movf	((___fladd@aexp)),w
  7671  0207  0839               	btfsc	status,2
  7672  0208  1903               	goto	u2341
  7673  0209  2A0B               	goto	u2340
  7674  020A  2A0C               u2341:
  7675  020B                     	goto	l2059
  7676  020B  2A1D               u2340:
  7677  020C                     	line	57
  7678                           	
  7679                           l2051:	
  7680  020C                     		incf	((___fladd@aexp)),w
  7681  020C  0A39               	btfss	status,2
  7682  020D  1D03               	goto	u2351
  7683  020E  2A10               	goto	u2350
  7684  020F  2A11               u2351:
  7685  0210                     	goto	l2055
  7686  0210  2A1A               u2350:
  7687  0211                     	line	59
  7688                           	
  7689                           l2053:	
  7690  0211                     	movlw	0x0
  7691  0211  3000               	movwf	(___fladd@a+3)
  7692  0212  00AB               	movlw	0x0
  7693  0213  3000               	movwf	(___fladd@a+2)
  7694  0214  00AA               	movlw	0x0
  7695  0215  3000               	movwf	(___fladd@a+1)
  7696  0216  00A9               	movlw	0x0
  7697  0217  3000               	movwf	(___fladd@a)
  7698  0218  00A8               
  7699                           	goto	l2055
  7700  0219  2A1A               	line	60
  7701                           	
  7702                           l570:	
  7703  021A                     	line	62
  7704                           	
  7705                           l2055:	
  7706  021A                     	bsf	(___fladd@a)+(23/8),(23)&7
  7707  021A  17AA               	line	64
  7708                           	
  7709                           l2057:	
  7710  021B                     	clrf	0+(___fladd@a)+03h
  7711  021B  01AB               	line	65
  7712                           	goto	l571
  7713  021C  2A25               	line	66
  7714                           	
  7715                           l569:	
  7716  021D                     	line	68
  7717                           	
  7718                           l2059:	
  7719  021D                     	movlw	0x0
  7720  021D  3000               	movwf	(___fladd@a+3)
  7721  021E  00AB               	movlw	0x0
  7722  021F  3000               	movwf	(___fladd@a+2)
  7723  0220  00AA               	movlw	0x0
  7724  0221  3000               	movwf	(___fladd@a+1)
  7725  0222  00A9               	movlw	0x0
  7726  0223  3000               	movwf	(___fladd@a)
  7727  0224  00A8               
  7728                           	line	69
  7729                           	
  7730                           l571:	
  7731  0225                     	line	75
  7732                           	movf	(___fladd@bexp),w
  7733  0225  083A               	subwf	(___fladd@aexp),w
  7734  0226  0239               	skipnc
  7735  0227  1803               	goto	u2361
  7736  0228  2A2A               	goto	u2360
  7737  0229  2A2B               u2361:
  7738  022A                     	goto	l2095
  7739  022A  2A71               u2360:
  7740  022B                     	line	77
  7741                           	
  7742                           l2061:	
  7743  022B                     	btfss	(___fladd@signs),(6)&7
  7744  022B  1F38               	goto	u2371
  7745  022C  2A2E               	goto	u2370
  7746  022D  2A2F               u2371:
  7747  022E                     	goto	l2065
  7748  022E  2A34               u2370:
  7749  022F                     	line	78
  7750                           	
  7751                           l2063:	
  7752  022F                     	movlw	low(080h)
  7753  022F  3080               	movwf	(??___fladd+0)+0
  7754  0230  00AC               	movf	(??___fladd+0)+0,w
  7755  0231  082C               	xorwf	(___fladd@signs),f
  7756  0232  06B8               	goto	l2065
  7757  0233  2A34               	line	79
  7758                           	
  7759                           l573:	
  7760  0234                     	line	81
  7761                           	
  7762                           l2065:	
  7763  0234                     	movf	(___fladd@bexp),w
  7764  0234  083A               	movwf	(??___fladd+0)+0
  7765  0235  00AC               	movf	(??___fladd+0)+0,w
  7766  0236  082C               	movwf	(___fladd@grs)
  7767  0237  00BB               	line	82
  7768                           	
  7769                           l2067:	
  7770  0238                     	movf	(___fladd@aexp),w
  7771  0238  0839               	movwf	(??___fladd+0)+0
  7772  0239  00AC               	movf	(??___fladd+0)+0,w
  7773  023A  082C               	movwf	(___fladd@bexp)
  7774  023B  00BA               	line	83
  7775                           	
  7776                           l2069:	
  7777  023C                     	movf	(___fladd@grs),w
  7778  023C  083B               	movwf	(??___fladd+0)+0
  7779  023D  00AC               	movf	(??___fladd+0)+0,w
  7780  023E  082C               	movwf	(___fladd@aexp)
  7781  023F  00B9               	line	84
  7782                           	
  7783                           l2071:	
  7784  0240                     	movf	(___fladd@b),w
  7785  0240  0824               	movwf	(??___fladd+0)+0
  7786  0241  00AC               	movf	(??___fladd+0)+0,w
  7787  0242  082C               	movwf	(___fladd@grs)
  7788  0243  00BB               	line	85
  7789                           	
  7790                           l2073:	
  7791  0244                     	movf	(___fladd@a),w
  7792  0244  0828               	movwf	(??___fladd+0)+0
  7793  0245  00AC               	movf	(??___fladd+0)+0,w
  7794  0246  082C               	movwf	(___fladd@b)
  7795  0247  00A4               	line	86
  7796                           	
  7797                           l2075:	
  7798  0248                     	movf	(___fladd@grs),w
  7799  0248  083B               	movwf	(??___fladd+0)+0
  7800  0249  00AC               	movf	(??___fladd+0)+0,w
  7801  024A  082C               	movwf	(___fladd@a)
  7802  024B  00A8               	line	87
  7803                           	
  7804                           l2077:	
  7805  024C                     	movf	0+(___fladd@b)+01h,w
  7806  024C  0825               	movwf	(??___fladd+0)+0
  7807  024D  00AC               	movf	(??___fladd+0)+0,w
  7808  024E  082C               	movwf	(___fladd@grs)
  7809  024F  00BB               	line	88
  7810                           	
  7811                           l2079:	
  7812  0250                     	movf	0+(___fladd@a)+01h,w
  7813  0250  0829               	movwf	(??___fladd+0)+0
  7814  0251  00AC               	movf	(??___fladd+0)+0,w
  7815  0252  082C               	movwf	0+(___fladd@b)+01h
  7816  0253  00A5               	line	89
  7817                           	
  7818                           l2081:	
  7819  0254                     	movf	(___fladd@grs),w
  7820  0254  083B               	movwf	(??___fladd+0)+0
  7821  0255  00AC               	movf	(??___fladd+0)+0,w
  7822  0256  082C               	movwf	0+(___fladd@a)+01h
  7823  0257  00A9               	line	90
  7824                           	
  7825                           l2083:	
  7826  0258                     	movf	0+(___fladd@b)+02h,w
  7827  0258  0826               	movwf	(??___fladd+0)+0
  7828  0259  00AC               	movf	(??___fladd+0)+0,w
  7829  025A  082C               	movwf	(___fladd@grs)
  7830  025B  00BB               	line	91
  7831                           	
  7832                           l2085:	
  7833  025C                     	movf	0+(___fladd@a)+02h,w
  7834  025C  082A               	movwf	(??___fladd+0)+0
  7835  025D  00AC               	movf	(??___fladd+0)+0,w
  7836  025E  082C               	movwf	0+(___fladd@b)+02h
  7837  025F  00A6               	line	92
  7838                           	
  7839                           l2087:	
  7840  0260                     	movf	(___fladd@grs),w
  7841  0260  083B               	movwf	(??___fladd+0)+0
  7842  0261  00AC               	movf	(??___fladd+0)+0,w
  7843  0262  082C               	movwf	0+(___fladd@a)+02h
  7844  0263  00AA               	line	93
  7845                           	
  7846                           l2089:	
  7847  0264                     	movf	0+(___fladd@b)+03h,w
  7848  0264  0827               	movwf	(??___fladd+0)+0
  7849  0265  00AC               	movf	(??___fladd+0)+0,w
  7850  0266  082C               	movwf	(___fladd@grs)
  7851  0267  00BB               	line	94
  7852                           	
  7853                           l2091:	
  7854  0268                     	movf	0+(___fladd@a)+03h,w
  7855  0268  082B               	movwf	(??___fladd+0)+0
  7856  0269  00AC               	movf	(??___fladd+0)+0,w
  7857  026A  082C               	movwf	0+(___fladd@b)+03h
  7858  026B  00A7               	line	95
  7859                           	
  7860                           l2093:	
  7861  026C                     	movf	(___fladd@grs),w
  7862  026C  083B               	movwf	(??___fladd+0)+0
  7863  026D  00AC               	movf	(??___fladd+0)+0,w
  7864  026E  082C               	movwf	0+(___fladd@a)+03h
  7865  026F  00AB               	goto	l2095
  7866  0270  2A71               	line	96
  7867                           	
  7868                           l572:	
  7869  0271                     	line	98
  7870                           	
  7871                           l2095:	
  7872  0271                     	clrf	(___fladd@grs)
  7873  0271  01BB               	line	100
  7874                           	
  7875                           l2097:	
  7876  0272                     	movf	(___fladd@bexp),w
  7877  0272  083A               	movwf	(??___fladd+0)+0
  7878  0273  00AC               	clrf	(??___fladd+0)+0+1
  7879  0274  01AD               	comf	(??___fladd+0)+0,f
  7880  0275  09AC               	comf	(??___fladd+0)+1,f
  7881  0276  09AD               	incf	(??___fladd+0)+0,f
  7882  0277  0AAC               	skipnz
  7883  0278  1903               	incf	(??___fladd+0)+1,f
  7884  0279  0AAD               	movf	(___fladd@aexp),w
  7885  027A  0839               	addwf	0+(??___fladd+0)+0,w
  7886  027B  072C               	movwf	(??___fladd+2)+0
  7887  027C  00AE               	movf	1+(??___fladd+0)+0,w
  7888  027D  082D               	skipnc
  7889  027E  1803               	incf	1+(??___fladd+0)+0,w
  7890  027F  0A2D               	movwf	((??___fladd+2)+0)+1
  7891  0280  00AF               	movf	1+(??___fladd+2)+0,w
  7892  0281  082F               	xorlw	80h
  7893  0282  3A80               	movwf	btemp+1
  7894  0283  00FF               	movlw	(0)^80h
  7895  0284  3080               	subwf	btemp+1,w
  7896  0285  027F               	skipz
  7897  0286  1D03               	goto	u2385
  7898  0287  2A8A               	movlw	01Ah
  7899  0288  301A               	subwf	0+(??___fladd+2)+0,w
  7900  0289  022E               u2385:
  7901  028A                     
  7902                           	skipc
  7903  028A  1C03               	goto	u2381
  7904  028B  2A8D               	goto	u2380
  7905  028C  2A8E               u2381:
  7906  028D                     	goto	l2113
  7907  028D  2ACF               u2380:
  7908  028E                     	line	101
  7909                           	
  7910                           l2099:	
  7911  028E                     	bcf	status, 5	;RP0=0, select bank0
  7912  028E  1283               	bcf	status, 6	;RP1=0, select bank0
  7913  028F  1303               	movf	(___fladd@b+3),w
  7914  0290  0827               	iorwf	(___fladd@b+2),w
  7915  0291  0426               	iorwf	(___fladd@b+1),w
  7916  0292  0425               	iorwf	(___fladd@b),w
  7917  0293  0424               	skipz
  7918  0294  1D03               	goto	u2391
  7919  0295  2A97               	goto	u2390
  7920  0296  2A99               u2391:
  7921  0297                     	movlw	1
  7922  0297  3001               	goto	u2400
  7923  0298  2A9A               u2390:
  7924  0299                     	movlw	0
  7925  0299  3000               u2400:
  7926  029A                     	movwf	(??___fladd+0)+0
  7927  029A  00AC               	movf	(??___fladd+0)+0,w
  7928  029B  082C               	movwf	(___fladd@grs)
  7929  029C  00BB               	line	102
  7930                           	movlw	high highword(0)
  7931  029D  3000               	movwf	(___fladd@b+3)
  7932  029E  00A7               	movlw	low highword(0)
  7933  029F  3000               	movwf	(___fladd@b+2)
  7934  02A0  00A6               	movlw	high(0)
  7935  02A1  3000               	movwf	(___fladd@b+1)
  7936  02A2  00A5               	movlw	low(0)
  7937  02A3  3000               	movwf	(___fladd@b)
  7938  02A4  00A4               
  7939                           	line	103
  7940                           	movf	(___fladd@aexp),w
  7941  02A5  0839               	movwf	(??___fladd+0)+0
  7942  02A6  00AC               	movf	(??___fladd+0)+0,w
  7943  02A7  082C               	movwf	(___fladd@bexp)
  7944  02A8  00BA               	line	104
  7945                           	goto	l575
  7946  02A9  2AD8               	line	105
  7947                           	
  7948                           l574:	
  7949  02AA                     	line	106
  7950                           	goto	l2113
  7951  02AA  2ACF               	
  7952                           l577:	
  7953  02AB                     	line	109
  7954                           	btfss	(___fladd@grs),(0)&7
  7955  02AB  1C3B               	goto	u2411
  7956  02AC  2AAE               	goto	u2410
  7957  02AD  2AAF               u2411:
  7958  02AE                     	goto	l2103
  7959  02AE  2AB8               u2410:
  7960  02AF                     	line	110
  7961                           	
  7962                           l2101:	
  7963  02AF                     	movf	(___fladd@grs),w
  7964  02AF  083B               	movwf	(??___fladd+0)+0
  7965  02B0  00AC               	clrc
  7966  02B1  1003               	rrf	(??___fladd+0)+0,w
  7967  02B2  0C2C               	iorlw	01h
  7968  02B3  3801               	movwf	(??___fladd+1)+0
  7969  02B4  00AD               	movf	(??___fladd+1)+0,w
  7970  02B5  082D               	movwf	(___fladd@grs)
  7971  02B6  00BB               	line	111
  7972                           	goto	l2105
  7973  02B7  2ABB               	line	112
  7974                           	
  7975                           l578:	
  7976  02B8                     	line	113
  7977                           	
  7978                           l2103:	
  7979  02B8                     	clrc
  7980  02B8  1003               	rrf	(___fladd@grs),f
  7981  02B9  0CBB               
  7982                           	goto	l2105
  7983  02BA  2ABB               	line	114
  7984                           	
  7985                           l579:	
  7986  02BB                     	line	115
  7987                           	
  7988                           l2105:	
  7989  02BB                     	btfss	(___fladd@b),(0)&7
  7990  02BB  1C24               	goto	u2421
  7991  02BC  2ABE               	goto	u2420
  7992  02BD  2ABF               u2421:
  7993  02BE                     	goto	l2109
  7994  02BE  2AC1               u2420:
  7995  02BF                     	line	116
  7996                           	
  7997                           l2107:	
  7998  02BF                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7999  02BF  17BB               	goto	l2109
  8000  02C0  2AC1               	line	117
  8001                           	
  8002                           l580:	
  8003  02C1                     	line	118
  8004                           	
  8005                           l2109:	
  8006  02C1                     	movlw	01h
  8007  02C1  3001               	movwf	(??___fladd+0)+0
  8008  02C2  00AC               u2435:
  8009  02C3                     	rlf	(___fladd@b+3),w
  8010  02C3  0D27               	rrf	(___fladd@b+3),f
  8011  02C4  0CA7               	rrf	(___fladd@b+2),f
  8012  02C5  0CA6               	rrf	(___fladd@b+1),f
  8013  02C6  0CA5               	rrf	(___fladd@b),f
  8014  02C7  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8015  02C8  0BAC               	goto	u2435
  8016  02C9  2AC3               
  8017                           	line	119
  8018                           	
  8019                           l2111:	
  8020  02CA                     	movlw	low(01h)
  8021  02CA  3001               	movwf	(??___fladd+0)+0
  8022  02CB  00AC               	movf	(??___fladd+0)+0,w
  8023  02CC  082C               	addwf	(___fladd@bexp),f
  8024  02CD  07BA               	goto	l2113
  8025  02CE  2ACF               	line	120
  8026                           	
  8027                           l576:	
  8028  02CF                     	line	106
  8029                           	
  8030                           l2113:	
  8031  02CF                     	bcf	status, 5	;RP0=0, select bank0
  8032  02CF  1283               	bcf	status, 6	;RP1=0, select bank0
  8033  02D0  1303               	movf	(___fladd@aexp),w
  8034  02D1  0839               	subwf	(___fladd@bexp),w
  8035  02D2  023A               	skipc
  8036  02D3  1C03               	goto	u2441
  8037  02D4  2AD6               	goto	u2440
  8038  02D5  2AD7               u2441:
  8039  02D6                     	goto	l577
  8040  02D6  2AAB               u2440:
  8041  02D7                     	goto	l575
  8042  02D7  2AD8               	
  8043                           l581:	
  8044  02D8                     	line	121
  8045                           	
  8046                           l575:	
  8047  02D8                     	line	124
  8048                           	btfsc	(___fladd@signs),(6)&7
  8049  02D8  1B38               	goto	u2451
  8050  02D9  2ADB               	goto	u2450
  8051  02DA  2ADC               u2451:
  8052  02DB                     	goto	l2139
  8053  02DB  2B2B               u2450:
  8054  02DC                     	line	127
  8055                           	
  8056                           l2115:	
  8057  02DC                     	movf	((___fladd@bexp)),w
  8058  02DC  083A               	btfss	status,2
  8059  02DD  1D03               	goto	u2461
  8060  02DE  2AE0               	goto	u2460
  8061  02DF  2AE1               u2461:
  8062  02E0                     	goto	l2121
  8063  02E0  2AEB               u2460:
  8064  02E1                     	line	128
  8065                           	
  8066                           l2117:	
  8067  02E1                     	movlw	0x0
  8068  02E1  3000               	movwf	(?___fladd+3)
  8069  02E2  00A7               	movlw	0x0
  8070  02E3  3000               	movwf	(?___fladd+2)
  8071  02E4  00A6               	movlw	0x0
  8072  02E5  3000               	movwf	(?___fladd+1)
  8073  02E6  00A5               	movlw	0x0
  8074  02E7  3000               	movwf	(?___fladd)
  8075  02E8  00A4               
  8076                           	goto	l584
  8077  02E9  2C77               	
  8078                           l2119:	
  8079  02EA                     	goto	l584
  8080  02EA  2C77               	line	129
  8081                           	
  8082                           l583:	
  8083  02EB                     	line	132
  8084                           	
  8085                           l2121:	
  8086  02EB                     	movf	(___fladd@a),w
  8087  02EB  0828               	addwf	(___fladd@b),f
  8088  02EC  07A4               	movf	(___fladd@a+1),w
  8089  02ED  0829               	clrz
  8090  02EE  1103               	skipnc
  8091  02EF  1803               	addlw	1
  8092  02F0  3E01               	skipnz
  8093  02F1  1903               	goto	u2471
  8094  02F2  2AF4               	addwf	(___fladd@b+1),f
  8095  02F3  07A5               u2471:
  8096  02F4                     	movf	(___fladd@a+2),w
  8097  02F4  082A               	clrz
  8098  02F5  1103               	skipnc
  8099  02F6  1803               	addlw	1
  8100  02F7  3E01               	skipnz
  8101  02F8  1903               	goto	u2472
  8102  02F9  2AFB               	addwf	(___fladd@b+2),f
  8103  02FA  07A6               u2472:
  8104  02FB                     	movf	(___fladd@a+3),w
  8105  02FB  082B               	clrz
  8106  02FC  1103               	skipnc
  8107  02FD  1803               	addlw	1
  8108  02FE  3E01               	skipnz
  8109  02FF  1903               	goto	u2473
  8110  0300  2B02               	addwf	(___fladd@b+3),f
  8111  0301  07A7               u2473:
  8112  0302                     
  8113                           	line	134
  8114                           	
  8115                           l2123:	
  8116  0302                     	btfss	(___fladd@b+3),(24)&7
  8117  0302  1C27               	goto	u2481
  8118  0303  2B05               	goto	u2480
  8119  0304  2B06               u2481:
  8120  0305                     	goto	l2173
  8121  0305  2BF4               u2480:
  8122  0306                     	line	135
  8123                           	
  8124                           l2125:	
  8125  0306                     	btfss	(___fladd@grs),(0)&7
  8126  0306  1C3B               	goto	u2491
  8127  0307  2B09               	goto	u2490
  8128  0308  2B0A               u2491:
  8129  0309                     	goto	l2129
  8130  0309  2B13               u2490:
  8131  030A                     	line	136
  8132                           	
  8133                           l2127:	
  8134  030A                     	movf	(___fladd@grs),w
  8135  030A  083B               	movwf	(??___fladd+0)+0
  8136  030B  00AC               	clrc
  8137  030C  1003               	rrf	(??___fladd+0)+0,w
  8138  030D  0C2C               	iorlw	01h
  8139  030E  3801               	movwf	(??___fladd+1)+0
  8140  030F  00AD               	movf	(??___fladd+1)+0,w
  8141  0310  082D               	movwf	(___fladd@grs)
  8142  0311  00BB               	line	137
  8143                           	goto	l2131
  8144  0312  2B16               	line	138
  8145                           	
  8146                           l586:	
  8147  0313                     	line	139
  8148                           	
  8149                           l2129:	
  8150  0313                     	clrc
  8151  0313  1003               	rrf	(___fladd@grs),f
  8152  0314  0CBB               
  8153                           	goto	l2131
  8154  0315  2B16               	line	140
  8155                           	
  8156                           l587:	
  8157  0316                     	line	141
  8158                           	
  8159                           l2131:	
  8160  0316                     	btfss	(___fladd@b),(0)&7
  8161  0316  1C24               	goto	u2501
  8162  0317  2B19               	goto	u2500
  8163  0318  2B1A               u2501:
  8164  0319                     	goto	l2135
  8165  0319  2B1C               u2500:
  8166  031A                     	line	142
  8167                           	
  8168                           l2133:	
  8169  031A                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8170  031A  17BB               	goto	l2135
  8171  031B  2B1C               	line	143
  8172                           	
  8173                           l588:	
  8174  031C                     	line	144
  8175                           	
  8176                           l2135:	
  8177  031C                     	movlw	01h
  8178  031C  3001               	movwf	(??___fladd+0)+0
  8179  031D  00AC               u2515:
  8180  031E                     	rlf	(___fladd@b+3),w
  8181  031E  0D27               	rrf	(___fladd@b+3),f
  8182  031F  0CA7               	rrf	(___fladd@b+2),f
  8183  0320  0CA6               	rrf	(___fladd@b+1),f
  8184  0321  0CA5               	rrf	(___fladd@b),f
  8185  0322  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8186  0323  0BAC               	goto	u2515
  8187  0324  2B1E               
  8188                           	line	145
  8189                           	
  8190                           l2137:	
  8191  0325                     	movlw	low(01h)
  8192  0325  3001               	movwf	(??___fladd+0)+0
  8193  0326  00AC               	movf	(??___fladd+0)+0,w
  8194  0327  082C               	addwf	(___fladd@bexp),f
  8195  0328  07BA               	goto	l2173
  8196  0329  2BF4               	line	146
  8197                           	
  8198                           l585:	
  8199  032A                     	line	148
  8200                           	goto	l2173
  8201  032A  2BF4               	line	149
  8202                           	
  8203                           l582:	
  8204  032B                     	line	153
  8205                           	
  8206                           l2139:	
  8207  032B                     	movf	(___fladd@b+3),w
  8208  032B  0827               	xorlw	80h
  8209  032C  3A80               	movwf	btemp+1
  8210  032D  00FF               	movf	(___fladd@a+3),w
  8211  032E  082B               	xorlw	80h
  8212  032F  3A80               	subwf	btemp+1,w
  8213  0330  027F               	
  8214                           	skipz
  8215  0331  1D03               	goto	u2523
  8216  0332  2B3D               	movf	(___fladd@a+2),w
  8217  0333  082A               	subwf	(___fladd@b+2),w
  8218  0334  0226               	skipz
  8219  0335  1D03               	goto	u2523
  8220  0336  2B3D               	movf	(___fladd@a+1),w
  8221  0337  0829               	subwf	(___fladd@b+1),w
  8222  0338  0225               	skipz
  8223  0339  1D03               	goto	u2523
  8224  033A  2B3D               	movf	(___fladd@a),w
  8225  033B  0828               	subwf	(___fladd@b),w
  8226  033C  0224               u2523:
  8227  033D                     	skipnc
  8228  033D  1803               	goto	u2521
  8229  033E  2B40               	goto	u2520
  8230  033F  2B41               u2521:
  8231  0340                     	goto	l2149
  8232  0340  2BA7               u2520:
  8233  0341                     	line	154
  8234                           	
  8235                           l2141:	
  8236  0341                     	movlw	0FFh
  8237  0341  30FF               	movwf	((??___fladd+0)+0)
  8238  0342  00AC               	movlw	0FFh
  8239  0343  30FF               	movwf	((??___fladd+0)+0+1)
  8240  0344  00AD               	movlw	0FFh
  8241  0345  30FF               	movwf	((??___fladd+0)+0+2)
  8242  0346  00AE               	movlw	0FFh
  8243  0347  30FF               	movwf	((??___fladd+0)+0+3)
  8244  0348  00AF               	movf	(___fladd@a),w
  8245  0349  0828               	movwf	(??___fladd+4)+0
  8246  034A  00B0               	movf	(___fladd@a+1),w
  8247  034B  0829               	movwf	((??___fladd+4)+0+1)
  8248  034C  00B1               	movf	(___fladd@a+2),w
  8249  034D  082A               	movwf	((??___fladd+4)+0+2)
  8250  034E  00B2               	movf	(___fladd@a+3),w
  8251  034F  082B               	movwf	((??___fladd+4)+0+3)
  8252  0350  00B3               	comf	(___fladd@b),w
  8253  0351  0924               	movwf	(??___fladd+8)+0
  8254  0352  00B4               	comf	(___fladd@b+1),w
  8255  0353  0925               	movwf	((??___fladd+8)+0+1)
  8256  0354  00B5               	comf	(___fladd@b+2),w
  8257  0355  0926               	movwf	((??___fladd+8)+0+2)
  8258  0356  00B6               	comf	(___fladd@b+3),w
  8259  0357  0927               	movwf	((??___fladd+8)+0+3)
  8260  0358  00B7               	incf	(??___fladd+8)+0,f
  8261  0359  0AB4               	skipnz
  8262  035A  1903               	incf	((??___fladd+8)+0+1),f
  8263  035B  0AB5               	skipnz
  8264  035C  1903               	incf	((??___fladd+8)+0+2),f
  8265  035D  0AB6               	skipnz
  8266  035E  1903               	incf	((??___fladd+8)+0+3),f
  8267  035F  0AB7               	movf	0+(??___fladd+8)+0,w
  8268  0360  0834               	addwf	(??___fladd+4)+0,f
  8269  0361  07B0               	movf	1+(??___fladd+8)+0,w
  8270  0362  0835               	skipnc
  8271  0363  1803               	incfsz	1+(??___fladd+8)+0,w
  8272  0364  0F35               	goto	u2530
  8273  0365  2B67               	goto	u2531
  8274  0366  2B68               u2530:
  8275  0367                     	addwf	(??___fladd+4)+1,f
  8276  0367  07B1               u2531:
  8277  0368                     	movf	2+(??___fladd+8)+0,w
  8278  0368  0836               	skipnc
  8279  0369  1803               	incfsz	2+(??___fladd+8)+0,w
  8280  036A  0F36               	goto	u2532
  8281  036B  2B6D               	goto	u2533
  8282  036C  2B6E               u2532:
  8283  036D                     	addwf	(??___fladd+4)+2,f
  8284  036D  07B2               u2533:
  8285  036E                     	movf	3+(??___fladd+8)+0,w
  8286  036E  0837               	skipnc
  8287  036F  1803               	incf	3+(??___fladd+8)+0,w
  8288  0370  0A37               	addwf	(??___fladd+4)+3,f
  8289  0371  07B3               	movf	0+(??___fladd+4)+0,w
  8290  0372  0830               	addwf	(??___fladd+0)+0,f
  8291  0373  07AC               	movf	1+(??___fladd+4)+0,w
  8292  0374  0831               	skipnc
  8293  0375  1803               	incfsz	1+(??___fladd+4)+0,w
  8294  0376  0F31               	goto	u2540
  8295  0377  2B79               	goto	u2541
  8296  0378  2B7A               u2540:
  8297  0379                     	addwf	(??___fladd+0)+1,f
  8298  0379  07AD               u2541:
  8299  037A                     	movf	2+(??___fladd+4)+0,w
  8300  037A  0832               	skipnc
  8301  037B  1803               	incfsz	2+(??___fladd+4)+0,w
  8302  037C  0F32               	goto	u2542
  8303  037D  2B7F               	goto	u2543
  8304  037E  2B80               u2542:
  8305  037F                     	addwf	(??___fladd+0)+2,f
  8306  037F  07AE               u2543:
  8307  0380                     	movf	3+(??___fladd+4)+0,w
  8308  0380  0833               	skipnc
  8309  0381  1803               	incf	3+(??___fladd+4)+0,w
  8310  0382  0A33               	addwf	(??___fladd+0)+3,f
  8311  0383  07AF               	movf	3+(??___fladd+0)+0,w
  8312  0384  082F               	movwf	(___fladd@b+3)
  8313  0385  00A7               	movf	2+(??___fladd+0)+0,w
  8314  0386  082E               	movwf	(___fladd@b+2)
  8315  0387  00A6               	movf	1+(??___fladd+0)+0,w
  8316  0388  082D               	movwf	(___fladd@b+1)
  8317  0389  00A5               	movf	0+(??___fladd+0)+0,w
  8318  038A  082C               	movwf	(___fladd@b)
  8319  038B  00A4               
  8320                           	line	155
  8321                           	movlw	low(080h)
  8322  038C  3080               	movwf	(??___fladd+0)+0
  8323  038D  00AC               	movf	(??___fladd+0)+0,w
  8324  038E  082C               	xorwf	(___fladd@signs),f
  8325  038F  06B8               	line	156
  8326                           	
  8327                           l2143:	
  8328  0390                     	comf	(___fladd@grs),f
  8329  0390  09BB               	incf	(___fladd@grs),f
  8330  0391  0ABB               	line	157
  8331                           	
  8332                           l2145:	
  8333  0392                     	movf	((___fladd@grs)),w
  8334  0392  083B               	btfss	status,2
  8335  0393  1D03               	goto	u2551
  8336  0394  2B96               	goto	u2550
  8337  0395  2B97               u2551:
  8338  0396                     	goto	l592
  8339  0396  2BB5               u2550:
  8340  0397                     	line	158
  8341                           	
  8342                           l2147:	
  8343  0397                     	movlw	01h
  8344  0397  3001               	addwf	(___fladd@b),f
  8345  0398  07A4               	movlw	0
  8346  0399  3000               	skipnc
  8347  039A  1803               movlw 1
  8348  039B  3001               	addwf	(___fladd@b+1),f
  8349  039C  07A5               	movlw	0
  8350  039D  3000               	skipnc
  8351  039E  1803               movlw 1
  8352  039F  3001               	addwf	(___fladd@b+2),f
  8353  03A0  07A6               	movlw	0
  8354  03A1  3000               	skipnc
  8355  03A2  1803               movlw 1
  8356  03A3  3001               	addwf	(___fladd@b+3),f
  8357  03A4  07A7               	goto	l592
  8358  03A5  2BB5               	line	159
  8359                           	
  8360                           l591:	
  8361  03A6                     	line	160
  8362                           	goto	l592
  8363  03A6  2BB5               	line	161
  8364                           	
  8365                           l590:	
  8366  03A7                     	line	162
  8367                           	
  8368                           l2149:	
  8369  03A7                     	movf	(___fladd@a),w
  8370  03A7  0828               	subwf	(___fladd@b),f
  8371  03A8  02A4               	movf	(___fladd@a+1),w
  8372  03A9  0829               	skipc
  8373  03AA  1C03               	incfsz	(___fladd@a+1),w
  8374  03AB  0F29               	subwf	(___fladd@b+1),f
  8375  03AC  02A5               	movf	(___fladd@a+2),w
  8376  03AD  082A               	skipc
  8377  03AE  1C03               	incfsz	(___fladd@a+2),w
  8378  03AF  0F2A               	subwf	(___fladd@b+2),f
  8379  03B0  02A6               	movf	(___fladd@a+3),w
  8380  03B1  082B               	skipc
  8381  03B2  1C03               	incfsz	(___fladd@a+3),w
  8382  03B3  0F2B               	subwf	(___fladd@b+3),f
  8383  03B4  02A7               	line	163
  8384                           	
  8385                           l592:	
  8386  03B5                     	line	166
  8387                           	movf	(___fladd@b+3),w
  8388  03B5  0827               	iorwf	(___fladd@b+2),w
  8389  03B6  0426               	iorwf	(___fladd@b+1),w
  8390  03B7  0425               	iorwf	(___fladd@b),w
  8391  03B8  0424               	skipz
  8392  03B9  1D03               	goto	u2561
  8393  03BA  2BBC               	goto	u2560
  8394  03BB  2BBD               u2561:
  8395  03BC                     	goto	l2171
  8396  03BC  2BEE               u2560:
  8397  03BD                     	
  8398                           l2151:	
  8399  03BD                     	movf	((___fladd@grs)),w
  8400  03BD  083B               	btfss	status,2
  8401  03BE  1D03               	goto	u2571
  8402  03BF  2BC1               	goto	u2570
  8403  03C0  2BC2               u2571:
  8404  03C1                     	goto	l2171
  8405  03C1  2BEE               u2570:
  8406  03C2                     	line	167
  8407                           	
  8408                           l2153:	
  8409  03C2                     	movlw	0x0
  8410  03C2  3000               	movwf	(?___fladd+3)
  8411  03C3  00A7               	movlw	0x0
  8412  03C4  3000               	movwf	(?___fladd+2)
  8413  03C5  00A6               	movlw	0x0
  8414  03C6  3000               	movwf	(?___fladd+1)
  8415  03C7  00A5               	movlw	0x0
  8416  03C8  3000               	movwf	(?___fladd)
  8417  03C9  00A4               
  8418                           	goto	l584
  8419  03CA  2C77               	
  8420                           l2155:	
  8421  03CB                     	goto	l584
  8422  03CB  2C77               	line	168
  8423                           	
  8424                           l593:	
  8425  03CC                     	line	171
  8426                           	goto	l2171
  8427  03CC  2BEE               	
  8428                           l595:	
  8429  03CD                     	line	172
  8430                           	
  8431                           l2157:	
  8432  03CD                     	movlw	01h
  8433  03CD  3001               	movwf	(??___fladd+0)+0
  8434  03CE  00AC               u2585:
  8435  03CF                     	clrc
  8436  03CF  1003               	rlf	(___fladd@b),f
  8437  03D0  0DA4               	rlf	(___fladd@b+1),f
  8438  03D1  0DA5               	rlf	(___fladd@b+2),f
  8439  03D2  0DA6               	rlf	(___fladd@b+3),f
  8440  03D3  0DA7               	decfsz	(??___fladd+0)+0
  8441  03D4  0BAC               	goto	u2585
  8442  03D5  2BCF               	line	173
  8443                           	
  8444                           l2159:	
  8445  03D6                     	btfss	(___fladd@grs),(7)&7
  8446  03D6  1FBB               	goto	u2591
  8447  03D7  2BD9               	goto	u2590
  8448  03D8  2BDA               u2591:
  8449  03D9                     	goto	l596
  8450  03D9  2BDB               u2590:
  8451  03DA                     	line	174
  8452                           	
  8453                           l2161:	
  8454  03DA                     	bsf	(___fladd@b)+(0/8),(0)&7
  8455  03DA  1424               	line	175
  8456                           	
  8457                           l596:	
  8458  03DB                     	line	176
  8459                           	btfss	(___fladd@grs),(0)&7
  8460  03DB  1C3B               	goto	u2601
  8461  03DC  2BDE               	goto	u2600
  8462  03DD  2BDF               u2601:
  8463  03DE                     	goto	l2165
  8464  03DE  2BE2               u2600:
  8465  03DF                     	line	177
  8466                           	
  8467                           l2163:	
  8468  03DF                     	setc
  8469  03DF  1403               	rlf	(___fladd@grs),f
  8470  03E0  0DBB               	line	178
  8471                           	goto	l2167
  8472  03E1  2BE5               	line	179
  8473                           	
  8474                           l597:	
  8475  03E2                     	line	180
  8476                           	
  8477                           l2165:	
  8478  03E2                     	clrc
  8479  03E2  1003               	rlf	(___fladd@grs),f
  8480  03E3  0DBB               
  8481                           	goto	l2167
  8482  03E4  2BE5               	line	181
  8483                           	
  8484                           l598:	
  8485  03E5                     	line	182
  8486                           	
  8487                           l2167:	
  8488  03E5                     	movf	((___fladd@bexp)),w
  8489  03E5  083A               	btfsc	status,2
  8490  03E6  1903               	goto	u2611
  8491  03E7  2BE9               	goto	u2610
  8492  03E8  2BEA               u2611:
  8493  03E9                     	goto	l2171
  8494  03E9  2BEE               u2610:
  8495  03EA                     	line	183
  8496                           	
  8497                           l2169:	
  8498  03EA                     	movlw	01h
  8499  03EA  3001               	subwf	(___fladd@bexp),f
  8500  03EB  02BA               	goto	l2171
  8501  03EC  2BEE               	line	184
  8502                           	
  8503                           l599:	
  8504  03ED                     	goto	l2171
  8505  03ED  2BEE               	line	185
  8506                           	
  8507                           l594:	
  8508  03EE                     	line	171
  8509                           	
  8510                           l2171:	
  8511  03EE                     	btfss	(___fladd@b+2),(23)&7
  8512  03EE  1FA6               	goto	u2621
  8513  03EF  2BF1               	goto	u2620
  8514  03F0  2BF2               u2621:
  8515  03F1                     	goto	l2157
  8516  03F1  2BCD               u2620:
  8517  03F2                     	goto	l2173
  8518  03F2  2BF4               	
  8519                           l600:	
  8520  03F3                     	goto	l2173
  8521  03F3  2BF4               	line	186
  8522                           	
  8523                           l589:	
  8524  03F4                     	line	192
  8525                           	
  8526                           l2173:	
  8527  03F4                     	clrf	(___fladd@aexp)
  8528  03F4  01B9               	line	193
  8529                           	
  8530                           l2175:	
  8531  03F5                     	btfss	(___fladd@grs),(7)&7
  8532  03F5  1FBB               	goto	u2631
  8533  03F6  2BF8               	goto	u2630
  8534  03F7  2BF9               u2631:
  8535  03F8                     	goto	l2183
  8536  03F8  2C0B               u2630:
  8537  03F9                     	line	194
  8538                           	
  8539                           l2177:	
  8540  03F9                     	movf	(___fladd@grs),w
  8541  03F9  083B               	andlw	07Fh
  8542  03FA  397F               	btfsc	status,2
  8543  03FB  1903               	goto	u2641
  8544  03FC  2BFE               	goto	u2640
  8545  03FD  2BFF               u2641:
  8546  03FE                     	goto	l602
  8547  03FE  2C02               u2640:
  8548  03FF                     	line	195
  8549                           	
  8550                           l2179:	
  8551  03FF                     	clrf	(___fladd@aexp)
  8552  03FF  01B9               	incf	(___fladd@aexp),f
  8553  0400  0AB9               	line	196
  8554                           	goto	l2183
  8555  0401  2C0B               	line	197
  8556                           	
  8557                           l602:	
  8558  0402                     	line	198
  8559                           	btfss	(___fladd@b),(0)&7
  8560  0402  1C24               	goto	u2651
  8561  0403  2C05               	goto	u2650
  8562  0404  2C06               u2651:
  8563  0405                     	goto	l2183
  8564  0405  2C0B               u2650:
  8565  0406                     	line	199
  8566                           	
  8567                           l2181:	
  8568  0406                     	clrf	(___fladd@aexp)
  8569  0406  01B9               	incf	(___fladd@aexp),f
  8570  0407  0AB9               	goto	l2183
  8571  0408  2C0B               	line	200
  8572                           	
  8573                           l604:	
  8574  0409                     	goto	l2183
  8575  0409  2C0B               	line	201
  8576                           	
  8577                           l603:	
  8578  040A                     	goto	l2183
  8579  040A  2C0B               	line	202
  8580                           	
  8581                           l601:	
  8582  040B                     	line	203
  8583                           	
  8584                           l2183:	
  8585  040B                     	movf	((___fladd@aexp)),w
  8586  040B  0839               	btfsc	status,2
  8587  040C  1903               	goto	u2661
  8588  040D  2C0F               	goto	u2660
  8589  040E  2C10               u2661:
  8590  040F                     	goto	l605
  8591  040F  2C46               u2660:
  8592  0410                     	line	204
  8593                           	
  8594                           l2185:	
  8595  0410                     	movlw	01h
  8596  0410  3001               	addwf	(___fladd@b),f
  8597  0411  07A4               	movlw	0
  8598  0412  3000               	skipnc
  8599  0413  1803               movlw 1
  8600  0414  3001               	addwf	(___fladd@b+1),f
  8601  0415  07A5               	movlw	0
  8602  0416  3000               	skipnc
  8603  0417  1803               movlw 1
  8604  0418  3001               	addwf	(___fladd@b+2),f
  8605  0419  07A6               	movlw	0
  8606  041A  3000               	skipnc
  8607  041B  1803               movlw 1
  8608  041C  3001               	addwf	(___fladd@b+3),f
  8609  041D  07A7               	line	205
  8610                           	
  8611                           l2187:	
  8612  041E                     	btfss	(___fladd@b+3),(24)&7
  8613  041E  1C27               	goto	u2671
  8614  041F  2C21               	goto	u2670
  8615  0420  2C22               u2671:
  8616  0421                     	goto	l605
  8617  0421  2C46               u2670:
  8618  0422                     	line	206
  8619                           	
  8620                           l2189:	
  8621  0422                     	movf	(___fladd@b),w
  8622  0422  0824               	movwf	(??___fladd+0)+0
  8623  0423  00AC               	movf	(___fladd@b+1),w
  8624  0424  0825               	movwf	((??___fladd+0)+0+1)
  8625  0425  00AD               	movf	(___fladd@b+2),w
  8626  0426  0826               	movwf	((??___fladd+0)+0+2)
  8627  0427  00AE               	movf	(___fladd@b+3),w
  8628  0428  0827               	movwf	((??___fladd+0)+0+3)
  8629  0429  00AF               	movlw	01h
  8630  042A  3001               	movwf	(??___fladd+4)+0
  8631  042B  00B0               u2685:
  8632  042C                     	rlf	(??___fladd+0)+3,w
  8633  042C  0D2F               	rrf	(??___fladd+0)+3,f
  8634  042D  0CAF               	rrf	(??___fladd+0)+2,f
  8635  042E  0CAE               	rrf	(??___fladd+0)+1,f
  8636  042F  0CAD               	rrf	(??___fladd+0)+0,f
  8637  0430  0CAC               u2680:
  8638  0431                     	decfsz	(??___fladd+4)+0,f
  8639  0431  0BB0               	goto	u2685
  8640  0432  2C2C               	movf	3+(??___fladd+0)+0,w
  8641  0433  082F               	movwf	(___fladd@b+3)
  8642  0434  00A7               	movf	2+(??___fladd+0)+0,w
  8643  0435  082E               	movwf	(___fladd@b+2)
  8644  0436  00A6               	movf	1+(??___fladd+0)+0,w
  8645  0437  082D               	movwf	(___fladd@b+1)
  8646  0438  00A5               	movf	0+(??___fladd+0)+0,w
  8647  0439  082C               	movwf	(___fladd@b)
  8648  043A  00A4               
  8649                           	line	207
  8650                           		incf	((___fladd@bexp)),w
  8651  043B  0A3A               	btfsc	status,2
  8652  043C  1903               	goto	u2691
  8653  043D  2C3F               	goto	u2690
  8654  043E  2C40               u2691:
  8655  043F                     	goto	l605
  8656  043F  2C46               u2690:
  8657  0440                     	line	208
  8658                           	
  8659                           l2191:	
  8660  0440                     	movlw	low(01h)
  8661  0440  3001               	movwf	(??___fladd+0)+0
  8662  0441  00AC               	movf	(??___fladd+0)+0,w
  8663  0442  082C               	addwf	(___fladd@bexp),f
  8664  0443  07BA               	goto	l605
  8665  0444  2C46               	line	209
  8666                           	
  8667                           l607:	
  8668  0445                     	goto	l605
  8669  0445  2C46               	line	210
  8670                           	
  8671                           l606:	
  8672  0446                     	line	211
  8673                           	
  8674                           l605:	
  8675  0446                     	line	215
  8676                           		incf	((___fladd@bexp)),w
  8677  0446  0A3A               	btfsc	status,2
  8678  0447  1903               	goto	u2701
  8679  0448  2C4A               	goto	u2700
  8680  0449  2C4B               u2701:
  8681  044A                     	goto	l2195
  8682  044A  2C51               u2700:
  8683  044B                     	
  8684                           l2193:	
  8685  044B                     	movf	((___fladd@bexp)),w
  8686  044B  083A               	btfss	status,2
  8687  044C  1D03               	goto	u2711
  8688  044D  2C4F               	goto	u2710
  8689  044E  2C50               u2711:
  8690  044F                     	goto	l2201
  8691  044F  2C61               u2710:
  8692  0450                     	goto	l2195
  8693  0450  2C51               	
  8694                           l610:	
  8695  0451                     	line	216
  8696                           	
  8697                           l2195:	
  8698  0451                     	movlw	high highword(0)
  8699  0451  3000               	movwf	(___fladd@b+3)
  8700  0452  00A7               	movlw	low highword(0)
  8701  0453  3000               	movwf	(___fladd@b+2)
  8702  0454  00A6               	movlw	high(0)
  8703  0455  3000               	movwf	(___fladd@b+1)
  8704  0456  00A5               	movlw	low(0)
  8705  0457  3000               	movwf	(___fladd@b)
  8706  0458  00A4               
  8707                           	line	218
  8708                           	
  8709                           l2197:	
  8710  0459                     	movf	((___fladd@bexp)),w
  8711  0459  083A               	btfss	status,2
  8712  045A  1D03               	goto	u2721
  8713  045B  2C5D               	goto	u2720
  8714  045C  2C5E               u2721:
  8715  045D                     	goto	l2201
  8716  045D  2C61               u2720:
  8717  045E                     	line	219
  8718                           	
  8719                           l2199:	
  8720  045E                     	clrf	(___fladd@signs)
  8721  045E  01B8               	goto	l2201
  8722  045F  2C61               	line	220
  8723                           	
  8724                           l611:	
  8725  0460                     	goto	l2201
  8726  0460  2C61               	line	221
  8727                           	
  8728                           l608:	
  8729  0461                     	line	225
  8730                           	
  8731                           l2201:	
  8732  0461                     	btfss	(___fladd@bexp),(0)&7
  8733  0461  1C3A               	goto	u2731
  8734  0462  2C64               	goto	u2730
  8735  0463  2C65               u2731:
  8736  0464                     	goto	l2205
  8737  0464  2C67               u2730:
  8738  0465                     	line	226
  8739                           	
  8740                           l2203:	
  8741  0465                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  8742  0465  17A6               	line	227
  8743                           	goto	l613
  8744  0466  2C6B               	line	229
  8745                           	
  8746                           l612:	
  8747  0467                     	line	230
  8748                           	
  8749                           l2205:	
  8750  0467                     	movlw	low(07Fh)
  8751  0467  307F               	movwf	(??___fladd+0)+0
  8752  0468  00AC               	movf	(??___fladd+0)+0,w
  8753  0469  082C               	andwf	0+(___fladd@b)+02h,f
  8754  046A  05A6               	line	231
  8755                           	
  8756                           l613:	
  8757  046B                     	line	232
  8758                           	movf	(___fladd@bexp),w
  8759  046B  083A               	movwf	(??___fladd+0)+0
  8760  046C  00AC               	clrc
  8761  046D  1003               	rrf	(??___fladd+0)+0,w
  8762  046E  0C2C               	movwf	(??___fladd+1)+0
  8763  046F  00AD               	movf	(??___fladd+1)+0,w
  8764  0470  082D               	movwf	0+(___fladd@b)+03h
  8765  0471  00A7               	line	233
  8766                           	
  8767                           l2207:	
  8768  0472                     	btfss	(___fladd@signs),(7)&7
  8769  0472  1FB8               	goto	u2741
  8770  0473  2C75               	goto	u2740
  8771  0474  2C76               u2741:
  8772  0475                     	goto	l614
  8773  0475  2C77               u2740:
  8774  0476                     	line	234
  8775                           	
  8776                           l2209:	
  8777  0476                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  8778  0476  17A7               	line	235
  8779                           	
  8780                           l614:	
  8781  0477                     	line	236
  8782                           	line	237
  8783                           	
  8784                           l584:	
  8785  0477                     	return
  8786  0477  0008               	opt stack 0
  8787                           GLOBAL	__end_of___fladd
  8788                           	__end_of___fladd:
  8789  0478                     	signat	___fladd,8316
  8790                           	global	_I2C_Master_Write
  8791                           
  8792 ;; *************** function _I2C_Master_Write *****************
  8793 ;; Defined at:
  8794 ;;		line 65 in file "I2C.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  d               2    0[COMMON] unsigned int 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8808 ;;      Params:         2       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0
  8811 ;;      Totals:         2       0       0       0       0
  8812 ;;Total ram usage:        2 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    1
  8815 ;; This function calls:
  8816 ;;		_I2C_Master_Wait
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8822                           	file	"I2C.c"
  8823                           	line	65
  8824                           global __ptext22
  8825                           __ptext22:	;psect for function _I2C_Master_Write
  8826  087D                     psect	text22
  8827                           	file	"I2C.c"
  8828                           	line	65
  8829                           	global	__size_of_I2C_Master_Write
  8830                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  8831  000A                     	
  8832                           _I2C_Master_Write:	
  8833  087D                     ;incstack = 0
  8834                           	opt	stack 6
  8835                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8836                           	line	67
  8837                           	
  8838                           l1929:	
  8839  087D                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  8840                           	fcall	_I2C_Master_Wait
  8841  087D  120A  158A  2087  120A  158A  	line	68
  8842                           	
  8843                           l1931:	
  8844  0882                     ;I2C.c: 68:     SSPBUF = d;
  8845                           	movf	(I2C_Master_Write@d),w
  8846  0882  0870               	bcf	status, 5	;RP0=0, select bank0
  8847  0883  1283               	bcf	status, 6	;RP1=0, select bank0
  8848  0884  1303               	movwf	(19)	;volatile
  8849  0885  0093               	line	69
  8850                           	
  8851                           l110:	
  8852  0886                     	return
  8853  0886  0008               	opt stack 0
  8854                           GLOBAL	__end_of_I2C_Master_Write
  8855                           	__end_of_I2C_Master_Write:
  8856  0887                     	signat	_I2C_Master_Write,4217
  8857                           	global	_I2C_Master_Stop
  8858                           
  8859 ;; *************** function _I2C_Master_Stop *****************
  8860 ;; Defined at:
  8861 ;;		line 55 in file "I2C.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0, pclath, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8875 ;;      Params:         0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0
  8877 ;;      Temps:          0       0       0       0       0
  8878 ;;      Totals:         0       0       0       0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    1
  8882 ;; This function calls:
  8883 ;;		_I2C_Master_Wait
  8884 ;; This function is called by:
  8885 ;;		_main
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8889                           	line	55
  8890                           global __ptext23
  8891                           __ptext23:	;psect for function _I2C_Master_Stop
  8892  0874                     psect	text23
  8893                           	file	"I2C.c"
  8894                           	line	55
  8895                           	global	__size_of_I2C_Master_Stop
  8896                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  8897  0009                     	
  8898                           _I2C_Master_Stop:	
  8899  0874                     ;incstack = 0
  8900                           	opt	stack 6
  8901                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8902                           	line	57
  8903                           	
  8904                           l1949:	
  8905  0874                     ;I2C.c: 57:     I2C_Master_Wait();
  8906                           	fcall	_I2C_Master_Wait
  8907  0874  120A  158A  2087  120A  158A  	line	58
  8908                           	
  8909                           l1951:	
  8910  0879                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8911                           	bsf	status, 5	;RP0=1, select bank1
  8912  0879  1683               	bcf	status, 6	;RP1=0, select bank1
  8913  087A  1303               	bsf	(145)^080h,2	;volatile
  8914  087B  1511               	line	59
  8915                           	
  8916                           l107:	
  8917  087C                     	return
  8918  087C  0008               	opt stack 0
  8919                           GLOBAL	__end_of_I2C_Master_Stop
  8920                           	__end_of_I2C_Master_Stop:
  8921  087D                     	signat	_I2C_Master_Stop,89
  8922                           	global	_I2C_Master_Start
  8923                           
  8924 ;; *************** function _I2C_Master_Start *****************
  8925 ;; Defined at:
  8926 ;;		line 39 in file "I2C.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8940 ;;      Params:         0       0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0
  8943 ;;      Totals:         0       0       0       0       0
  8944 ;;Total ram usage:        0 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    1
  8947 ;; This function calls:
  8948 ;;		_I2C_Master_Wait
  8949 ;; This function is called by:
  8950 ;;		_main
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8954                           	line	39
  8955                           global __ptext24
  8956                           __ptext24:	;psect for function _I2C_Master_Start
  8957  086B                     psect	text24
  8958                           	file	"I2C.c"
  8959                           	line	39
  8960                           	global	__size_of_I2C_Master_Start
  8961                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  8962  0009                     	
  8963                           _I2C_Master_Start:	
  8964  086B                     ;incstack = 0
  8965                           	opt	stack 6
  8966                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8967                           	line	41
  8968                           	
  8969                           l1925:	
  8970  086B                     ;I2C.c: 41:     I2C_Master_Wait();
  8971                           	fcall	_I2C_Master_Wait
  8972  086B  120A  158A  2087  120A  158A  	line	42
  8973                           	
  8974                           l1927:	
  8975  0870                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8976                           	bsf	status, 5	;RP0=1, select bank1
  8977  0870  1683               	bcf	status, 6	;RP1=0, select bank1
  8978  0871  1303               	bsf	(145)^080h,0	;volatile
  8979  0872  1411               	line	43
  8980                           	
  8981                           l101:	
  8982  0873                     	return
  8983  0873  0008               	opt stack 0
  8984                           GLOBAL	__end_of_I2C_Master_Start
  8985                           	__end_of_I2C_Master_Start:
  8986  0874                     	signat	_I2C_Master_Start,89
  8987                           	global	_I2C_Master_Read
  8988                           
  8989 ;; *************** function _I2C_Master_Read *****************
  8990 ;; Defined at:
  8991 ;;		line 74 in file "I2C.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  a               2    0[COMMON] unsigned short 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  temp            2    4[COMMON] unsigned short 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  2    0[COMMON] unsigned short 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0, pclath, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9005 ;;      Params:         2       0       0       0       0
  9006 ;;      Locals:         2       0       0       0       0
  9007 ;;      Temps:          2       0       0       0       0
  9008 ;;      Totals:         6       0       0       0       0
  9009 ;;Total ram usage:        6 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    1
  9012 ;; This function calls:
  9013 ;;		_I2C_Master_Wait
  9014 ;; This function is called by:
  9015 ;;		_main
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9019                           	line	74
  9020                           global __ptext25
  9021                           __ptext25:	;psect for function _I2C_Master_Read
  9022  0009                     psect	text25
  9023                           	file	"I2C.c"
  9024                           	line	74
  9025                           	global	__size_of_I2C_Master_Read
  9026                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  9027  002F                     	
  9028                           _I2C_Master_Read:	
  9029  0009                     ;incstack = 0
  9030                           	opt	stack 6
  9031                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9032                           	line	77
  9033                           	
  9034                           l1933:	
  9035  0009                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  9036                           	fcall	_I2C_Master_Wait
  9037  0009  120A  158A  2087  120A  118A  	line	78
  9038                           	
  9039                           l1935:	
  9040  000E                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  9041                           	bsf	status, 5	;RP0=1, select bank1
  9042  000E  1683               	bcf	status, 6	;RP1=0, select bank1
  9043  000F  1303               	bsf	(145)^080h,3	;volatile
  9044  0010  1591               	line	79
  9045                           ;I2C.c: 79:     I2C_Master_Wait();
  9046                           	fcall	_I2C_Master_Wait
  9047  0011  120A  158A  2087  120A  118A  	line	80
  9048                           	
  9049                           l1937:	
  9050  0016                     ;I2C.c: 80:     temp = SSPBUF;
  9051                           	bcf	status, 5	;RP0=0, select bank0
  9052  0016  1283               	bcf	status, 6	;RP1=0, select bank0
  9053  0017  1303               	movf	(19),w	;volatile
  9054  0018  0813               	movwf	(??_I2C_Master_Read+0)+0
  9055  0019  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  9056  001A  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  9057  001B  0872               	movwf	(I2C_Master_Read@temp)
  9058  001C  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  9059  001D  0873               	movwf	(I2C_Master_Read@temp+1)
  9060  001E  00F5               	line	81
  9061                           	
  9062                           l1939:	
  9063  001F                     ;I2C.c: 81:     I2C_Master_Wait();
  9064                           	fcall	_I2C_Master_Wait
  9065  001F  120A  158A  2087  120A  118A  	line	82
  9066                           	
  9067                           l1941:	
  9068  0024                     ;I2C.c: 82:     if(a == 1){
  9069                           		decf	((I2C_Master_Read@a)),w
  9070  0024  0370               iorwf	((I2C_Master_Read@a+1)),w
  9071  0025  0471               	btfss	status,2
  9072  0026  1D03               	goto	u2161
  9073  0027  2829               	goto	u2160
  9074  0028  282A               u2161:
  9075  0029                     	goto	l113
  9076  0029  282E               u2160:
  9077  002A                     	line	83
  9078                           	
  9079                           l1943:	
  9080  002A                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  9081                           	bsf	status, 5	;RP0=1, select bank1
  9082  002A  1683               	bcf	status, 6	;RP1=0, select bank1
  9083  002B  1303               	bcf	(145)^080h,5	;volatile
  9084  002C  1291               	line	84
  9085                           ;I2C.c: 84:     }else{
  9086                           	goto	l114
  9087  002D  2831               	
  9088                           l113:	
  9089  002E                     	line	85
  9090                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  9091                           	bsf	status, 5	;RP0=1, select bank1
  9092  002E  1683               	bcf	status, 6	;RP1=0, select bank1
  9093  002F  1303               	bsf	(145)^080h,5	;volatile
  9094  0030  1691               	line	86
  9095                           ;I2C.c: 86:     }
  9096                           	
  9097                           l114:	
  9098  0031                     	line	87
  9099                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  9100                           	bsf	(145)^080h,4	;volatile
  9101  0031  1611               	line	88
  9102                           	
  9103                           l1945:	
  9104  0032                     ;I2C.c: 88:     return temp;
  9105                           	movf	(I2C_Master_Read@temp+1),w
  9106  0032  0875               	movwf	(?_I2C_Master_Read+1)
  9107  0033  00F1               	movf	(I2C_Master_Read@temp),w
  9108  0034  0874               	movwf	(?_I2C_Master_Read)
  9109  0035  00F0               	goto	l115
  9110  0036  2837               	
  9111                           l1947:	
  9112  0037                     	line	89
  9113                           	
  9114                           l115:	
  9115  0037                     	return
  9116  0037  0008               	opt stack 0
  9117                           GLOBAL	__end_of_I2C_Master_Read
  9118                           	__end_of_I2C_Master_Read:
  9119  0038                     	signat	_I2C_Master_Read,4218
  9120                           	global	_I2C_Master_Wait
  9121                           
  9122 ;; *************** function _I2C_Master_Wait *****************
  9123 ;; Defined at:
  9124 ;;		line 32 in file "I2C.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9138 ;;      Params:         0       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0
  9140 ;;      Temps:          0       0       0       0       0
  9141 ;;      Totals:         0       0       0       0       0
  9142 ;;Total ram usage:        0 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; This function calls:
  9145 ;;		Nothing
  9146 ;; This function is called by:
  9147 ;;		_I2C_Master_Start
  9148 ;;		_I2C_Master_Stop
  9149 ;;		_I2C_Master_Write
  9150 ;;		_I2C_Master_Read
  9151 ;;		_I2C_Master_RepeatedStart
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9155                           	line	32
  9156                           global __ptext26
  9157                           __ptext26:	;psect for function _I2C_Master_Wait
  9158  0887                     psect	text26
  9159                           	file	"I2C.c"
  9160                           	line	32
  9161                           	global	__size_of_I2C_Master_Wait
  9162                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  9163  000F                     	
  9164                           _I2C_Master_Wait:	
  9165  0887                     ;incstack = 0
  9166                           	opt	stack 6
  9167                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9168                           	line	34
  9169                           	
  9170                           l1887:	
  9171  0887                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9172                           	goto	l95
  9173  0887  2888               	
  9174                           l96:	
  9175  0888                     	
  9176                           l95:	
  9177  0888                     	bsf	status, 5	;RP0=1, select bank1
  9178  0888  1683               	bcf	status, 6	;RP1=0, select bank1
  9179  0889  1303               	btfsc	(148)^080h,(2)&7	;volatile
  9180  088A  1914               	goto	u2111
  9181  088B  288D               	goto	u2110
  9182  088C  288E               u2111:
  9183  088D                     	goto	l95
  9184  088D  2888               u2110:
  9185  088E                     	
  9186                           l1889:	
  9187  088E                     	movf	(145)^080h,w	;volatile
  9188  088E  0811               	andlw	01Fh
  9189  088F  391F               	btfss	status,2
  9190  0890  1D03               	goto	u2121
  9191  0891  2893               	goto	u2120
  9192  0892  2894               u2121:
  9193  0893                     	goto	l95
  9194  0893  2888               u2120:
  9195  0894                     	goto	l98
  9196  0894  2895               	
  9197                           l97:	
  9198  0895                     	line	35
  9199                           	
  9200                           l98:	
  9201  0895                     	return
  9202  0895  0008               	opt stack 0
  9203                           GLOBAL	__end_of_I2C_Master_Wait
  9204                           	__end_of_I2C_Master_Wait:
  9205  0896                     	signat	_I2C_Master_Wait,89
  9206                           global	___latbits
  9207                           ___latbits	equ	2
  9208  0002                     	global	btemp
  9209                           	btemp set 07Eh
  9210  007E                     
  9211                           	DABS	1,126,2	;btemp
  9212                           	global	wtemp0
  9213                           	wtemp0 set btemp+0
  9214  007E                     	end


Data Sizes:
    Strings     12
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      4      17
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14145
                                              0 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                         _writeFloat
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    2727
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1703
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1568
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _writeStrLCD                                          7     5      2     416
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (3) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     696
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             54 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      11       7       21.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6F      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Feb 21 20:21:00 2020

             ___fldiv@aexp 006F               ___fldiv@bexp 006E                          pc 0002  
             ___fldiv@sign 0067                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l60 01B9                         l63 0ACD                         l57 003E  
                       l58 01B8                         l59 01B9                         l92 0964  
                       l95 0888                         l96 0888                         l97 0895  
                       l98 0895                         fsr 0004        __Umul8_16@word_mpld 0076  
                      l101 0873                        l110 0886                        l113 002E  
                      l114 0031                        l115 0037                        l107 087C  
                      l310 0B54                        l142 086A                        l311 0B55  
                      l151 08B3                        l312 0B80                        l160 0902  
                      l313 0B90                        l137 08D6                        l145 0A06  
                      l314 0B9A                        l154 099E                        l138 08DE  
                      l146 09E3                        l307 0B91                        l139 08E4  
                      l147 0A23                        l163 0B12                        l308 0B4F  
                      l148 0A23                        l260 0DF1                        l164 0B2D  
                      l309 0B41                        l157 08C7                        l261 0D14  
                      l270 0DD2                        l262 0D15                        l255 0DDD  
                      l271 0D98                        l263 0D35                        l600 03F3  
                      l272 0DDC                        l264 0D16                        l256 0CFF  
                      l601 040B                        l273 0DF0                        l265 0D4F  
                      l257 0D11                        l610 0451                        l602 0402  
                      l274 0DF6                        l266 0D59                        l258 0D18  
                      l611 0460                        l603 040A                        l267 0D81  
                      l259 0D13                        l612 0467                        l604 0409  
                      l620 0E0A                        l460 08A4                        l700 0CCA  
                      l268 0D76                        l613 046B                        l605 0446  
                      l621 0E20                        l701 0CED                        l269 0D93  
                      l614 0477                        l606 0446                        l630 0E91  
                      l622 0E1D                        l470 0C11                        l550 0A6E  
                      l607 0445                        l631 0F10                        l623 0E29  
                      l471 0C1D                        l463 0BB8                        l543 0A69  
                      l608 0461                        l640 0F31                        l632 0EC2  
                      l624 0E3A                        l704 090E                        l472 0C12  
                      l464 0C34                        l544 0A3B                        l560 09DF  
                      l641 0F46                        l633 0EE9                        l625 0E50  
                      l705 0918                        l473 0C23                        l465 0C01  
                      l545 0A2F                        l553 09DA                        l570 021A  
                      l650 0FE7                        l642 0F6B                        l634 0EDF  
                      l626 0E4D                        l706 0927                        l474 0C34  
                      l466 0BED                        l546 0A40                        l554 09B4  
                      l571 0225                        l563 01CF                        l651 0FEB  
                      l643 0F62                        l635 0F0B                        l627 0E58  
                      l707 092C                        l459 08A3                        l467 0BEE  
                      l547 0A41                        l555 09A8                        l580 02C1  
                      l572 0271                        l564 01E5                        l644 0F6A  
                      l636 0F17                        l628 0E7A                        l660 04BA  
                      l468 0C00                        l548 0A5A                        l556 09B9  
                      l581 02D8                        l573 0234                        l565 01E2  
                      l645 0F69                        l637 0F21                        l629 0FFF  
                      l661 04CF                        l469 0C24                        l549 0A68  
                      l557 09BA                        l590 03A7                        l582 032B  
                      l574 02AA                        l566 01EE                        l646 0FA3  
                      l638 0F41                        l670 071E                        l662 04CD  
                      l558 09CB                        l591 03A6                        l583 02EB  
                      l575 02D8                        l567 01FB                        l647 0FA2  
                      l639 0F22                        l671 0733                        l663 04D8  
                      l559 09D9                        l592 03B5                        l584 0477  
                      l576 02CF                        l568 0207                        l648 0FBF  
                      l680 07C3                        l672 0758                        l664 04ED  
                      l656 048B                        l593 03CC                        l585 032A  
                      l577 02AB                        l569 021D                        l649 0FDB  
                      l681 07DF                        l673 074F                        l657 04A0  
                      l594 03EE                        l586 0313                        l578 02B8  
                      l682 07D7                        l674 0757                        l666 04E3  
                      l658 049E                        l690 0C6E                        l595 03CD  
                      l587 0316                        l579 02BB                        l675 0756  
                      l667 07EC                        l659 04A9                        l691 0C83  
                      l596 03DB                        l588 031C                        l676 0790  
                      l668 072E                        l692 0C9F                        l589 03F4  
                      l597 03E2                        l677 078F                        l669 070F  
                      l693 0C84                        l685 0C4F                        l598 03E5  
                      l678 07A8                        l694 0CA6                        l686 0C57  
                      l599 03ED                        l679 07DF                        l695 0CB3  
                      l687 0C69                        l696 0CA7                        l688 0CF6  
                      l689 0C7C                        l698 0CBE                        l699 0CBE  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        _adc 00AB                        fsr0 0004  
                      indf 0000               ___flmul@aexp 004E               ___flmul@bexp 004F  
             ___flmul@sign 0049               ___flmul@temp 0054               ___flmul@prod 0050  
             __CFG_LVP$OFF 0000               ___fltol@exp1 007A                       l2001 0BEC  
                     l2011 0C12                       l2003 0BEE                       l2101 02AF  
                     l2021 01C9                       l2013 0C24                       l2005 0C01  
                     l2111 02CA                       l2103 02B8                       l2031 01E2  
                     l2023 01CD                       l2015 0C29                       l2007 0C07  
                     l2201 0461                       l2121 02EB                       l2105 02BB  
                     l2113 02CF                       l2041 01F9                       l2033 01E3  
                     l2025 01CF                       l2017 01BC                       l2009 0C10  
                     l2203 0465                       l2131 0316                       l2123 0302  
                     l2115 02DC                       l2107 02BF                       l2051 020C  
                     l2043 01FB                       l2027 01D4                       l2035 01E5  
                     l2019 01C3                       l2211 0DF7                       l2205 0467  
                     l2141 0341                       l2133 031A                       l2125 0306  
                     l2117 02E1                       l2109 02C1                       l2061 022B  
                     l2053 0211                       l2045 0201                       l2037 01EE  
                     l2029 01D9                       l2301 0F2B                       l2221 0E0F  
                     l2213 0DFE                       l2207 0472                       l2151 03BD  
                     l2143 0390                       l2135 031C                       l2127 030A  
                     l2119 02EA                       l2071 0240                       l2063 022F  
                     l2055 021A                       l2047 0205                       l2039 01F3  
                     l2311 0F46                       l2303 0F2F                       l2231 0E29  
                     l2223 0E14                       l2215 0E04                       l2209 0476  
                     l2161 03DA                       l2153 03C2                       l2145 0392  
                     l2137 0325                       l2129 0313                       l2081 0254  
                     l2073 0244                       l2065 0234                       l2057 021B  
                     l2049 0207                       l2321 0F6B                       l2313 0F47  
                     l2305 0F31                       l2241 0E3F                       l2233 0E2E  
                     l2225 0E1D                       l2217 0E08                       l2401 050A  
                     l2163 03DF                       l2155 03CB                       l2171 03EE  
                     l2147 0397                       l2139 032B                       l2091 0268  
                     l2083 0258                       l2075 0248                       l2067 0238  
                     l2059 021D                       l2323 0F70                       l2331 0FA3  
                     l2315 0F4B                       l2307 0F3A                       l2251 0E60  
                     l2243 0E44                       l2235 0E34                       l2227 0E1E  
                     l2219 0E0A                       l2411 05A7                       l2403 0527  
                     l2181 0406                       l2165 03E2                       l2157 03CD  
                     l2149 03A7                       l2173 03F4                       l2093 026C  
                     l2085 025C                       l2077 024C                       l2069 023C  
                     l2341 0FDA                       l2333 0FB0                       l2325 0F7E  
                     l2317 0F5F                       l2309 0F41                       l2261 0E7F  
                     l2253 0E6C                       l2245 0E4D                       l2237 0E38  
                     l2229 0E20                       l2421 060A                       l2413 05B0  
                     l2405 0543                       l2501 0C5F                       l1701 0A2F  
                     l2191 0440                       l2183 040B                       l2175 03F5  
                     l2167 03E5                       l2159 03D6                       l2087 0260  
                     l2079 0250                       l2095 0271                       l2351 0FFF  
                     l2343 0FE1                       l2335 0FBF                       l2327 0F82  
                     l2319 0F66                       l2271 0EB8                       l2263 0E90  
                     l2255 0E70                       l2247 0E4E                       l2239 0E3A  
                     l2431 06AA                       l2423 0623                       l2415 05C0  
                     l2407 056F                       l2511 0C84                       l2503 0C68  
                     l1711 0A58                       l1703 0A36                       l2193 044B  
                     l2185 0410                       l2177 03F9                       l2169 03EA  
                     l2097 0272                       l2089 0264                       l2345 0FE5  
                     l2337 0FCE                       l2329 0F9B                       l2281 0EDD  
                     l2273 0EC0                       l2265 0E91                       l2257 0E79  
                     l2249 0E50                       l2441 0718                       l2433 06D0  
                     l2425 0640                       l2417 05DD                       l2409 058B  
                     l2361 048B                       l2353 0478                       l2521 0CB7  
                     l2513 0C88                       l2505 0C69                       l1713 0A5A  
                     l1705 0A3B                       l1721 099F                       l1801 0D93  
                     l2195 0451                       l2187 041E                       l2179 03FF  
                     l2099 028E                       l2347 0FE7                       l2339 0FD2  
                     l2291 0F0B                       l2283 0EDF                       l2275 0EC2  
                     l2267 0EA8                       l2259 0E7A                       l2451 0733  
                     l2443 071C                       l2435 06F8                       l2427 066D  
                     l2419 05ED                       l2371 04A9                       l2363 0490  
                     l2355 047F                       l2531 0CEB                       l2523 0CC2  
                     l2515 0C96                       l2507 0C6E                       l1715 0A61  
                     l1707 0A41                       l1731 09BA                       l1723 09A5  
                     l1803 0D98                       l1811 0DDD                       l2197 0459  
                     l2189 0422                       l2349 0FF6                       l2277 0EC7  
                     l2285 0EE9                       l2293 0F10                       l2269 0EB0  
                     l1901 0927                       l2461 0758                       l2453 0734  
                     l2445 071E                       l2437 0701                       l2429 067D  
                     l2381 04BF                       l2373 04AE                       l2365 0495  
                     l2357 0485                       l2533 0CED                       l2525 0CCC  
                     l2517 0CA7                       l2509 0C7C                       l1821 0B2E  
                     l1709 0A52                       l1717 0A69                       l1741 09DF  
                     l1733 09C4                       l1725 09A8                       l1805 0DC6  
                     l1813 0DF1                       l2541 0043                       l2199 045E  
                     l2295 0F17                       l2287 0EFB                       l2279 0ED9  
                     l1903 092C                       l2463 075D                       l2471 0790  
                     l2455 0738                       l2447 0727                       l2439 070F  
                     l2391 04DD                       l2383 04C4                       l2375 04B4  
                     l2367 049E                       l2359 0489                       l2535 0CF6  
                     l2527 0CE2                       l2519 0CB3                       l1831 0B5E  
                     l1823 0B3E                       l1751 08B5                       l1743 09E0  
                     l1911 0A8D                       l1719 0A6E                       l1735 09CB  
                     l1727 09AF                       l1815 0DF6                       l1807 0DCD  
                     l2551 006E                       l2543 004C                       l2297 0F1F  
                     l2289 0EFC                       l2481 07C3                       l2473 079D  
                     l2465 076B                       l2457 074C                       l2449 072E  
                     l2393 04E3                       l2385 04CD                       l2377 04B8  
                     l2369 04A0                       l2529 0CE7                       l1833 0B70  
                     l1825 0B41                       l1841 0B91                       l1753 08B8  
                     l1745 09E3                       l1921 0AB8                       l1913 0A92  
                     l1905 0A6F                       l1737 09D2                       l1729 09B4  
                     l1809 0DD2                       l1761 0CFF                       l2561 00F1  
                     l2553 0077                       l2545 005A                       l2537 0038  
                     l1931 0882                       l2299 0F22                       l2491 07EC  
                     l2483 07D1                       l2475 07A8                       l2467 076F  
                     l2459 0753                       l2395 04EC                       l2387 04CF  
                     l2379 04BA                       l1843 0B9A                       l1835 0B7E  
                     l1827 0B4F                       l1755 08BA                       l1851 08DE  
                     l1691 08AB                       l1747 09FF                       l1923 0AC4  
                     l1915 0A9A                       l1907 0A7B                       l1739 09DA  
                     l1771 0D18                       l1763 0D05                       l2563 0104  
                     l2555 0085                       l2547 005F                       l2539 003E  
                     l1941 0024                       l1933 0009                       l1925 086B  
                     l2485 07D5                       l2477 07B7                       l2469 0788  
                     l2397 04ED                       l2389 04D8                       l2493 0C36  
                     l1837 0B80                       l1829 0B55                       l1861 0961  
                     l1757 08C4                       l1845 08C9                       l1693 08B0  
                     l1749 0A06                       l1917 0AA3                       l1909 0A88  
                     l1781 0D49                       l1773 0D35                       l1765 0D0C  
                     l1853 08E8                       l2565 0180                       l2557 008A  
                     l2549 0069                       l1943 002A                       l1935 000E  
                     l1927 0870                       l1951 0879                       l2487 07D7  
                     l2479 07C1                       l2399 04FD                       l2495 0C3B  
                     l1839 0B89                       l1863 0962                       l1855 092D  
                     l1871 0974                       l1847 08CE                       l1687 08A6  
                     l1919 0AAF                       l1695 0A24                       l1791 0D75  
                     l1783 0D4F                       l1775 0D3D                       l1767 0D11  
                     l1759 0CFA                       l2567 01A3                       l2559 0094  
                     l1945 0032                       l1937 0016                       l1929 087D  
                     l2489 07E3                       l2497 0C3F                       l1865 0963  
                     l1857 0931                       l1881 0992                       l1873 097A  
                     l1849 08D6                       l1689 08A9                       l1697 0A26  
                     l1793 0D76                       l1785 0D51                       l1777 0D41  
                     l1769 0D17                       l1961 0AF6                       l1953 0AD1  
                     l2569 01AF                       l1947 0037                       l1939 001F  
                     l1891 0904                       l2499 0C4F                       l1859 0934  
                     l1883 0998                       l1875 0980                       l1867 0965  
                     l1699 0A2C                       l1787 0D58                       l1795 0D81  
                     l1779 0D45                       l2595 0D2A                       l1971 0B27  
                     l1963 0B03                       l1955 0ADB                       l1949 0874  
                     l1893 0906                       l1973 0896                       l1981 0B9B  
                     l1885 0864                       l1877 0986                       l1869 096E  
                     l1797 0D87                       l1789 0D59                       l1965 0B0B  
                     l1957 0AE3                       l1887 0887                       l1895 090E  
                     l1975 08A0                       l1991 0BCE                       l1983 0BAE  
                     l1879 098C                       l1799 0D8E                       l1967 0B12  
                     l1959 0AF0                       l1889 088E                       l1897 0912  
                     l1977 08A3                       l1993 0BD6                       l1985 0BB7  
                     l1969 0B1A                       l1899 0921                       l1979 08A4  
                     l1995 0BD8                       l1987 0BB8                       l1997 0BDC  
                     l1989 0BCD                       l1999 0BE3                       STR_1 081D  
                     STR_2 0820                       STR_3 0823                       STR_4 081A  
                     u2000 0DDB                       u2001 0DDA                       u2010 0DEF  
                     u2011 0DEE                       u2020 0B3E                       u2100 0944  
                     u2021 0B3D                       u2110 088E                       u2111 088D  
                     u2120 0894                       u3000 0F91                       u2200 0BC6  
                     u2040 0B53                       u2121 0893                       u2041 0B52  
                     u2105 093F                       u3010 0FB0                       u2130 0912  
                     u2210 0BDC                       u3011 0FAF                       u2131 0911  
                     u2211 0BDB                       u2035 0B43                       u2300 01D4  
                     u3020 0FCE                       u3100 04DD                       u2220 0BE3  
                     u2060 0B70                       u2301 01D3                       u3021 0FCD  
                     u3005 0F8C                       u3101 04DC                       u2221 0BE2  
                     u2205 0BC1                       u2061 0B6F                       u2310 01D9  
                     u3030 0FE5                       u2150 0926                       u3110 04E2  
                     u2311 01D8                       u3031 0FE4                       u3015 0FAC  
                     u2151 0925                       u3111 04E1                       u2055 0B57  
                     u2160 002A                       u2400 029A                       u2320 01F9  
                     u3040 0489                       u2240 0BFF                       u2080 0B8F  
                     u2161 0029                       u2321 01F8                       u3025 0FCA  
                     u2145 0919                       u3201 0632                       u3121 0535  
                     u3041 0488                       u2241 0BFE                       u2081 0B8E  
                     u2065 0B6C                       u2410 02AF                       u2330 0205  
                     u3202 0639                       u3122 053C                       u3050 0490  
                     u2250 0C07                       u2090 08CE                       u2170 0B0B  
                     u2411 02AE                       u2331 0204                       u3211 065F  
                     u3203 0640                       u3131 0551                       u3123 0543  
                     u3051 048F                       u2251 0C06                       u2235 0BEF  
                     u2075 0B81                       u2091 08CD                       u2171 0B0A  
                     u2500 031A                       u2420 02BF                       u2340 020C  
                     u3212 0666                       u3132 0558                       u3060 0495  
                     u2180 08A0                       u2501 0319                       u2421 02BE  
                     u2341 020B                       u3221 068C                       u3213 066D  
                     u3141 057D                       u3133 055F                       u3061 0494  
                     u2181 089F                       u2350 0211                       u3310 0732  
                     u3230 06B6                       u3222 0693                       u3142 0584  
                     u3070 04B8                       u2270 0C22                       u2190 0BAE  
                     u2351 0210                       u3311 0731                       u3223 069A  
                     u3151 0599                       u3143 058B                       u3071 04B7  
                     u2271 0C21                       u2191 0BAD                       u2600 03DF  
                     u2520 0341                       u2440 02D7                       u2360 022B  
                     u3400 07D5                       u3320 0738                       u3152 05A0  
                     u3080 04BF                       u2280 0C29                       u1800 0A3F  
                     u2601 03DE                       u2521 0340                       u2441 02D6  
                     u2361 022A                       u3401 07D4                       u3321 0737  
                     u3305 0720                       u3241 06C2                       u3153 05A7  
                     u3081 04BE                       u2281 0C28                       u2265 0C14  
                     u1801 0A3E                       u2610 03EA                       u2530 0367  
                     u2450 02DC                       u2370 022F                       u2290 01CD  
                     u3330 074C                       u3250 06DE                       u3242 06C9  
                     u3090 04C4                       u3410 0C3B                       u2611 03E9  
                     u2531 0368                       u2523 033D                       u2515 031E  
                     u2451 02DB                       u2435 02C3                       u2371 022E  
                     u2291 01CC                       u3331 074B                       u3243 06D0  
                     u3235 06B1                       u3171 05CF                       u3091 04C3  
                     u3411 0C3A                       u2700 044B                       u2620 03F2  
                     u2540 0379                       u2532 036D                       u2460 02E1  
                     u2380 028E                       u3340 0753                       u3172 05D6  
                     u3500 0CBD                       u3420 0C3F                       u1820 0A52  
                     u1900 09D8                       u2701 044A                       u2621 03F1  
                     u2541 037A                       u2533 036E                       u2461 02E0  
                     u2381 028D                       u3341 0752                       u3261 06EA  
                     u3181 05FC                       u3173 05DD                       u3165 05A9  
                     u3501 0CBC                       u3421 0C3E                       u1821 0A51  
                     u1901 09D7                       u2710 0450                       u2630 03F9  
                     u2550 0397                       u2542 037F                       u2390 0299  
                     u3350 075D                       u3262 06F1                       u3182 0603  
                     u3510 0CC2                       u3430 0C5F                       u1910 09ED  
                     u2711 044F                       u2631 03F8                       u2551 0396  
                     u2543 0380                       u2471 02F4                       u2391 0297  
                     u3351 075C                       u3263 06F8                       u3255 06D9  
                     u3183 060A                       u3511 0CC1                       u3431 0C5E  
                     u1815 0A42                       u2720 045E                       u2640 03FF  
                     u2560 03BD                       u2480 0306                       u2472 02FB  
                     u2800 0E44                       u3360 076F                       u3520 0CD7  
                     u1920 0A10                       u1840 0A67                       u2721 045D  
                     u2641 03FE                       u2561 03BC                       u2481 0305  
                     u2473 0302                       u2385 028A                       u2801 0E43  
                     u3361 076E                       u1841 0A66                       u1825 0A4E  
                     u2730 0465                       u2650 0406                       u2570 03C2  
                     u2490 030A                       u2810 0E60                       u3370 077E  
                     u3290 071C                       u3530 0CE7                       u3450 0C82  
                     u1930 0A22                       u1850 09A5                       u2731 0464  
                     u2651 0405                       u2571 03C1                       u2491 0309  
                     u2811 0E5F                       u3291 071B                       u3275 06FA  
                     u3195 060C                       u3531 0CE6                       u3451 0C81  
                     u1931 0A21                       u1835 0A5B                       u1851 09A4  
                     u2740 0476                       u2660 0410                       u2900 0F1F  
                     u2820 0E7F                       u3380 079D                       u3540 0CEB  
                     u1780 0A2C                       u1940 0D05                       u2741 0475  
                     u2661 040F                       u2901 0F1E                       u2821 0E7E  
                     u3381 079C                       u3285 0711                       u3541 0CEA  
                     u3525 0CD2                       u3445 0C73                       u1781 0A2B  
                     u1941 0D04                       u2670 0422                       u2590 03DA  
                     u2830 0EC7                       u2750 0E08                       u3390 07B7  
                     u3470 0CA5                       u1870 09B8                       u1950 0D45  
                     u2671 0421                       u2591 03D9                       u2831 0EC6  
                     u2751 0E07                       u3391 07B6                       u3375 0779  
                     u3471 0CA4                       u1871 09B7                       u1951 0D44  
                     u2680 0431                       u2920 0F2F                       u2760 0E0F  
                     u1880 09C4                       u1960 0D57                       u2585 03CF  
                     u2921 0F2E                       u2761 0E0E                       u3385 0799  
                     u3465 0C97                       u1881 09C3                       u1865 09A9  
                     u1961 0D56                       u2690 0440                       u2770 0E14  
                     u3490 0CB7                       u1970 0D74                       u2691 043F  
                     u2915 0F24                       u2771 0E13                       u3395 07B3  
                     u3491 0CB6                       u1795 0A30                       u1971 0D73  
                     _PEIE 005E                       u2940 0F45                       u2860 0EDD  
                     u2780 0E38                       u1980 0D80                       u2685 042C  
                     u2941 0F44                       u2861 0EDC                       u2845 0EC9  
                     u2781 0E37                       u3485 0CAB                       u1885 09C0  
                     u1981 0D7F                       u3557 0065                       u2950 0F4B  
                     u2790 0E3F                       u1990 0D87                       u2951 0F4A  
                     u2935 0F33                       u2855 0ED2                       u2791 0E3E  
                     u1895 09CC                       u1991 0D86                       u1975 0D70  
                     u3567 0090                       u2960 0F5F                       u2880 0EFB  
                     u2961 0F5E                       u2881 0EFA                       u3577 08AE  
                     u2970 0F66                       u2890 0F16                       u2971 0F65  
                     u2891 0F15                       u2875 0EE1                       u3587 0969  
                     u2980 0F70                       u2981 0F6F                       u2885 0EF7  
                     u3597 08BF                       u2990 0F82                       u2991 0F81  
             __CFG_WRT$OFF 0000                       _dec1 00A9          writeStrLCD@string 0072  
                     _main 0038                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000            ___fldiv@new_exp 0068           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
              _writeIntLCD 08E5              ___fltol@sign1 0079            __end_of___fladd 0478  
                    ?_main 0070            __end_of___fldiv 1000            __end_of___flneg 08A5  
            __CFG_WDTE$OFF 0000            __end_of___flmul 07ED            __end_of___fltol 0C35  
                    _ANSEL 0188            __end_of___lldiv 0B9B            __end_of___lwdiv 0A6F  
          __end_of___lwmod 09E0                _writeStrLCD 09E0                      _PORTB 0006  
                    _PORTD 0008                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
          __end_of_initLCD 099F            __end_of_dpowers 081A                      _setup 0A6F  
    __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0DF7  
           __CFG_MCLRE$OFF 0000            __initialization 07ED               __end_of_main 01BC  
                   ??_main 00AD               _writeCharLCD 08A5          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 0CF7             __CFG_PWRTE$OFF 0000  
        writeIntLCD@buffer 0030          writeIntLCD@numero 0034                     _clcLCD 0864  
                   _cmdLCD 08B4                  ??___fladd 002C                  ??___fldiv 005E  
                ??___flneg 007E                  ??___flmul 0044                  ??___fltol 0074  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 007C  
                   _float1 00A0                     _cursor 00AC                  ??_initLCD 0073  
       __size_of__Umul8_16 002A                  ??_sprintf 0023               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070    __end_of__initialization 07FC  
        writeFloat@decimal 0035                 ___flneg@f1 0020                 ___fltol@f1 0070  
        writeFloat@initPos 0036          writeFloat@integer 0038             __pcstackCOMMON 0070  
            __end_of_setup 0ACE                    ??_setup 0028                 __pbssBANK1 00A0  
            ?_setCursorLCD 0073          __end_of__Umul8_16 092D                 __pmaintext 0038  
                  ?_clcLCD 0070                    ?_cmdLCD 0070               ?_writeIntLCD 0070  
             ?_writeStrLCD 0072                  ?___xxtofl 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800             ??_setCursorLCD 0074  
                  ___fladd 01BC              setCursorLCD@x 0073              setCursorLCD@y 0075  
                  ___fldiv 0DF7            __size_of_clcLCD 0007                    ___flneg 0896  
          __size_of_cmdLCD 0014                    ___flmul 0478                    ___fltol 0B9B  
                  ___lldiv 0B2E                    ___lwdiv 0A24                    ___lwmod 099F  
                  __ptext1 0ACE                    __ptext2 08E5                    __ptext3 0CF7  
                  __ptext4 099F                    __ptext5 0A24                    __ptext6 0A6F  
                  __ptext7 09E0                    __ptext8 08A5                    __ptext9 08C8  
                  _initLCD 0965                    _entero1 00AA                    _counter 00A8  
                  _dpowers 0810                 ??___xxtofl 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0CF7       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                ___fladd@grs 003B  
            ___xxtofl@sign 0078                  _TRISCbits 0087                ___fldiv@grs 006A  
              ___fldiv@rem 0063                ___flmul@grs 004A                 _writeFloat 0ACE  
           __end_of_clcLCD 086B             __end_of_cmdLCD 08C8       __end_of_setCursorLCD 08E5  
     __size_of_writeIntLCD 001E        start_initialization 07ED       __size_of_writeStrLCD 0044  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073  
                 ??_cmdLCD 0070                  __Umul8_16 0903                  ___fladd@a 0028  
                ___fladd@b 0024                  ___fldiv@a 0056                  ___fldiv@b 005A  
                ___flmul@a 0040                  ___flmul@b 003C                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00AD          __size_of___xxtofl 00C2  
    writeCharLCD@character 0071                sprintf@flag 0027                sprintf@prec 0028  
         _I2C_Master_Start 086B           _I2C_Master_Write 087D           ___lwdiv@dividend 0072  
                cmdLCD@cmd 0072                   ?___fladd 0024                   ?___fldiv 0056  
                 ?___flneg 0020                   ?___flmul 003C                   ?___fltol 0070  
                 ?___lldiv 0070                ?_writeFloat 0035                 ?__Umul8_16 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 0800  
                 ?_initLCD 0070              ?_writeCharLCD 0070           ___lwdiv@quotient 0075  
                 ?_sprintf 0020             __size_of_setup 005F      __size_of_setCursorLCD 001D  
              __stringbase 080F             ??_writeCharLCD 0070        I2C_Master_Read@temp 0074  
      __size_of_writeFloat 0060               _setCursorLCD 08C8                ??__Umul8_16 0072  
         __size_of___fladd 02BC           __size_of___fldiv 0209           __size_of___flneg 000F  
         __size_of___flmul 0375           __size_of___fltol 009A           __size_of___lldiv 006D  
         __size_of___lwdiv 004B           __size_of___lwmod 0041         __end_of__stringtab 0810  
               sprintf@val 0029            _I2C_Master_Init 092D            _I2C_Master_Read 0009  
         __size_of_initLCD 003A                   ___xxtofl 0C35            _I2C_Master_Wait 0887  
          _I2C_Master_Stop 0874            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0965                   __ptext11 0864                   __ptext20 0DF7  
                 __ptext12 08B4                   __ptext21 01BC                   __ptext13 092D  
                 __ptext22 087D                   __ptext14 0B2E                   __ptext23 0874  
                 __ptext15 0C35                   __ptext24 086B                   __ptext16 0B9B  
                 __ptext25 0009                   __ptext17 0896                   __ptext26 0887  
                 __ptext18 0478                   __ptext19 0903          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 0100              __size_of_main 0184                   _sensorF1 00A4  
            ??_writeIntLCD 002D              ??_writeStrLCD 0074   __end_of_I2C_Master_Start 0874  
 __end_of_I2C_Master_Write 0887                  sprintf@ap 0026                  sprintf@sp 002B  
         ___lwmod@dividend 007A           ___lldiv@dividend 0074       __end_of_writeCharLCD 08B4  
                stringcode 080A               ??_writeFloat 0037    __end_of_I2C_Master_Init 0965  
  __end_of_I2C_Master_Read 0038    __end_of_I2C_Master_Wait 0896    __end_of_I2C_Master_Stop 087D  
   __Umul8_16@multiplicand 0070                   sprintf@c 002C                   sprintf@f 0020  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 080A                   stringtab 0800  
      __end_of_writeIntLCD 0903                _SSPCON2bits 0091        __end_of_writeStrLCD 0A24  
            ___fladd@signs 0038         __end_of_writeFloat 0B2E               ___fladd@aexp 0039  
             ___fladd@bexp 003A       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
