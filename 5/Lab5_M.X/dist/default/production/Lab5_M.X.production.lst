

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Feb 22 10:55:07 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___fladd
   716                           	FNCALL	_main,___fldiv
   717                           	FNCALL	_main,___flmul
   718                           	FNCALL	_main,___flneg
   719                           	FNCALL	_main,___fltol
   720                           	FNCALL	_main,___xxtofl
   721                           	FNCALL	_main,_setCursorLCD
   722                           	FNCALL	_main,_setup
   723                           	FNCALL	_main,_writeCharLCD
   724                           	FNCALL	_main,_writeFloat
   725                           	FNCALL	_main,_writeIntLCD
   726                           	FNCALL	_main,_writeStrLCD
   727                           	FNCALL	_writeFloat,_setCursorLCD
   728                           	FNCALL	_writeFloat,_writeCharLCD
   729                           	FNCALL	_writeFloat,_writeIntLCD
   730                           	FNCALL	_writeIntLCD,_sprintf
   731                           	FNCALL	_writeIntLCD,_writeStrLCD
   732                           	FNCALL	_sprintf,___lwdiv
   733                           	FNCALL	_sprintf,___lwmod
   734                           	FNCALL	_setup,_I2C_Master_Init
   735                           	FNCALL	_setup,_clcLCD
   736                           	FNCALL	_setup,_initLCD
   737                           	FNCALL	_setup,_setCursorLCD
   738                           	FNCALL	_setup,_writeStrLCD
   739                           	FNCALL	_writeStrLCD,_writeCharLCD
   740                           	FNCALL	_setCursorLCD,_cmdLCD
   741                           	FNCALL	_initLCD,_cmdLCD
   742                           	FNCALL	_clcLCD,_cmdLCD
   743                           	FNCALL	_I2C_Master_Init,___lldiv
   744                           	FNCALL	___flmul,__Umul8_16
   745                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   746                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   747                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   748                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   749                           	FNROOT	_main
   750                           	global	_dpowers
   751                           psect	strings,class=STRING,delta=2,noexec
   752                           global __pstrings
   753                           __pstrings:
   754  0800                     stringtab:
   755  0800                     	global    __stringtab
   756                           __stringtab:
   757  0800                     ;	String table - string pointers are 1 byte each
   758                           	btfsc	(btemp+1),7
   759  0800  1BFF               	ljmp	stringcode
   760  0801  280A               	bcf	status,7
   761  0802  1383               	btfsc	(btemp+1),0
   762  0803  187F               	bsf	status,7
   763  0804  1783               	movf	indf,w
   764  0805  0800               	incf fsr
   765  0806  0A84               skipnz
   766  0807  1903               incf btemp+1
   767  0808  0AFF               	return
   768  0809  0008               stringcode:stringdir:
   769  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
   770  080A  3008               movwf pclath
   771  080B  008A               movf fsr,w
   772  080C  0804               incf fsr
   773  080D  0A84               	addwf pc
   774  080E  0782               	global __stringbase
   775                           __stringbase:
   776  080F                     	retlw	0
   777  080F  3400               psect	strings
   778                           	global    __end_of__stringtab
   779                           __end_of__stringtab:
   780  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   781                           	line	358
   782                           _dpowers:
   783  0810                     	retlw	01h
   784  0810  3401               	retlw	0
   785  0811  3400               
   786                           	retlw	0Ah
   787  0812  340A               	retlw	0
   788  0813  3400               
   789                           	retlw	064h
   790  0814  3464               	retlw	0
   791  0815  3400               
   792                           	retlw	0E8h
   793  0816  34E8               	retlw	03h
   794  0817  3403               
   795                           	retlw	010h
   796  0818  3410               	retlw	027h
   797  0819  3427               
   798                           	global __end_of_dpowers
   799                           __end_of_dpowers:
   800  081A                     	global	_dpowers
   801                           	global	_float1
   802                           	global	_sensorF1
   803                           	global	_s3
   804                           	global	_counter
   805                           	global	_dec1
   806                           	global	_entero1
   807                           	global	_adc
   808                           	global	_cursor
   809                           	global	_SSPBUF
   810                           _SSPBUF	set	0x13
   811  0013                     	global	_SSPCON
   812                           _SSPCON	set	0x14
   813  0014                     	global	_PORTD
   814                           _PORTD	set	0x8
   815  0008                     	global	_PORTB
   816                           _PORTB	set	0x6
   817  0006                     	global	_RD1
   818                           _RD1	set	0x41
   819  0041                     	global	_RD0
   820                           _RD0	set	0x40
   821  0040                     	global	_SSPIF
   822                           _SSPIF	set	0x63
   823  0063                     	global	_PEIE
   824                           _PEIE	set	0x5E
   825  005E                     	global	_GIE
   826                           _GIE	set	0x5F
   827  005F                     	global	_SSPCON2bits
   828                           _SSPCON2bits	set	0x91
   829  0091                     	global	_TRISCbits
   830                           _TRISCbits	set	0x87
   831  0087                     	global	_SSPSTAT
   832                           _SSPSTAT	set	0x94
   833  0094                     	global	_SSPADD
   834                           _SSPADD	set	0x93
   835  0093                     	global	_SSPCON2
   836                           _SSPCON2	set	0x91
   837  0091                     	global	_TRISD
   838                           _TRISD	set	0x88
   839  0088                     	global	_TRISB
   840                           _TRISB	set	0x86
   841  0086                     	global	_SSPIE
   842                           _SSPIE	set	0x463
   843  0463                     	global	_TRISC4
   844                           _TRISC4	set	0x43C
   845  043C                     	global	_TRISC3
   846                           _TRISC3	set	0x43B
   847  043B                     	global	_ANSELH
   848                           _ANSELH	set	0x189
   849  0189                     	global	_ANSEL
   850                           _ANSEL	set	0x188
   851  0188                     	
   852                           STR_5:	
   853  081A                     	retlw	37	;'%'
   854  081A  3425               	retlw	100	;'d'
   855  081B  3464               	retlw	0
   856  081C  3400               psect	strings
   857                           	
   858                           STR_1:	
   859  081D                     	retlw	32	;' '
   860  081D  3420               	retlw	32	;' '
   861  081E  3420               	retlw	0
   862  081F  3400               psect	strings
   863                           	
   864                           STR_2:	
   865  0820                     	retlw	83	;'S'
   866  0820  3453               	retlw	49	;'1'
   867  0821  3431               	retlw	0
   868  0822  3400               psect	strings
   869                           	
   870                           STR_3:	
   871  0823                     	retlw	83	;'S'
   872  0823  3453               	retlw	50	;'2'
   873  0824  3432               	retlw	0
   874  0825  3400               psect	strings
   875                           	
   876                           STR_4:	
   877  0826                     	retlw	83	;'S'
   878  0826  3453               	retlw	51	;'3'
   879  0827  3433               	retlw	0
   880  0828  3400               psect	strings
   881                           ; #config settings
   882                           global __CFG_FOSC$INTRC_NOCLKOUT
   883                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   884  0000                     global __CFG_WDTE$OFF
   885                           __CFG_WDTE$OFF equ 0x0
   886  0000                     global __CFG_PWRTE$OFF
   887                           __CFG_PWRTE$OFF equ 0x0
   888  0000                     global __CFG_MCLRE$OFF
   889                           __CFG_MCLRE$OFF equ 0x0
   890  0000                     global __CFG_CP$OFF
   891                           __CFG_CP$OFF equ 0x0
   892  0000                     global __CFG_CPD$OFF
   893                           __CFG_CPD$OFF equ 0x0
   894  0000                     global __CFG_BOREN$OFF
   895                           __CFG_BOREN$OFF equ 0x0
   896  0000                     global __CFG_IESO$OFF
   897                           __CFG_IESO$OFF equ 0x0
   898  0000                     global __CFG_FCMEN$OFF
   899                           __CFG_FCMEN$OFF equ 0x0
   900  0000                     global __CFG_LVP$OFF
   901                           __CFG_LVP$OFF equ 0x0
   902  0000                     global __CFG_BOR4V$BOR40V
   903                           __CFG_BOR4V$BOR40V equ 0x0
   904  0000                     global __CFG_WRT$OFF
   905                           __CFG_WRT$OFF equ 0x0
   906  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sh98."
   907                           	line	#
   908                           psect cinit,class=CODE,delta=2
   909                           global start_initialization
   910                           start_initialization:
   911  07F3                     
   912                           global __initialization
   913                           __initialization:
   914  07F3                     psect	bssBANK1,class=BANK1,space=1,noexec
   915                           global __pbssBANK1
   916                           __pbssBANK1:
   917  00A0                     _lux:
   918  00A0                            ds      4
   919  00A0                     
   920                           _float2:
   921  00A4                            ds      4
   922  00A4                     
   923                           _sensorF2:
   924  00A8                            ds      4
   925  00A8                     
   926                           _float1:
   927  00AC                            ds      4
   928  00AC                     
   929                           _sensorF1:
   930  00B0                            ds      4
   931  00B0                     
   932                           _s3:
   933  00B4                            ds      1
   934  00B4                     
   935                           _dec2:
   936  00B5                            ds      1
   937  00B5                     
   938                           _entero2:
   939  00B6                            ds      1
   940  00B6                     
   941                           _counter:
   942  00B7                            ds      1
   943  00B7                     
   944                           _dec1:
   945  00B8                            ds      1
   946  00B8                     
   947                           _entero1:
   948  00B9                            ds      1
   949  00B9                     
   950                           _adc:
   951  00BA                            ds      1
   952  00BA                     
   953                           _cursor:
   954  00BB                            ds      1
   955  00BB                     
   956                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sh98."
   957                           	line	#
   958                           psect clrtext,class=CODE,delta=2
   959                           global clear_ram0
   960                           ;	Called with FSR containing the base address, and
   961                           ;	W with the last address+1
   962                           clear_ram0:
   963  17EF                     	clrwdt			;clear the watchdog before getting into this loop
   964  17EF  0064               clrloop0:
   965  17F0                     	clrf	indf		;clear RAM location pointed to by FSR
   966  17F0  0180               	incf	fsr,f		;increment pointer
   967  17F1  0A84               	xorwf	fsr,w		;XOR with final address
   968  17F2  0604               	btfsc	status,2	;have we reached the end yet?
   969  17F3  1903               	retlw	0		;all done for this memory range, return
   970  17F4  3400               	xorwf	fsr,w		;XOR again to restore value
   971  17F5  0604               	goto	clrloop0		;do the next byte
   972  17F6  2FF0               
   973                           ; Clear objects allocated to BANK1
   974                           psect cinit,class=CODE,delta=2,merge=1
   975                           	bcf	status, 7	;select IRP bank0
   976  07F3  1383               	movlw	low(__pbssBANK1)
   977  07F4  30A0               	movwf	fsr
   978  07F5  0084               	movlw	low((__pbssBANK1)+01Ch)
   979  07F6  30BC               	fcall	clear_ram0
   980  07F7  160A  118A  27EF  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   981                           global end_of_initialization,__end_of__initialization
   982                           
   983                           ;End of C runtime variable initialization code
   984                           
   985                           end_of_initialization:
   986  07FC                     __end_of__initialization:
   987  07FC                     clrf status
   988  07FC  0183               ljmp _main	;jump to C main() function
   989  07FD  120A  158A  2C25   psect	cstackBANK1,class=BANK1,space=1,noexec
   990                           global __pcstackBANK1
   991                           __pcstackBANK1:
   992  00BC                     ??_main:	; 1 bytes @ 0x0
   993  00BC                     	ds	4
   994  00BC                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   995                           global __pcstackCOMMON
   996                           __pcstackCOMMON:
   997  0070                     ?_setup:	; 1 bytes @ 0x0
   998  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
   999  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1000  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1001  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1002  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1003  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1004  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1005  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1006  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1007  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1008  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1009  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1010  0070                     ?_main:	; 1 bytes @ 0x0
  1011  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1012  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1013  0070                     	global	?_I2C_Master_Read
  1014                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1015  0070                     	global	?__Umul8_16
  1016                           ?__Umul8_16:	; 2 bytes @ 0x0
  1017  0070                     	global	?___lwdiv
  1018                           ?___lwdiv:	; 2 bytes @ 0x0
  1019  0070                     	global	?___lldiv
  1020                           ?___lldiv:	; 4 bytes @ 0x0
  1021  0070                     	global	?___fltol
  1022                           ?___fltol:	; 4 bytes @ 0x0
  1023  0070                     	global	?___xxtofl
  1024                           ?___xxtofl:	; 4 bytes @ 0x0
  1025  0070                     	global	__Umul8_16@multiplicand
  1026                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1027  0070                     	global	I2C_Master_Write@d
  1028                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1029  0070                     	global	I2C_Master_Read@a
  1030                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1031  0070                     	global	___lwdiv@divisor
  1032                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1033  0070                     	global	___lldiv@divisor
  1034                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1035  0070                     	global	___fltol@f1
  1036                           ___fltol@f1:	; 4 bytes @ 0x0
  1037  0070                     	global	___xxtofl@val
  1038                           ___xxtofl@val:	; 4 bytes @ 0x0
  1039  0070                     	ds	1
  1040  0070                     	global	writeCharLCD@character
  1041                           writeCharLCD@character:	; 1 bytes @ 0x1
  1042  0071                     	ds	1
  1043  0071                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1044  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1045  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1046  0072                     ??__Umul8_16:	; 1 bytes @ 0x2
  1047  0072                     	global	cmdLCD@cmd
  1048                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1049  0072                     	global	writeStrLCD@string
  1050                           writeStrLCD@string:	; 2 bytes @ 0x2
  1051  0072                     	global	___lwdiv@dividend
  1052                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1053  0072                     	ds	1
  1054  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1055  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1056  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1057  0073                     	global	setCursorLCD@x
  1058                           setCursorLCD@x:	; 1 bytes @ 0x3
  1059  0073                     	ds	1
  1060  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1061  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1062  0074                     ??___fltol:	; 1 bytes @ 0x4
  1063  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1064  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1065  0074                     	global	I2C_Master_Read@temp
  1066                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1067  0074                     	global	__Umul8_16@product
  1068                           __Umul8_16@product:	; 2 bytes @ 0x4
  1069  0074                     	global	___lldiv@dividend
  1070                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1071  0074                     	ds	1
  1072  0074                     	global	setCursorLCD@y
  1073                           setCursorLCD@y:	; 1 bytes @ 0x5
  1074  0075                     	global	___lwdiv@quotient
  1075                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1076  0075                     	ds	1
  1077  0075                     	global	__Umul8_16@word_mpld
  1078                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1079  0076                     	ds	1
  1080  0076                     	global	___lwdiv@counter
  1081                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1082  0077                     	global	writeStrLCD@cont
  1083                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1084  0077                     	ds	1
  1085  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1086  0078                     	global	?___lwmod
  1087                           ?___lwmod:	; 2 bytes @ 0x8
  1088  0078                     	global	___xxtofl@sign
  1089                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1090  0078                     	global	__Umul8_16@multiplier
  1091                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1092  0078                     	global	___lwmod@divisor
  1093                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1094  0078                     	ds	1
  1095  0078                     	global	___fltol@sign1
  1096                           ___fltol@sign1:	; 1 bytes @ 0x9
  1097  0079                     	global	___xxtofl@exp
  1098                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1099  0079                     	global	___lldiv@quotient
  1100                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1101  0079                     	ds	1
  1102  0079                     	global	___fltol@exp1
  1103                           ___fltol@exp1:	; 1 bytes @ 0xA
  1104  007A                     	global	___lwmod@dividend
  1105                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1106  007A                     	global	___xxtofl@arg
  1107                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1108  007A                     	ds	2
  1109  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1110  007C                     	ds	1
  1111  007C                     	global	___lldiv@counter
  1112                           ___lldiv@counter:	; 1 bytes @ 0xD
  1113  007D                     	global	___lwmod@counter
  1114                           ___lwmod@counter:	; 1 bytes @ 0xD
  1115  007D                     	ds	1
  1116  007D                     ??___flneg:	; 1 bytes @ 0xE
  1117  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1118                           global __pcstackBANK0
  1119                           __pcstackBANK0:
  1120  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1121  0020                     	global	?_sprintf
  1122                           ?_sprintf:	; 2 bytes @ 0x0
  1123  0020                     	global	?___flneg
  1124                           ?___flneg:	; 4 bytes @ 0x0
  1125  0020                     	global	sprintf@f
  1126                           sprintf@f:	; 1 bytes @ 0x0
  1127  0020                     	global	I2C_Master_Init@c
  1128                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1129  0020                     	global	___flneg@f1
  1130                           ___flneg@f1:	; 4 bytes @ 0x0
  1131  0020                     	ds	3
  1132  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1133  0023                     	ds	1
  1134  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1135  0024                     	global	?___fladd
  1136                           ?___fladd:	; 4 bytes @ 0x4
  1137  0024                     	global	___fladd@b
  1138                           ___fladd@b:	; 4 bytes @ 0x4
  1139  0024                     	ds	2
  1140  0024                     	global	sprintf@ap
  1141                           sprintf@ap:	; 1 bytes @ 0x6
  1142  0026                     	ds	1
  1143  0026                     	global	sprintf@flag
  1144                           sprintf@flag:	; 1 bytes @ 0x7
  1145  0027                     	ds	1
  1146  0027                     ??_setup:	; 1 bytes @ 0x8
  1147  0028                     	global	sprintf@prec
  1148                           sprintf@prec:	; 1 bytes @ 0x8
  1149  0028                     	global	___fladd@a
  1150                           ___fladd@a:	; 4 bytes @ 0x8
  1151  0028                     	ds	1
  1152  0028                     	global	sprintf@val
  1153                           sprintf@val:	; 2 bytes @ 0x9
  1154  0029                     	ds	2
  1155  0029                     	global	sprintf@sp
  1156                           sprintf@sp:	; 1 bytes @ 0xB
  1157  002B                     	ds	1
  1158  002B                     ??___fladd:	; 1 bytes @ 0xC
  1159  002C                     	global	sprintf@c
  1160                           sprintf@c:	; 1 bytes @ 0xC
  1161  002C                     	ds	1
  1162  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1163  002D                     	ds	3
  1164  002D                     	global	writeIntLCD@buffer
  1165                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1166  0030                     	ds	4
  1167  0030                     	global	writeIntLCD@numero
  1168                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1169  0034                     	ds	1
  1170  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1171  0035                     	global	writeFloat@decimal
  1172                           writeFloat@decimal:	; 1 bytes @ 0x15
  1173  0035                     	ds	1
  1174  0035                     	global	writeFloat@initPos
  1175                           writeFloat@initPos:	; 1 bytes @ 0x16
  1176  0036                     	ds	1
  1177  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1178  0037                     	ds	1
  1179  0037                     	global	writeFloat@integer
  1180                           writeFloat@integer:	; 1 bytes @ 0x18
  1181  0038                     	global	___fladd@signs
  1182                           ___fladd@signs:	; 1 bytes @ 0x18
  1183  0038                     	ds	1
  1184  0038                     	global	___fladd@aexp
  1185                           ___fladd@aexp:	; 1 bytes @ 0x19
  1186  0039                     	ds	1
  1187  0039                     	global	___fladd@bexp
  1188                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1189  003A                     	ds	1
  1190  003A                     	global	___fladd@grs
  1191                           ___fladd@grs:	; 1 bytes @ 0x1B
  1192  003B                     	ds	1
  1193  003B                     	global	?___flmul
  1194                           ?___flmul:	; 4 bytes @ 0x1C
  1195  003C                     	global	___flmul@b
  1196                           ___flmul@b:	; 4 bytes @ 0x1C
  1197  003C                     	ds	4
  1198  003C                     	global	___flmul@a
  1199                           ___flmul@a:	; 4 bytes @ 0x20
  1200  0040                     	ds	4
  1201  0040                     ??___flmul:	; 1 bytes @ 0x24
  1202  0044                     	ds	5
  1203  0044                     	global	___flmul@sign
  1204                           ___flmul@sign:	; 1 bytes @ 0x29
  1205  0049                     	ds	1
  1206  0049                     	global	___flmul@grs
  1207                           ___flmul@grs:	; 4 bytes @ 0x2A
  1208  004A                     	ds	4
  1209  004A                     	global	___flmul@aexp
  1210                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1211  004E                     	ds	1
  1212  004E                     	global	___flmul@bexp
  1213                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1214  004F                     	ds	1
  1215  004F                     	global	___flmul@prod
  1216                           ___flmul@prod:	; 4 bytes @ 0x30
  1217  0050                     	ds	4
  1218  0050                     	global	___flmul@temp
  1219                           ___flmul@temp:	; 2 bytes @ 0x34
  1220  0054                     	ds	2
  1221  0054                     	global	?___fldiv
  1222                           ?___fldiv:	; 4 bytes @ 0x36
  1223  0056                     	global	___fldiv@a
  1224                           ___fldiv@a:	; 4 bytes @ 0x36
  1225  0056                     	ds	4
  1226  0056                     	global	___fldiv@b
  1227                           ___fldiv@b:	; 4 bytes @ 0x3A
  1228  005A                     	ds	4
  1229  005A                     ??___fldiv:	; 1 bytes @ 0x3E
  1230  005E                     	ds	5
  1231  005E                     	global	___fldiv@rem
  1232                           ___fldiv@rem:	; 4 bytes @ 0x43
  1233  0063                     	ds	4
  1234  0063                     	global	___fldiv@sign
  1235                           ___fldiv@sign:	; 1 bytes @ 0x47
  1236  0067                     	ds	1
  1237  0067                     	global	___fldiv@new_exp
  1238                           ___fldiv@new_exp:	; 2 bytes @ 0x48
  1239  0068                     	ds	2
  1240  0068                     	global	___fldiv@grs
  1241                           ___fldiv@grs:	; 4 bytes @ 0x4A
  1242  006A                     	ds	4
  1243  006A                     	global	___fldiv@bexp
  1244                           ___fldiv@bexp:	; 1 bytes @ 0x4E
  1245  006E                     	ds	1
  1246  006E                     	global	___fldiv@aexp
  1247                           ___fldiv@aexp:	; 1 bytes @ 0x4F
  1248  006F                     	ds	1
  1249  006F                     ;!
  1250                           ;!Data Sizes:
  1251                           ;!    Strings     15
  1252                           ;!    Constant    10
  1253                           ;!    Data        0
  1254                           ;!    BSS         28
  1255                           ;!    Persistent  0
  1256                           ;!    Stack       0
  1257                           ;!
  1258                           ;!Auto Spaces:
  1259                           ;!    Space          Size  Autos    Used
  1260                           ;!    COMMON           14     14      14
  1261                           ;!    BANK0            80     80      80
  1262                           ;!    BANK1            80      4      32
  1263                           ;!    BANK3            96      0       0
  1264                           ;!    BANK2            96      0       0
  1265                           
  1266                           ;!
  1267                           ;!Pointer List with Targets:
  1268                           ;!
  1269                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1270                           ;!		 -> STR_5(CODE[3]), 
  1271                           ;!
  1272                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
  1273                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1274                           ;!
  1275                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1276                           ;!		 -> ?_sprintf(BANK0[2]), 
  1277                           ;!
  1278                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
  1279                           ;!		 -> writeIntLCD@buffer(BANK0[4]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
  1280                           ;!		 -> STR_1(CODE[3]), 
  1281                           ;!
  1282                           
  1283                           
  1284                           ;!
  1285                           ;!Critical Paths under _main in COMMON
  1286                           ;!
  1287                           ;!    _main->___xxtofl
  1288                           ;!    _sprintf->___lwmod
  1289                           ;!    ___lwmod->___lwdiv
  1290                           ;!    _writeStrLCD->_writeCharLCD
  1291                           ;!    _setCursorLCD->_cmdLCD
  1292                           ;!    _initLCD->_cmdLCD
  1293                           ;!    _clcLCD->_cmdLCD
  1294                           ;!    _I2C_Master_Init->___lldiv
  1295                           ;!    ___flneg->___xxtofl
  1296                           ;!    ___flmul->___xxtofl
  1297                           ;!    ___fldiv->___xxtofl
  1298                           ;!    ___fladd->___xxtofl
  1299                           ;!
  1300                           ;!Critical Paths under _main in BANK0
  1301                           ;!
  1302                           ;!    _main->___fldiv
  1303                           ;!    _writeFloat->_writeIntLCD
  1304                           ;!    _writeIntLCD->_sprintf
  1305                           ;!    _setup->_I2C_Master_Init
  1306                           ;!    ___flmul->___fladd
  1307                           ;!    ___fldiv->___flmul
  1308                           ;!    ___fladd->___flneg
  1309                           ;!
  1310                           ;!Critical Paths under _main in BANK1
  1311                           ;!
  1312                           ;!    None.
  1313                           ;!
  1314                           ;!Critical Paths under _main in BANK3
  1315                           ;!
  1316                           ;!    None.
  1317                           ;!
  1318                           ;!Critical Paths under _main in BANK2
  1319                           ;!
  1320                           ;!    None.
  1321                           
  1322 ;;
  1323 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1324 ;;
  1325                           
  1326                           ;!
  1327                           ;!Call Graph Tables:
  1328                           ;!
  1329                           ;! ---------------------------------------------------------------------------------
  1330                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1331                           ;! ---------------------------------------------------------------------------------
  1332                           ;! (0) _main                                                 4     4      0   15267
  1333                           ;!                                              0 BANK1      4     4      0
  1334                           ;!                    _I2C_Master_Read
  1335                           ;!                   _I2C_Master_Start
  1336                           ;!                    _I2C_Master_Stop
  1337                           ;!                   _I2C_Master_Write
  1338                           ;!                            ___fladd
  1339                           ;!                            ___fldiv
  1340                           ;!                            ___flmul
  1341                           ;!                            ___flneg
  1342                           ;!                            ___fltol
  1343                           ;!                           ___xxtofl
  1344                           ;!                       _setCursorLCD
  1345                           ;!                              _setup
  1346                           ;!                       _writeCharLCD
  1347                           ;!                         _writeFloat
  1348                           ;!                        _writeIntLCD
  1349                           ;!                        _writeStrLCD
  1350                           ;! ---------------------------------------------------------------------------------
  1351                           ;! (1) _writeFloat                                           4     2      2    2879
  1352                           ;!                                             21 BANK0      4     2      2
  1353                           ;!                       _setCursorLCD
  1354                           ;!                       _writeCharLCD
  1355                           ;!                        _writeIntLCD
  1356                           ;! ---------------------------------------------------------------------------------
  1357                           ;! (1) _writeIntLCD                                          8     8      0    1779
  1358                           ;!                                             13 BANK0      8     8      0
  1359                           ;!                            _sprintf
  1360                           ;!                        _writeStrLCD
  1361                           ;! ---------------------------------------------------------------------------------
  1362                           ;! (2) _sprintf                                             21    18      3    1211
  1363                           ;!                                              0 BANK0     13    10      3
  1364                           ;!                            ___lwdiv
  1365                           ;!                            ___lwmod
  1366                           ;! ---------------------------------------------------------------------------------
  1367                           ;! (3) ___lwmod                                              6     2      4     311
  1368                           ;!                                              8 COMMON     6     2      4
  1369                           ;!                            ___lwdiv (ARG)
  1370                           ;! ---------------------------------------------------------------------------------
  1371                           ;! (3) ___lwdiv                                              8     4      4     314
  1372                           ;!                                              0 COMMON     8     4      4
  1373                           ;! ---------------------------------------------------------------------------------
  1374                           ;! (1) _setup                                                1     1      0    1720
  1375                           ;!                                              8 BANK0      1     1      0
  1376                           ;!                    _I2C_Master_Init
  1377                           ;!                             _clcLCD
  1378                           ;!                            _initLCD
  1379                           ;!                       _setCursorLCD
  1380                           ;!                        _writeStrLCD
  1381                           ;! ---------------------------------------------------------------------------------
  1382                           ;! (1) _writeStrLCD                                          7     5      2     492
  1383                           ;!                                              2 COMMON     7     5      2
  1384                           ;!                       _writeCharLCD
  1385                           ;! ---------------------------------------------------------------------------------
  1386                           ;! (2) _writeCharLCD                                         2     2      0      22
  1387                           ;!                                              0 COMMON     2     2      0
  1388                           ;! ---------------------------------------------------------------------------------
  1389                           ;! (2) _setCursorLCD                                         3     2      1     772
  1390                           ;!                                              3 COMMON     3     2      1
  1391                           ;!                             _cmdLCD
  1392                           ;! ---------------------------------------------------------------------------------
  1393                           ;! (2) _initLCD                                              2     2      0      22
  1394                           ;!                                              3 COMMON     2     2      0
  1395                           ;!                             _cmdLCD
  1396                           ;! ---------------------------------------------------------------------------------
  1397                           ;! (2) _clcLCD                                               0     0      0      22
  1398                           ;!                             _cmdLCD
  1399                           ;! ---------------------------------------------------------------------------------
  1400                           ;! (3) _cmdLCD                                               3     3      0      22
  1401                           ;!                                              0 COMMON     3     3      0
  1402                           ;! ---------------------------------------------------------------------------------
  1403                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1404                           ;!                                              0 BANK0      8     4      4
  1405                           ;!                            ___lldiv
  1406                           ;! ---------------------------------------------------------------------------------
  1407                           ;! (3) ___lldiv                                             14     6      8     314
  1408                           ;!                                              0 COMMON    14     6      8
  1409                           ;! ---------------------------------------------------------------------------------
  1410                           ;! (1) ___xxtofl                                            14    10      4     474
  1411                           ;!                                              0 COMMON    14    10      4
  1412                           ;! ---------------------------------------------------------------------------------
  1413                           ;! (1) ___fltol                                             11     7      4     381
  1414                           ;!                                              0 COMMON    11     7      4
  1415                           ;! ---------------------------------------------------------------------------------
  1416                           ;! (1) ___flneg                                              4     0      4     121
  1417                           ;!                                              0 BANK0      4     0      4
  1418                           ;!                           ___xxtofl (ARG)
  1419                           ;! ---------------------------------------------------------------------------------
  1420                           ;! (1) ___flmul                                             26    18      8    2569
  1421                           ;!                                             28 BANK0     26    18      8
  1422                           ;!                          __Umul8_16
  1423                           ;!                            ___fladd (ARG)
  1424                           ;!                            ___flneg (ARG)
  1425                           ;!                           ___xxtofl (ARG)
  1426                           ;! ---------------------------------------------------------------------------------
  1427                           ;! (2) __Umul8_16                                            9     7      2     799
  1428                           ;!                                              0 COMMON     9     7      2
  1429                           ;! ---------------------------------------------------------------------------------
  1430                           ;! (1) ___fldiv                                             26    18      8    1273
  1431                           ;!                                             54 BANK0     26    18      8
  1432                           ;!                            ___flmul (ARG)
  1433                           ;!                           ___xxtofl (ARG)
  1434                           ;! ---------------------------------------------------------------------------------
  1435                           ;! (1) ___fladd                                             24    16      8    2262
  1436                           ;!                                              4 BANK0     24    16      8
  1437                           ;!                            ___flneg (ARG)
  1438                           ;!                           ___xxtofl (ARG)
  1439                           ;! ---------------------------------------------------------------------------------
  1440                           ;! (1) _I2C_Master_Write                                     2     0      2     250
  1441                           ;!                                              0 COMMON     2     0      2
  1442                           ;!                    _I2C_Master_Wait
  1443                           ;! ---------------------------------------------------------------------------------
  1444                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1445                           ;!                    _I2C_Master_Wait
  1446                           ;! ---------------------------------------------------------------------------------
  1447                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1448                           ;!                    _I2C_Master_Wait
  1449                           ;! ---------------------------------------------------------------------------------
  1450                           ;! (1) _I2C_Master_Read                                      6     4      2     273
  1451                           ;!                                              0 COMMON     6     4      2
  1452                           ;!                    _I2C_Master_Wait
  1453                           ;! ---------------------------------------------------------------------------------
  1454                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1455                           ;! ---------------------------------------------------------------------------------
  1456                           ;! Estimated maximum stack depth 3
  1457                           ;! ---------------------------------------------------------------------------------
  1458                           ;!
  1459                           ;! Call Graph Graphs:
  1460                           ;!
  1461                           ;! _main (ROOT)
  1462                           ;!   _I2C_Master_Read
  1463                           ;!     _I2C_Master_Wait
  1464                           ;!   _I2C_Master_Start
  1465                           ;!     _I2C_Master_Wait
  1466                           ;!   _I2C_Master_Stop
  1467                           ;!     _I2C_Master_Wait
  1468                           ;!   _I2C_Master_Write
  1469                           ;!     _I2C_Master_Wait
  1470                           ;!   ___fladd
  1471                           ;!     ___flneg (ARG)
  1472                           ;!       ___xxtofl (ARG)
  1473                           ;!     ___xxtofl (ARG)
  1474                           ;!   ___fldiv
  1475                           ;!     ___flmul (ARG)
  1476                           ;!       __Umul8_16
  1477                           ;!       ___fladd (ARG)
  1478                           ;!         ___flneg (ARG)
  1479                           ;!           ___xxtofl (ARG)
  1480                           ;!         ___xxtofl (ARG)
  1481                           ;!       ___flneg (ARG)
  1482                           ;!         ___xxtofl (ARG)
  1483                           ;!       ___xxtofl (ARG)
  1484                           ;!     ___xxtofl (ARG)
  1485                           ;!   ___flmul
  1486                           ;!     __Umul8_16
  1487                           ;!     ___fladd (ARG)
  1488                           ;!       ___flneg (ARG)
  1489                           ;!         ___xxtofl (ARG)
  1490                           ;!       ___xxtofl (ARG)
  1491                           ;!     ___flneg (ARG)
  1492                           ;!       ___xxtofl (ARG)
  1493                           ;!     ___xxtofl (ARG)
  1494                           ;!   ___flneg
  1495                           ;!     ___xxtofl (ARG)
  1496                           ;!   ___fltol
  1497                           ;!   ___xxtofl
  1498                           ;!   _setCursorLCD
  1499                           ;!     _cmdLCD
  1500                           ;!   _setup
  1501                           ;!     _I2C_Master_Init
  1502                           ;!       ___lldiv
  1503                           ;!     _clcLCD
  1504                           ;!       _cmdLCD
  1505                           ;!     _initLCD
  1506                           ;!       _cmdLCD
  1507                           ;!     _setCursorLCD
  1508                           ;!       _cmdLCD
  1509                           ;!     _writeStrLCD
  1510                           ;!       _writeCharLCD
  1511                           ;!   _writeCharLCD
  1512                           ;!   _writeFloat
  1513                           ;!     _setCursorLCD
  1514                           ;!       _cmdLCD
  1515                           ;!     _writeCharLCD
  1516                           ;!     _writeIntLCD
  1517                           ;!       _sprintf
  1518                           ;!         ___lwdiv
  1519                           ;!         ___lwmod
  1520                           ;!           ___lwdiv (ARG)
  1521                           ;!       _writeStrLCD
  1522                           ;!         _writeCharLCD
  1523                           ;!   _writeIntLCD
  1524                           ;!     _sprintf
  1525                           ;!       ___lwdiv
  1526                           ;!       ___lwmod
  1527                           ;!         ___lwdiv (ARG)
  1528                           ;!     _writeStrLCD
  1529                           ;!       _writeCharLCD
  1530                           ;!   _writeStrLCD
  1531                           ;!     _writeCharLCD
  1532                           ;!
  1533                           
  1534                           ;! Address spaces:
  1535                           
  1536                           ;!Name               Size   Autos  Total    Cost      Usage
  1537                           ;!BITCOMMON            E      0       0       0        0.0%
  1538                           ;!EEDATA             100      0       0       0        0.0%
  1539                           ;!NULL                 0      0       0       0        0.0%
  1540                           ;!CODE                 0      0       0       0        0.0%
  1541                           ;!COMMON               E      E       E       1      100.0%
  1542                           ;!BITSFR0              0      0       0       1        0.0%
  1543                           ;!SFR0                 0      0       0       1        0.0%
  1544                           ;!BITSFR1              0      0       0       2        0.0%
  1545                           ;!SFR1                 0      0       0       2        0.0%
  1546                           ;!STACK                0      0       0       2        0.0%
  1547                           ;!ABS                  0      0      7E       3        0.0%
  1548                           ;!BITBANK0            50      0       0       4        0.0%
  1549                           ;!BITSFR3              0      0       0       4        0.0%
  1550                           ;!SFR3                 0      0       0       4        0.0%
  1551                           ;!BANK0               50     50      50       5      100.0%
  1552                           ;!BITSFR2              0      0       0       5        0.0%
  1553                           ;!SFR2                 0      0       0       5        0.0%
  1554                           ;!BITBANK1            50      0       0       6        0.0%
  1555                           ;!BANK1               50      4      20       7       40.0%
  1556                           ;!BITBANK3            60      0       0       8        0.0%
  1557                           ;!BANK3               60      0       0       9        0.0%
  1558                           ;!BITBANK2            60      0       0      10        0.0%
  1559                           ;!BANK2               60      0       0      11        0.0%
  1560                           ;!DATA                 0      0      7E      12        0.0%
  1561                           
  1562                           	global	_main
  1563                           
  1564 ;; *************** function _main *****************
  1565 ;; Defined at:
  1566 ;;		line 60 in file "mainM.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : B00/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0
  1582 ;;      Temps:          0       0       4       0       0
  1583 ;;      Totals:         0       0       4       0       0
  1584 ;;Total ram usage:        4 bytes
  1585 ;; Hardware stack levels required when called:    4
  1586 ;; This function calls:
  1587 ;;		_I2C_Master_Read
  1588 ;;		_I2C_Master_Start
  1589 ;;		_I2C_Master_Stop
  1590 ;;		_I2C_Master_Write
  1591 ;;		___fladd
  1592 ;;		___fldiv
  1593 ;;		___flmul
  1594 ;;		___flneg
  1595 ;;		___fltol
  1596 ;;		___xxtofl
  1597 ;;		_setCursorLCD
  1598 ;;		_setup
  1599 ;;		_writeCharLCD
  1600 ;;		_writeFloat
  1601 ;;		_writeIntLCD
  1602 ;;		_writeStrLCD
  1603 ;; This function is called by:
  1604 ;;		Startup code after reset
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1608                           	file	"mainM.c"
  1609                           	line	60
  1610                           global __pmaintext
  1611                           __pmaintext:	;psect for function _main
  1612  0C25                     psect	maintext
  1613                           	file	"mainM.c"
  1614                           	line	60
  1615                           	global	__size_of_main
  1616                           	__size_of_main	equ	__end_of_main-_main
  1617  01D2                     	
  1618                           _main:	
  1619  0C25                     ;incstack = 0
  1620                           	opt	stack 4
  1621                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1622                           	line	61
  1623                           	
  1624                           l2571:	
  1625  0C25                     ;mainM.c: 61:     setup();
  1626                           	fcall	_setup
  1627  0C25  120A  158A  2237  120A  158A  	goto	l2573
  1628  0C2A  2C2B               	line	62
  1629                           ;mainM.c: 62:     while(1){
  1630                           	
  1631                           l71:	
  1632  0C2B                     	line	63
  1633                           	
  1634                           l2573:	
  1635  0C2B                     ;mainM.c: 63:         I2C_Master_Start();
  1636                           	fcall	_I2C_Master_Start
  1637  0C2B  160A  118A  27F7  120A  158A  	line	64
  1638                           	
  1639                           l2575:	
  1640  0C30                     ;mainM.c: 64:         I2C_Master_Write(0x51);
  1641                           	movlw	051h
  1642  0C30  3051               	movwf	(I2C_Master_Write@d)
  1643  0C31  00F0               	movlw	0
  1644  0C32  3000               	movwf	((I2C_Master_Write@d))+1
  1645  0C33  00F1               	fcall	_I2C_Master_Write
  1646  0C34  120A  158A  2034  120A  158A  	line	65
  1647                           	
  1648                           l2577:	
  1649  0C39                     ;mainM.c: 65:         adc = I2C_Master_Read(0);
  1650                           	movlw	0
  1651  0C39  3000               	movwf	(I2C_Master_Read@a)
  1652  0C3A  00F0               	movwf	(I2C_Master_Read@a+1)
  1653  0C3B  00F1               	fcall	_I2C_Master_Read
  1654  0C3C  120A  158A  20C6  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1655  0C41  0870               	bsf	status, 5	;RP0=1, select bank1
  1656  0C42  1683               	bcf	status, 6	;RP1=0, select bank1
  1657  0C43  1303               	movwf	(??_main+0)^080h+0
  1658  0C44  00BC               	movf	(??_main+0)^080h+0,w
  1659  0C45  083C               	movwf	(_adc)^080h
  1660  0C46  00BA               	line	66
  1661                           	
  1662                           l2579:	
  1663  0C47                     ;mainM.c: 66:         I2C_Master_Stop();
  1664                           	fcall	_I2C_Master_Stop
  1665  0C47  120A  158A  202B  120A  158A  	line	67
  1666                           	
  1667                           l2581:	
  1668  0C4C                     ;mainM.c: 67:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1669                           	opt asmopt_push
  1670                           opt asmopt_off
  1671                           movlw	13
  1672  0C4C  300D               	bsf	status, 5	;RP0=1, select bank1
  1673  0C4D  1683               	bcf	status, 6	;RP1=0, select bank1
  1674  0C4E  1303               movwf	((??_main+0)^080h+0+1),f
  1675  0C4F  00BD               	movlw	251
  1676  0C50  30FB               movwf	((??_main+0)^080h+0),f
  1677  0C51  00BC               	u3557:
  1678  0C52                     decfsz	((??_main+0)^080h+0),f
  1679  0C52  0BBC               	goto	u3557
  1680  0C53  2C52               	decfsz	((??_main+0)^080h+0+1),f
  1681  0C54  0BBD               	goto	u3557
  1682  0C55  2C52               opt asmopt_pop
  1683                           
  1684                           	line	69
  1685                           	
  1686                           l2583:	
  1687  0C56                     ;mainM.c: 69:         I2C_Master_Start();
  1688                           	fcall	_I2C_Master_Start
  1689  0C56  160A  118A  27F7  120A  158A  	line	70
  1690                           	
  1691                           l2585:	
  1692  0C5B                     ;mainM.c: 70:         I2C_Master_Write(0x61);
  1693                           	movlw	061h
  1694  0C5B  3061               	movwf	(I2C_Master_Write@d)
  1695  0C5C  00F0               	movlw	0
  1696  0C5D  3000               	movwf	((I2C_Master_Write@d))+1
  1697  0C5E  00F1               	fcall	_I2C_Master_Write
  1698  0C5F  120A  158A  2034  120A  158A  	line	71
  1699                           	
  1700                           l2587:	
  1701  0C64                     ;mainM.c: 71:         counter = I2C_Master_Read(0);
  1702                           	movlw	0
  1703  0C64  3000               	movwf	(I2C_Master_Read@a)
  1704  0C65  00F0               	movwf	(I2C_Master_Read@a+1)
  1705  0C66  00F1               	fcall	_I2C_Master_Read
  1706  0C67  120A  158A  20C6  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1707  0C6C  0870               	bsf	status, 5	;RP0=1, select bank1
  1708  0C6D  1683               	bcf	status, 6	;RP1=0, select bank1
  1709  0C6E  1303               	movwf	(??_main+0)^080h+0
  1710  0C6F  00BC               	movf	(??_main+0)^080h+0,w
  1711  0C70  083C               	movwf	(_counter)^080h
  1712  0C71  00B7               	line	72
  1713                           	
  1714                           l2589:	
  1715  0C72                     ;mainM.c: 72:         I2C_Master_Stop();
  1716                           	fcall	_I2C_Master_Stop
  1717  0C72  120A  158A  202B  120A  158A  	line	73
  1718                           	
  1719                           l2591:	
  1720  0C77                     ;mainM.c: 73:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1721                           	opt asmopt_push
  1722                           opt asmopt_off
  1723                           movlw	13
  1724  0C77  300D               	bsf	status, 5	;RP0=1, select bank1
  1725  0C78  1683               	bcf	status, 6	;RP1=0, select bank1
  1726  0C79  1303               movwf	((??_main+0)^080h+0+1),f
  1727  0C7A  00BD               	movlw	251
  1728  0C7B  30FB               movwf	((??_main+0)^080h+0),f
  1729  0C7C  00BC               	u3567:
  1730  0C7D                     decfsz	((??_main+0)^080h+0),f
  1731  0C7D  0BBC               	goto	u3567
  1732  0C7E  2C7D               	decfsz	((??_main+0)^080h+0+1),f
  1733  0C7F  0BBD               	goto	u3567
  1734  0C80  2C7D               opt asmopt_pop
  1735                           
  1736                           	line	75
  1737                           	
  1738                           l2593:	
  1739  0C81                     ;mainM.c: 75:         I2C_Master_Start();
  1740                           	fcall	_I2C_Master_Start
  1741  0C81  160A  118A  27F7  120A  158A  	line	76
  1742                           	
  1743                           l2595:	
  1744  0C86                     ;mainM.c: 76:         I2C_Master_Write(0x41);
  1745                           	movlw	041h
  1746  0C86  3041               	movwf	(I2C_Master_Write@d)
  1747  0C87  00F0               	movlw	0
  1748  0C88  3000               	movwf	((I2C_Master_Write@d))+1
  1749  0C89  00F1               	fcall	_I2C_Master_Write
  1750  0C8A  120A  158A  2034  120A  158A  	line	77
  1751                           	
  1752                           l2597:	
  1753  0C8F                     ;mainM.c: 77:         s3 = I2C_Master_Read(0);
  1754                           	movlw	0
  1755  0C8F  3000               	movwf	(I2C_Master_Read@a)
  1756  0C90  00F0               	movwf	(I2C_Master_Read@a+1)
  1757  0C91  00F1               	fcall	_I2C_Master_Read
  1758  0C92  120A  158A  20C6  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1759  0C97  0870               	bsf	status, 5	;RP0=1, select bank1
  1760  0C98  1683               	bcf	status, 6	;RP1=0, select bank1
  1761  0C99  1303               	movwf	(??_main+0)^080h+0
  1762  0C9A  00BC               	movf	(??_main+0)^080h+0,w
  1763  0C9B  083C               	movwf	(_s3)^080h
  1764  0C9C  00B4               	line	78
  1765                           	
  1766                           l2599:	
  1767  0C9D                     ;mainM.c: 78:         I2C_Master_Stop();
  1768                           	fcall	_I2C_Master_Stop
  1769  0C9D  120A  158A  202B  120A  158A  	line	79
  1770                           	
  1771                           l2601:	
  1772  0CA2                     ;mainM.c: 79:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1773                           	opt asmopt_push
  1774                           opt asmopt_off
  1775                           movlw	13
  1776  0CA2  300D               	bsf	status, 5	;RP0=1, select bank1
  1777  0CA3  1683               	bcf	status, 6	;RP1=0, select bank1
  1778  0CA4  1303               movwf	((??_main+0)^080h+0+1),f
  1779  0CA5  00BD               	movlw	251
  1780  0CA6  30FB               movwf	((??_main+0)^080h+0),f
  1781  0CA7  00BC               	u3577:
  1782  0CA8                     decfsz	((??_main+0)^080h+0),f
  1783  0CA8  0BBC               	goto	u3577
  1784  0CA9  2CA8               	decfsz	((??_main+0)^080h+0+1),f
  1785  0CAA  0BBD               	goto	u3577
  1786  0CAB  2CA8               opt asmopt_pop
  1787                           
  1788                           	line	82
  1789                           	
  1790                           l2603:	
  1791  0CAC                     ;mainM.c: 82:         sensorF1 = (float) adc * 5/255;
  1792                           	movlw	0x43
  1793  0CAC  3043               	bcf	status, 5	;RP0=0, select bank0
  1794  0CAD  1283               	bcf	status, 6	;RP1=0, select bank0
  1795  0CAE  1303               	movwf	(___fldiv@a+3)
  1796  0CAF  00D9               	movlw	0x7f
  1797  0CB0  307F               	movwf	(___fldiv@a+2)
  1798  0CB1  00D8               	movlw	0x0
  1799  0CB2  3000               	movwf	(___fldiv@a+1)
  1800  0CB3  00D7               	movlw	0x0
  1801  0CB4  3000               	movwf	(___fldiv@a)
  1802  0CB5  00D6               
  1803                           	movlw	0x40
  1804  0CB6  3040               	movwf	(___flmul@b+3)
  1805  0CB7  00BF               	movlw	0xa0
  1806  0CB8  30A0               	movwf	(___flmul@b+2)
  1807  0CB9  00BE               	movlw	0x0
  1808  0CBA  3000               	movwf	(___flmul@b+1)
  1809  0CBB  00BD               	movlw	0x0
  1810  0CBC  3000               	movwf	(___flmul@b)
  1811  0CBD  00BC               
  1812                           	bsf	status, 5	;RP0=1, select bank1
  1813  0CBE  1683               	bcf	status, 6	;RP1=0, select bank1
  1814  0CBF  1303               	movf	(_adc)^080h,w
  1815  0CC0  083A               	movwf	(??_main+0)^080h+0
  1816  0CC1  00BC               	clrf	(??_main+0)^080h+0+1
  1817  0CC2  01BD               	clrf	(??_main+0)^080h+0+2
  1818  0CC3  01BE               	clrf	(??_main+0)^080h+0+3
  1819  0CC4  01BF               	movf	3+(??_main+0)^080h+0,w
  1820  0CC5  083F               	movwf	(___xxtofl@val+3)
  1821  0CC6  00F3               	movf	2+(??_main+0)^080h+0,w
  1822  0CC7  083E               	movwf	(___xxtofl@val+2)
  1823  0CC8  00F2               	movf	1+(??_main+0)^080h+0,w
  1824  0CC9  083D               	movwf	(___xxtofl@val+1)
  1825  0CCA  00F1               	movf	0+(??_main+0)^080h+0,w
  1826  0CCB  083C               	movwf	(___xxtofl@val)
  1827  0CCC  00F0               
  1828                           	movlw	low(0)
  1829  0CCD  3000               	fcall	___xxtofl
  1830  0CCE  120A  158A  2363  120A  158A  	movf	(3+(?___xxtofl)),w
  1831  0CD3  0873               	bcf	status, 5	;RP0=0, select bank0
  1832  0CD4  1283               	bcf	status, 6	;RP1=0, select bank0
  1833  0CD5  1303               	movwf	(___flmul@a+3)
  1834  0CD6  00C3               	movf	(2+(?___xxtofl)),w
  1835  0CD7  0872               	movwf	(___flmul@a+2)
  1836  0CD8  00C2               	movf	(1+(?___xxtofl)),w
  1837  0CD9  0871               	movwf	(___flmul@a+1)
  1838  0CDA  00C1               	movf	(0+(?___xxtofl)),w
  1839  0CDB  0870               	movwf	(___flmul@a)
  1840  0CDC  00C0               
  1841                           	fcall	___flmul
  1842  0CDD  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1843  0CE2  1283               	bcf	status, 6	;RP1=0, select bank0
  1844  0CE3  1303               	movf	(3+(?___flmul)),w
  1845  0CE4  083F               	movwf	(___fldiv@b+3)
  1846  0CE5  00DD               	movf	(2+(?___flmul)),w
  1847  0CE6  083E               	movwf	(___fldiv@b+2)
  1848  0CE7  00DC               	movf	(1+(?___flmul)),w
  1849  0CE8  083D               	movwf	(___fldiv@b+1)
  1850  0CE9  00DB               	movf	(0+(?___flmul)),w
  1851  0CEA  083C               	movwf	(___fldiv@b)
  1852  0CEB  00DA               
  1853                           	fcall	___fldiv
  1854  0CEC  120A  158A  25F7  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1855  0CF1  1283               	bcf	status, 6	;RP1=0, select bank0
  1856  0CF2  1303               	movf	(3+(?___fldiv)),w
  1857  0CF3  0859               	bsf	status, 5	;RP0=1, select bank1
  1858  0CF4  1683               	bcf	status, 6	;RP1=0, select bank1
  1859  0CF5  1303               	movwf	(_sensorF1+3)^080h
  1860  0CF6  00B3               	bcf	status, 5	;RP0=0, select bank0
  1861  0CF7  1283               	bcf	status, 6	;RP1=0, select bank0
  1862  0CF8  1303               	movf	(2+(?___fldiv)),w
  1863  0CF9  0858               	bsf	status, 5	;RP0=1, select bank1
  1864  0CFA  1683               	bcf	status, 6	;RP1=0, select bank1
  1865  0CFB  1303               	movwf	(_sensorF1+2)^080h
  1866  0CFC  00B2               	bcf	status, 5	;RP0=0, select bank0
  1867  0CFD  1283               	bcf	status, 6	;RP1=0, select bank0
  1868  0CFE  1303               	movf	(1+(?___fldiv)),w
  1869  0CFF  0857               	bsf	status, 5	;RP0=1, select bank1
  1870  0D00  1683               	bcf	status, 6	;RP1=0, select bank1
  1871  0D01  1303               	movwf	(_sensorF1+1)^080h
  1872  0D02  00B1               	bcf	status, 5	;RP0=0, select bank0
  1873  0D03  1283               	bcf	status, 6	;RP1=0, select bank0
  1874  0D04  1303               	movf	(0+(?___fldiv)),w
  1875  0D05  0856               	bsf	status, 5	;RP0=1, select bank1
  1876  0D06  1683               	bcf	status, 6	;RP1=0, select bank1
  1877  0D07  1303               	movwf	(_sensorF1)^080h
  1878  0D08  00B0               
  1879                           	line	83
  1880                           	
  1881                           l2605:	
  1882  0D09                     ;mainM.c: 83:         entero1 = (int) sensorF1;
  1883                           	movf	(_sensorF1+3)^080h,w
  1884  0D09  0833               	movwf	(___fltol@f1+3)
  1885  0D0A  00F3               	movf	(_sensorF1+2)^080h,w
  1886  0D0B  0832               	movwf	(___fltol@f1+2)
  1887  0D0C  00F2               	movf	(_sensorF1+1)^080h,w
  1888  0D0D  0831               	movwf	(___fltol@f1+1)
  1889  0D0E  00F1               	movf	(_sensorF1)^080h,w
  1890  0D0F  0830               	movwf	(___fltol@f1)
  1891  0D10  00F0               
  1892                           	fcall	___fltol
  1893  0D11  120A  118A  2028  120A  158A  	movf	(0+(?___fltol)),w
  1894  0D16  0870               	bsf	status, 5	;RP0=1, select bank1
  1895  0D17  1683               	bcf	status, 6	;RP1=0, select bank1
  1896  0D18  1303               	movwf	(??_main+0)^080h+0
  1897  0D19  00BC               	movf	(??_main+0)^080h+0,w
  1898  0D1A  083C               	movwf	(_entero1)^080h
  1899  0D1B  00B9               	line	84
  1900                           	
  1901                           l2607:	
  1902  0D1C                     ;mainM.c: 84:         float1 = (sensorF1 - entero1)*100;
  1903                           	movlw	0x42
  1904  0D1C  3042               	bcf	status, 5	;RP0=0, select bank0
  1905  0D1D  1283               	bcf	status, 6	;RP1=0, select bank0
  1906  0D1E  1303               	movwf	(___flmul@b+3)
  1907  0D1F  00BF               	movlw	0xc8
  1908  0D20  30C8               	movwf	(___flmul@b+2)
  1909  0D21  00BE               	movlw	0x0
  1910  0D22  3000               	movwf	(___flmul@b+1)
  1911  0D23  00BD               	movlw	0x0
  1912  0D24  3000               	movwf	(___flmul@b)
  1913  0D25  00BC               
  1914                           	bsf	status, 5	;RP0=1, select bank1
  1915  0D26  1683               	bcf	status, 6	;RP1=0, select bank1
  1916  0D27  1303               	movf	(_sensorF1+3)^080h,w
  1917  0D28  0833               	bcf	status, 5	;RP0=0, select bank0
  1918  0D29  1283               	bcf	status, 6	;RP1=0, select bank0
  1919  0D2A  1303               	movwf	(___fladd@b+3)
  1920  0D2B  00A7               	bsf	status, 5	;RP0=1, select bank1
  1921  0D2C  1683               	bcf	status, 6	;RP1=0, select bank1
  1922  0D2D  1303               	movf	(_sensorF1+2)^080h,w
  1923  0D2E  0832               	bcf	status, 5	;RP0=0, select bank0
  1924  0D2F  1283               	bcf	status, 6	;RP1=0, select bank0
  1925  0D30  1303               	movwf	(___fladd@b+2)
  1926  0D31  00A6               	bsf	status, 5	;RP0=1, select bank1
  1927  0D32  1683               	bcf	status, 6	;RP1=0, select bank1
  1928  0D33  1303               	movf	(_sensorF1+1)^080h,w
  1929  0D34  0831               	bcf	status, 5	;RP0=0, select bank0
  1930  0D35  1283               	bcf	status, 6	;RP1=0, select bank0
  1931  0D36  1303               	movwf	(___fladd@b+1)
  1932  0D37  00A5               	bsf	status, 5	;RP0=1, select bank1
  1933  0D38  1683               	bcf	status, 6	;RP1=0, select bank1
  1934  0D39  1303               	movf	(_sensorF1)^080h,w
  1935  0D3A  0830               	bcf	status, 5	;RP0=0, select bank0
  1936  0D3B  1283               	bcf	status, 6	;RP1=0, select bank0
  1937  0D3C  1303               	movwf	(___fladd@b)
  1938  0D3D  00A4               
  1939                           	bsf	status, 5	;RP0=1, select bank1
  1940  0D3E  1683               	bcf	status, 6	;RP1=0, select bank1
  1941  0D3F  1303               	movf	(_entero1)^080h,w
  1942  0D40  0839               	movwf	(??_main+0)^080h+0
  1943  0D41  00BC               	clrf	(??_main+0)^080h+0+1
  1944  0D42  01BD               	clrf	(??_main+0)^080h+0+2
  1945  0D43  01BE               	clrf	(??_main+0)^080h+0+3
  1946  0D44  01BF               	movf	3+(??_main+0)^080h+0,w
  1947  0D45  083F               	movwf	(___xxtofl@val+3)
  1948  0D46  00F3               	movf	2+(??_main+0)^080h+0,w
  1949  0D47  083E               	movwf	(___xxtofl@val+2)
  1950  0D48  00F2               	movf	1+(??_main+0)^080h+0,w
  1951  0D49  083D               	movwf	(___xxtofl@val+1)
  1952  0D4A  00F1               	movf	0+(??_main+0)^080h+0,w
  1953  0D4B  083C               	movwf	(___xxtofl@val)
  1954  0D4C  00F0               
  1955                           	movlw	low(01h)
  1956  0D4D  3001               	fcall	___xxtofl
  1957  0D4E  120A  158A  2363  120A  158A  	movf	(3+(?___xxtofl)),w
  1958  0D53  0873               	bcf	status, 5	;RP0=0, select bank0
  1959  0D54  1283               	bcf	status, 6	;RP1=0, select bank0
  1960  0D55  1303               	movwf	(___flneg@f1+3)
  1961  0D56  00A3               	movf	(2+(?___xxtofl)),w
  1962  0D57  0872               	movwf	(___flneg@f1+2)
  1963  0D58  00A2               	movf	(1+(?___xxtofl)),w
  1964  0D59  0871               	movwf	(___flneg@f1+1)
  1965  0D5A  00A1               	movf	(0+(?___xxtofl)),w
  1966  0D5B  0870               	movwf	(___flneg@f1)
  1967  0D5C  00A0               
  1968                           	fcall	___flneg
  1969  0D5D  120A  158A  204D  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1970  0D62  1283               	bcf	status, 6	;RP1=0, select bank0
  1971  0D63  1303               	movf	(3+(?___flneg)),w
  1972  0D64  0823               	movwf	(___fladd@a+3)
  1973  0D65  00AB               	movf	(2+(?___flneg)),w
  1974  0D66  0822               	movwf	(___fladd@a+2)
  1975  0D67  00AA               	movf	(1+(?___flneg)),w
  1976  0D68  0821               	movwf	(___fladd@a+1)
  1977  0D69  00A9               	movf	(0+(?___flneg)),w
  1978  0D6A  0820               	movwf	(___fladd@a)
  1979  0D6B  00A8               
  1980                           	fcall	___fladd
  1981  0D6C  120A  118A  21C2  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1982  0D71  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  0D72  1303               	movf	(3+(?___fladd)),w
  1984  0D73  0827               	movwf	(___flmul@a+3)
  1985  0D74  00C3               	movf	(2+(?___fladd)),w
  1986  0D75  0826               	movwf	(___flmul@a+2)
  1987  0D76  00C2               	movf	(1+(?___fladd)),w
  1988  0D77  0825               	movwf	(___flmul@a+1)
  1989  0D78  00C1               	movf	(0+(?___fladd)),w
  1990  0D79  0824               	movwf	(___flmul@a)
  1991  0D7A  00C0               
  1992                           	fcall	___flmul
  1993  0D7B  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1994  0D80  1283               	bcf	status, 6	;RP1=0, select bank0
  1995  0D81  1303               	movf	(3+(?___flmul)),w
  1996  0D82  083F               	bsf	status, 5	;RP0=1, select bank1
  1997  0D83  1683               	bcf	status, 6	;RP1=0, select bank1
  1998  0D84  1303               	movwf	(_float1+3)^080h
  1999  0D85  00AF               	bcf	status, 5	;RP0=0, select bank0
  2000  0D86  1283               	bcf	status, 6	;RP1=0, select bank0
  2001  0D87  1303               	movf	(2+(?___flmul)),w
  2002  0D88  083E               	bsf	status, 5	;RP0=1, select bank1
  2003  0D89  1683               	bcf	status, 6	;RP1=0, select bank1
  2004  0D8A  1303               	movwf	(_float1+2)^080h
  2005  0D8B  00AE               	bcf	status, 5	;RP0=0, select bank0
  2006  0D8C  1283               	bcf	status, 6	;RP1=0, select bank0
  2007  0D8D  1303               	movf	(1+(?___flmul)),w
  2008  0D8E  083D               	bsf	status, 5	;RP0=1, select bank1
  2009  0D8F  1683               	bcf	status, 6	;RP1=0, select bank1
  2010  0D90  1303               	movwf	(_float1+1)^080h
  2011  0D91  00AD               	bcf	status, 5	;RP0=0, select bank0
  2012  0D92  1283               	bcf	status, 6	;RP1=0, select bank0
  2013  0D93  1303               	movf	(0+(?___flmul)),w
  2014  0D94  083C               	bsf	status, 5	;RP0=1, select bank1
  2015  0D95  1683               	bcf	status, 6	;RP1=0, select bank1
  2016  0D96  1303               	movwf	(_float1)^080h
  2017  0D97  00AC               
  2018                           	line	85
  2019                           	
  2020                           l2609:	
  2021  0D98                     ;mainM.c: 85:         dec1 = (int) float1;
  2022                           	movf	(_float1+3)^080h,w
  2023  0D98  082F               	movwf	(___fltol@f1+3)
  2024  0D99  00F3               	movf	(_float1+2)^080h,w
  2025  0D9A  082E               	movwf	(___fltol@f1+2)
  2026  0D9B  00F2               	movf	(_float1+1)^080h,w
  2027  0D9C  082D               	movwf	(___fltol@f1+1)
  2028  0D9D  00F1               	movf	(_float1)^080h,w
  2029  0D9E  082C               	movwf	(___fltol@f1)
  2030  0D9F  00F0               
  2031                           	fcall	___fltol
  2032  0DA0  120A  118A  2028  120A  158A  	movf	(0+(?___fltol)),w
  2033  0DA5  0870               	bsf	status, 5	;RP0=1, select bank1
  2034  0DA6  1683               	bcf	status, 6	;RP1=0, select bank1
  2035  0DA7  1303               	movwf	(??_main+0)^080h+0
  2036  0DA8  00BC               	movf	(??_main+0)^080h+0,w
  2037  0DA9  083C               	movwf	(_dec1)^080h
  2038  0DAA  00B8               	line	93
  2039                           	
  2040                           l2611:	
  2041  0DAB                     ;mainM.c: 93:         writeFloat(entero1, dec1, 1);
  2042                           	movf	(_dec1)^080h,w
  2043  0DAB  0838               	movwf	(??_main+0)^080h+0
  2044  0DAC  00BC               	movf	(??_main+0)^080h+0,w
  2045  0DAD  083C               	bcf	status, 5	;RP0=0, select bank0
  2046  0DAE  1283               	bcf	status, 6	;RP1=0, select bank0
  2047  0DAF  1303               	movwf	(writeFloat@decimal)
  2048  0DB0  00B5               	clrf	(writeFloat@initPos)
  2049  0DB1  01B6               	incf	(writeFloat@initPos),f
  2050  0DB2  0AB6               	bsf	status, 5	;RP0=1, select bank1
  2051  0DB3  1683               	bcf	status, 6	;RP1=0, select bank1
  2052  0DB4  1303               	movf	(_entero1)^080h,w
  2053  0DB5  0839               	fcall	_writeFloat
  2054  0DB6  120A  158A  2296  120A  158A  	line	94
  2055                           	
  2056                           l2613:	
  2057  0DBB                     ;mainM.c: 94:         setCursorLCD(2, 7);
  2058                           	movlw	low(07h)
  2059  0DBB  3007               	bsf	status, 5	;RP0=1, select bank1
  2060  0DBC  1683               	bcf	status, 6	;RP1=0, select bank1
  2061  0DBD  1303               	movwf	(??_main+0)^080h+0
  2062  0DBE  00BC               	movf	(??_main+0)^080h+0,w
  2063  0DBF  083C               	movwf	(setCursorLCD@x)
  2064  0DC0  00F3               	movlw	low(02h)
  2065  0DC1  3002               	fcall	_setCursorLCD
  2066  0DC2  120A  158A  207F  120A  158A  	line	95
  2067                           	
  2068                           l2615:	
  2069  0DC7                     ;mainM.c: 95:         writeIntLCD(counter);
  2070                           	bsf	status, 5	;RP0=1, select bank1
  2071  0DC7  1683               	bcf	status, 6	;RP1=0, select bank1
  2072  0DC8  1303               	movf	(_counter)^080h,w
  2073  0DC9  0837               	fcall	_writeIntLCD
  2074  0DCA  120A  118A  200A  120A  158A  	line	96
  2075                           	
  2076                           l2617:	
  2077  0DCF                     ;mainM.c: 96:         writeCharLCD(' ');
  2078                           	movlw	low(020h)
  2079  0DCF  3020               	fcall	_writeCharLCD
  2080  0DD0  120A  158A  205C  120A  158A  	line	97
  2081                           	
  2082                           l2619:	
  2083  0DD5                     ;mainM.c: 97:         setCursorLCD(2, 13);
  2084                           	movlw	low(0Dh)
  2085  0DD5  300D               	bsf	status, 5	;RP0=1, select bank1
  2086  0DD6  1683               	bcf	status, 6	;RP1=0, select bank1
  2087  0DD7  1303               	movwf	(??_main+0)^080h+0
  2088  0DD8  00BC               	movf	(??_main+0)^080h+0,w
  2089  0DD9  083C               	movwf	(setCursorLCD@x)
  2090  0DDA  00F3               	movlw	low(02h)
  2091  0DDB  3002               	fcall	_setCursorLCD
  2092  0DDC  120A  158A  207F  120A  158A  	line	98
  2093                           	
  2094                           l2621:	
  2095  0DE1                     ;mainM.c: 98:         writeIntLCD(s3);
  2096                           	bsf	status, 5	;RP0=1, select bank1
  2097  0DE1  1683               	bcf	status, 6	;RP1=0, select bank1
  2098  0DE2  1303               	movf	(_s3)^080h,w
  2099  0DE3  0834               	fcall	_writeIntLCD
  2100  0DE4  120A  118A  200A  120A  158A  	line	100
  2101                           	
  2102                           l2623:	
  2103  0DE9                     ;mainM.c: 100:         writeStrLCD("  ");
  2104                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2105  0DE9  300E               	movwf	(writeStrLCD@string)
  2106  0DEA  00F2               	movlw	80h
  2107  0DEB  3080               	movwf	(writeStrLCD@string+1)
  2108  0DEC  00F3               	fcall	_writeStrLCD
  2109  0DED  120A  158A  21A8  120A  158A  	goto	l2573
  2110  0DF2  2C2B               	line	101
  2111                           ;mainM.c: 101:     }
  2112                           	
  2113                           l72:	
  2114  0DF3                     	goto	l2573
  2115  0DF3  2C2B               	
  2116                           l73:	
  2117  0DF4                     	line	103
  2118                           ;mainM.c: 102:     return;
  2119                           	
  2120                           l74:	
  2121  0DF4                     	global	start
  2122                           	ljmp	start
  2123  0DF4  120A  118A  2800   	opt stack 0
  2124                           GLOBAL	__end_of_main
  2125                           	__end_of_main:
  2126  0DF7                     	signat	_main,89
  2127                           	global	_writeFloat
  2128                           
  2129 ;; *************** function _writeFloat *****************
  2130 ;; Defined at:
  2131 ;;		line 63 in file "LCD.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  integer         1    wreg     unsigned char 
  2134 ;;  decimal         1   21[BANK0 ] unsigned char 
  2135 ;;  initPos         1   22[BANK0 ] unsigned char 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  integer         1   24[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       2       0       0       0
  2148 ;;      Locals:         0       1       0       0       0
  2149 ;;      Temps:          0       1       0       0       0
  2150 ;;      Totals:         0       4       0       0       0
  2151 ;;Total ram usage:        4 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    3
  2154 ;; This function calls:
  2155 ;;		_setCursorLCD
  2156 ;;		_writeCharLCD
  2157 ;;		_writeIntLCD
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2163                           	file	"LCD.c"
  2164                           	line	63
  2165                           global __ptext1
  2166                           __ptext1:	;psect for function _writeFloat
  2167  0A96                     psect	text1
  2168                           	file	"LCD.c"
  2169                           	line	63
  2170                           	global	__size_of_writeFloat
  2171                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2172  0060                     	
  2173                           _writeFloat:	
  2174  0A96                     ;incstack = 0
  2175                           	opt	stack 4
  2176                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2177                           ;writeFloat@integer stored from wreg
  2178                           	bcf	status, 5	;RP0=0, select bank0
  2179  0A96  1283               	bcf	status, 6	;RP1=0, select bank0
  2180  0A97  1303               	movwf	(writeFloat@integer)
  2181  0A98  00B8               	line	66
  2182                           	
  2183                           l1987:	
  2184  0A99                     ;LCD.c: 66:     setCursorLCD(2, initPos);
  2185                           	movf	(writeFloat@initPos),w
  2186  0A99  0836               	movwf	(??_writeFloat+0)+0
  2187  0A9A  00B7               	movf	(??_writeFloat+0)+0,w
  2188  0A9B  0837               	movwf	(setCursorLCD@x)
  2189  0A9C  00F3               	movlw	low(02h)
  2190  0A9D  3002               	fcall	_setCursorLCD
  2191  0A9E  120A  158A  207F  120A  158A  	line	67
  2192                           	
  2193                           l1989:	
  2194  0AA3                     ;LCD.c: 67:     writeIntLCD(integer);
  2195                           	bcf	status, 5	;RP0=0, select bank0
  2196  0AA3  1283               	bcf	status, 6	;RP1=0, select bank0
  2197  0AA4  1303               	movf	(writeFloat@integer),w
  2198  0AA5  0838               	fcall	_writeIntLCD
  2199  0AA6  120A  118A  200A  120A  158A  	line	68
  2200                           	
  2201                           l1991:	
  2202  0AAB                     ;LCD.c: 68:     setCursorLCD(2, initPos + 1);
  2203                           	bcf	status, 5	;RP0=0, select bank0
  2204  0AAB  1283               	bcf	status, 6	;RP1=0, select bank0
  2205  0AAC  1303               	movf	(writeFloat@initPos),w
  2206  0AAD  0836               	addlw	01h
  2207  0AAE  3E01               	movwf	(??_writeFloat+0)+0
  2208  0AAF  00B7               	movf	(??_writeFloat+0)+0,w
  2209  0AB0  0837               	movwf	(setCursorLCD@x)
  2210  0AB1  00F3               	movlw	low(02h)
  2211  0AB2  3002               	fcall	_setCursorLCD
  2212  0AB3  120A  158A  207F  120A  158A  	line	69
  2213                           	
  2214                           l1993:	
  2215  0AB8                     ;LCD.c: 69:     writeCharLCD('.');
  2216                           	movlw	low(02Eh)
  2217  0AB8  302E               	fcall	_writeCharLCD
  2218  0AB9  120A  158A  205C  120A  158A  	line	70
  2219                           	
  2220                           l1995:	
  2221  0ABE                     ;LCD.c: 70:     setCursorLCD(2, initPos + 2);
  2222                           	bcf	status, 5	;RP0=0, select bank0
  2223  0ABE  1283               	bcf	status, 6	;RP1=0, select bank0
  2224  0ABF  1303               	movf	(writeFloat@initPos),w
  2225  0AC0  0836               	addlw	02h
  2226  0AC1  3E02               	movwf	(??_writeFloat+0)+0
  2227  0AC2  00B7               	movf	(??_writeFloat+0)+0,w
  2228  0AC3  0837               	movwf	(setCursorLCD@x)
  2229  0AC4  00F3               	movlw	low(02h)
  2230  0AC5  3002               	fcall	_setCursorLCD
  2231  0AC6  120A  158A  207F  120A  158A  	line	72
  2232                           	
  2233                           l1997:	
  2234  0ACB                     ;LCD.c: 72:     if(decimal < 10){
  2235                           	movlw	low(0Ah)
  2236  0ACB  300A               	bcf	status, 5	;RP0=0, select bank0
  2237  0ACC  1283               	bcf	status, 6	;RP1=0, select bank0
  2238  0ACD  1303               	subwf	(writeFloat@decimal),w
  2239  0ACE  0235               	skipnc
  2240  0ACF  1803               	goto	u2171
  2241  0AD0  2AD2               	goto	u2170
  2242  0AD1  2AD3               u2171:
  2243  0AD2                     	goto	l2001
  2244  0AD2  2ADA               u2170:
  2245  0AD3                     	line	73
  2246                           	
  2247                           l1999:	
  2248  0AD3                     ;LCD.c: 73:         writeCharLCD('0');
  2249                           	movlw	low(030h)
  2250  0AD3  3030               	fcall	_writeCharLCD
  2251  0AD4  120A  158A  205C  120A  158A  	goto	l2001
  2252  0AD9  2ADA               	line	74
  2253                           ;LCD.c: 74:     }
  2254                           	
  2255                           l177:	
  2256  0ADA                     	line	75
  2257                           	
  2258                           l2001:	
  2259  0ADA                     ;LCD.c: 75:     writeIntLCD(decimal);
  2260                           	bcf	status, 5	;RP0=0, select bank0
  2261  0ADA  1283               	bcf	status, 6	;RP1=0, select bank0
  2262  0ADB  1303               	movf	(writeFloat@decimal),w
  2263  0ADC  0835               	fcall	_writeIntLCD
  2264  0ADD  120A  118A  200A  120A  158A  	line	77
  2265                           	
  2266                           l2003:	
  2267  0AE2                     ;LCD.c: 77:     setCursorLCD(2, initPos + 4);
  2268                           	bcf	status, 5	;RP0=0, select bank0
  2269  0AE2  1283               	bcf	status, 6	;RP1=0, select bank0
  2270  0AE3  1303               	movf	(writeFloat@initPos),w
  2271  0AE4  0836               	addlw	04h
  2272  0AE5  3E04               	movwf	(??_writeFloat+0)+0
  2273  0AE6  00B7               	movf	(??_writeFloat+0)+0,w
  2274  0AE7  0837               	movwf	(setCursorLCD@x)
  2275  0AE8  00F3               	movlw	low(02h)
  2276  0AE9  3002               	fcall	_setCursorLCD
  2277  0AEA  120A  158A  207F  120A  158A  	line	78
  2278                           	
  2279                           l2005:	
  2280  0AEF                     ;LCD.c: 78:     writeCharLCD('V');
  2281                           	movlw	low(056h)
  2282  0AEF  3056               	fcall	_writeCharLCD
  2283  0AF0  120A  158A  205C  120A  158A  	line	79
  2284                           	
  2285                           l178:	
  2286  0AF5                     	return
  2287  0AF5  0008               	opt stack 0
  2288                           GLOBAL	__end_of_writeFloat
  2289                           	__end_of_writeFloat:
  2290  0AF6                     	signat	_writeFloat,12409
  2291                           	global	_writeIntLCD
  2292                           
  2293 ;; *************** function _writeIntLCD *****************
  2294 ;; Defined at:
  2295 ;;		line 57 in file "LCD.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  numero          1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  numero          1   20[BANK0 ] unsigned char 
  2300 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       0       0       0       0
  2311 ;;      Locals:         0       5       0       0       0
  2312 ;;      Temps:          0       3       0       0       0
  2313 ;;      Totals:         0       8       0       0       0
  2314 ;;Total ram usage:        8 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    2
  2317 ;; This function calls:
  2318 ;;		_sprintf
  2319 ;;		_writeStrLCD
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;;		_writeFloat
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2326                           	line	57
  2327                           global __ptext2
  2328                           __ptext2:	;psect for function _writeIntLCD
  2329  000A                     psect	text2
  2330                           	file	"LCD.c"
  2331                           	line	57
  2332                           	global	__size_of_writeIntLCD
  2333                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2334  001E                     	
  2335                           _writeIntLCD:	
  2336  000A                     ;incstack = 0
  2337                           	opt	stack 5
  2338                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2339                           ;writeIntLCD@numero stored from wreg
  2340                           	bcf	status, 5	;RP0=0, select bank0
  2341  000A  1283               	bcf	status, 6	;RP1=0, select bank0
  2342  000B  1303               	movwf	(writeIntLCD@numero)
  2343  000C  00B4               	line	59
  2344                           	
  2345                           l1887:	
  2346  000D                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2347                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2348  000D  300B               	movwf	(??_writeIntLCD+0)+0
  2349  000E  00AD               	movf	(??_writeIntLCD+0)+0,w
  2350  000F  082D               	movwf	(sprintf@f)
  2351  0010  00A0               	movf	(writeIntLCD@numero),w
  2352  0011  0834               	movwf	(??_writeIntLCD+1)+0
  2353  0012  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2354  0013  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2355  0014  082E               	movwf	0+(?_sprintf)+01h
  2356  0015  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2357  0016  082F               	movwf	1+(?_sprintf)+01h
  2358  0017  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2359  0018  3030               	fcall	_sprintf
  2360  0019  120A  118A  20C2  120A  118A  	line	60
  2361                           ;LCD.c: 60:     writeStrLCD(buffer);
  2362                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2363  001E  3030               	movwf	(writeStrLCD@string)
  2364  001F  00F2               	movlw	(0x0)
  2365  0020  3000               	movwf	(writeStrLCD@string+1)
  2366  0021  00F3               	fcall	_writeStrLCD
  2367  0022  120A  158A  21A8  120A  118A  	line	61
  2368                           	
  2369                           l174:	
  2370  0027                     	return
  2371  0027  0008               	opt stack 0
  2372                           GLOBAL	__end_of_writeIntLCD
  2373                           	__end_of_writeIntLCD:
  2374  0028                     	signat	_writeIntLCD,4217
  2375                           	global	_sprintf
  2376                           
  2377 ;; *************** function _sprintf *****************
  2378 ;; Defined at:
  2379 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  sp              1    wreg     PTR unsigned char 
  2382 ;;		 -> writeIntLCD@buffer(4), 
  2383 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2384 ;;		 -> STR_5(3), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2387 ;;		 -> writeIntLCD@buffer(4), 
  2388 ;;  tmpval          4    0        struct .
  2389 ;;  val             2    9[BANK0 ] unsigned int 
  2390 ;;  cp              2    0        PTR const unsigned char 
  2391 ;;  len             2    0        unsigned int 
  2392 ;;  c               1   12[BANK0 ] unsigned char 
  2393 ;;  prec            1    8[BANK0 ] char 
  2394 ;;  flag            1    7[BANK0 ] unsigned char 
  2395 ;;  ap              1    6[BANK0 ] PTR void [1]
  2396 ;;		 -> ?_sprintf(2), 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  2    0[BANK0 ] int 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       3       0       0       0
  2407 ;;      Locals:         0       7       0       0       0
  2408 ;;      Temps:          0       3       0       0       0
  2409 ;;      Totals:         0      13       0       0       0
  2410 ;;Total ram usage:       13 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    1
  2413 ;; This function calls:
  2414 ;;		___lwdiv
  2415 ;;		___lwmod
  2416 ;; This function is called by:
  2417 ;;		_writeIntLCD
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2421                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2422                           	line	500
  2423                           global __ptext3
  2424                           __ptext3:	;psect for function _sprintf
  2425  00C2                     psect	text3
  2426                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2427                           	line	500
  2428                           	global	__size_of_sprintf
  2429                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2430  0100                     	
  2431                           _sprintf:	
  2432  00C2                     ;incstack = 0
  2433                           	opt	stack 5
  2434                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2435                           ;sprintf@sp stored from wreg
  2436                           	bcf	status, 5	;RP0=0, select bank0
  2437  00C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2438  00C3  1303               	movwf	(sprintf@sp)
  2439  00C4  00AB               	line	545
  2440                           	
  2441                           l1793:	
  2442  00C5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2443                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2444  00C5  3021               	movwf	(??_sprintf+0)+0
  2445  00C6  00A3               	movf	(??_sprintf+0)+0,w
  2446  00C7  0823               	movwf	(sprintf@ap)
  2447  00C8  00A6               	line	548
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2449                           	goto	l1845
  2450  00C9  29A8               	
  2451                           l270:	
  2452  00CA                     	line	550
  2453                           	
  2454                           l1795:	
  2455  00CA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2456                           		movlw	37
  2457  00CA  3025               	xorwf	((sprintf@c)),w
  2458  00CB  062C               	btfsc	status,2
  2459  00CC  1903               	goto	u1941
  2460  00CD  28CF               	goto	u1940
  2461  00CE  28D0               u1941:
  2462  00CF                     	goto	l1801
  2463  00CF  28DC               u1940:
  2464  00D0                     	line	553
  2465                           	
  2466                           l1797:	
  2467  00D0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2468                           	movf	(sprintf@c),w
  2469  00D0  082C               	movwf	(??_sprintf+0)+0
  2470  00D1  00A3               	movf	(sprintf@sp),w
  2471  00D2  082B               	movwf	fsr0
  2472  00D3  0084               	movf	(??_sprintf+0)+0,w
  2473  00D4  0823               	bcf	status, 7	;select IRP bank0
  2474  00D5  1383               	movwf	indf
  2475  00D6  0080               	
  2476                           l1799:	
  2477  00D7                     	movlw	low(01h)
  2478  00D7  3001               	movwf	(??_sprintf+0)+0
  2479  00D8  00A3               	movf	(??_sprintf+0)+0,w
  2480  00D9  0823               	addwf	(sprintf@sp),f
  2481  00DA  07AB               	line	554
  2482                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2483                           	goto	l1845
  2484  00DB  29A8               	line	555
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2486                           	
  2487                           l271:	
  2488  00DC                     	line	560
  2489                           	
  2490                           l1801:	
  2491  00DC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2492                           	clrf	(sprintf@flag)
  2493  00DC  01A7               	line	654
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2495                           	goto	l1805
  2496  00DD  28E3               	line	656
  2497                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2498                           	
  2499                           l273:	
  2500  00DE                     	line	657
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2502                           	goto	l1847
  2503  00DE  29BC               	line	716
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2505                           	
  2506                           l275:	
  2507  00DF                     	goto	l1807
  2508  00DF  2900               	line	717
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2510                           	
  2511                           l276:	
  2512  00E0                     	line	718
  2513                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2514                           	goto	l1807
  2515  00E0  2900               	line	821
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2517                           	
  2518                           l278:	
  2519  00E1                     	line	832
  2520                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2521                           	goto	l1845
  2522  00E1  29A8               	line	841
  2523                           	
  2524                           l1803:	
  2525  00E2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2526                           	goto	l1807
  2527  00E2  2900               	
  2528                           l272:	
  2529  00E3                     	
  2530                           l1805:	
  2531  00E3                     	movlw	01h
  2532  00E3  3001               	addwf	(sprintf@f),f
  2533  00E4  07A0               	movlw	-01h
  2534  00E5  30FF               	addwf	(sprintf@f),w
  2535  00E6  0720               	movwf	fsr0
  2536  00E7  0084               	fcall	stringdir
  2537  00E8  120A  158A  200A  120A  118A  	movwf	(sprintf@c)
  2538  00ED  00AC               	movwf	(??_sprintf+0)+0
  2539  00EE  00A3               	clrf	(??_sprintf+0)+0+1
  2540  00EF  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2541                           ; Switch size 1, requested type "space"
  2542                           ; Number of cases is 1, Range of values is 0 to 0
  2543                           ; switch strategies available:
  2544                           ; Name         Instructions Cycles
  2545                           ; simple_byte            4     3 (average)
  2546                           ; direct_byte           11     8 (fixed)
  2547                           ; jumptable            260     6 (fixed)
  2548                           ;	Chosen strategy is simple_byte
  2549                           
  2550                           	movf 1+(??_sprintf+0)+0,w
  2551  00F0  0824               	opt asmopt_push
  2552                           	opt asmopt_off
  2553                           	xorlw	0^0	; case 0
  2554  00F1  3A00               	skipnz
  2555  00F2  1903               	goto	l2649
  2556  00F3  28F5               	goto	l1845
  2557  00F4  29A8               	opt asmopt_pop
  2558                           	
  2559                           l2649:	
  2560  00F5                     ; Switch size 1, requested type "space"
  2561                           ; Number of cases is 3, Range of values is 0 to 105
  2562                           ; switch strategies available:
  2563                           ; Name         Instructions Cycles
  2564                           ; simple_byte           10     6 (average)
  2565                           ; jumptable            260     6 (fixed)
  2566                           ;	Chosen strategy is simple_byte
  2567                           
  2568                           	movf 0+(??_sprintf+0)+0,w
  2569  00F5  0823               	opt asmopt_push
  2570                           	opt asmopt_off
  2571                           	xorlw	0^0	; case 0
  2572  00F6  3A00               	skipnz
  2573  00F7  1903               	goto	l1847
  2574  00F8  29BC               	xorlw	100^0	; case 100
  2575  00F9  3A64               	skipnz
  2576  00FA  1903               	goto	l1807
  2577  00FB  2900               	xorlw	105^100	; case 105
  2578  00FC  3A0D               	skipnz
  2579  00FD  1903               	goto	l1807
  2580  00FE  2900               	goto	l1845
  2581  00FF  29A8               	opt asmopt_pop
  2582                           
  2583                           	
  2584                           l277:	
  2585  0100                     	line	1278
  2586                           	
  2587                           l1807:	
  2588  0100                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2589                           	movf	(sprintf@ap),w
  2590  0100  0826               	movwf	fsr0
  2591  0101  0084               	bcf	status, 7	;select IRP bank0
  2592  0102  1383               	movf	indf,w
  2593  0103  0800               	movwf	(sprintf@val)
  2594  0104  00A9               	incf	fsr0,f
  2595  0105  0A84               	movf	indf,w
  2596  0106  0800               	movwf	(sprintf@val+1)
  2597  0107  00AA               	
  2598                           l1809:	
  2599  0108                     	movlw	low(02h)
  2600  0108  3002               	movwf	(??_sprintf+0)+0
  2601  0109  00A3               	movf	(??_sprintf+0)+0,w
  2602  010A  0823               	addwf	(sprintf@ap),f
  2603  010B  07A6               	line	1280
  2604                           	
  2605                           l1811:	
  2606  010C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2607                           	btfss	(sprintf@val+1),7
  2608  010C  1FAA               	goto	u1951
  2609  010D  290F               	goto	u1950
  2610  010E  2910               u1951:
  2611  010F                     	goto	l1817
  2612  010F  291A               u1950:
  2613  0110                     	line	1281
  2614                           	
  2615                           l1813:	
  2616  0110                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2617                           	movlw	low(03h)
  2618  0110  3003               	movwf	(??_sprintf+0)+0
  2619  0111  00A3               	movf	(??_sprintf+0)+0,w
  2620  0112  0823               	iorwf	(sprintf@flag),f
  2621  0113  04A7               	line	1282
  2622                           	
  2623                           l1815:	
  2624  0114                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2625                           	comf	(sprintf@val),f
  2626  0114  09A9               	comf	(sprintf@val+1),f
  2627  0115  09AA               	incf	(sprintf@val),f
  2628  0116  0AA9               	skipnz
  2629  0117  1903               	incf	(sprintf@val+1),f
  2630  0118  0AAA               	goto	l1817
  2631  0119  291A               	line	1283
  2632                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2633                           	
  2634                           l279:	
  2635  011A                     	line	1324
  2636                           	
  2637                           l1817:	
  2638  011A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2639                           	clrf	(sprintf@c)
  2640  011A  01AC               	incf	(sprintf@c),f
  2641  011B  0AAC               	
  2642                           l1819:	
  2643  011C                     		movlw	5
  2644  011C  3005               	xorwf	((sprintf@c)),w
  2645  011D  062C               	btfss	status,2
  2646  011E  1D03               	goto	u1961
  2647  011F  2921               	goto	u1960
  2648  0120  2922               u1961:
  2649  0121                     	goto	l1823
  2650  0121  2924               u1960:
  2651  0122                     	goto	l1829
  2652  0122  294C               	
  2653                           l1821:	
  2654  0123                     	goto	l1829
  2655  0123  294C               	
  2656                           l280:	
  2657  0124                     	line	1325
  2658                           	
  2659                           l1823:	
  2660  0124                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2661                           	movf	(sprintf@c),w
  2662  0124  082C               	movwf	(??_sprintf+0)+0
  2663  0125  00A3               	addwf	(??_sprintf+0)+0,w
  2664  0126  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2665  0127  3E01               	movwf	fsr0
  2666  0128  0084               	fcall	stringdir
  2667  0129  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0
  2668  012E  00A4               	fcall	stringdir
  2669  012F  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0+1
  2670  0134  00A5               	movf	1+(??_sprintf+1)+0,w
  2671  0135  0825               	subwf	(sprintf@val+1),w
  2672  0136  022A               	skipz
  2673  0137  1D03               	goto	u1975
  2674  0138  293B               	movf	0+(??_sprintf+1)+0,w
  2675  0139  0824               	subwf	(sprintf@val),w
  2676  013A  0229               u1975:
  2677  013B                     	skipnc
  2678  013B  1803               	goto	u1971
  2679  013C  293E               	goto	u1970
  2680  013D  293F               u1971:
  2681  013E                     	goto	l1827
  2682  013E  2941               u1970:
  2683  013F                     	goto	l1829
  2684  013F  294C               	line	1326
  2685                           	
  2686                           l1825:	
  2687  0140                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2688                           	goto	l1829
  2689  0140  294C               	
  2690                           l282:	
  2691  0141                     	
  2692                           l1827:	
  2693  0141                     	movlw	low(01h)
  2694  0141  3001               	movwf	(??_sprintf+0)+0
  2695  0142  00A3               	movf	(??_sprintf+0)+0,w
  2696  0143  0823               	addwf	(sprintf@c),f
  2697  0144  07AC               		movlw	5
  2698  0145  3005               	xorwf	((sprintf@c)),w
  2699  0146  062C               	btfss	status,2
  2700  0147  1D03               	goto	u1981
  2701  0148  294A               	goto	u1980
  2702  0149  294B               u1981:
  2703  014A                     	goto	l1823
  2704  014A  2924               u1980:
  2705  014B                     	goto	l1829
  2706  014B  294C               	
  2707                           l281:	
  2708  014C                     	line	1457
  2709                           	
  2710                           l1829:	
  2711  014C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2712                           	movf	(sprintf@flag),w
  2713  014C  0827               	andlw	03h
  2714  014D  3903               	btfsc	status,2
  2715  014E  1903               	goto	u1991
  2716  014F  2951               	goto	u1990
  2717  0150  2952               u1991:
  2718  0151                     	goto	l1835
  2719  0151  295E               u1990:
  2720  0152                     	line	1458
  2721                           	
  2722                           l1831:	
  2723  0152                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2724                           	movlw	low(02Dh)
  2725  0152  302D               	movwf	(??_sprintf+0)+0
  2726  0153  00A3               	movf	(sprintf@sp),w
  2727  0154  082B               	movwf	fsr0
  2728  0155  0084               	movf	(??_sprintf+0)+0,w
  2729  0156  0823               	bcf	status, 7	;select IRP bank0
  2730  0157  1383               	movwf	indf
  2731  0158  0080               	
  2732                           l1833:	
  2733  0159                     	movlw	low(01h)
  2734  0159  3001               	movwf	(??_sprintf+0)+0
  2735  015A  00A3               	movf	(??_sprintf+0)+0,w
  2736  015B  0823               	addwf	(sprintf@sp),f
  2737  015C  07AB               	goto	l1835
  2738  015D  295E               	
  2739                           l283:	
  2740  015E                     	line	1491
  2741                           	
  2742                           l1835:	
  2743  015E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2744                           	movf	(sprintf@c),w
  2745  015E  082C               	movwf	(??_sprintf+0)+0
  2746  015F  00A3               	movf	(??_sprintf+0)+0,w
  2747  0160  0823               	movwf	(sprintf@prec)
  2748  0161  00A8               	line	1493
  2749                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2750                           	goto	l1843
  2751  0162  299D               	
  2752                           l285:	
  2753  0163                     	line	1508
  2754                           	
  2755                           l1837:	
  2756  0163                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2757                           	movlw	0Ah
  2758  0163  300A               	movwf	(___lwmod@divisor)
  2759  0164  00F8               	movlw	0
  2760  0165  3000               	movwf	((___lwmod@divisor))+1
  2761  0166  00F9               	movf	(sprintf@prec),w
  2762  0167  0828               	movwf	(??_sprintf+0)+0
  2763  0168  00A3               	addwf	(??_sprintf+0)+0,w
  2764  0169  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2765  016A  3E01               	movwf	fsr0
  2766  016B  0084               	fcall	stringdir
  2767  016C  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor)
  2768  0171  00F0               	fcall	stringdir
  2769  0172  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor+1)
  2770  0177  00F1               	movf	(sprintf@val+1),w
  2771  0178  082A               	movwf	(___lwdiv@dividend+1)
  2772  0179  00F3               	movf	(sprintf@val),w
  2773  017A  0829               	movwf	(___lwdiv@dividend)
  2774  017B  00F2               	fcall	___lwdiv
  2775  017C  120A  158A  21EC  120A  118A  	movf	(1+(?___lwdiv)),w
  2776  0181  0871               	movwf	(___lwmod@dividend+1)
  2777  0182  00FB               	movf	(0+(?___lwdiv)),w
  2778  0183  0870               	movwf	(___lwmod@dividend)
  2779  0184  00FA               	fcall	___lwmod
  2780  0185  120A  158A  2167  120A  118A  	movf	(0+(?___lwmod)),w
  2781  018A  0878               	addlw	030h
  2782  018B  3E30               	bcf	status, 5	;RP0=0, select bank0
  2783  018C  1283               	bcf	status, 6	;RP1=0, select bank0
  2784  018D  1303               	movwf	(??_sprintf+1)+0
  2785  018E  00A4               	movf	(??_sprintf+1)+0,w
  2786  018F  0824               	movwf	(sprintf@c)
  2787  0190  00AC               	line	1543
  2788                           	
  2789                           l1839:	
  2790  0191                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2791                           	movf	(sprintf@c),w
  2792  0191  082C               	movwf	(??_sprintf+0)+0
  2793  0192  00A3               	movf	(sprintf@sp),w
  2794  0193  082B               	movwf	fsr0
  2795  0194  0084               	movf	(??_sprintf+0)+0,w
  2796  0195  0823               	bcf	status, 7	;select IRP bank0
  2797  0196  1383               	movwf	indf
  2798  0197  0080               	
  2799                           l1841:	
  2800  0198                     	movlw	low(01h)
  2801  0198  3001               	movwf	(??_sprintf+0)+0
  2802  0199  00A3               	movf	(??_sprintf+0)+0,w
  2803  019A  0823               	addwf	(sprintf@sp),f
  2804  019B  07AB               	goto	l1843
  2805  019C  299D               	line	1544
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2807                           	
  2808                           l284:	
  2809  019D                     	line	1493
  2810                           	
  2811                           l1843:	
  2812  019D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2813                           	movlw	low(-1)
  2814  019D  30FF               	movwf	(??_sprintf+0)+0
  2815  019E  00A3               	movf	(??_sprintf+0)+0,w
  2816  019F  0823               	addwf	(sprintf@prec),f
  2817  01A0  07A8               		incf	(((sprintf@prec))),w
  2818  01A1  0A28               	btfss	status,2
  2819  01A2  1D03               	goto	u2001
  2820  01A3  29A5               	goto	u2000
  2821  01A4  29A6               u2001:
  2822  01A5                     	goto	l1837
  2823  01A5  2963               u2000:
  2824  01A6                     	goto	l1845
  2825  01A6  29A8               	
  2826                           l286:	
  2827  01A7                     	goto	l1845
  2828  01A7  29A8               	line	1552
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2830                           	
  2831                           l269:	
  2832  01A8                     	line	548
  2833                           	
  2834                           l1845:	
  2835  01A8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2836                           	movlw	01h
  2837  01A8  3001               	addwf	(sprintf@f),f
  2838  01A9  07A0               	movlw	-01h
  2839  01AA  30FF               	addwf	(sprintf@f),w
  2840  01AB  0720               	movwf	fsr0
  2841  01AC  0084               	fcall	stringdir
  2842  01AD  120A  158A  200A  120A  118A  	movwf	(??_sprintf+0)+0
  2843  01B2  00A3               	movf	(??_sprintf+0)+0,w
  2844  01B3  0823               	movwf	(sprintf@c)
  2845  01B4  00AC               	movf	(((sprintf@c))),w
  2846  01B5  082C               	btfss	status,2
  2847  01B6  1D03               	goto	u2011
  2848  01B7  29B9               	goto	u2010
  2849  01B8  29BA               u2011:
  2850  01B9                     	goto	l1795
  2851  01B9  28CA               u2010:
  2852  01BA                     	goto	l1847
  2853  01BA  29BC               	
  2854                           l287:	
  2855  01BB                     	goto	l1847
  2856  01BB  29BC               	line	1554
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2858                           	
  2859                           l274:	
  2860  01BC                     	line	1557
  2861                           	
  2862                           l1847:	
  2863  01BC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2864                           	movf	(sprintf@sp),w
  2865  01BC  082B               	movwf	fsr0
  2866  01BD  0084               	bcf	status, 7	;select IRP bank0
  2867  01BE  1383               	clrf	indf
  2868  01BF  0180               	goto	l288
  2869  01C0  29C1               	line	1559
  2870                           	
  2871                           l1849:	
  2872  01C1                     	line	1560
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2874                           	
  2875                           l288:	
  2876  01C1                     	return
  2877  01C1  0008               	opt stack 0
  2878                           GLOBAL	__end_of_sprintf
  2879                           	__end_of_sprintf:
  2880  01C2                     	signat	_sprintf,4698
  2881                           	global	___lwmod
  2882                           
  2883 ;; *************** function ___lwmod *****************
  2884 ;; Defined at:
  2885 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  divisor         2    8[COMMON] unsigned int 
  2888 ;;  dividend        2   10[COMMON] unsigned int 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  counter         1   13[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    8[COMMON] unsigned int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         4       0       0       0       0
  2901 ;;      Locals:         1       0       0       0       0
  2902 ;;      Temps:          1       0       0       0       0
  2903 ;;      Totals:         6       0       0       0       0
  2904 ;;Total ram usage:        6 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_sprintf
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2913                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2914                           	line	5
  2915                           global __ptext4
  2916                           __ptext4:	;psect for function ___lwmod
  2917  0967                     psect	text4
  2918                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2919                           	line	5
  2920                           	global	__size_of___lwmod
  2921                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2922  0041                     	
  2923                           ___lwmod:	
  2924  0967                     ;incstack = 0
  2925                           	opt	stack 5
  2926                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2927                           	line	12
  2928                           	
  2929                           l1755:	
  2930  0967                     	movf	((___lwmod@divisor)),w
  2931  0967  0878               iorwf	((___lwmod@divisor+1)),w
  2932  0968  0479               	btfsc	status,2
  2933  0969  1903               	goto	u1851
  2934  096A  296C               	goto	u1850
  2935  096B  296D               u1851:
  2936  096C                     	goto	l1773
  2937  096C  29A2               u1850:
  2938  096D                     	line	13
  2939                           	
  2940                           l1757:	
  2941  096D                     	clrf	(___lwmod@counter)
  2942  096D  01FD               	incf	(___lwmod@counter),f
  2943  096E  0AFD               	line	14
  2944                           	goto	l1763
  2945  096F  297C               	
  2946                           l569:	
  2947  0970                     	line	15
  2948                           	
  2949                           l1759:	
  2950  0970                     	movlw	01h
  2951  0970  3001               	
  2952                           u1865:
  2953  0971                     	clrc
  2954  0971  1003               	rlf	(___lwmod@divisor),f
  2955  0972  0DF8               	rlf	(___lwmod@divisor+1),f
  2956  0973  0DF9               	addlw	-1
  2957  0974  3EFF               	skipz
  2958  0975  1D03               	goto	u1865
  2959  0976  2971               	line	16
  2960                           	
  2961                           l1761:	
  2962  0977                     	movlw	low(01h)
  2963  0977  3001               	movwf	(??___lwmod+0)+0
  2964  0978  00FC               	movf	(??___lwmod+0)+0,w
  2965  0979  087C               	addwf	(___lwmod@counter),f
  2966  097A  07FD               	goto	l1763
  2967  097B  297C               	line	17
  2968                           	
  2969                           l568:	
  2970  097C                     	line	14
  2971                           	
  2972                           l1763:	
  2973  097C                     	btfss	(___lwmod@divisor+1),(15)&7
  2974  097C  1FF9               	goto	u1871
  2975  097D  297F               	goto	u1870
  2976  097E  2980               u1871:
  2977  097F                     	goto	l1759
  2978  097F  2970               u1870:
  2979  0980                     	goto	l1765
  2980  0980  2982               	
  2981                           l570:	
  2982  0981                     	goto	l1765
  2983  0981  2982               	line	18
  2984                           	
  2985                           l571:	
  2986  0982                     	line	19
  2987                           	
  2988                           l1765:	
  2989  0982                     	movf	(___lwmod@divisor+1),w
  2990  0982  0879               	subwf	(___lwmod@dividend+1),w
  2991  0983  027B               	skipz
  2992  0984  1D03               	goto	u1885
  2993  0985  2988               	movf	(___lwmod@divisor),w
  2994  0986  0878               	subwf	(___lwmod@dividend),w
  2995  0987  027A               u1885:
  2996  0988                     	skipc
  2997  0988  1C03               	goto	u1881
  2998  0989  298B               	goto	u1880
  2999  098A  298C               u1881:
  3000  098B                     	goto	l1769
  3001  098B  2993               u1880:
  3002  098C                     	line	20
  3003                           	
  3004                           l1767:	
  3005  098C                     	movf	(___lwmod@divisor),w
  3006  098C  0878               	subwf	(___lwmod@dividend),f
  3007  098D  02FA               	movf	(___lwmod@divisor+1),w
  3008  098E  0879               	skipc
  3009  098F  1C03               	decf	(___lwmod@dividend+1),f
  3010  0990  03FB               	subwf	(___lwmod@dividend+1),f
  3011  0991  02FB               	goto	l1769
  3012  0992  2993               	
  3013                           l572:	
  3014  0993                     	line	21
  3015                           	
  3016                           l1769:	
  3017  0993                     	movlw	01h
  3018  0993  3001               	
  3019                           u1895:
  3020  0994                     	clrc
  3021  0994  1003               	rrf	(___lwmod@divisor+1),f
  3022  0995  0CF9               	rrf	(___lwmod@divisor),f
  3023  0996  0CF8               	addlw	-1
  3024  0997  3EFF               	skipz
  3025  0998  1D03               	goto	u1895
  3026  0999  2994               	line	22
  3027                           	
  3028                           l1771:	
  3029  099A                     	movlw	01h
  3030  099A  3001               	subwf	(___lwmod@counter),f
  3031  099B  02FD               	btfss	status,2
  3032  099C  1D03               	goto	u1901
  3033  099D  299F               	goto	u1900
  3034  099E  29A0               u1901:
  3035  099F                     	goto	l1765
  3036  099F  2982               u1900:
  3037  09A0                     	goto	l1773
  3038  09A0  29A2               	
  3039                           l573:	
  3040  09A1                     	goto	l1773
  3041  09A1  29A2               	line	23
  3042                           	
  3043                           l567:	
  3044  09A2                     	line	24
  3045                           	
  3046                           l1773:	
  3047  09A2                     	movf	(___lwmod@dividend+1),w
  3048  09A2  087B               	movwf	(?___lwmod+1)
  3049  09A3  00F9               	movf	(___lwmod@dividend),w
  3050  09A4  087A               	movwf	(?___lwmod)
  3051  09A5  00F8               	goto	l574
  3052  09A6  29A7               	
  3053                           l1775:	
  3054  09A7                     	line	25
  3055                           	
  3056                           l574:	
  3057  09A7                     	return
  3058  09A7  0008               	opt stack 0
  3059                           GLOBAL	__end_of___lwmod
  3060                           	__end_of___lwmod:
  3061  09A8                     	signat	___lwmod,8314
  3062                           	global	___lwdiv
  3063                           
  3064 ;; *************** function ___lwdiv *****************
  3065 ;; Defined at:
  3066 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  divisor         2    0[COMMON] unsigned int 
  3069 ;;  dividend        2    2[COMMON] unsigned int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  quotient        2    5[COMMON] unsigned int 
  3072 ;;  counter         1    7[COMMON] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  2    0[COMMON] unsigned int 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         4       0       0       0       0
  3083 ;;      Locals:         3       0       0       0       0
  3084 ;;      Temps:          1       0       0       0       0
  3085 ;;      Totals:         8       0       0       0       0
  3086 ;;Total ram usage:        8 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_sprintf
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3095                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3096                           	line	5
  3097                           global __ptext5
  3098                           __ptext5:	;psect for function ___lwdiv
  3099  09EC                     psect	text5
  3100                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3101                           	line	5
  3102                           	global	__size_of___lwdiv
  3103                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3104  004B                     	
  3105                           ___lwdiv:	
  3106  09EC                     ;incstack = 0
  3107                           	opt	stack 5
  3108                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3109                           	line	13
  3110                           	
  3111                           l1729:	
  3112  09EC                     	clrf	(___lwdiv@quotient)
  3113  09EC  01F5               	clrf	(___lwdiv@quotient+1)
  3114  09ED  01F6               	line	14
  3115                           	
  3116                           l1731:	
  3117  09EE                     	movf	((___lwdiv@divisor)),w
  3118  09EE  0870               iorwf	((___lwdiv@divisor+1)),w
  3119  09EF  0471               	btfsc	status,2
  3120  09F0  1903               	goto	u1781
  3121  09F1  29F3               	goto	u1780
  3122  09F2  29F4               u1781:
  3123  09F3                     	goto	l1751
  3124  09F3  2A31               u1780:
  3125  09F4                     	line	15
  3126                           	
  3127                           l1733:	
  3128  09F4                     	clrf	(___lwdiv@counter)
  3129  09F4  01F7               	incf	(___lwdiv@counter),f
  3130  09F5  0AF7               	line	16
  3131                           	goto	l1739
  3132  09F6  2A03               	
  3133                           l559:	
  3134  09F7                     	line	17
  3135                           	
  3136                           l1735:	
  3137  09F7                     	movlw	01h
  3138  09F7  3001               	
  3139                           u1795:
  3140  09F8                     	clrc
  3141  09F8  1003               	rlf	(___lwdiv@divisor),f
  3142  09F9  0DF0               	rlf	(___lwdiv@divisor+1),f
  3143  09FA  0DF1               	addlw	-1
  3144  09FB  3EFF               	skipz
  3145  09FC  1D03               	goto	u1795
  3146  09FD  29F8               	line	18
  3147                           	
  3148                           l1737:	
  3149  09FE                     	movlw	low(01h)
  3150  09FE  3001               	movwf	(??___lwdiv+0)+0
  3151  09FF  00F4               	movf	(??___lwdiv+0)+0,w
  3152  0A00  0874               	addwf	(___lwdiv@counter),f
  3153  0A01  07F7               	goto	l1739
  3154  0A02  2A03               	line	19
  3155                           	
  3156                           l558:	
  3157  0A03                     	line	16
  3158                           	
  3159                           l1739:	
  3160  0A03                     	btfss	(___lwdiv@divisor+1),(15)&7
  3161  0A03  1FF1               	goto	u1801
  3162  0A04  2A06               	goto	u1800
  3163  0A05  2A07               u1801:
  3164  0A06                     	goto	l1735
  3165  0A06  29F7               u1800:
  3166  0A07                     	goto	l1741
  3167  0A07  2A09               	
  3168                           l560:	
  3169  0A08                     	goto	l1741
  3170  0A08  2A09               	line	20
  3171                           	
  3172                           l561:	
  3173  0A09                     	line	21
  3174                           	
  3175                           l1741:	
  3176  0A09                     	movlw	01h
  3177  0A09  3001               	
  3178                           u1815:
  3179  0A0A                     	clrc
  3180  0A0A  1003               	rlf	(___lwdiv@quotient),f
  3181  0A0B  0DF5               	rlf	(___lwdiv@quotient+1),f
  3182  0A0C  0DF6               	addlw	-1
  3183  0A0D  3EFF               	skipz
  3184  0A0E  1D03               	goto	u1815
  3185  0A0F  2A0A               	line	22
  3186                           	movf	(___lwdiv@divisor+1),w
  3187  0A10  0871               	subwf	(___lwdiv@dividend+1),w
  3188  0A11  0273               	skipz
  3189  0A12  1D03               	goto	u1825
  3190  0A13  2A16               	movf	(___lwdiv@divisor),w
  3191  0A14  0870               	subwf	(___lwdiv@dividend),w
  3192  0A15  0272               u1825:
  3193  0A16                     	skipc
  3194  0A16  1C03               	goto	u1821
  3195  0A17  2A19               	goto	u1820
  3196  0A18  2A1A               u1821:
  3197  0A19                     	goto	l1747
  3198  0A19  2A22               u1820:
  3199  0A1A                     	line	23
  3200                           	
  3201                           l1743:	
  3202  0A1A                     	movf	(___lwdiv@divisor),w
  3203  0A1A  0870               	subwf	(___lwdiv@dividend),f
  3204  0A1B  02F2               	movf	(___lwdiv@divisor+1),w
  3205  0A1C  0871               	skipc
  3206  0A1D  1C03               	decf	(___lwdiv@dividend+1),f
  3207  0A1E  03F3               	subwf	(___lwdiv@dividend+1),f
  3208  0A1F  02F3               	line	24
  3209                           	
  3210                           l1745:	
  3211  0A20                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3212  0A20  1475               	goto	l1747
  3213  0A21  2A22               	line	25
  3214                           	
  3215                           l562:	
  3216  0A22                     	line	26
  3217                           	
  3218                           l1747:	
  3219  0A22                     	movlw	01h
  3220  0A22  3001               	
  3221                           u1835:
  3222  0A23                     	clrc
  3223  0A23  1003               	rrf	(___lwdiv@divisor+1),f
  3224  0A24  0CF1               	rrf	(___lwdiv@divisor),f
  3225  0A25  0CF0               	addlw	-1
  3226  0A26  3EFF               	skipz
  3227  0A27  1D03               	goto	u1835
  3228  0A28  2A23               	line	27
  3229                           	
  3230                           l1749:	
  3231  0A29                     	movlw	01h
  3232  0A29  3001               	subwf	(___lwdiv@counter),f
  3233  0A2A  02F7               	btfss	status,2
  3234  0A2B  1D03               	goto	u1841
  3235  0A2C  2A2E               	goto	u1840
  3236  0A2D  2A2F               u1841:
  3237  0A2E                     	goto	l1741
  3238  0A2E  2A09               u1840:
  3239  0A2F                     	goto	l1751
  3240  0A2F  2A31               	
  3241                           l563:	
  3242  0A30                     	goto	l1751
  3243  0A30  2A31               	line	28
  3244                           	
  3245                           l557:	
  3246  0A31                     	line	29
  3247                           	
  3248                           l1751:	
  3249  0A31                     	movf	(___lwdiv@quotient+1),w
  3250  0A31  0876               	movwf	(?___lwdiv+1)
  3251  0A32  00F1               	movf	(___lwdiv@quotient),w
  3252  0A33  0875               	movwf	(?___lwdiv)
  3253  0A34  00F0               	goto	l564
  3254  0A35  2A36               	
  3255                           l1753:	
  3256  0A36                     	line	30
  3257                           	
  3258                           l564:	
  3259  0A36                     	return
  3260  0A36  0008               	opt stack 0
  3261                           GLOBAL	__end_of___lwdiv
  3262                           	__end_of___lwdiv:
  3263  0A37                     	signat	___lwdiv,8314
  3264                           	global	_setup
  3265                           
  3266 ;; *************** function _setup *****************
  3267 ;; Defined at:
  3268 ;;		line 107 in file "mainM.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0
  3284 ;;      Temps:          0       1       0       0       0
  3285 ;;      Totals:         0       1       0       0       0
  3286 ;;Total ram usage:        1 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    2
  3289 ;; This function calls:
  3290 ;;		_I2C_Master_Init
  3291 ;;		_clcLCD
  3292 ;;		_initLCD
  3293 ;;		_setCursorLCD
  3294 ;;		_writeStrLCD
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3300                           	file	"mainM.c"
  3301                           	line	107
  3302                           global __ptext6
  3303                           __ptext6:	;psect for function _setup
  3304  0A37                     psect	text6
  3305                           	file	"mainM.c"
  3306                           	line	107
  3307                           	global	__size_of_setup
  3308                           	__size_of_setup	equ	__end_of_setup-_setup
  3309  005F                     	
  3310                           _setup:	
  3311  0A37                     ;incstack = 0
  3312                           	opt	stack 5
  3313                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3314                           	line	109
  3315                           	
  3316                           l1939:	
  3317  0A37                     ;mainM.c: 109:     ANSEL = 0;
  3318                           	bsf	status, 5	;RP0=1, select bank3
  3319  0A37  1683               	bsf	status, 6	;RP1=1, select bank3
  3320  0A38  1703               	clrf	(392)^0180h	;volatile
  3321  0A39  0188               	line	110
  3322                           ;mainM.c: 110:     ANSELH = 0;
  3323                           	clrf	(393)^0180h	;volatile
  3324  0A3A  0189               	line	111
  3325                           ;mainM.c: 111:     TRISB = 0;
  3326                           	bsf	status, 5	;RP0=1, select bank1
  3327  0A3B  1683               	bcf	status, 6	;RP1=0, select bank1
  3328  0A3C  1303               	clrf	(134)^080h	;volatile
  3329  0A3D  0186               	line	112
  3330                           ;mainM.c: 112:     TRISD = 0;
  3331                           	clrf	(136)^080h	;volatile
  3332  0A3E  0188               	line	113
  3333                           ;mainM.c: 113:     PORTB = 0;
  3334                           	bcf	status, 5	;RP0=0, select bank0
  3335  0A3F  1283               	bcf	status, 6	;RP1=0, select bank0
  3336  0A40  1303               	clrf	(6)	;volatile
  3337  0A41  0186               	line	114
  3338                           ;mainM.c: 114:     PORTD = 0;
  3339                           	clrf	(8)	;volatile
  3340  0A42  0188               	line	115
  3341                           	
  3342                           l1941:	
  3343  0A43                     ;mainM.c: 115:     I2C_Master_Init(100000);
  3344                           	movlw	0
  3345  0A43  3000               	movwf	(I2C_Master_Init@c+3)
  3346  0A44  00A3               	movlw	01h
  3347  0A45  3001               	movwf	(I2C_Master_Init@c+2)
  3348  0A46  00A2               	movlw	086h
  3349  0A47  3086               	movwf	(I2C_Master_Init@c+1)
  3350  0A48  00A1               	movlw	0A0h
  3351  0A49  30A0               	movwf	(I2C_Master_Init@c)
  3352  0A4A  00A0               
  3353                           	fcall	_I2C_Master_Init
  3354  0A4B  120A  158A  20F5  120A  158A  	line	117
  3355                           	
  3356                           l1943:	
  3357  0A50                     ;mainM.c: 117:     initLCD();
  3358                           	fcall	_initLCD
  3359  0A50  120A  158A  212D  120A  158A  	line	118
  3360                           	
  3361                           l1945:	
  3362  0A55                     ;mainM.c: 118:     clcLCD();
  3363                           	fcall	_clcLCD
  3364  0A55  120A  118A  2003  120A  158A  	line	121
  3365                           	
  3366                           l1947:	
  3367  0A5A                     ;mainM.c: 121:     setCursorLCD(1, 1);
  3368                           	clrf	(setCursorLCD@x)
  3369  0A5A  01F3               	incf	(setCursorLCD@x),f
  3370  0A5B  0AF3               	movlw	low(01h)
  3371  0A5C  3001               	fcall	_setCursorLCD
  3372  0A5D  120A  158A  207F  120A  158A  	line	122
  3373                           	
  3374                           l1949:	
  3375  0A62                     ;mainM.c: 122:     writeStrLCD("S1");
  3376                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3377  0A62  3011               	movwf	(writeStrLCD@string)
  3378  0A63  00F2               	movlw	80h
  3379  0A64  3080               	movwf	(writeStrLCD@string+1)
  3380  0A65  00F3               	fcall	_writeStrLCD
  3381  0A66  120A  158A  21A8  120A  158A  	line	123
  3382                           	
  3383                           l1951:	
  3384  0A6B                     ;mainM.c: 123:     setCursorLCD(1, 7);
  3385                           	movlw	low(07h)
  3386  0A6B  3007               	bcf	status, 5	;RP0=0, select bank0
  3387  0A6C  1283               	bcf	status, 6	;RP1=0, select bank0
  3388  0A6D  1303               	movwf	(??_setup+0)+0
  3389  0A6E  00A8               	movf	(??_setup+0)+0,w
  3390  0A6F  0828               	movwf	(setCursorLCD@x)
  3391  0A70  00F3               	movlw	low(01h)
  3392  0A71  3001               	fcall	_setCursorLCD
  3393  0A72  120A  158A  207F  120A  158A  	line	124
  3394                           	
  3395                           l1953:	
  3396  0A77                     ;mainM.c: 124:     writeStrLCD("S2");
  3397                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3398  0A77  3014               	movwf	(writeStrLCD@string)
  3399  0A78  00F2               	movlw	80h
  3400  0A79  3080               	movwf	(writeStrLCD@string+1)
  3401  0A7A  00F3               	fcall	_writeStrLCD
  3402  0A7B  120A  158A  21A8  120A  158A  	line	125
  3403                           	
  3404                           l1955:	
  3405  0A80                     ;mainM.c: 125:     setCursorLCD(1, 13);
  3406                           	movlw	low(0Dh)
  3407  0A80  300D               	bcf	status, 5	;RP0=0, select bank0
  3408  0A81  1283               	bcf	status, 6	;RP1=0, select bank0
  3409  0A82  1303               	movwf	(??_setup+0)+0
  3410  0A83  00A8               	movf	(??_setup+0)+0,w
  3411  0A84  0828               	movwf	(setCursorLCD@x)
  3412  0A85  00F3               	movlw	low(01h)
  3413  0A86  3001               	fcall	_setCursorLCD
  3414  0A87  120A  158A  207F  120A  158A  	line	126
  3415                           	
  3416                           l1957:	
  3417  0A8C                     ;mainM.c: 126:     writeStrLCD("S3");
  3418                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3419  0A8C  3017               	movwf	(writeStrLCD@string)
  3420  0A8D  00F2               	movlw	80h
  3421  0A8E  3080               	movwf	(writeStrLCD@string+1)
  3422  0A8F  00F3               	fcall	_writeStrLCD
  3423  0A90  120A  158A  21A8  120A  158A  	line	127
  3424                           	
  3425                           l77:	
  3426  0A95                     	return
  3427  0A95  0008               	opt stack 0
  3428                           GLOBAL	__end_of_setup
  3429                           	__end_of_setup:
  3430  0A96                     	signat	_setup,89
  3431                           	global	_writeStrLCD
  3432                           
  3433 ;; *************** function _writeStrLCD *****************
  3434 ;; Defined at:
  3435 ;;		line 21 in file "LCD.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  string          2    2[COMMON] PTR unsigned char 
  3438 ;;		 -> writeIntLCD@buffer(4), STR_4(3), STR_3(3), STR_2(3), 
  3439 ;;		 -> STR_1(3), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  cont            2    7[COMMON] int 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         2       0       0       0       0
  3452 ;;      Locals:         2       0       0       0       0
  3453 ;;      Temps:          3       0       0       0       0
  3454 ;;      Totals:         7       0       0       0       0
  3455 ;;Total ram usage:        7 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    1
  3458 ;; This function calls:
  3459 ;;		_writeCharLCD
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;;		_setup
  3463 ;;		_writeIntLCD
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3467                           	file	"LCD.c"
  3468                           	line	21
  3469                           global __ptext7
  3470                           __ptext7:	;psect for function _writeStrLCD
  3471  09A8                     psect	text7
  3472                           	file	"LCD.c"
  3473                           	line	21
  3474                           	global	__size_of_writeStrLCD
  3475                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3476  0044                     	
  3477                           _writeStrLCD:	
  3478  09A8                     ;incstack = 0
  3479                           	opt	stack 6
  3480                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3481                           	line	23
  3482                           	
  3483                           l1777:	
  3484  09A8                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3485                           	clrf	(writeStrLCD@cont)
  3486  09A8  01F7               	clrf	(writeStrLCD@cont+1)
  3487  09A9  01F8               	goto	l1783
  3488  09AA  29CE               	
  3489                           l160:	
  3490  09AB                     	line	24
  3491                           	
  3492                           l1779:	
  3493  09AB                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3494                           	movf	(writeStrLCD@cont),w
  3495  09AB  0877               	addwf	(writeStrLCD@string),w
  3496  09AC  0772               	movwf	(??_writeStrLCD+1)+0
  3497  09AD  00F5               	movf	(writeStrLCD@string+1),w
  3498  09AE  0873               	movwf	(??_writeStrLCD+0)+0
  3499  09AF  00F4               	skipnc
  3500  09B0  1803               	incf	(??_writeStrLCD+0)+0,f
  3501  09B1  0AF4               	btfss	(writeStrLCD@cont),7
  3502  09B2  1FF7               	goto	u1910
  3503  09B3  29B5               	decf	(??_writeStrLCD+0)+0,f
  3504  09B4  03F4               u1910:
  3505  09B5                     	movf	(??_writeStrLCD+0)+0,w
  3506  09B5  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3507  09B6  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3508  09B7  0876               	bcf	status, 5	;RP0=0, select bank0
  3509  09B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3510  09B9  1303               	movwf	btemp+1
  3511  09BA  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3512  09BB  0875               	movwf	fsr0
  3513  09BC  0084               	fcall	stringtab
  3514  09BD  120A  158A  2000  120A  158A  	fcall	_writeCharLCD
  3515  09C2  120A  158A  205C  120A  158A  	line	25
  3516                           	
  3517                           l1781:	
  3518  09C7                     ;LCD.c: 25:     }
  3519                           	movlw	01h
  3520  09C7  3001               	addwf	(writeStrLCD@cont),f
  3521  09C8  07F7               	skipnc
  3522  09C9  1803               	incf	(writeStrLCD@cont+1),f
  3523  09CA  0AF8               	movlw	0
  3524  09CB  3000               	addwf	(writeStrLCD@cont+1),f
  3525  09CC  07F8               	goto	l1783
  3526  09CD  29CE               	
  3527                           l159:	
  3528  09CE                     	
  3529                           l1783:	
  3530  09CE                     	movf	(writeStrLCD@cont),w
  3531  09CE  0877               	addwf	(writeStrLCD@string),w
  3532  09CF  0772               	movwf	(??_writeStrLCD+1)+0
  3533  09D0  00F5               	movf	(writeStrLCD@string+1),w
  3534  09D1  0873               	movwf	(??_writeStrLCD+0)+0
  3535  09D2  00F4               	skipnc
  3536  09D3  1803               	incf	(??_writeStrLCD+0)+0,f
  3537  09D4  0AF4               	btfss	(writeStrLCD@cont),7
  3538  09D5  1FF7               	goto	u1920
  3539  09D6  29D8               	decf	(??_writeStrLCD+0)+0,f
  3540  09D7  03F4               u1920:
  3541  09D8                     	movf	(??_writeStrLCD+0)+0,w
  3542  09D8  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3543  09D9  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3544  09DA  0876               	bcf	status, 5	;RP0=0, select bank0
  3545  09DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3546  09DC  1303               	movwf	btemp+1
  3547  09DD  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3548  09DE  0875               	movwf	fsr0
  3549  09DF  0084               	fcall	stringtab
  3550  09E0  120A  158A  2000  120A  158A  	xorlw	0
  3551  09E5  3A00               	skipz
  3552  09E6  1D03               	goto	u1931
  3553  09E7  29E9               	goto	u1930
  3554  09E8  29EA               u1931:
  3555  09E9                     	goto	l1779
  3556  09E9  29AB               u1930:
  3557  09EA                     	goto	l162
  3558  09EA  29EB               	
  3559                           l161:	
  3560  09EB                     	line	26
  3561                           	
  3562                           l162:	
  3563  09EB                     	return
  3564  09EB  0008               	opt stack 0
  3565                           GLOBAL	__end_of_writeStrLCD
  3566                           	__end_of_writeStrLCD:
  3567  09EC                     	signat	_writeStrLCD,4217
  3568                           	global	_writeCharLCD
  3569                           
  3570 ;; *************** function _writeCharLCD *****************
  3571 ;; Defined at:
  3572 ;;		line 28 in file "LCD.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  character       1    wreg     unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  character       1    1[COMMON] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         0       0       0       0       0
  3587 ;;      Locals:         1       0       0       0       0
  3588 ;;      Temps:          1       0       0       0       0
  3589 ;;      Totals:         2       0       0       0       0
  3590 ;;Total ram usage:        2 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;;		_writeStrLCD
  3597 ;;		_writeFloat
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3601                           	line	28
  3602                           global __ptext8
  3603                           __ptext8:	;psect for function _writeCharLCD
  3604  085C                     psect	text8
  3605                           	file	"LCD.c"
  3606                           	line	28
  3607                           	global	__size_of_writeCharLCD
  3608                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3609  000F                     	
  3610                           _writeCharLCD:	
  3611  085C                     ;incstack = 0
  3612                           	opt	stack 6
  3613                           ; Regs used in _writeCharLCD: [wreg]
  3614                           ;writeCharLCD@character stored from wreg
  3615                           	movwf	(writeCharLCD@character)
  3616  085C  00F1               	line	29
  3617                           	
  3618                           l1721:	
  3619  085D                     ;LCD.c: 29:    RD0 = 1;
  3620                           	bcf	status, 5	;RP0=0, select bank0
  3621  085D  1283               	bcf	status, 6	;RP1=0, select bank0
  3622  085E  1303               	bsf	(64/8),(64)&7	;volatile
  3623  085F  1408               	line	30
  3624                           	
  3625                           l1723:	
  3626  0860                     ;LCD.c: 30:    PORTB = character;
  3627                           	movf	(writeCharLCD@character),w
  3628  0860  0871               	movwf	(6)	;volatile
  3629  0861  0086               	line	31
  3630                           	
  3631                           l1725:	
  3632  0862                     ;LCD.c: 31:    RD1 = 1;
  3633                           	bsf	(65/8),(65)&7	;volatile
  3634  0862  1488               	line	32
  3635                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3636                           	opt asmopt_push
  3637                           opt asmopt_off
  3638                           	movlw	13
  3639  0863  300D               movwf	((??_writeCharLCD+0)+0),f
  3640  0864  00F0               	u3587:
  3641  0865                     decfsz	(??_writeCharLCD+0)+0,f
  3642  0865  0BF0               	goto	u3587
  3643  0866  2865               opt asmopt_pop
  3644                           
  3645                           	line	33
  3646                           	
  3647                           l1727:	
  3648  0867                     ;LCD.c: 33:    RD1 = 0;
  3649                           	bcf	status, 5	;RP0=0, select bank0
  3650  0867  1283               	bcf	status, 6	;RP1=0, select bank0
  3651  0868  1303               	bcf	(65/8),(65)&7	;volatile
  3652  0869  1088               	line	34
  3653                           	
  3654                           l165:	
  3655  086A                     	return
  3656  086A  0008               	opt stack 0
  3657                           GLOBAL	__end_of_writeCharLCD
  3658                           	__end_of_writeCharLCD:
  3659  086B                     	signat	_writeCharLCD,4217
  3660                           	global	_setCursorLCD
  3661                           
  3662 ;; *************** function _setCursorLCD *****************
  3663 ;; Defined at:
  3664 ;;		line 8 in file "LCD.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  y               1    wreg     unsigned char 
  3667 ;;  x               1    3[COMMON] unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  y               1    5[COMMON] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         1       0       0       0       0
  3680 ;;      Locals:         1       0       0       0       0
  3681 ;;      Temps:          1       0       0       0       0
  3682 ;;      Totals:         3       0       0       0       0
  3683 ;;Total ram usage:        3 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    1
  3686 ;; This function calls:
  3687 ;;		_cmdLCD
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;;		_setup
  3691 ;;		_writeFloat
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3695                           	line	8
  3696                           global __ptext9
  3697                           __ptext9:	;psect for function _setCursorLCD
  3698  087F                     psect	text9
  3699                           	file	"LCD.c"
  3700                           	line	8
  3701                           	global	__size_of_setCursorLCD
  3702                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  3703  001D                     	
  3704                           _setCursorLCD:	
  3705  087F                     ;incstack = 0
  3706                           	opt	stack 5
  3707                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  3708                           ;setCursorLCD@y stored from wreg
  3709                           	movwf	(setCursorLCD@y)
  3710  087F  00F5               	line	9
  3711                           	
  3712                           l1879:	
  3713  0880                     ;LCD.c: 9:     if(y == 1){
  3714                           		decf	((setCursorLCD@y)),w
  3715  0880  0375               	btfss	status,2
  3716  0881  1D03               	goto	u2091
  3717  0882  2884               	goto	u2090
  3718  0883  2885               u2091:
  3719  0884                     	goto	l1883
  3720  0884  288D               u2090:
  3721  0885                     	line	10
  3722                           	
  3723                           l1881:	
  3724  0885                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  3725                           	movf	(setCursorLCD@x),w
  3726  0885  0873               	addlw	07Fh
  3727  0886  3E7F               	movwf	(??_setCursorLCD+0)+0
  3728  0887  00F4               	movf	(??_setCursorLCD+0)+0,w
  3729  0888  0874               	bsf	status, 5	;RP0=1, select bank1
  3730  0889  1683               	bcf	status, 6	;RP1=0, select bank1
  3731  088A  1303               	movwf	(_cursor)^080h
  3732  088B  00BB               	line	11
  3733                           ;LCD.c: 11:     }else{
  3734                           	goto	l1885
  3735  088C  2895               	
  3736                           l151:	
  3737  088D                     	line	12
  3738                           	
  3739                           l1883:	
  3740  088D                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  3741                           	movf	(setCursorLCD@x),w
  3742  088D  0873               	addlw	0BFh
  3743  088E  3EBF               	movwf	(??_setCursorLCD+0)+0
  3744  088F  00F4               	movf	(??_setCursorLCD+0)+0,w
  3745  0890  0874               	bsf	status, 5	;RP0=1, select bank1
  3746  0891  1683               	bcf	status, 6	;RP1=0, select bank1
  3747  0892  1303               	movwf	(_cursor)^080h
  3748  0893  00BB               	goto	l1885
  3749  0894  2895               	line	13
  3750                           ;LCD.c: 13:     }
  3751                           	
  3752                           l152:	
  3753  0895                     	line	14
  3754                           	
  3755                           l1885:	
  3756  0895                     ;LCD.c: 14:     cmdLCD(cursor);
  3757                           	movf	(_cursor)^080h,w
  3758  0895  083B               	fcall	_cmdLCD
  3759  0896  120A  158A  206B  120A  158A  	line	15
  3760                           	
  3761                           l153:	
  3762  089B                     	return
  3763  089B  0008               	opt stack 0
  3764                           GLOBAL	__end_of_setCursorLCD
  3765                           	__end_of_setCursorLCD:
  3766  089C                     	signat	_setCursorLCD,8313
  3767                           	global	_initLCD
  3768                           
  3769 ;; *************** function _initLCD *****************
  3770 ;; Defined at:
  3771 ;;		line 36 in file "LCD.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, pclath, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0
  3787 ;;      Temps:          2       0       0       0       0
  3788 ;;      Totals:         2       0       0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    1
  3792 ;; This function calls:
  3793 ;;		_cmdLCD
  3794 ;; This function is called by:
  3795 ;;		_setup
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3799                           	line	36
  3800                           global __ptext10
  3801                           __ptext10:	;psect for function _initLCD
  3802  092D                     psect	text10
  3803                           	file	"LCD.c"
  3804                           	line	36
  3805                           	global	__size_of_initLCD
  3806                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3807  003A                     	
  3808                           _initLCD:	
  3809  092D                     ;incstack = 0
  3810                           	opt	stack 5
  3811                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3812                           	line	37
  3813                           	
  3814                           l1901:	
  3815  092D                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  3816                           	opt asmopt_push
  3817                           opt asmopt_off
  3818                           movlw	20
  3819  092D  3014               movwf	((??_initLCD+0)+0+1),f
  3820  092E  00F4               	movlw	121
  3821  092F  3079               movwf	((??_initLCD+0)+0),f
  3822  0930  00F3               	u3597:
  3823  0931                     decfsz	((??_initLCD+0)+0),f
  3824  0931  0BF3               	goto	u3597
  3825  0932  2931               	decfsz	((??_initLCD+0)+0+1),f
  3826  0933  0BF4               	goto	u3597
  3827  0934  2931               	nop2
  3828  0935  2936               opt asmopt_pop
  3829                           
  3830                           	line	38
  3831                           	
  3832                           l1903:	
  3833  0936                     ;LCD.c: 38:     cmdLCD(0x030);
  3834                           	movlw	low(030h)
  3835  0936  3030               	fcall	_cmdLCD
  3836  0937  120A  158A  206B  120A  158A  	line	39
  3837                           	
  3838                           l1905:	
  3839  093C                     ;LCD.c: 39:     cmdLCD(0x030);
  3840                           	movlw	low(030h)
  3841  093C  3030               	fcall	_cmdLCD
  3842  093D  120A  158A  206B  120A  158A  	line	40
  3843                           	
  3844                           l1907:	
  3845  0942                     ;LCD.c: 40:     cmdLCD(0x030);
  3846                           	movlw	low(030h)
  3847  0942  3030               	fcall	_cmdLCD
  3848  0943  120A  158A  206B  120A  158A  	line	42
  3849                           	
  3850                           l1909:	
  3851  0948                     ;LCD.c: 42:     cmdLCD(0x38);
  3852                           	movlw	low(038h)
  3853  0948  3038               	fcall	_cmdLCD
  3854  0949  120A  158A  206B  120A  158A  	line	43
  3855                           	
  3856                           l1911:	
  3857  094E                     ;LCD.c: 43:     cmdLCD(0x10);
  3858                           	movlw	low(010h)
  3859  094E  3010               	fcall	_cmdLCD
  3860  094F  120A  158A  206B  120A  158A  	line	44
  3861                           	
  3862                           l1913:	
  3863  0954                     ;LCD.c: 44:     cmdLCD(0x01);
  3864                           	movlw	low(01h)
  3865  0954  3001               	fcall	_cmdLCD
  3866  0955  120A  158A  206B  120A  158A  	line	45
  3867                           	
  3868                           l1915:	
  3869  095A                     ;LCD.c: 45:     cmdLCD(0x06);
  3870                           	movlw	low(06h)
  3871  095A  3006               	fcall	_cmdLCD
  3872  095B  120A  158A  206B  120A  158A  	line	46
  3873                           	
  3874                           l1917:	
  3875  0960                     ;LCD.c: 46:     cmdLCD(0x0E);
  3876                           	movlw	low(0Eh)
  3877  0960  300E               	fcall	_cmdLCD
  3878  0961  120A  158A  206B  120A  158A  	line	47
  3879                           	
  3880                           l168:	
  3881  0966                     	return
  3882  0966  0008               	opt stack 0
  3883                           GLOBAL	__end_of_initLCD
  3884                           	__end_of_initLCD:
  3885  0967                     	signat	_initLCD,89
  3886                           	global	_clcLCD
  3887                           
  3888 ;; *************** function _clcLCD *****************
  3889 ;; Defined at:
  3890 ;;		line 17 in file "LCD.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0, pclath, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    1
  3911 ;; This function calls:
  3912 ;;		_cmdLCD
  3913 ;; This function is called by:
  3914 ;;		_setup
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3918                           	line	17
  3919                           global __ptext11
  3920                           __ptext11:	;psect for function _clcLCD
  3921  0003                     psect	text11
  3922                           	file	"LCD.c"
  3923                           	line	17
  3924                           	global	__size_of_clcLCD
  3925                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  3926  0007                     	
  3927                           _clcLCD:	
  3928  0003                     ;incstack = 0
  3929                           	opt	stack 5
  3930                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  3931                           	line	18
  3932                           	
  3933                           l1919:	
  3934  0003                     ;LCD.c: 18:     cmdLCD(0x01);
  3935                           	movlw	low(01h)
  3936  0003  3001               	fcall	_cmdLCD
  3937  0004  120A  158A  206B  120A  118A  	line	19
  3938                           	
  3939                           l156:	
  3940  0009                     	return
  3941  0009  0008               	opt stack 0
  3942                           GLOBAL	__end_of_clcLCD
  3943                           	__end_of_clcLCD:
  3944  000A                     	signat	_clcLCD,89
  3945                           	global	_cmdLCD
  3946                           
  3947 ;; *************** function _cmdLCD *****************
  3948 ;; Defined at:
  3949 ;;		line 49 in file "LCD.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  cmd             1    wreg     unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  cmd             1    2[COMMON] unsigned char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         1       0       0       0       0
  3965 ;;      Temps:          2       0       0       0       0
  3966 ;;      Totals:         3       0       0       0       0
  3967 ;;Total ram usage:        3 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_setCursorLCD
  3973 ;;		_clcLCD
  3974 ;;		_initLCD
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3978                           	line	49
  3979                           global __ptext12
  3980                           __ptext12:	;psect for function _cmdLCD
  3981  086B                     psect	text12
  3982                           	file	"LCD.c"
  3983                           	line	49
  3984                           	global	__size_of_cmdLCD
  3985                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  3986  0014                     	
  3987                           _cmdLCD:	
  3988  086B                     ;incstack = 0
  3989                           	opt	stack 5
  3990                           ; Regs used in _cmdLCD: [wreg]
  3991                           ;cmdLCD@cmd stored from wreg
  3992                           	movwf	(cmdLCD@cmd)
  3993  086B  00F2               	line	50
  3994                           	
  3995                           l1785:	
  3996  086C                     ;LCD.c: 50:     RD0 = 0;
  3997                           	bcf	status, 5	;RP0=0, select bank0
  3998  086C  1283               	bcf	status, 6	;RP1=0, select bank0
  3999  086D  1303               	bcf	(64/8),(64)&7	;volatile
  4000  086E  1008               	line	51
  4001                           	
  4002                           l1787:	
  4003  086F                     ;LCD.c: 51:  PORTB = cmd;
  4004                           	movf	(cmdLCD@cmd),w
  4005  086F  0872               	movwf	(6)	;volatile
  4006  0870  0086               	line	52
  4007                           	
  4008                           l1789:	
  4009  0871                     ;LCD.c: 52:  RD1 = 1;
  4010                           	bsf	(65/8),(65)&7	;volatile
  4011  0871  1488               	line	53
  4012                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4013                           	opt asmopt_push
  4014                           opt asmopt_off
  4015                           movlw	6
  4016  0872  3006               movwf	((??_cmdLCD+0)+0+1),f
  4017  0873  00F1               	movlw	48
  4018  0874  3030               movwf	((??_cmdLCD+0)+0),f
  4019  0875  00F0               	u3607:
  4020  0876                     decfsz	((??_cmdLCD+0)+0),f
  4021  0876  0BF0               	goto	u3607
  4022  0877  2876               	decfsz	((??_cmdLCD+0)+0+1),f
  4023  0878  0BF1               	goto	u3607
  4024  0879  2876               	nop
  4025  087A  0000               opt asmopt_pop
  4026                           
  4027                           	line	54
  4028                           	
  4029                           l1791:	
  4030  087B                     ;LCD.c: 54:     RD1 = 0;
  4031                           	bcf	status, 5	;RP0=0, select bank0
  4032  087B  1283               	bcf	status, 6	;RP1=0, select bank0
  4033  087C  1303               	bcf	(65/8),(65)&7	;volatile
  4034  087D  1088               	line	55
  4035                           	
  4036                           l171:	
  4037  087E                     	return
  4038  087E  0008               	opt stack 0
  4039                           GLOBAL	__end_of_cmdLCD
  4040                           	__end_of_cmdLCD:
  4041  087F                     	signat	_cmdLCD,4217
  4042                           	global	_I2C_Master_Init
  4043                           
  4044 ;; *************** function _I2C_Master_Init *****************
  4045 ;; Defined at:
  4046 ;;		line 16 in file "I2C.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  c               4    0[BANK0 ] const unsigned long 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, pclath, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       4       0       0       0
  4061 ;;      Locals:         0       0       0       0       0
  4062 ;;      Temps:          0       4       0       0       0
  4063 ;;      Totals:         0       8       0       0       0
  4064 ;;Total ram usage:        8 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    1
  4067 ;; This function calls:
  4068 ;;		___lldiv
  4069 ;; This function is called by:
  4070 ;;		_setup
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4074                           	file	"I2C.c"
  4075                           	line	16
  4076                           global __ptext13
  4077                           __ptext13:	;psect for function _I2C_Master_Init
  4078  08F5                     psect	text13
  4079                           	file	"I2C.c"
  4080                           	line	16
  4081                           	global	__size_of_I2C_Master_Init
  4082                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4083  0038                     	
  4084                           _I2C_Master_Init:	
  4085  08F5                     ;incstack = 0
  4086                           	opt	stack 5
  4087                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4088                           	line	18
  4089                           	
  4090                           l1889:	
  4091  08F5                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  4092                           	movlw	low(028h)
  4093  08F5  3028               	bcf	status, 5	;RP0=0, select bank0
  4094  08F6  1283               	bcf	status, 6	;RP1=0, select bank0
  4095  08F7  1303               	movwf	(20)	;volatile
  4096  08F8  0094               	line	19
  4097                           	
  4098                           l1891:	
  4099  08F9                     ;I2C.c: 19:     SSPCON2 = 0;
  4100                           	bsf	status, 5	;RP0=1, select bank1
  4101  08F9  1683               	bcf	status, 6	;RP1=0, select bank1
  4102  08FA  1303               	clrf	(145)^080h	;volatile
  4103  08FB  0191               	line	20
  4104                           	
  4105                           l1893:	
  4106  08FC                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  4107                           	bcf	status, 5	;RP0=0, select bank0
  4108  08FC  1283               	bcf	status, 6	;RP1=0, select bank0
  4109  08FD  1303               	movf	(I2C_Master_Init@c),w
  4110  08FE  0820               	movwf	(??_I2C_Master_Init+0)+0
  4111  08FF  00A4               	movf	(I2C_Master_Init@c+1),w
  4112  0900  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  4113  0901  00A5               	movf	(I2C_Master_Init@c+2),w
  4114  0902  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  4115  0903  00A6               	movf	(I2C_Master_Init@c+3),w
  4116  0904  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  4117  0905  00A7               	movlw	02h
  4118  0906  3002               u2105:
  4119  0907                     	clrc
  4120  0907  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4121  0908  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  4122  0909  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  4123  090A  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  4124  090B  0DA7               u2100:
  4125  090C                     	addlw	-1
  4126  090C  3EFF               	skipz
  4127  090D  1D03               	goto	u2105
  4128  090E  2907               	movf	3+(??_I2C_Master_Init+0)+0,w
  4129  090F  0827               	movwf	(___lldiv@divisor+3)
  4130  0910  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4131  0911  0826               	movwf	(___lldiv@divisor+2)
  4132  0912  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4133  0913  0825               	movwf	(___lldiv@divisor+1)
  4134  0914  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4135  0915  0824               	movwf	(___lldiv@divisor)
  4136  0916  00F0               
  4137                           	movlw	0
  4138  0917  3000               	movwf	(___lldiv@dividend+3)
  4139  0918  00F7               	movlw	03Dh
  4140  0919  303D               	movwf	(___lldiv@dividend+2)
  4141  091A  00F6               	movlw	09h
  4142  091B  3009               	movwf	(___lldiv@dividend+1)
  4143  091C  00F5               	movlw	0
  4144  091D  3000               	movwf	(___lldiv@dividend)
  4145  091E  00F4               
  4146                           	fcall	___lldiv
  4147  091F  120A  158A  22F6  120A  158A  	movf	(0+(?___lldiv)),w
  4148  0924  0870               	addlw	0FFh
  4149  0925  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4150  0926  1683               	bcf	status, 6	;RP1=0, select bank1
  4151  0927  1303               	movwf	(147)^080h	;volatile
  4152  0928  0093               	line	21
  4153                           	
  4154                           l1895:	
  4155  0929                     ;I2C.c: 21:     SSPSTAT = 0;
  4156                           	clrf	(148)^080h	;volatile
  4157  0929  0194               	line	22
  4158                           	
  4159                           l1897:	
  4160  092A                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4161                           	bsf	(135)^080h,3	;volatile
  4162  092A  1587               	line	23
  4163                           	
  4164                           l1899:	
  4165  092B                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4166                           	bsf	(135)^080h,4	;volatile
  4167  092B  1607               	line	24
  4168                           	
  4169                           l106:	
  4170  092C                     	return
  4171  092C  0008               	opt stack 0
  4172                           GLOBAL	__end_of_I2C_Master_Init
  4173                           	__end_of_I2C_Master_Init:
  4174  092D                     	signat	_I2C_Master_Init,4217
  4175                           	global	___lldiv
  4176                           
  4177 ;; *************** function ___lldiv *****************
  4178 ;; Defined at:
  4179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  divisor         4    0[COMMON] unsigned long 
  4182 ;;  dividend        4    4[COMMON] unsigned long 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  quotient        4    9[COMMON] unsigned long 
  4185 ;;  counter         1   13[COMMON] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  4    0[COMMON] unsigned long 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         8       0       0       0       0
  4196 ;;      Locals:         5       0       0       0       0
  4197 ;;      Temps:          1       0       0       0       0
  4198 ;;      Totals:        14       0       0       0       0
  4199 ;;Total ram usage:       14 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_I2C_Master_Init
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4208                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4209                           	line	5
  4210                           global __ptext14
  4211                           __ptext14:	;psect for function ___lldiv
  4212  0AF6                     psect	text14
  4213                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4214                           	line	5
  4215                           	global	__size_of___lldiv
  4216                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4217  006D                     	
  4218                           ___lldiv:	
  4219  0AF6                     ;incstack = 0
  4220                           	opt	stack 5
  4221                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4222                           	line	13
  4223                           	
  4224                           l1855:	
  4225  0AF6                     	movlw	high highword(0)
  4226  0AF6  3000               	movwf	(___lldiv@quotient+3)
  4227  0AF7  00FC               	movlw	low highword(0)
  4228  0AF8  3000               	movwf	(___lldiv@quotient+2)
  4229  0AF9  00FB               	movlw	high(0)
  4230  0AFA  3000               	movwf	(___lldiv@quotient+1)
  4231  0AFB  00FA               	movlw	low(0)
  4232  0AFC  3000               	movwf	(___lldiv@quotient)
  4233  0AFD  00F9               
  4234                           	line	14
  4235                           	movf	(___lldiv@divisor+3),w
  4236  0AFE  0873               	iorwf	(___lldiv@divisor+2),w
  4237  0AFF  0472               	iorwf	(___lldiv@divisor+1),w
  4238  0B00  0471               	iorwf	(___lldiv@divisor),w
  4239  0B01  0470               	skipnz
  4240  0B02  1903               	goto	u2021
  4241  0B03  2B05               	goto	u2020
  4242  0B04  2B06               u2021:
  4243  0B05                     	goto	l1875
  4244  0B05  2B59               u2020:
  4245  0B06                     	line	15
  4246                           	
  4247                           l1857:	
  4248  0B06                     	clrf	(___lldiv@counter)
  4249  0B06  01FD               	incf	(___lldiv@counter),f
  4250  0B07  0AFD               	line	16
  4251                           	goto	l1861
  4252  0B08  2B17               	
  4253                           l323:	
  4254  0B09                     	line	17
  4255                           	
  4256                           l1859:	
  4257  0B09                     	movlw	01h
  4258  0B09  3001               	movwf	(??___lldiv+0)+0
  4259  0B0A  00F8               u2035:
  4260  0B0B                     	clrc
  4261  0B0B  1003               	rlf	(___lldiv@divisor),f
  4262  0B0C  0DF0               	rlf	(___lldiv@divisor+1),f
  4263  0B0D  0DF1               	rlf	(___lldiv@divisor+2),f
  4264  0B0E  0DF2               	rlf	(___lldiv@divisor+3),f
  4265  0B0F  0DF3               	decfsz	(??___lldiv+0)+0
  4266  0B10  0BF8               	goto	u2035
  4267  0B11  2B0B               	line	18
  4268                           	movlw	low(01h)
  4269  0B12  3001               	movwf	(??___lldiv+0)+0
  4270  0B13  00F8               	movf	(??___lldiv+0)+0,w
  4271  0B14  0878               	addwf	(___lldiv@counter),f
  4272  0B15  07FD               	goto	l1861
  4273  0B16  2B17               	line	19
  4274                           	
  4275                           l322:	
  4276  0B17                     	line	16
  4277                           	
  4278                           l1861:	
  4279  0B17                     	btfss	(___lldiv@divisor+3),(31)&7
  4280  0B17  1FF3               	goto	u2041
  4281  0B18  2B1A               	goto	u2040
  4282  0B19  2B1B               u2041:
  4283  0B1A                     	goto	l1859
  4284  0B1A  2B09               u2040:
  4285  0B1B                     	goto	l1863
  4286  0B1B  2B1D               	
  4287                           l324:	
  4288  0B1C                     	goto	l1863
  4289  0B1C  2B1D               	line	20
  4290                           	
  4291                           l325:	
  4292  0B1D                     	line	21
  4293                           	
  4294                           l1863:	
  4295  0B1D                     	movlw	01h
  4296  0B1D  3001               	movwf	(??___lldiv+0)+0
  4297  0B1E  00F8               u2055:
  4298  0B1F                     	clrc
  4299  0B1F  1003               	rlf	(___lldiv@quotient),f
  4300  0B20  0DF9               	rlf	(___lldiv@quotient+1),f
  4301  0B21  0DFA               	rlf	(___lldiv@quotient+2),f
  4302  0B22  0DFB               	rlf	(___lldiv@quotient+3),f
  4303  0B23  0DFC               	decfsz	(??___lldiv+0)+0
  4304  0B24  0BF8               	goto	u2055
  4305  0B25  2B1F               	line	22
  4306                           	
  4307                           l1865:	
  4308  0B26                     	movf	(___lldiv@divisor+3),w
  4309  0B26  0873               	subwf	(___lldiv@dividend+3),w
  4310  0B27  0277               	skipz
  4311  0B28  1D03               	goto	u2065
  4312  0B29  2B34               	movf	(___lldiv@divisor+2),w
  4313  0B2A  0872               	subwf	(___lldiv@dividend+2),w
  4314  0B2B  0276               	skipz
  4315  0B2C  1D03               	goto	u2065
  4316  0B2D  2B34               	movf	(___lldiv@divisor+1),w
  4317  0B2E  0871               	subwf	(___lldiv@dividend+1),w
  4318  0B2F  0275               	skipz
  4319  0B30  1D03               	goto	u2065
  4320  0B31  2B34               	movf	(___lldiv@divisor),w
  4321  0B32  0870               	subwf	(___lldiv@dividend),w
  4322  0B33  0274               u2065:
  4323  0B34                     	skipc
  4324  0B34  1C03               	goto	u2061
  4325  0B35  2B37               	goto	u2060
  4326  0B36  2B38               u2061:
  4327  0B37                     	goto	l1871
  4328  0B37  2B48               u2060:
  4329  0B38                     	line	23
  4330                           	
  4331                           l1867:	
  4332  0B38                     	movf	(___lldiv@divisor),w
  4333  0B38  0870               	subwf	(___lldiv@dividend),f
  4334  0B39  02F4               	movf	(___lldiv@divisor+1),w
  4335  0B3A  0871               	skipc
  4336  0B3B  1C03               	incfsz	(___lldiv@divisor+1),w
  4337  0B3C  0F71               	subwf	(___lldiv@dividend+1),f
  4338  0B3D  02F5               	movf	(___lldiv@divisor+2),w
  4339  0B3E  0872               	skipc
  4340  0B3F  1C03               	incfsz	(___lldiv@divisor+2),w
  4341  0B40  0F72               	subwf	(___lldiv@dividend+2),f
  4342  0B41  02F6               	movf	(___lldiv@divisor+3),w
  4343  0B42  0873               	skipc
  4344  0B43  1C03               	incfsz	(___lldiv@divisor+3),w
  4345  0B44  0F73               	subwf	(___lldiv@dividend+3),f
  4346  0B45  02F7               	line	24
  4347                           	
  4348                           l1869:	
  4349  0B46                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4350  0B46  1479               	goto	l1871
  4351  0B47  2B48               	line	25
  4352                           	
  4353                           l326:	
  4354  0B48                     	line	26
  4355                           	
  4356                           l1871:	
  4357  0B48                     	movlw	01h
  4358  0B48  3001               u2075:
  4359  0B49                     	clrc
  4360  0B49  1003               	rrf	(___lldiv@divisor+3),f
  4361  0B4A  0CF3               	rrf	(___lldiv@divisor+2),f
  4362  0B4B  0CF2               	rrf	(___lldiv@divisor+1),f
  4363  0B4C  0CF1               	rrf	(___lldiv@divisor),f
  4364  0B4D  0CF0               	addlw	-1
  4365  0B4E  3EFF               	skipz
  4366  0B4F  1D03               	goto	u2075
  4367  0B50  2B49               
  4368                           	line	27
  4369                           	
  4370                           l1873:	
  4371  0B51                     	movlw	01h
  4372  0B51  3001               	subwf	(___lldiv@counter),f
  4373  0B52  02FD               	btfss	status,2
  4374  0B53  1D03               	goto	u2081
  4375  0B54  2B56               	goto	u2080
  4376  0B55  2B57               u2081:
  4377  0B56                     	goto	l1863
  4378  0B56  2B1D               u2080:
  4379  0B57                     	goto	l1875
  4380  0B57  2B59               	
  4381                           l327:	
  4382  0B58                     	goto	l1875
  4383  0B58  2B59               	line	28
  4384                           	
  4385                           l321:	
  4386  0B59                     	line	29
  4387                           	
  4388                           l1875:	
  4389  0B59                     	movf	(___lldiv@quotient+3),w
  4390  0B59  087C               	movwf	(?___lldiv+3)
  4391  0B5A  00F3               	movf	(___lldiv@quotient+2),w
  4392  0B5B  087B               	movwf	(?___lldiv+2)
  4393  0B5C  00F2               	movf	(___lldiv@quotient+1),w
  4394  0B5D  087A               	movwf	(?___lldiv+1)
  4395  0B5E  00F1               	movf	(___lldiv@quotient),w
  4396  0B5F  0879               	movwf	(?___lldiv)
  4397  0B60  00F0               
  4398                           	goto	l328
  4399  0B61  2B62               	
  4400                           l1877:	
  4401  0B62                     	line	30
  4402                           	
  4403                           l328:	
  4404  0B62                     	return
  4405  0B62  0008               	opt stack 0
  4406                           GLOBAL	__end_of___lldiv
  4407                           	__end_of___lldiv:
  4408  0B63                     	signat	___lldiv,8316
  4409                           	global	___xxtofl
  4410                           
  4411 ;; *************** function ___xxtofl *****************
  4412 ;; Defined at:
  4413 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  sign            1    wreg     unsigned char 
  4416 ;;  val             4    0[COMMON] long 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  sign            1    8[COMMON] unsigned char 
  4419 ;;  arg             4   10[COMMON] unsigned long 
  4420 ;;  exp             1    9[COMMON] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  4    0[COMMON] unsigned char 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         4       0       0       0       0
  4431 ;;      Locals:         6       0       0       0       0
  4432 ;;      Temps:          4       0       0       0       0
  4433 ;;      Totals:        14       0       0       0       0
  4434 ;;Total ram usage:       14 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_main
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4443                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4444                           	line	10
  4445                           global __ptext15
  4446                           __ptext15:	;psect for function ___xxtofl
  4447  0B63                     psect	text15
  4448                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4449                           	line	10
  4450                           	global	__size_of___xxtofl
  4451                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4452  00C2                     	
  4453                           ___xxtofl:	
  4454  0B63                     ;incstack = 0
  4455                           	opt	stack 7
  4456                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4457                           ;___xxtofl@sign stored from wreg
  4458                           	movwf	(___xxtofl@sign)
  4459  0B63  00F8               	line	15
  4460                           	
  4461                           l2527:	
  4462  0B64                     	movf	((___xxtofl@sign)),w
  4463  0B64  0878               	btfsc	status,2
  4464  0B65  1903               	goto	u3411
  4465  0B66  2B68               	goto	u3410
  4466  0B67  2B69               u3411:
  4467  0B68                     	goto	l2533
  4468  0B68  2B7D               u3410:
  4469  0B69                     	
  4470                           l2529:	
  4471  0B69                     	btfss	(___xxtofl@val+3),7
  4472  0B69  1FF3               	goto	u3421
  4473  0B6A  2B6C               	goto	u3420
  4474  0B6B  2B6D               u3421:
  4475  0B6C                     	goto	l2533
  4476  0B6C  2B7D               u3420:
  4477  0B6D                     	line	16
  4478                           	
  4479                           l2531:	
  4480  0B6D                     	comf	(___xxtofl@val)+0,w
  4481  0B6D  0970               	movwf	(___xxtofl@arg)
  4482  0B6E  00FA               	comf	(___xxtofl@val)+1,w
  4483  0B6F  0971               	movwf	(___xxtofl@arg+1)
  4484  0B70  00FB               	comf	(___xxtofl@val)+2,w
  4485  0B71  0972               	movwf	(___xxtofl@arg+2)
  4486  0B72  00FC               	comf	(___xxtofl@val)+3,w
  4487  0B73  0973               	movwf	(___xxtofl@arg+3)
  4488  0B74  00FD               	incf	(___xxtofl@arg),f
  4489  0B75  0AFA               	skipnz
  4490  0B76  1903               	incf	(___xxtofl@arg+1),f
  4491  0B77  0AFB               	skipnz
  4492  0B78  1903               	incf	(___xxtofl@arg+2),f
  4493  0B79  0AFC               	skipnz
  4494  0B7A  1903               	incf	(___xxtofl@arg+3),f
  4495  0B7B  0AFD               	line	17
  4496                           	goto	l700
  4497  0B7C  2B85               	line	18
  4498                           	
  4499                           l699:	
  4500  0B7D                     	line	19
  4501                           	
  4502                           l2533:	
  4503  0B7D                     	movf	(___xxtofl@val+3),w
  4504  0B7D  0873               	movwf	(___xxtofl@arg+3)
  4505  0B7E  00FD               	movf	(___xxtofl@val+2),w
  4506  0B7F  0872               	movwf	(___xxtofl@arg+2)
  4507  0B80  00FC               	movf	(___xxtofl@val+1),w
  4508  0B81  0871               	movwf	(___xxtofl@arg+1)
  4509  0B82  00FB               	movf	(___xxtofl@val),w
  4510  0B83  0870               	movwf	(___xxtofl@arg)
  4511  0B84  00FA               
  4512                           	line	20
  4513                           	
  4514                           l700:	
  4515  0B85                     	line	21
  4516                           	movf	(___xxtofl@val+3),w
  4517  0B85  0873               	iorwf	(___xxtofl@val+2),w
  4518  0B86  0472               	iorwf	(___xxtofl@val+1),w
  4519  0B87  0471               	iorwf	(___xxtofl@val),w
  4520  0B88  0470               	skipz
  4521  0B89  1D03               	goto	u3431
  4522  0B8A  2B8C               	goto	u3430
  4523  0B8B  2B8D               u3431:
  4524  0B8C                     	goto	l2539
  4525  0B8C  2B97               u3430:
  4526  0B8D                     	line	22
  4527                           	
  4528                           l2535:	
  4529  0B8D                     	movlw	0x0
  4530  0B8D  3000               	movwf	(?___xxtofl+3)
  4531  0B8E  00F3               	movlw	0x0
  4532  0B8F  3000               	movwf	(?___xxtofl+2)
  4533  0B90  00F2               	movlw	0x0
  4534  0B91  3000               	movwf	(?___xxtofl+1)
  4535  0B92  00F1               	movlw	0x0
  4536  0B93  3000               	movwf	(?___xxtofl)
  4537  0B94  00F0               
  4538                           	goto	l702
  4539  0B95  2C24               	
  4540                           l2537:	
  4541  0B96                     	goto	l702
  4542  0B96  2C24               	
  4543                           l701:	
  4544  0B97                     	line	23
  4545                           	
  4546                           l2539:	
  4547  0B97                     	movlw	low(096h)
  4548  0B97  3096               	movwf	(??___xxtofl+0)+0
  4549  0B98  00F4               	movf	(??___xxtofl+0)+0,w
  4550  0B99  0874               	movwf	(___xxtofl@exp)
  4551  0B9A  00F9               	line	24
  4552                           	goto	l2543
  4553  0B9B  2BAA               	
  4554                           l704:	
  4555  0B9C                     	line	25
  4556                           	
  4557                           l2541:	
  4558  0B9C                     	movlw	low(01h)
  4559  0B9C  3001               	movwf	(??___xxtofl+0)+0
  4560  0B9D  00F4               	movf	(??___xxtofl+0)+0,w
  4561  0B9E  0874               	addwf	(___xxtofl@exp),f
  4562  0B9F  07F9               	line	26
  4563                           	movlw	01h
  4564  0BA0  3001               u3445:
  4565  0BA1                     	clrc
  4566  0BA1  1003               	rrf	(___xxtofl@arg+3),f
  4567  0BA2  0CFD               	rrf	(___xxtofl@arg+2),f
  4568  0BA3  0CFC               	rrf	(___xxtofl@arg+1),f
  4569  0BA4  0CFB               	rrf	(___xxtofl@arg),f
  4570  0BA5  0CFA               	addlw	-1
  4571  0BA6  3EFF               	skipz
  4572  0BA7  1D03               	goto	u3445
  4573  0BA8  2BA1               
  4574                           	goto	l2543
  4575  0BA9  2BAA               	line	27
  4576                           	
  4577                           l703:	
  4578  0BAA                     	line	24
  4579                           	
  4580                           l2543:	
  4581  0BAA                     	movlw	high highword(0FE000000h)
  4582  0BAA  30FE               	andwf	(___xxtofl@arg+3),w
  4583  0BAB  057D               	btfss	status,2
  4584  0BAC  1D03               	goto	u3451
  4585  0BAD  2BAF               	goto	u3450
  4586  0BAE  2BB0               u3451:
  4587  0BAF                     	goto	l2541
  4588  0BAF  2B9C               u3450:
  4589  0BB0                     	goto	l706
  4590  0BB0  2BCD               	
  4591                           l705:	
  4592  0BB1                     	line	28
  4593                           	goto	l706
  4594  0BB1  2BCD               	
  4595                           l707:	
  4596  0BB2                     	line	29
  4597                           	
  4598                           l2545:	
  4599  0BB2                     	movlw	low(01h)
  4600  0BB2  3001               	movwf	(??___xxtofl+0)+0
  4601  0BB3  00F4               	movf	(??___xxtofl+0)+0,w
  4602  0BB4  0874               	addwf	(___xxtofl@exp),f
  4603  0BB5  07F9               	line	30
  4604                           	
  4605                           l2547:	
  4606  0BB6                     	movlw	01h
  4607  0BB6  3001               	addwf	(___xxtofl@arg),f
  4608  0BB7  07FA               	movlw	0
  4609  0BB8  3000               	skipnc
  4610  0BB9  1803               movlw 1
  4611  0BBA  3001               	addwf	(___xxtofl@arg+1),f
  4612  0BBB  07FB               	movlw	0
  4613  0BBC  3000               	skipnc
  4614  0BBD  1803               movlw 1
  4615  0BBE  3001               	addwf	(___xxtofl@arg+2),f
  4616  0BBF  07FC               	movlw	0
  4617  0BC0  3000               	skipnc
  4618  0BC1  1803               movlw 1
  4619  0BC2  3001               	addwf	(___xxtofl@arg+3),f
  4620  0BC3  07FD               	line	31
  4621                           	
  4622                           l2549:	
  4623  0BC4                     	movlw	01h
  4624  0BC4  3001               u3465:
  4625  0BC5                     	clrc
  4626  0BC5  1003               	rrf	(___xxtofl@arg+3),f
  4627  0BC6  0CFD               	rrf	(___xxtofl@arg+2),f
  4628  0BC7  0CFC               	rrf	(___xxtofl@arg+1),f
  4629  0BC8  0CFB               	rrf	(___xxtofl@arg),f
  4630  0BC9  0CFA               	addlw	-1
  4631  0BCA  3EFF               	skipz
  4632  0BCB  1D03               	goto	u3465
  4633  0BCC  2BC5               
  4634                           	line	32
  4635                           	
  4636                           l706:	
  4637  0BCD                     	line	28
  4638                           	movlw	high highword(0FF000000h)
  4639  0BCD  30FF               	andwf	(___xxtofl@arg+3),w
  4640  0BCE  057D               	btfss	status,2
  4641  0BCF  1D03               	goto	u3471
  4642  0BD0  2BD2               	goto	u3470
  4643  0BD1  2BD3               u3471:
  4644  0BD2                     	goto	l2545
  4645  0BD2  2BB2               u3470:
  4646  0BD3                     	goto	l2553
  4647  0BD3  2BE1               	
  4648                           l708:	
  4649  0BD4                     	line	33
  4650                           	goto	l2553
  4651  0BD4  2BE1               	
  4652                           l710:	
  4653  0BD5                     	line	34
  4654                           	
  4655                           l2551:	
  4656  0BD5                     	movlw	01h
  4657  0BD5  3001               	subwf	(___xxtofl@exp),f
  4658  0BD6  02F9               	line	35
  4659                           	movlw	01h
  4660  0BD7  3001               	movwf	(??___xxtofl+0)+0
  4661  0BD8  00F4               u3485:
  4662  0BD9                     	clrc
  4663  0BD9  1003               	rlf	(___xxtofl@arg),f
  4664  0BDA  0DFA               	rlf	(___xxtofl@arg+1),f
  4665  0BDB  0DFB               	rlf	(___xxtofl@arg+2),f
  4666  0BDC  0DFC               	rlf	(___xxtofl@arg+3),f
  4667  0BDD  0DFD               	decfsz	(??___xxtofl+0)+0
  4668  0BDE  0BF4               	goto	u3485
  4669  0BDF  2BD9               	goto	l2553
  4670  0BE0  2BE1               	line	36
  4671                           	
  4672                           l709:	
  4673  0BE1                     	line	33
  4674                           	
  4675                           l2553:	
  4676  0BE1                     	btfsc	(___xxtofl@arg+2),(23)&7
  4677  0BE1  1BFC               	goto	u3491
  4678  0BE2  2BE4               	goto	u3490
  4679  0BE3  2BE5               u3491:
  4680  0BE4                     	goto	l713
  4681  0BE4  2BEC               u3490:
  4682  0BE5                     	
  4683                           l2555:	
  4684  0BE5                     	movlw	low(02h)
  4685  0BE5  3002               	subwf	(___xxtofl@exp),w
  4686  0BE6  0279               	skipnc
  4687  0BE7  1803               	goto	u3501
  4688  0BE8  2BEA               	goto	u3500
  4689  0BE9  2BEB               u3501:
  4690  0BEA                     	goto	l2551
  4691  0BEA  2BD5               u3500:
  4692  0BEB                     	goto	l713
  4693  0BEB  2BEC               	
  4694                           l712:	
  4695  0BEC                     	
  4696                           l713:	
  4697  0BEC                     	line	37
  4698                           	btfsc	(___xxtofl@exp),(0)&7
  4699  0BEC  1879               	goto	u3511
  4700  0BED  2BEF               	goto	u3510
  4701  0BEE  2BF0               u3511:
  4702  0BEF                     	goto	l714
  4703  0BEF  2BF8               u3510:
  4704  0BF0                     	line	38
  4705                           	
  4706                           l2557:	
  4707  0BF0                     	movlw	0FFh
  4708  0BF0  30FF               	andwf	(___xxtofl@arg),f
  4709  0BF1  05FA               	movlw	0FFh
  4710  0BF2  30FF               	andwf	(___xxtofl@arg+1),f
  4711  0BF3  05FB               	movlw	07Fh
  4712  0BF4  307F               	andwf	(___xxtofl@arg+2),f
  4713  0BF5  05FC               	movlw	0FFh
  4714  0BF6  30FF               	andwf	(___xxtofl@arg+3),f
  4715  0BF7  05FD               	
  4716                           l714:	
  4717  0BF8                     	line	39
  4718                           	clrc
  4719  0BF8  1003               	rrf	(___xxtofl@exp),f
  4720  0BF9  0CF9               
  4721                           	line	40
  4722                           	
  4723                           l2559:	
  4724  0BFA                     	movf	(___xxtofl@exp),w
  4725  0BFA  0879               	movwf	(??___xxtofl+0)+0
  4726  0BFB  00F4               	clrf	(??___xxtofl+0)+0+1
  4727  0BFC  01F5               	clrf	(??___xxtofl+0)+0+2
  4728  0BFD  01F6               	clrf	(??___xxtofl+0)+0+3
  4729  0BFE  01F7               	movlw	018h
  4730  0BFF  3018               u3525:
  4731  0C00                     	clrc
  4732  0C00  1003               	rlf	(??___xxtofl+0)+0,f
  4733  0C01  0DF4               	rlf	(??___xxtofl+0)+1,f
  4734  0C02  0DF5               	rlf	(??___xxtofl+0)+2,f
  4735  0C03  0DF6               	rlf	(??___xxtofl+0)+3,f
  4736  0C04  0DF7               u3520:
  4737  0C05                     	addlw	-1
  4738  0C05  3EFF               	skipz
  4739  0C06  1D03               	goto	u3525
  4740  0C07  2C00               	movf	0+(??___xxtofl+0)+0,w
  4741  0C08  0874               	iorwf	(___xxtofl@arg),f
  4742  0C09  04FA               	movf	1+(??___xxtofl+0)+0,w
  4743  0C0A  0875               	iorwf	(___xxtofl@arg+1),f
  4744  0C0B  04FB               	movf	2+(??___xxtofl+0)+0,w
  4745  0C0C  0876               	iorwf	(___xxtofl@arg+2),f
  4746  0C0D  04FC               	movf	3+(??___xxtofl+0)+0,w
  4747  0C0E  0877               	iorwf	(___xxtofl@arg+3),f
  4748  0C0F  04FD               	line	41
  4749                           	
  4750                           l2561:	
  4751  0C10                     	movf	((___xxtofl@sign)),w
  4752  0C10  0878               	btfsc	status,2
  4753  0C11  1903               	goto	u3531
  4754  0C12  2C14               	goto	u3530
  4755  0C13  2C15               u3531:
  4756  0C14                     	goto	l2567
  4757  0C14  2C1B               u3530:
  4758  0C15                     	
  4759                           l2563:	
  4760  0C15                     	btfss	(___xxtofl@val+3),7
  4761  0C15  1FF3               	goto	u3541
  4762  0C16  2C18               	goto	u3540
  4763  0C17  2C19               u3541:
  4764  0C18                     	goto	l2567
  4765  0C18  2C1B               u3540:
  4766  0C19                     	line	42
  4767                           	
  4768                           l2565:	
  4769  0C19                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4770  0C19  17FD               	goto	l2567
  4771  0C1A  2C1B               	
  4772                           l715:	
  4773  0C1B                     	line	43
  4774                           	
  4775                           l2567:	
  4776  0C1B                     	movf	(___xxtofl@arg+3),w
  4777  0C1B  087D               	movwf	(?___xxtofl+3)
  4778  0C1C  00F3               	movf	(___xxtofl@arg+2),w
  4779  0C1D  087C               	movwf	(?___xxtofl+2)
  4780  0C1E  00F2               	movf	(___xxtofl@arg+1),w
  4781  0C1F  087B               	movwf	(?___xxtofl+1)
  4782  0C20  00F1               	movf	(___xxtofl@arg),w
  4783  0C21  087A               	movwf	(?___xxtofl)
  4784  0C22  00F0               
  4785                           	goto	l702
  4786  0C23  2C24               	
  4787                           l2569:	
  4788  0C24                     	line	44
  4789                           	
  4790                           l702:	
  4791  0C24                     	return
  4792  0C24  0008               	opt stack 0
  4793                           GLOBAL	__end_of___xxtofl
  4794                           	__end_of___xxtofl:
  4795  0C25                     	signat	___xxtofl,8316
  4796                           	global	___fltol
  4797                           
  4798 ;; *************** function ___fltol *****************
  4799 ;; Defined at:
  4800 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  f1              4    0[COMMON] unsigned char 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  exp1            1   10[COMMON] unsigned char 
  4805 ;;  sign1           1    9[COMMON] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  4    0[COMMON] long 
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4815 ;;      Params:         4       0       0       0       0
  4816 ;;      Locals:         2       0       0       0       0
  4817 ;;      Temps:          5       0       0       0       0
  4818 ;;      Totals:        11       0       0       0       0
  4819 ;;Total ram usage:       11 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_main
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  4828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4829                           	line	43
  4830                           global __ptext16
  4831                           __ptext16:	;psect for function ___fltol
  4832  0028                     psect	text16
  4833                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4834                           	line	43
  4835                           	global	__size_of___fltol
  4836                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4837  009A                     	
  4838                           ___fltol:	
  4839  0028                     ;incstack = 0
  4840                           	opt	stack 7
  4841                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4842                           	line	47
  4843                           	
  4844                           l2015:	
  4845  0028                     	movf	(___fltol@f1),w
  4846  0028  0870               	movwf	(??___fltol+0)+0
  4847  0029  00F4               	movf	(___fltol@f1+1),w
  4848  002A  0871               	movwf	((??___fltol+0)+0+1)
  4849  002B  00F5               	movf	(___fltol@f1+2),w
  4850  002C  0872               	movwf	((??___fltol+0)+0+2)
  4851  002D  00F6               	movf	(___fltol@f1+3),w
  4852  002E  0873               	movwf	((??___fltol+0)+0+3)
  4853  002F  00F7               	clrc
  4854  0030  1003               	rlf	(??___fltol+0)+2,w
  4855  0031  0D76               	rlf	(??___fltol+0)+3,w
  4856  0032  0D77               	movwf	(??___fltol+4)+0
  4857  0033  00F8               	movf	(??___fltol+4)+0,w
  4858  0034  0878               	movwf	(___fltol@exp1)
  4859  0035  00FA               	movf	(((___fltol@exp1))),w
  4860  0036  087A               	btfss	status,2
  4861  0037  1D03               	goto	u2191
  4862  0038  283A               	goto	u2190
  4863  0039  283B               u2191:
  4864  003A                     	goto	l2021
  4865  003A  2845               u2190:
  4866  003B                     	line	48
  4867                           	
  4868                           l2017:	
  4869  003B                     	movlw	high highword(0)
  4870  003B  3000               	movwf	(?___fltol+3)
  4871  003C  00F3               	movlw	low highword(0)
  4872  003D  3000               	movwf	(?___fltol+2)
  4873  003E  00F2               	movlw	high(0)
  4874  003F  3000               	movwf	(?___fltol+1)
  4875  0040  00F1               	movlw	low(0)
  4876  0041  3000               	movwf	(?___fltol)
  4877  0042  00F0               
  4878                           	goto	l478
  4879  0043  28C1               	
  4880                           l2019:	
  4881  0044                     	goto	l478
  4882  0044  28C1               	
  4883                           l477:	
  4884  0045                     	line	49
  4885                           	
  4886                           l2021:	
  4887  0045                     	movf	(___fltol@f1),w
  4888  0045  0870               	movwf	(??___fltol+0)+0
  4889  0046  00F4               	movf	(___fltol@f1+1),w
  4890  0047  0871               	movwf	((??___fltol+0)+0+1)
  4891  0048  00F5               	movf	(___fltol@f1+2),w
  4892  0049  0872               	movwf	((??___fltol+0)+0+2)
  4893  004A  00F6               	movf	(___fltol@f1+3),w
  4894  004B  0873               	movwf	((??___fltol+0)+0+3)
  4895  004C  00F7               	movlw	01Fh
  4896  004D  301F               u2205:
  4897  004E                     	clrc
  4898  004E  1003               	rrf	(??___fltol+0)+3,f
  4899  004F  0CF7               	rrf	(??___fltol+0)+2,f
  4900  0050  0CF6               	rrf	(??___fltol+0)+1,f
  4901  0051  0CF5               	rrf	(??___fltol+0)+0,f
  4902  0052  0CF4               u2200:
  4903  0053                     	addlw	-1
  4904  0053  3EFF               	skipz
  4905  0054  1D03               	goto	u2205
  4906  0055  284E               	movf	0+(??___fltol+0)+0,w
  4907  0056  0874               	movwf	(??___fltol+4)+0
  4908  0057  00F8               	movf	(??___fltol+4)+0,w
  4909  0058  0878               	movwf	(___fltol@sign1)
  4910  0059  00F9               	line	50
  4911                           	
  4912                           l2023:	
  4913  005A                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4914  005A  17F2               	line	51
  4915                           	
  4916                           l2025:	
  4917  005B                     	movlw	0FFh
  4918  005B  30FF               	andwf	(___fltol@f1),f
  4919  005C  05F0               	movlw	0FFh
  4920  005D  30FF               	andwf	(___fltol@f1+1),f
  4921  005E  05F1               	movlw	0FFh
  4922  005F  30FF               	andwf	(___fltol@f1+2),f
  4923  0060  05F2               	movlw	0
  4924  0061  3000               	andwf	(___fltol@f1+3),f
  4925  0062  05F3               	line	52
  4926                           	
  4927                           l2027:	
  4928  0063                     	movlw	096h
  4929  0063  3096               	subwf	(___fltol@exp1),f
  4930  0064  02FA               	line	53
  4931                           	
  4932                           l2029:	
  4933  0065                     	btfss	(___fltol@exp1),7
  4934  0065  1FFA               	goto	u2211
  4935  0066  2868               	goto	u2210
  4936  0067  2869               u2211:
  4937  0068                     	goto	l2039
  4938  0068  288E               u2210:
  4939  0069                     	line	54
  4940                           	
  4941                           l2031:	
  4942  0069                     	movf	(___fltol@exp1),w
  4943  0069  087A               	xorlw	80h
  4944  006A  3A80               	addlw	-((-23)^80h)
  4945  006B  3E97               	skipnc
  4946  006C  1803               	goto	u2221
  4947  006D  286F               	goto	u2220
  4948  006E  2870               u2221:
  4949  006F                     	goto	l2037
  4950  006F  287B               u2220:
  4951  0070                     	line	55
  4952                           	
  4953                           l2033:	
  4954  0070                     	movlw	high highword(0)
  4955  0070  3000               	movwf	(?___fltol+3)
  4956  0071  00F3               	movlw	low highword(0)
  4957  0072  3000               	movwf	(?___fltol+2)
  4958  0073  00F2               	movlw	high(0)
  4959  0074  3000               	movwf	(?___fltol+1)
  4960  0075  00F1               	movlw	low(0)
  4961  0076  3000               	movwf	(?___fltol)
  4962  0077  00F0               
  4963                           	goto	l478
  4964  0078  28C1               	
  4965                           l2035:	
  4966  0079                     	goto	l478
  4967  0079  28C1               	
  4968                           l480:	
  4969  007A                     	goto	l2037
  4970  007A  287B               	line	56
  4971                           	
  4972                           l481:	
  4973  007B                     	line	57
  4974                           	
  4975                           l2037:	
  4976  007B                     	movlw	01h
  4977  007B  3001               u2235:
  4978  007C                     	clrc
  4979  007C  1003               	rrf	(___fltol@f1+3),f
  4980  007D  0CF3               	rrf	(___fltol@f1+2),f
  4981  007E  0CF2               	rrf	(___fltol@f1+1),f
  4982  007F  0CF1               	rrf	(___fltol@f1),f
  4983  0080  0CF0               	addlw	-1
  4984  0081  3EFF               	skipz
  4985  0082  1D03               	goto	u2235
  4986  0083  287C               
  4987                           	line	58
  4988                           	movlw	low(01h)
  4989  0084  3001               	movwf	(??___fltol+0)+0
  4990  0085  00F4               	movf	(??___fltol+0)+0,w
  4991  0086  0874               	addwf	(___fltol@exp1),f
  4992  0087  07FA               	btfss	status,2
  4993  0088  1D03               	goto	u2241
  4994  0089  288B               	goto	u2240
  4995  008A  288C               u2241:
  4996  008B                     	goto	l2037
  4997  008B  287B               u2240:
  4998  008C                     	goto	l2047
  4999  008C  28B1               	
  5000                           l482:	
  5001  008D                     	line	59
  5002                           	goto	l2047
  5003  008D  28B1               	
  5004                           l479:	
  5005  008E                     	line	60
  5006                           	
  5007                           l2039:	
  5008  008E                     	movlw	low(020h)
  5009  008E  3020               	subwf	(___fltol@exp1),w
  5010  008F  027A               	skipc
  5011  0090  1C03               	goto	u2251
  5012  0091  2893               	goto	u2250
  5013  0092  2894               u2251:
  5014  0093                     	goto	l485
  5015  0093  28AA               u2250:
  5016  0094                     	line	61
  5017                           	
  5018                           l2041:	
  5019  0094                     	movlw	high highword(0)
  5020  0094  3000               	movwf	(?___fltol+3)
  5021  0095  00F3               	movlw	low highword(0)
  5022  0096  3000               	movwf	(?___fltol+2)
  5023  0097  00F2               	movlw	high(0)
  5024  0098  3000               	movwf	(?___fltol+1)
  5025  0099  00F1               	movlw	low(0)
  5026  009A  3000               	movwf	(?___fltol)
  5027  009B  00F0               
  5028                           	goto	l478
  5029  009C  28C1               	
  5030                           l2043:	
  5031  009D                     	goto	l478
  5032  009D  28C1               	
  5033                           l484:	
  5034  009E                     	line	62
  5035                           	goto	l485
  5036  009E  28AA               	
  5037                           l486:	
  5038  009F                     	line	63
  5039                           	
  5040                           l2045:	
  5041  009F                     	movlw	01h
  5042  009F  3001               	movwf	(??___fltol+0)+0
  5043  00A0  00F4               u2265:
  5044  00A1                     	clrc
  5045  00A1  1003               	rlf	(___fltol@f1),f
  5046  00A2  0DF0               	rlf	(___fltol@f1+1),f
  5047  00A3  0DF1               	rlf	(___fltol@f1+2),f
  5048  00A4  0DF2               	rlf	(___fltol@f1+3),f
  5049  00A5  0DF3               	decfsz	(??___fltol+0)+0
  5050  00A6  0BF4               	goto	u2265
  5051  00A7  28A1               	line	64
  5052                           	movlw	01h
  5053  00A8  3001               	subwf	(___fltol@exp1),f
  5054  00A9  02FA               	line	65
  5055                           	
  5056                           l485:	
  5057  00AA                     	line	62
  5058                           	movf	((___fltol@exp1)),w
  5059  00AA  087A               	btfss	status,2
  5060  00AB  1D03               	goto	u2271
  5061  00AC  28AE               	goto	u2270
  5062  00AD  28AF               u2271:
  5063  00AE                     	goto	l2045
  5064  00AE  289F               u2270:
  5065  00AF                     	goto	l2047
  5066  00AF  28B1               	
  5067                           l487:	
  5068  00B0                     	goto	l2047
  5069  00B0  28B1               	line	66
  5070                           	
  5071                           l483:	
  5072  00B1                     	line	67
  5073                           	
  5074                           l2047:	
  5075  00B1                     	movf	((___fltol@sign1)),w
  5076  00B1  0879               	btfsc	status,2
  5077  00B2  1903               	goto	u2281
  5078  00B3  28B5               	goto	u2280
  5079  00B4  28B6               u2281:
  5080  00B5                     	goto	l488
  5081  00B5  28C1               u2280:
  5082  00B6                     	line	68
  5083                           	
  5084                           l2049:	
  5085  00B6                     	comf	(___fltol@f1),f
  5086  00B6  09F0               	comf	(___fltol@f1+1),f
  5087  00B7  09F1               	comf	(___fltol@f1+2),f
  5088  00B8  09F2               	comf	(___fltol@f1+3),f
  5089  00B9  09F3               	incf	(___fltol@f1),f
  5090  00BA  0AF0               	skipnz
  5091  00BB  1903               	incf	(___fltol@f1+1),f
  5092  00BC  0AF1               	skipnz
  5093  00BD  1903               	incf	(___fltol@f1+2),f
  5094  00BE  0AF2               	skipnz
  5095  00BF  1903               	incf	(___fltol@f1+3),f
  5096  00C0  0AF3               	
  5097                           l488:	
  5098  00C1                     	line	69
  5099                           	line	70
  5100                           	
  5101                           l478:	
  5102  00C1                     	return
  5103  00C1  0008               	opt stack 0
  5104                           GLOBAL	__end_of___fltol
  5105                           	__end_of___fltol:
  5106  00C2                     	signat	___fltol,4220
  5107                           	global	___flneg
  5108                           
  5109 ;; *************** function ___flneg *****************
  5110 ;; Defined at:
  5111 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  f1              4    0[BANK0 ] long 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  4    0[BANK0 ] long 
  5118 ;; Registers used:
  5119 ;;		wreg
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5125 ;;      Params:         0       4       0       0       0
  5126 ;;      Locals:         0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0
  5128 ;;      Totals:         0       4       0       0       0
  5129 ;;Total ram usage:        4 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5138                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5139                           	line	15
  5140                           global __ptext17
  5141                           __ptext17:	;psect for function ___flneg
  5142  084D                     psect	text17
  5143                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5144                           	line	15
  5145                           	global	__size_of___flneg
  5146                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5147  000F                     	
  5148                           ___flneg:	
  5149  084D                     ;incstack = 0
  5150                           	opt	stack 7
  5151                           ; Regs used in ___flneg: [wreg]
  5152                           	line	17
  5153                           	
  5154                           l2007:	
  5155  084D                     	bcf	status, 5	;RP0=0, select bank0
  5156  084D  1283               	bcf	status, 6	;RP1=0, select bank0
  5157  084E  1303               	movf	(___flneg@f1+3),w
  5158  084F  0823               	iorwf	(___flneg@f1+2),w
  5159  0850  0422               	iorwf	(___flneg@f1+1),w
  5160  0851  0421               	iorwf	(___flneg@f1),w
  5161  0852  0420               	skipnz
  5162  0853  1903               	goto	u2181
  5163  0854  2856               	goto	u2180
  5164  0855  2857               u2181:
  5165  0856                     	goto	l2011
  5166  0856  285A               u2180:
  5167  0857                     	line	18
  5168                           	
  5169                           l2009:	
  5170  0857                     	movlw	080h
  5171  0857  3080               	xorwf	(___flneg@f1+3),f
  5172  0858  06A3               	goto	l2011
  5173  0859  285A               	
  5174                           l473:	
  5175  085A                     	line	19
  5176                           	
  5177                           l2011:	
  5178  085A                     	goto	l474
  5179  085A  285B               	
  5180                           l2013:	
  5181  085B                     	line	20
  5182                           	
  5183                           l474:	
  5184  085B                     	return
  5185  085B  0008               	opt stack 0
  5186                           GLOBAL	__end_of___flneg
  5187                           	__end_of___flneg:
  5188  085C                     	signat	___flneg,4220
  5189                           	global	___flmul
  5190                           
  5191 ;; *************** function ___flmul *****************
  5192 ;; Defined at:
  5193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  b               4   28[BANK0 ] long 
  5196 ;;  a               4   32[BANK0 ] long 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  prod            4   48[BANK0 ] struct .
  5199 ;;  grs             4   42[BANK0 ] unsigned long 
  5200 ;;  temp            2   52[BANK0 ] struct .
  5201 ;;  bexp            1   47[BANK0 ] unsigned char 
  5202 ;;  aexp            1   46[BANK0 ] unsigned char 
  5203 ;;  sign            1   41[BANK0 ] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  4   28[BANK0 ] unsigned char 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5213 ;;      Params:         0       8       0       0       0
  5214 ;;      Locals:         0      13       0       0       0
  5215 ;;      Temps:          0       5       0       0       0
  5216 ;;      Totals:         0      26       0       0       0
  5217 ;;Total ram usage:       26 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    1
  5220 ;; This function calls:
  5221 ;;		__Umul8_16
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5227                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5228                           	line	8
  5229                           global __ptext18
  5230                           __ptext18:	;psect for function ___flmul
  5231  047E                     psect	text18
  5232                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5233                           	line	8
  5234                           	global	__size_of___flmul
  5235                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5236  0375                     	
  5237                           ___flmul:	
  5238  047E                     ;incstack = 0
  5239                           	opt	stack 6
  5240                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5241                           	line	17
  5242                           	
  5243                           l2387:	
  5244  047E                     	bcf	status, 5	;RP0=0, select bank0
  5245  047E  1283               	bcf	status, 6	;RP1=0, select bank0
  5246  047F  1303               	movf	0+(___flmul@b)+03h,w
  5247  0480  083F               	andlw	080h
  5248  0481  3980               	movwf	(??___flmul+0)+0
  5249  0482  00C4               	movf	(??___flmul+0)+0,w
  5250  0483  0844               	movwf	(___flmul@sign)
  5251  0484  00C9               	line	18
  5252                           	
  5253                           l2389:	
  5254  0485                     	movf	0+(___flmul@b)+03h,w
  5255  0485  083F               	movwf	(??___flmul+0)+0
  5256  0486  00C4               	addwf	(??___flmul+0)+0,w
  5257  0487  0744               	movwf	(??___flmul+1)+0
  5258  0488  00C5               	movf	(??___flmul+1)+0,w
  5259  0489  0845               	movwf	(___flmul@bexp)
  5260  048A  00CF               	line	19
  5261                           	
  5262                           l2391:	
  5263  048B                     	btfss	0+(___flmul@b)+02h,(7)&7
  5264  048B  1FBE               	goto	u3041
  5265  048C  2C8E               	goto	u3040
  5266  048D  2C8F               u3041:
  5267  048E                     	goto	l2395
  5268  048E  2C91               u3040:
  5269  048F                     	line	20
  5270                           	
  5271                           l2393:	
  5272  048F                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5273  048F  144F               	goto	l2395
  5274  0490  2C91               	line	21
  5275                           	
  5276                           l670:	
  5277  0491                     	line	24
  5278                           	
  5279                           l2395:	
  5280  0491                     	movf	((___flmul@bexp)),w
  5281  0491  084F               	btfsc	status,2
  5282  0492  1903               	goto	u3051
  5283  0493  2C95               	goto	u3050
  5284  0494  2C96               u3051:
  5285  0495                     	goto	l2403
  5286  0495  2CA6               u3050:
  5287  0496                     	line	26
  5288                           	
  5289                           l2397:	
  5290  0496                     		incf	((___flmul@bexp)),w
  5291  0496  0A4F               	btfss	status,2
  5292  0497  1D03               	goto	u3061
  5293  0498  2C9A               	goto	u3060
  5294  0499  2C9B               u3061:
  5295  049A                     	goto	l2401
  5296  049A  2CA4               u3060:
  5297  049B                     	line	28
  5298                           	
  5299                           l2399:	
  5300  049B                     	movlw	0x0
  5301  049B  3000               	movwf	(___flmul@b+3)
  5302  049C  00BF               	movlw	0x0
  5303  049D  3000               	movwf	(___flmul@b+2)
  5304  049E  00BE               	movlw	0x0
  5305  049F  3000               	movwf	(___flmul@b+1)
  5306  04A0  00BD               	movlw	0x0
  5307  04A1  3000               	movwf	(___flmul@b)
  5308  04A2  00BC               
  5309                           	goto	l2401
  5310  04A3  2CA4               	line	29
  5311                           	
  5312                           l672:	
  5313  04A4                     	line	31
  5314                           	
  5315                           l2401:	
  5316  04A4                     	bsf	(___flmul@b)+(23/8),(23)&7
  5317  04A4  17BE               	line	33
  5318                           	goto	l2405
  5319  04A5  2CAF               	line	34
  5320                           	
  5321                           l671:	
  5322  04A6                     	line	36
  5323                           	
  5324                           l2403:	
  5325  04A6                     	movlw	0x0
  5326  04A6  3000               	movwf	(___flmul@b+3)
  5327  04A7  00BF               	movlw	0x0
  5328  04A8  3000               	movwf	(___flmul@b+2)
  5329  04A9  00BE               	movlw	0x0
  5330  04AA  3000               	movwf	(___flmul@b+1)
  5331  04AB  00BD               	movlw	0x0
  5332  04AC  3000               	movwf	(___flmul@b)
  5333  04AD  00BC               
  5334                           	goto	l2405
  5335  04AE  2CAF               	line	37
  5336                           	
  5337                           l673:	
  5338  04AF                     	line	39
  5339                           	
  5340                           l2405:	
  5341  04AF                     	movf	0+(___flmul@a)+03h,w
  5342  04AF  0843               	andlw	080h
  5343  04B0  3980               	movwf	(??___flmul+0)+0
  5344  04B1  00C4               	movf	(??___flmul+0)+0,w
  5345  04B2  0844               	xorwf	(___flmul@sign),f
  5346  04B3  06C9               	line	40
  5347                           	
  5348                           l2407:	
  5349  04B4                     	movf	0+(___flmul@a)+03h,w
  5350  04B4  0843               	movwf	(??___flmul+0)+0
  5351  04B5  00C4               	addwf	(??___flmul+0)+0,w
  5352  04B6  0744               	movwf	(??___flmul+1)+0
  5353  04B7  00C5               	movf	(??___flmul+1)+0,w
  5354  04B8  0845               	movwf	(___flmul@aexp)
  5355  04B9  00CE               	line	41
  5356                           	
  5357                           l2409:	
  5358  04BA                     	btfss	0+(___flmul@a)+02h,(7)&7
  5359  04BA  1FC2               	goto	u3071
  5360  04BB  2CBD               	goto	u3070
  5361  04BC  2CBE               u3071:
  5362  04BD                     	goto	l2413
  5363  04BD  2CC0               u3070:
  5364  04BE                     	line	42
  5365                           	
  5366                           l2411:	
  5367  04BE                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5368  04BE  144E               	goto	l2413
  5369  04BF  2CC0               	line	43
  5370                           	
  5371                           l674:	
  5372  04C0                     	line	45
  5373                           	
  5374                           l2413:	
  5375  04C0                     	movf	((___flmul@aexp)),w
  5376  04C0  084E               	btfsc	status,2
  5377  04C1  1903               	goto	u3081
  5378  04C2  2CC4               	goto	u3080
  5379  04C3  2CC5               u3081:
  5380  04C4                     	goto	l2421
  5381  04C4  2CD5               u3080:
  5382  04C5                     	line	48
  5383                           	
  5384                           l2415:	
  5385  04C5                     		incf	((___flmul@aexp)),w
  5386  04C5  0A4E               	btfss	status,2
  5387  04C6  1D03               	goto	u3091
  5388  04C7  2CC9               	goto	u3090
  5389  04C8  2CCA               u3091:
  5390  04C9                     	goto	l2419
  5391  04C9  2CD3               u3090:
  5392  04CA                     	line	50
  5393                           	
  5394                           l2417:	
  5395  04CA                     	movlw	0x0
  5396  04CA  3000               	movwf	(___flmul@a+3)
  5397  04CB  00C3               	movlw	0x0
  5398  04CC  3000               	movwf	(___flmul@a+2)
  5399  04CD  00C2               	movlw	0x0
  5400  04CE  3000               	movwf	(___flmul@a+1)
  5401  04CF  00C1               	movlw	0x0
  5402  04D0  3000               	movwf	(___flmul@a)
  5403  04D1  00C0               
  5404                           	goto	l2419
  5405  04D2  2CD3               	line	51
  5406                           	
  5407                           l676:	
  5408  04D3                     	line	53
  5409                           	
  5410                           l2419:	
  5411  04D3                     	bsf	(___flmul@a)+(23/8),(23)&7
  5412  04D3  17C2               	line	54
  5413                           	goto	l2423
  5414  04D4  2CDE               	line	55
  5415                           	
  5416                           l675:	
  5417  04D5                     	line	57
  5418                           	
  5419                           l2421:	
  5420  04D5                     	movlw	0x0
  5421  04D5  3000               	movwf	(___flmul@a+3)
  5422  04D6  00C3               	movlw	0x0
  5423  04D7  3000               	movwf	(___flmul@a+2)
  5424  04D8  00C2               	movlw	0x0
  5425  04D9  3000               	movwf	(___flmul@a+1)
  5426  04DA  00C1               	movlw	0x0
  5427  04DB  3000               	movwf	(___flmul@a)
  5428  04DC  00C0               
  5429                           	goto	l2423
  5430  04DD  2CDE               	line	58
  5431                           	
  5432                           l677:	
  5433  04DE                     	line	65
  5434                           	
  5435                           l2423:	
  5436  04DE                     	movf	((___flmul@aexp)),w
  5437  04DE  084E               	btfsc	status,2
  5438  04DF  1903               	goto	u3101
  5439  04E0  2CE2               	goto	u3100
  5440  04E1  2CE3               u3101:
  5441  04E2                     	goto	l2427
  5442  04E2  2CE9               u3100:
  5443  04E3                     	
  5444                           l2425:	
  5445  04E3                     	movf	((___flmul@bexp)),w
  5446  04E3  084F               	btfss	status,2
  5447  04E4  1D03               	goto	u3111
  5448  04E5  2CE7               	goto	u3110
  5449  04E6  2CE8               u3111:
  5450  04E7                     	goto	l2431
  5451  04E7  2CF3               u3110:
  5452  04E8                     	goto	l2427
  5453  04E8  2CE9               	
  5454                           l680:	
  5455  04E9                     	line	66
  5456                           	
  5457                           l2427:	
  5458  04E9                     	movlw	0x0
  5459  04E9  3000               	movwf	(?___flmul+3)
  5460  04EA  00BF               	movlw	0x0
  5461  04EB  3000               	movwf	(?___flmul+2)
  5462  04EC  00BE               	movlw	0x0
  5463  04ED  3000               	movwf	(?___flmul+1)
  5464  04EE  00BD               	movlw	0x0
  5465  04EF  3000               	movwf	(?___flmul)
  5466  04F0  00BC               
  5467                           	goto	l681
  5468  04F1  2FF2               	
  5469                           l2429:	
  5470  04F2                     	goto	l681
  5471  04F2  2FF2               	line	67
  5472                           	
  5473                           l678:	
  5474  04F3                     	line	119
  5475                           	
  5476                           l2431:	
  5477  04F3                     	movf	(___flmul@b),w
  5478  04F3  083C               	movwf	(??___flmul+0)+0
  5479  04F4  00C4               	movf	(??___flmul+0)+0,w
  5480  04F5  0844               	movwf	(__Umul8_16@multiplicand)
  5481  04F6  00F0               	movf	0+(___flmul@a)+02h,w
  5482  04F7  0842               	fcall	__Umul8_16
  5483  04F8  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5484  04FD  0871               	bcf	status, 5	;RP0=0, select bank0
  5485  04FE  1283               	bcf	status, 6	;RP1=0, select bank0
  5486  04FF  1303               	movwf	(___flmul@temp+1)
  5487  0500  00D5               	movf	(0+(?__Umul8_16)),w
  5488  0501  0870               	movwf	(___flmul@temp)
  5489  0502  00D4               	line	120
  5490                           	
  5491                           l2433:	
  5492  0503                     	movf	(___flmul@temp),w
  5493  0503  0854               	movwf	(??___flmul+0)+0
  5494  0504  00C4               	clrf	(??___flmul+0)+0+1
  5495  0505  01C5               	clrf	(??___flmul+0)+0+2
  5496  0506  01C6               	clrf	(??___flmul+0)+0+3
  5497  0507  01C7               	movf	3+(??___flmul+0)+0,w
  5498  0508  0847               	movwf	(___flmul@grs+3)
  5499  0509  00CD               	movf	2+(??___flmul+0)+0,w
  5500  050A  0846               	movwf	(___flmul@grs+2)
  5501  050B  00CC               	movf	1+(??___flmul+0)+0,w
  5502  050C  0845               	movwf	(___flmul@grs+1)
  5503  050D  00CB               	movf	0+(??___flmul+0)+0,w
  5504  050E  0844               	movwf	(___flmul@grs)
  5505  050F  00CA               
  5506                           	line	121
  5507                           	
  5508                           l2435:	
  5509  0510                     	movf	0+(___flmul@temp)+01h,w
  5510  0510  0855               	movwf	(??___flmul+0)+0
  5511  0511  00C4               	clrf	(??___flmul+0)+0+1
  5512  0512  01C5               	clrf	(??___flmul+0)+0+2
  5513  0513  01C6               	clrf	(??___flmul+0)+0+3
  5514  0514  01C7               	movf	3+(??___flmul+0)+0,w
  5515  0515  0847               	movwf	(___flmul@prod+3)
  5516  0516  00D3               	movf	2+(??___flmul+0)+0,w
  5517  0517  0846               	movwf	(___flmul@prod+2)
  5518  0518  00D2               	movf	1+(??___flmul+0)+0,w
  5519  0519  0845               	movwf	(___flmul@prod+1)
  5520  051A  00D1               	movf	0+(??___flmul+0)+0,w
  5521  051B  0844               	movwf	(___flmul@prod)
  5522  051C  00D0               
  5523                           	line	122
  5524                           	movf	0+(___flmul@b)+01h,w
  5525  051D  083D               	movwf	(??___flmul+0)+0
  5526  051E  00C4               	movf	(??___flmul+0)+0,w
  5527  051F  0844               	movwf	(__Umul8_16@multiplicand)
  5528  0520  00F0               	movf	0+(___flmul@a)+01h,w
  5529  0521  0841               	fcall	__Umul8_16
  5530  0522  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5531  0527  0871               	bcf	status, 5	;RP0=0, select bank0
  5532  0528  1283               	bcf	status, 6	;RP1=0, select bank0
  5533  0529  1303               	movwf	(___flmul@temp+1)
  5534  052A  00D5               	movf	(0+(?__Umul8_16)),w
  5535  052B  0870               	movwf	(___flmul@temp)
  5536  052C  00D4               	line	123
  5537                           	
  5538                           l2437:	
  5539  052D                     	movf	(___flmul@temp),w
  5540  052D  0854               	movwf	(??___flmul+0)+0
  5541  052E  00C4               	clrf	(??___flmul+0)+0+1
  5542  052F  01C5               	clrf	(??___flmul+0)+0+2
  5543  0530  01C6               	clrf	(??___flmul+0)+0+3
  5544  0531  01C7               	movf	0+(??___flmul+0)+0,w
  5545  0532  0844               	addwf	(___flmul@grs),f
  5546  0533  07CA               	movf	1+(??___flmul+0)+0,w
  5547  0534  0845               	clrz
  5548  0535  1103               	skipnc
  5549  0536  1803               	addlw	1
  5550  0537  3E01               	skipnz
  5551  0538  1903               	goto	u3121
  5552  0539  2D3B               	addwf	(___flmul@grs+1),f
  5553  053A  07CB               u3121:
  5554  053B                     	movf	2+(??___flmul+0)+0,w
  5555  053B  0846               	clrz
  5556  053C  1103               	skipnc
  5557  053D  1803               	addlw	1
  5558  053E  3E01               	skipnz
  5559  053F  1903               	goto	u3122
  5560  0540  2D42               	addwf	(___flmul@grs+2),f
  5561  0541  07CC               u3122:
  5562  0542                     	movf	3+(??___flmul+0)+0,w
  5563  0542  0847               	clrz
  5564  0543  1103               	skipnc
  5565  0544  1803               	addlw	1
  5566  0545  3E01               	skipnz
  5567  0546  1903               	goto	u3123
  5568  0547  2D49               	addwf	(___flmul@grs+3),f
  5569  0548  07CD               u3123:
  5570  0549                     
  5571                           	line	124
  5572                           	
  5573                           l2439:	
  5574  0549                     	movf	0+(___flmul@temp)+01h,w
  5575  0549  0855               	movwf	(??___flmul+0)+0
  5576  054A  00C4               	clrf	(??___flmul+0)+0+1
  5577  054B  01C5               	clrf	(??___flmul+0)+0+2
  5578  054C  01C6               	clrf	(??___flmul+0)+0+3
  5579  054D  01C7               	movf	0+(??___flmul+0)+0,w
  5580  054E  0844               	addwf	(___flmul@prod),f
  5581  054F  07D0               	movf	1+(??___flmul+0)+0,w
  5582  0550  0845               	clrz
  5583  0551  1103               	skipnc
  5584  0552  1803               	addlw	1
  5585  0553  3E01               	skipnz
  5586  0554  1903               	goto	u3131
  5587  0555  2D57               	addwf	(___flmul@prod+1),f
  5588  0556  07D1               u3131:
  5589  0557                     	movf	2+(??___flmul+0)+0,w
  5590  0557  0846               	clrz
  5591  0558  1103               	skipnc
  5592  0559  1803               	addlw	1
  5593  055A  3E01               	skipnz
  5594  055B  1903               	goto	u3132
  5595  055C  2D5E               	addwf	(___flmul@prod+2),f
  5596  055D  07D2               u3132:
  5597  055E                     	movf	3+(??___flmul+0)+0,w
  5598  055E  0847               	clrz
  5599  055F  1103               	skipnc
  5600  0560  1803               	addlw	1
  5601  0561  3E01               	skipnz
  5602  0562  1903               	goto	u3133
  5603  0563  2D65               	addwf	(___flmul@prod+3),f
  5604  0564  07D3               u3133:
  5605  0565                     
  5606                           	line	125
  5607                           	movf	0+(___flmul@b)+02h,w
  5608  0565  083E               	movwf	(??___flmul+0)+0
  5609  0566  00C4               	movf	(??___flmul+0)+0,w
  5610  0567  0844               	movwf	(__Umul8_16@multiplicand)
  5611  0568  00F0               	movf	(___flmul@a),w
  5612  0569  0840               	fcall	__Umul8_16
  5613  056A  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5614  056F  0871               	bcf	status, 5	;RP0=0, select bank0
  5615  0570  1283               	bcf	status, 6	;RP1=0, select bank0
  5616  0571  1303               	movwf	(___flmul@temp+1)
  5617  0572  00D5               	movf	(0+(?__Umul8_16)),w
  5618  0573  0870               	movwf	(___flmul@temp)
  5619  0574  00D4               	line	126
  5620                           	
  5621                           l2441:	
  5622  0575                     	movf	(___flmul@temp),w
  5623  0575  0854               	movwf	(??___flmul+0)+0
  5624  0576  00C4               	clrf	(??___flmul+0)+0+1
  5625  0577  01C5               	clrf	(??___flmul+0)+0+2
  5626  0578  01C6               	clrf	(??___flmul+0)+0+3
  5627  0579  01C7               	movf	0+(??___flmul+0)+0,w
  5628  057A  0844               	addwf	(___flmul@grs),f
  5629  057B  07CA               	movf	1+(??___flmul+0)+0,w
  5630  057C  0845               	clrz
  5631  057D  1103               	skipnc
  5632  057E  1803               	addlw	1
  5633  057F  3E01               	skipnz
  5634  0580  1903               	goto	u3141
  5635  0581  2D83               	addwf	(___flmul@grs+1),f
  5636  0582  07CB               u3141:
  5637  0583                     	movf	2+(??___flmul+0)+0,w
  5638  0583  0846               	clrz
  5639  0584  1103               	skipnc
  5640  0585  1803               	addlw	1
  5641  0586  3E01               	skipnz
  5642  0587  1903               	goto	u3142
  5643  0588  2D8A               	addwf	(___flmul@grs+2),f
  5644  0589  07CC               u3142:
  5645  058A                     	movf	3+(??___flmul+0)+0,w
  5646  058A  0847               	clrz
  5647  058B  1103               	skipnc
  5648  058C  1803               	addlw	1
  5649  058D  3E01               	skipnz
  5650  058E  1903               	goto	u3143
  5651  058F  2D91               	addwf	(___flmul@grs+3),f
  5652  0590  07CD               u3143:
  5653  0591                     
  5654                           	line	127
  5655                           	
  5656                           l2443:	
  5657  0591                     	movf	0+(___flmul@temp)+01h,w
  5658  0591  0855               	movwf	(??___flmul+0)+0
  5659  0592  00C4               	clrf	(??___flmul+0)+0+1
  5660  0593  01C5               	clrf	(??___flmul+0)+0+2
  5661  0594  01C6               	clrf	(??___flmul+0)+0+3
  5662  0595  01C7               	movf	0+(??___flmul+0)+0,w
  5663  0596  0844               	addwf	(___flmul@prod),f
  5664  0597  07D0               	movf	1+(??___flmul+0)+0,w
  5665  0598  0845               	clrz
  5666  0599  1103               	skipnc
  5667  059A  1803               	addlw	1
  5668  059B  3E01               	skipnz
  5669  059C  1903               	goto	u3151
  5670  059D  2D9F               	addwf	(___flmul@prod+1),f
  5671  059E  07D1               u3151:
  5672  059F                     	movf	2+(??___flmul+0)+0,w
  5673  059F  0846               	clrz
  5674  05A0  1103               	skipnc
  5675  05A1  1803               	addlw	1
  5676  05A2  3E01               	skipnz
  5677  05A3  1903               	goto	u3152
  5678  05A4  2DA6               	addwf	(___flmul@prod+2),f
  5679  05A5  07D2               u3152:
  5680  05A6                     	movf	3+(??___flmul+0)+0,w
  5681  05A6  0847               	clrz
  5682  05A7  1103               	skipnc
  5683  05A8  1803               	addlw	1
  5684  05A9  3E01               	skipnz
  5685  05AA  1903               	goto	u3153
  5686  05AB  2DAD               	addwf	(___flmul@prod+3),f
  5687  05AC  07D3               u3153:
  5688  05AD                     
  5689                           	line	128
  5690                           	
  5691                           l2445:	
  5692  05AD                     	movlw	08h
  5693  05AD  3008               	movwf	(??___flmul+0)+0
  5694  05AE  00C4               u3165:
  5695  05AF                     	clrc
  5696  05AF  1003               	rlf	(___flmul@grs),f
  5697  05B0  0DCA               	rlf	(___flmul@grs+1),f
  5698  05B1  0DCB               	rlf	(___flmul@grs+2),f
  5699  05B2  0DCC               	rlf	(___flmul@grs+3),f
  5700  05B3  0DCD               	decfsz	(??___flmul+0)+0
  5701  05B4  0BC4               	goto	u3165
  5702  05B5  2DAF               	line	129
  5703                           	
  5704                           l2447:	
  5705  05B6                     	movf	0+(___flmul@b)+01h,w
  5706  05B6  083D               	movwf	(??___flmul+0)+0
  5707  05B7  00C4               	movf	(??___flmul+0)+0,w
  5708  05B8  0844               	movwf	(__Umul8_16@multiplicand)
  5709  05B9  00F0               	movf	(___flmul@a),w
  5710  05BA  0840               	fcall	__Umul8_16
  5711  05BB  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5712  05C0  0871               	bcf	status, 5	;RP0=0, select bank0
  5713  05C1  1283               	bcf	status, 6	;RP1=0, select bank0
  5714  05C2  1303               	movwf	(___flmul@temp+1)
  5715  05C3  00D5               	movf	(0+(?__Umul8_16)),w
  5716  05C4  0870               	movwf	(___flmul@temp)
  5717  05C5  00D4               	line	130
  5718                           	
  5719                           l2449:	
  5720  05C6                     	movf	(___flmul@temp),w
  5721  05C6  0854               	movwf	((??___flmul+0)+0)
  5722  05C7  00C4               	movf	(___flmul@temp+1),w
  5723  05C8  0855               	movwf	((??___flmul+0)+0+1)
  5724  05C9  00C5               	clrf	((??___flmul+0)+0+2)
  5725  05CA  01C6               	clrf	((??___flmul+0)+0+3)
  5726  05CB  01C7               	movf	0+(??___flmul+0)+0,w
  5727  05CC  0844               	addwf	(___flmul@grs),f
  5728  05CD  07CA               	movf	1+(??___flmul+0)+0,w
  5729  05CE  0845               	clrz
  5730  05CF  1103               	skipnc
  5731  05D0  1803               	addlw	1
  5732  05D1  3E01               	skipnz
  5733  05D2  1903               	goto	u3171
  5734  05D3  2DD5               	addwf	(___flmul@grs+1),f
  5735  05D4  07CB               u3171:
  5736  05D5                     	movf	2+(??___flmul+0)+0,w
  5737  05D5  0846               	clrz
  5738  05D6  1103               	skipnc
  5739  05D7  1803               	addlw	1
  5740  05D8  3E01               	skipnz
  5741  05D9  1903               	goto	u3172
  5742  05DA  2DDC               	addwf	(___flmul@grs+2),f
  5743  05DB  07CC               u3172:
  5744  05DC                     	movf	3+(??___flmul+0)+0,w
  5745  05DC  0847               	clrz
  5746  05DD  1103               	skipnc
  5747  05DE  1803               	addlw	1
  5748  05DF  3E01               	skipnz
  5749  05E0  1903               	goto	u3173
  5750  05E1  2DE3               	addwf	(___flmul@grs+3),f
  5751  05E2  07CD               u3173:
  5752  05E3                     
  5753                           	line	131
  5754                           	
  5755                           l2451:	
  5756  05E3                     	movf	(___flmul@b),w
  5757  05E3  083C               	movwf	(??___flmul+0)+0
  5758  05E4  00C4               	movf	(??___flmul+0)+0,w
  5759  05E5  0844               	movwf	(__Umul8_16@multiplicand)
  5760  05E6  00F0               	movf	0+(___flmul@a)+01h,w
  5761  05E7  0841               	fcall	__Umul8_16
  5762  05E8  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5763  05ED  0871               	bcf	status, 5	;RP0=0, select bank0
  5764  05EE  1283               	bcf	status, 6	;RP1=0, select bank0
  5765  05EF  1303               	movwf	(___flmul@temp+1)
  5766  05F0  00D5               	movf	(0+(?__Umul8_16)),w
  5767  05F1  0870               	movwf	(___flmul@temp)
  5768  05F2  00D4               	line	132
  5769                           	
  5770                           l2453:	
  5771  05F3                     	movf	(___flmul@temp),w
  5772  05F3  0854               	movwf	((??___flmul+0)+0)
  5773  05F4  00C4               	movf	(___flmul@temp+1),w
  5774  05F5  0855               	movwf	((??___flmul+0)+0+1)
  5775  05F6  00C5               	clrf	((??___flmul+0)+0+2)
  5776  05F7  01C6               	clrf	((??___flmul+0)+0+3)
  5777  05F8  01C7               	movf	0+(??___flmul+0)+0,w
  5778  05F9  0844               	addwf	(___flmul@grs),f
  5779  05FA  07CA               	movf	1+(??___flmul+0)+0,w
  5780  05FB  0845               	clrz
  5781  05FC  1103               	skipnc
  5782  05FD  1803               	addlw	1
  5783  05FE  3E01               	skipnz
  5784  05FF  1903               	goto	u3181
  5785  0600  2E02               	addwf	(___flmul@grs+1),f
  5786  0601  07CB               u3181:
  5787  0602                     	movf	2+(??___flmul+0)+0,w
  5788  0602  0846               	clrz
  5789  0603  1103               	skipnc
  5790  0604  1803               	addlw	1
  5791  0605  3E01               	skipnz
  5792  0606  1903               	goto	u3182
  5793  0607  2E09               	addwf	(___flmul@grs+2),f
  5794  0608  07CC               u3182:
  5795  0609                     	movf	3+(??___flmul+0)+0,w
  5796  0609  0847               	clrz
  5797  060A  1103               	skipnc
  5798  060B  1803               	addlw	1
  5799  060C  3E01               	skipnz
  5800  060D  1903               	goto	u3183
  5801  060E  2E10               	addwf	(___flmul@grs+3),f
  5802  060F  07CD               u3183:
  5803  0610                     
  5804                           	line	133
  5805                           	
  5806                           l2455:	
  5807  0610                     	movlw	08h
  5808  0610  3008               	movwf	(??___flmul+0)+0
  5809  0611  00C4               u3195:
  5810  0612                     	clrc
  5811  0612  1003               	rlf	(___flmul@grs),f
  5812  0613  0DCA               	rlf	(___flmul@grs+1),f
  5813  0614  0DCB               	rlf	(___flmul@grs+2),f
  5814  0615  0DCC               	rlf	(___flmul@grs+3),f
  5815  0616  0DCD               	decfsz	(??___flmul+0)+0
  5816  0617  0BC4               	goto	u3195
  5817  0618  2E12               	line	134
  5818                           	movf	(___flmul@b),w
  5819  0619  083C               	movwf	(??___flmul+0)+0
  5820  061A  00C4               	movf	(??___flmul+0)+0,w
  5821  061B  0844               	movwf	(__Umul8_16@multiplicand)
  5822  061C  00F0               	movf	(___flmul@a),w
  5823  061D  0840               	fcall	__Umul8_16
  5824  061E  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5825  0623  0871               	bcf	status, 5	;RP0=0, select bank0
  5826  0624  1283               	bcf	status, 6	;RP1=0, select bank0
  5827  0625  1303               	movwf	(___flmul@temp+1)
  5828  0626  00D5               	movf	(0+(?__Umul8_16)),w
  5829  0627  0870               	movwf	(___flmul@temp)
  5830  0628  00D4               	line	135
  5831                           	
  5832                           l2457:	
  5833  0629                     	movf	(___flmul@temp),w
  5834  0629  0854               	movwf	((??___flmul+0)+0)
  5835  062A  00C4               	movf	(___flmul@temp+1),w
  5836  062B  0855               	movwf	((??___flmul+0)+0+1)
  5837  062C  00C5               	clrf	((??___flmul+0)+0+2)
  5838  062D  01C6               	clrf	((??___flmul+0)+0+3)
  5839  062E  01C7               	movf	0+(??___flmul+0)+0,w
  5840  062F  0844               	addwf	(___flmul@grs),f
  5841  0630  07CA               	movf	1+(??___flmul+0)+0,w
  5842  0631  0845               	clrz
  5843  0632  1103               	skipnc
  5844  0633  1803               	addlw	1
  5845  0634  3E01               	skipnz
  5846  0635  1903               	goto	u3201
  5847  0636  2E38               	addwf	(___flmul@grs+1),f
  5848  0637  07CB               u3201:
  5849  0638                     	movf	2+(??___flmul+0)+0,w
  5850  0638  0846               	clrz
  5851  0639  1103               	skipnc
  5852  063A  1803               	addlw	1
  5853  063B  3E01               	skipnz
  5854  063C  1903               	goto	u3202
  5855  063D  2E3F               	addwf	(___flmul@grs+2),f
  5856  063E  07CC               u3202:
  5857  063F                     	movf	3+(??___flmul+0)+0,w
  5858  063F  0847               	clrz
  5859  0640  1103               	skipnc
  5860  0641  1803               	addlw	1
  5861  0642  3E01               	skipnz
  5862  0643  1903               	goto	u3203
  5863  0644  2E46               	addwf	(___flmul@grs+3),f
  5864  0645  07CD               u3203:
  5865  0646                     
  5866                           	line	136
  5867                           	
  5868                           l2459:	
  5869  0646                     	movf	0+(___flmul@b)+01h,w
  5870  0646  083D               	movwf	(??___flmul+0)+0
  5871  0647  00C4               	movf	(??___flmul+0)+0,w
  5872  0648  0844               	movwf	(__Umul8_16@multiplicand)
  5873  0649  00F0               	movf	0+(___flmul@a)+02h,w
  5874  064A  0842               	fcall	__Umul8_16
  5875  064B  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5876  0650  0871               	bcf	status, 5	;RP0=0, select bank0
  5877  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  5878  0652  1303               	movwf	(___flmul@temp+1)
  5879  0653  00D5               	movf	(0+(?__Umul8_16)),w
  5880  0654  0870               	movwf	(___flmul@temp)
  5881  0655  00D4               	line	137
  5882                           	movf	(___flmul@temp),w
  5883  0656  0854               	movwf	((??___flmul+0)+0)
  5884  0657  00C4               	movf	(___flmul@temp+1),w
  5885  0658  0855               	movwf	((??___flmul+0)+0+1)
  5886  0659  00C5               	clrf	((??___flmul+0)+0+2)
  5887  065A  01C6               	clrf	((??___flmul+0)+0+3)
  5888  065B  01C7               	movf	0+(??___flmul+0)+0,w
  5889  065C  0844               	addwf	(___flmul@prod),f
  5890  065D  07D0               	movf	1+(??___flmul+0)+0,w
  5891  065E  0845               	clrz
  5892  065F  1103               	skipnc
  5893  0660  1803               	addlw	1
  5894  0661  3E01               	skipnz
  5895  0662  1903               	goto	u3211
  5896  0663  2E65               	addwf	(___flmul@prod+1),f
  5897  0664  07D1               u3211:
  5898  0665                     	movf	2+(??___flmul+0)+0,w
  5899  0665  0846               	clrz
  5900  0666  1103               	skipnc
  5901  0667  1803               	addlw	1
  5902  0668  3E01               	skipnz
  5903  0669  1903               	goto	u3212
  5904  066A  2E6C               	addwf	(___flmul@prod+2),f
  5905  066B  07D2               u3212:
  5906  066C                     	movf	3+(??___flmul+0)+0,w
  5907  066C  0847               	clrz
  5908  066D  1103               	skipnc
  5909  066E  1803               	addlw	1
  5910  066F  3E01               	skipnz
  5911  0670  1903               	goto	u3213
  5912  0671  2E73               	addwf	(___flmul@prod+3),f
  5913  0672  07D3               u3213:
  5914  0673                     
  5915                           	line	138
  5916                           	
  5917                           l2461:	
  5918  0673                     	movf	0+(___flmul@b)+02h,w
  5919  0673  083E               	movwf	(??___flmul+0)+0
  5920  0674  00C4               	movf	(??___flmul+0)+0,w
  5921  0675  0844               	movwf	(__Umul8_16@multiplicand)
  5922  0676  00F0               	movf	0+(___flmul@a)+01h,w
  5923  0677  0841               	fcall	__Umul8_16
  5924  0678  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5925  067D  0871               	bcf	status, 5	;RP0=0, select bank0
  5926  067E  1283               	bcf	status, 6	;RP1=0, select bank0
  5927  067F  1303               	movwf	(___flmul@temp+1)
  5928  0680  00D5               	movf	(0+(?__Umul8_16)),w
  5929  0681  0870               	movwf	(___flmul@temp)
  5930  0682  00D4               	line	139
  5931                           	
  5932                           l2463:	
  5933  0683                     	movf	(___flmul@temp),w
  5934  0683  0854               	movwf	((??___flmul+0)+0)
  5935  0684  00C4               	movf	(___flmul@temp+1),w
  5936  0685  0855               	movwf	((??___flmul+0)+0+1)
  5937  0686  00C5               	clrf	((??___flmul+0)+0+2)
  5938  0687  01C6               	clrf	((??___flmul+0)+0+3)
  5939  0688  01C7               	movf	0+(??___flmul+0)+0,w
  5940  0689  0844               	addwf	(___flmul@prod),f
  5941  068A  07D0               	movf	1+(??___flmul+0)+0,w
  5942  068B  0845               	clrz
  5943  068C  1103               	skipnc
  5944  068D  1803               	addlw	1
  5945  068E  3E01               	skipnz
  5946  068F  1903               	goto	u3221
  5947  0690  2E92               	addwf	(___flmul@prod+1),f
  5948  0691  07D1               u3221:
  5949  0692                     	movf	2+(??___flmul+0)+0,w
  5950  0692  0846               	clrz
  5951  0693  1103               	skipnc
  5952  0694  1803               	addlw	1
  5953  0695  3E01               	skipnz
  5954  0696  1903               	goto	u3222
  5955  0697  2E99               	addwf	(___flmul@prod+2),f
  5956  0698  07D2               u3222:
  5957  0699                     	movf	3+(??___flmul+0)+0,w
  5958  0699  0847               	clrz
  5959  069A  1103               	skipnc
  5960  069B  1803               	addlw	1
  5961  069C  3E01               	skipnz
  5962  069D  1903               	goto	u3223
  5963  069E  2EA0               	addwf	(___flmul@prod+3),f
  5964  069F  07D3               u3223:
  5965  06A0                     
  5966                           	line	140
  5967                           	movf	0+(___flmul@b)+02h,w
  5968  06A0  083E               	movwf	(??___flmul+0)+0
  5969  06A1  00C4               	movf	(??___flmul+0)+0,w
  5970  06A2  0844               	movwf	(__Umul8_16@multiplicand)
  5971  06A3  00F0               	movf	0+(___flmul@a)+02h,w
  5972  06A4  0842               	fcall	__Umul8_16
  5973  06A5  120A  158A  209C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5974  06AA  0871               	bcf	status, 5	;RP0=0, select bank0
  5975  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  5976  06AC  1303               	movwf	(___flmul@temp+1)
  5977  06AD  00D5               	movf	(0+(?__Umul8_16)),w
  5978  06AE  0870               	movwf	(___flmul@temp)
  5979  06AF  00D4               	line	141
  5980                           	
  5981                           l2465:	
  5982  06B0                     	movf	(___flmul@temp),w
  5983  06B0  0854               	movwf	((??___flmul+0)+0)
  5984  06B1  00C4               	movf	(___flmul@temp+1),w
  5985  06B2  0855               	movwf	((??___flmul+0)+0+1)
  5986  06B3  00C5               	clrf	((??___flmul+0)+0+2)
  5987  06B4  01C6               	clrf	((??___flmul+0)+0+3)
  5988  06B5  01C7               	movlw	08h
  5989  06B6  3008               u3235:
  5990  06B7                     	clrc
  5991  06B7  1003               	rlf	(??___flmul+0)+0,f
  5992  06B8  0DC4               	rlf	(??___flmul+0)+1,f
  5993  06B9  0DC5               	rlf	(??___flmul+0)+2,f
  5994  06BA  0DC6               	rlf	(??___flmul+0)+3,f
  5995  06BB  0DC7               u3230:
  5996  06BC                     	addlw	-1
  5997  06BC  3EFF               	skipz
  5998  06BD  1D03               	goto	u3235
  5999  06BE  2EB7               	movf	0+(??___flmul+0)+0,w
  6000  06BF  0844               	addwf	(___flmul@prod),f
  6001  06C0  07D0               	movf	1+(??___flmul+0)+0,w
  6002  06C1  0845               	clrz
  6003  06C2  1103               	skipnc
  6004  06C3  1803               	addlw	1
  6005  06C4  3E01               	skipnz
  6006  06C5  1903               	goto	u3241
  6007  06C6  2EC8               	addwf	(___flmul@prod+1),f
  6008  06C7  07D1               u3241:
  6009  06C8                     	movf	2+(??___flmul+0)+0,w
  6010  06C8  0846               	clrz
  6011  06C9  1103               	skipnc
  6012  06CA  1803               	addlw	1
  6013  06CB  3E01               	skipnz
  6014  06CC  1903               	goto	u3242
  6015  06CD  2ECF               	addwf	(___flmul@prod+2),f
  6016  06CE  07D2               u3242:
  6017  06CF                     	movf	3+(??___flmul+0)+0,w
  6018  06CF  0847               	clrz
  6019  06D0  1103               	skipnc
  6020  06D1  1803               	addlw	1
  6021  06D2  3E01               	skipnz
  6022  06D3  1903               	goto	u3243
  6023  06D4  2ED6               	addwf	(___flmul@prod+3),f
  6024  06D5  07D3               u3243:
  6025  06D6                     
  6026                           	line	145
  6027                           	
  6028                           l2467:	
  6029  06D6                     	movf	(___flmul@grs),w
  6030  06D6  084A               	movwf	(??___flmul+0)+0
  6031  06D7  00C4               	movf	(___flmul@grs+1),w
  6032  06D8  084B               	movwf	((??___flmul+0)+0+1)
  6033  06D9  00C5               	movf	(___flmul@grs+2),w
  6034  06DA  084C               	movwf	((??___flmul+0)+0+2)
  6035  06DB  00C6               	movf	(___flmul@grs+3),w
  6036  06DC  084D               	movwf	((??___flmul+0)+0+3)
  6037  06DD  00C7               	movlw	018h
  6038  06DE  3018               u3255:
  6039  06DF                     	clrc
  6040  06DF  1003               	rrf	(??___flmul+0)+3,f
  6041  06E0  0CC7               	rrf	(??___flmul+0)+2,f
  6042  06E1  0CC6               	rrf	(??___flmul+0)+1,f
  6043  06E2  0CC5               	rrf	(??___flmul+0)+0,f
  6044  06E3  0CC4               u3250:
  6045  06E4                     	addlw	-1
  6046  06E4  3EFF               	skipz
  6047  06E5  1D03               	goto	u3255
  6048  06E6  2EDF               	movf	0+(??___flmul+0)+0,w
  6049  06E7  0844               	addwf	(___flmul@prod),f
  6050  06E8  07D0               	movf	1+(??___flmul+0)+0,w
  6051  06E9  0845               	clrz
  6052  06EA  1103               	skipnc
  6053  06EB  1803               	addlw	1
  6054  06EC  3E01               	skipnz
  6055  06ED  1903               	goto	u3261
  6056  06EE  2EF0               	addwf	(___flmul@prod+1),f
  6057  06EF  07D1               u3261:
  6058  06F0                     	movf	2+(??___flmul+0)+0,w
  6059  06F0  0846               	clrz
  6060  06F1  1103               	skipnc
  6061  06F2  1803               	addlw	1
  6062  06F3  3E01               	skipnz
  6063  06F4  1903               	goto	u3262
  6064  06F5  2EF7               	addwf	(___flmul@prod+2),f
  6065  06F6  07D2               u3262:
  6066  06F7                     	movf	3+(??___flmul+0)+0,w
  6067  06F7  0847               	clrz
  6068  06F8  1103               	skipnc
  6069  06F9  1803               	addlw	1
  6070  06FA  3E01               	skipnz
  6071  06FB  1903               	goto	u3263
  6072  06FC  2EFE               	addwf	(___flmul@prod+3),f
  6073  06FD  07D3               u3263:
  6074  06FE                     
  6075                           	line	146
  6076                           	
  6077                           l2469:	
  6078  06FE                     	movlw	08h
  6079  06FE  3008               	movwf	(??___flmul+0)+0
  6080  06FF  00C4               u3275:
  6081  0700                     	clrc
  6082  0700  1003               	rlf	(___flmul@grs),f
  6083  0701  0DCA               	rlf	(___flmul@grs+1),f
  6084  0702  0DCB               	rlf	(___flmul@grs+2),f
  6085  0703  0DCC               	rlf	(___flmul@grs+3),f
  6086  0704  0DCD               	decfsz	(??___flmul+0)+0
  6087  0705  0BC4               	goto	u3275
  6088  0706  2F00               	line	149
  6089                           	
  6090                           l2471:	
  6091  0707                     	movf	(___flmul@bexp),w
  6092  0707  084F               	addwf	(___flmul@aexp),w
  6093  0708  074E               	movwf	(??___flmul+0)+0
  6094  0709  00C4               	clrf	(??___flmul+0)+0+1
  6095  070A  01C5               	rlf	1+(??___flmul+0)+0,f
  6096  070B  0DC5               	
  6097                           	movf	0+(??___flmul+0)+0,w
  6098  070C  0844               	addlw	low(-126)
  6099  070D  3E82               	movwf	(___flmul@temp)
  6100  070E  00D4               	movf	1+(??___flmul+0)+0,w
  6101  070F  0845               	skipnc
  6102  0710  1803               	addlw	1
  6103  0711  3E01               	addlw	high(-126)
  6104  0712  3EFF               	movwf	1+(___flmul@temp)
  6105  0713  00D5               	line	152
  6106                           	goto	l2483
  6107  0714  2F34               	
  6108                           l683:	
  6109  0715                     	line	153
  6110                           	
  6111                           l2473:	
  6112  0715                     	movlw	01h
  6113  0715  3001               	movwf	(??___flmul+0)+0
  6114  0716  00C4               u3285:
  6115  0717                     	clrc
  6116  0717  1003               	rlf	(___flmul@prod),f
  6117  0718  0DD0               	rlf	(___flmul@prod+1),f
  6118  0719  0DD1               	rlf	(___flmul@prod+2),f
  6119  071A  0DD2               	rlf	(___flmul@prod+3),f
  6120  071B  0DD3               	decfsz	(??___flmul+0)+0
  6121  071C  0BC4               	goto	u3285
  6122  071D  2F17               	line	154
  6123                           	
  6124                           l2475:	
  6125  071E                     	btfss	(___flmul@grs+3),(31)&7
  6126  071E  1FCD               	goto	u3291
  6127  071F  2F21               	goto	u3290
  6128  0720  2F22               u3291:
  6129  0721                     	goto	l2479
  6130  0721  2F24               u3290:
  6131  0722                     	line	155
  6132                           	
  6133                           l2477:	
  6134  0722                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6135  0722  1450               	goto	l2479
  6136  0723  2F24               	line	156
  6137                           	
  6138                           l684:	
  6139  0724                     	line	157
  6140                           	
  6141                           l2479:	
  6142  0724                     	movlw	01h
  6143  0724  3001               	movwf	(??___flmul+0)+0
  6144  0725  00C4               u3305:
  6145  0726                     	clrc
  6146  0726  1003               	rlf	(___flmul@grs),f
  6147  0727  0DCA               	rlf	(___flmul@grs+1),f
  6148  0728  0DCB               	rlf	(___flmul@grs+2),f
  6149  0729  0DCC               	rlf	(___flmul@grs+3),f
  6150  072A  0DCD               	decfsz	(??___flmul+0)+0
  6151  072B  0BC4               	goto	u3305
  6152  072C  2F26               	line	158
  6153                           	
  6154                           l2481:	
  6155  072D                     	movlw	0FFh
  6156  072D  30FF               	addwf	(___flmul@temp),f
  6157  072E  07D4               	skipnc
  6158  072F  1803               	incf	(___flmul@temp+1),f
  6159  0730  0AD5               	movlw	0FFh
  6160  0731  30FF               	addwf	(___flmul@temp+1),f
  6161  0732  07D5               	goto	l2483
  6162  0733  2F34               	line	159
  6163                           	
  6164                           l682:	
  6165  0734                     	line	152
  6166                           	
  6167                           l2483:	
  6168  0734                     	btfss	(___flmul@prod+2),(23)&7
  6169  0734  1FD2               	goto	u3311
  6170  0735  2F37               	goto	u3310
  6171  0736  2F38               u3311:
  6172  0737                     	goto	l2473
  6173  0737  2F15               u3310:
  6174  0738                     	goto	l2485
  6175  0738  2F39               	
  6176                           l685:	
  6177  0739                     	line	163
  6178                           	
  6179                           l2485:	
  6180  0739                     	clrf	(___flmul@aexp)
  6181  0739  01CE               	line	164
  6182                           	
  6183                           l2487:	
  6184  073A                     	btfss	(___flmul@grs+3),(31)&7
  6185  073A  1FCD               	goto	u3321
  6186  073B  2F3D               	goto	u3320
  6187  073C  2F3E               u3321:
  6188  073D                     	goto	l2495
  6189  073D  2F5E               u3320:
  6190  073E                     	line	165
  6191                           	
  6192                           l2489:	
  6193  073E                     	movlw	0FFh
  6194  073E  30FF               	andwf	(___flmul@grs),w
  6195  073F  054A               	movwf	(??___flmul+0)+0
  6196  0740  00C4               	movlw	0FFh
  6197  0741  30FF               	andwf	(___flmul@grs+1),w
  6198  0742  054B               	movwf	((??___flmul+0)+0+1)
  6199  0743  00C5               	movlw	0FFh
  6200  0744  30FF               	andwf	(___flmul@grs+2),w
  6201  0745  054C               	movwf	((??___flmul+0)+0+2)
  6202  0746  00C6               	movlw	07Fh
  6203  0747  307F               	andwf	(___flmul@grs+3),w
  6204  0748  054D               	movwf	((??___flmul+0)+0+3)
  6205  0749  00C7               	movf	3+(??___flmul+0)+0,w
  6206  074A  0847               	iorwf	2+(??___flmul+0)+0,w
  6207  074B  0446               	iorwf	1+(??___flmul+0)+0,w
  6208  074C  0445               	iorwf	0+(??___flmul+0)+0,w
  6209  074D  0444               	skipnz
  6210  074E  1903               	goto	u3331
  6211  074F  2F51               	goto	u3330
  6212  0750  2F52               u3331:
  6213  0751                     	goto	l687
  6214  0751  2F55               u3330:
  6215  0752                     	line	166
  6216                           	
  6217                           l2491:	
  6218  0752                     	clrf	(___flmul@aexp)
  6219  0752  01CE               	incf	(___flmul@aexp),f
  6220  0753  0ACE               	line	167
  6221                           	goto	l2495
  6222  0754  2F5E               	line	168
  6223                           	
  6224                           l687:	
  6225  0755                     	line	169
  6226                           	btfss	(___flmul@prod),(0)&7
  6227  0755  1C50               	goto	u3341
  6228  0756  2F58               	goto	u3340
  6229  0757  2F59               u3341:
  6230  0758                     	goto	l2495
  6231  0758  2F5E               u3340:
  6232  0759                     	line	170
  6233                           	
  6234                           l2493:	
  6235  0759                     	clrf	(___flmul@aexp)
  6236  0759  01CE               	incf	(___flmul@aexp),f
  6237  075A  0ACE               	goto	l2495
  6238  075B  2F5E               	line	171
  6239                           	
  6240                           l689:	
  6241  075C                     	goto	l2495
  6242  075C  2F5E               	line	172
  6243                           	
  6244                           l688:	
  6245  075D                     	goto	l2495
  6246  075D  2F5E               	line	173
  6247                           	
  6248                           l686:	
  6249  075E                     	line	174
  6250                           	
  6251                           l2495:	
  6252  075E                     	movf	((___flmul@aexp)),w
  6253  075E  084E               	btfsc	status,2
  6254  075F  1903               	goto	u3351
  6255  0760  2F62               	goto	u3350
  6256  0761  2F63               u3351:
  6257  0762                     	goto	l2505
  6258  0762  2F96               u3350:
  6259  0763                     	line	175
  6260                           	
  6261                           l2497:	
  6262  0763                     	movlw	01h
  6263  0763  3001               	addwf	(___flmul@prod),f
  6264  0764  07D0               	movlw	0
  6265  0765  3000               	skipnc
  6266  0766  1803               movlw 1
  6267  0767  3001               	addwf	(___flmul@prod+1),f
  6268  0768  07D1               	movlw	0
  6269  0769  3000               	skipnc
  6270  076A  1803               movlw 1
  6271  076B  3001               	addwf	(___flmul@prod+2),f
  6272  076C  07D2               	movlw	0
  6273  076D  3000               	skipnc
  6274  076E  1803               movlw 1
  6275  076F  3001               	addwf	(___flmul@prod+3),f
  6276  0770  07D3               	line	176
  6277                           	
  6278                           l2499:	
  6279  0771                     	btfss	(___flmul@prod+3),(24)&7
  6280  0771  1C53               	goto	u3361
  6281  0772  2F74               	goto	u3360
  6282  0773  2F75               u3361:
  6283  0774                     	goto	l2505
  6284  0774  2F96               u3360:
  6285  0775                     	line	177
  6286                           	
  6287                           l2501:	
  6288  0775                     	movf	(___flmul@prod),w
  6289  0775  0850               	movwf	(??___flmul+0)+0
  6290  0776  00C4               	movf	(___flmul@prod+1),w
  6291  0777  0851               	movwf	((??___flmul+0)+0+1)
  6292  0778  00C5               	movf	(___flmul@prod+2),w
  6293  0779  0852               	movwf	((??___flmul+0)+0+2)
  6294  077A  00C6               	movf	(___flmul@prod+3),w
  6295  077B  0853               	movwf	((??___flmul+0)+0+3)
  6296  077C  00C7               	movlw	01h
  6297  077D  3001               	movwf	(??___flmul+4)+0
  6298  077E  00C8               u3375:
  6299  077F                     	rlf	(??___flmul+0)+3,w
  6300  077F  0D47               	rrf	(??___flmul+0)+3,f
  6301  0780  0CC7               	rrf	(??___flmul+0)+2,f
  6302  0781  0CC6               	rrf	(??___flmul+0)+1,f
  6303  0782  0CC5               	rrf	(??___flmul+0)+0,f
  6304  0783  0CC4               u3370:
  6305  0784                     	decfsz	(??___flmul+4)+0,f
  6306  0784  0BC8               	goto	u3375
  6307  0785  2F7F               	movf	3+(??___flmul+0)+0,w
  6308  0786  0847               	movwf	(___flmul@prod+3)
  6309  0787  00D3               	movf	2+(??___flmul+0)+0,w
  6310  0788  0846               	movwf	(___flmul@prod+2)
  6311  0789  00D2               	movf	1+(??___flmul+0)+0,w
  6312  078A  0845               	movwf	(___flmul@prod+1)
  6313  078B  00D1               	movf	0+(??___flmul+0)+0,w
  6314  078C  0844               	movwf	(___flmul@prod)
  6315  078D  00D0               
  6316                           	line	178
  6317                           	
  6318                           l2503:	
  6319  078E                     	movlw	01h
  6320  078E  3001               	addwf	(___flmul@temp),f
  6321  078F  07D4               	skipnc
  6322  0790  1803               	incf	(___flmul@temp+1),f
  6323  0791  0AD5               	movlw	0
  6324  0792  3000               	addwf	(___flmul@temp+1),f
  6325  0793  07D5               	goto	l2505
  6326  0794  2F96               	line	179
  6327                           	
  6328                           l691:	
  6329  0795                     	goto	l2505
  6330  0795  2F96               	line	180
  6331                           	
  6332                           l690:	
  6333  0796                     	line	183
  6334                           	
  6335                           l2505:	
  6336  0796                     	movf	(___flmul@temp+1),w
  6337  0796  0855               	xorlw	80h
  6338  0797  3A80               	movwf	btemp+1
  6339  0798  00FF               	movlw	(0)^80h
  6340  0799  3080               	subwf	btemp+1,w
  6341  079A  027F               	skipz
  6342  079B  1D03               	goto	u3385
  6343  079C  2F9F               	movlw	0FFh
  6344  079D  30FF               	subwf	(___flmul@temp),w
  6345  079E  0254               u3385:
  6346  079F                     
  6347                           	skipc
  6348  079F  1C03               	goto	u3381
  6349  07A0  2FA2               	goto	u3380
  6350  07A1  2FA3               u3381:
  6351  07A2                     	goto	l2509
  6352  07A2  2FAE               u3380:
  6353  07A3                     	line	184
  6354                           	
  6355                           l2507:	
  6356  07A3                     	movlw	07Fh
  6357  07A3  307F               	bcf	status, 5	;RP0=0, select bank0
  6358  07A4  1283               	bcf	status, 6	;RP1=0, select bank0
  6359  07A5  1303               	movwf	(___flmul@prod+3)
  6360  07A6  00D3               	movlw	080h
  6361  07A7  3080               	movwf	(___flmul@prod+2)
  6362  07A8  00D2               	movlw	0
  6363  07A9  3000               	movwf	(___flmul@prod+1)
  6364  07AA  00D1               	movlw	0
  6365  07AB  3000               	movwf	(___flmul@prod)
  6366  07AC  00D0               
  6367                           	line	185
  6368                           	goto	l693
  6369  07AD  2FE5               	line	187
  6370                           	
  6371                           l692:	
  6372  07AE                     	
  6373                           l2509:	
  6374  07AE                     	bcf	status, 5	;RP0=0, select bank0
  6375  07AE  1283               	bcf	status, 6	;RP1=0, select bank0
  6376  07AF  1303               	movf	(___flmul@temp+1),w
  6377  07B0  0855               	xorlw	80h
  6378  07B1  3A80               	movwf	btemp+1
  6379  07B2  00FF               	movlw	(0)^80h
  6380  07B3  3080               	subwf	btemp+1,w
  6381  07B4  027F               	skipz
  6382  07B5  1D03               	goto	u3395
  6383  07B6  2FB9               	movlw	01h
  6384  07B7  3001               	subwf	(___flmul@temp),w
  6385  07B8  0254               u3395:
  6386  07B9                     
  6387                           	skipnc
  6388  07B9  1803               	goto	u3391
  6389  07BA  2FBC               	goto	u3390
  6390  07BB  2FBD               u3391:
  6391  07BC                     	goto	l2515
  6392  07BC  2FC9               u3390:
  6393  07BD                     	line	188
  6394                           	
  6395                           l2511:	
  6396  07BD                     	movlw	high highword(0)
  6397  07BD  3000               	bcf	status, 5	;RP0=0, select bank0
  6398  07BE  1283               	bcf	status, 6	;RP1=0, select bank0
  6399  07BF  1303               	movwf	(___flmul@prod+3)
  6400  07C0  00D3               	movlw	low highword(0)
  6401  07C1  3000               	movwf	(___flmul@prod+2)
  6402  07C2  00D2               	movlw	high(0)
  6403  07C3  3000               	movwf	(___flmul@prod+1)
  6404  07C4  00D1               	movlw	low(0)
  6405  07C5  3000               	movwf	(___flmul@prod)
  6406  07C6  00D0               
  6407                           	line	190
  6408                           	
  6409                           l2513:	
  6410  07C7                     	clrf	(___flmul@sign)
  6411  07C7  01C9               	line	191
  6412                           	goto	l693
  6413  07C8  2FE5               	line	192
  6414                           	
  6415                           l694:	
  6416  07C9                     	line	194
  6417                           	
  6418                           l2515:	
  6419  07C9                     	bcf	status, 5	;RP0=0, select bank0
  6420  07C9  1283               	bcf	status, 6	;RP1=0, select bank0
  6421  07CA  1303               	movf	(___flmul@temp),w
  6422  07CB  0854               	movwf	(??___flmul+0)+0
  6423  07CC  00C4               	movf	(??___flmul+0)+0,w
  6424  07CD  0844               	movwf	(___flmul@bexp)
  6425  07CE  00CF               	line	195
  6426                           	movlw	0FFh
  6427  07CF  30FF               	andwf	(___flmul@prod),f
  6428  07D0  05D0               	movlw	0FFh
  6429  07D1  30FF               	andwf	(___flmul@prod+1),f
  6430  07D2  05D1               	movlw	07Fh
  6431  07D3  307F               	andwf	(___flmul@prod+2),f
  6432  07D4  05D2               	movlw	0
  6433  07D5  3000               	andwf	(___flmul@prod+3),f
  6434  07D6  05D3               	line	196
  6435                           	
  6436                           l2517:	
  6437  07D7                     	btfss	(___flmul@bexp),(0)&7
  6438  07D7  1C4F               	goto	u3401
  6439  07D8  2FDA               	goto	u3400
  6440  07D9  2FDB               u3401:
  6441  07DA                     	goto	l2521
  6442  07DA  2FDD               u3400:
  6443  07DB                     	line	197
  6444                           	
  6445                           l2519:	
  6446  07DB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6447  07DB  17D2               	goto	l2521
  6448  07DC  2FDD               	line	198
  6449                           	
  6450                           l696:	
  6451  07DD                     	line	199
  6452                           	
  6453                           l2521:	
  6454  07DD                     	movf	(___flmul@bexp),w
  6455  07DD  084F               	movwf	(??___flmul+0)+0
  6456  07DE  00C4               	clrc
  6457  07DF  1003               	rrf	(??___flmul+0)+0,w
  6458  07E0  0C44               	movwf	(??___flmul+1)+0
  6459  07E1  00C5               	movf	(??___flmul+1)+0,w
  6460  07E2  0845               	movwf	0+(___flmul@prod)+03h
  6461  07E3  00D3               	goto	l693
  6462  07E4  2FE5               	line	200
  6463                           	
  6464                           l695:	
  6465  07E5                     	
  6466                           l693:	
  6467  07E5                     	line	201
  6468                           	movf	(___flmul@sign),w
  6469  07E5  0849               	movwf	(??___flmul+0)+0
  6470  07E6  00C4               	movf	(??___flmul+0)+0,w
  6471  07E7  0844               	iorwf	0+(___flmul@prod)+03h,f
  6472  07E8  04D3               	line	203
  6473                           	
  6474                           l2523:	
  6475  07E9                     	movf	(___flmul@prod+3),w
  6476  07E9  0853               	movwf	(?___flmul+3)
  6477  07EA  00BF               	movf	(___flmul@prod+2),w
  6478  07EB  0852               	movwf	(?___flmul+2)
  6479  07EC  00BE               	movf	(___flmul@prod+1),w
  6480  07ED  0851               	movwf	(?___flmul+1)
  6481  07EE  00BD               	movf	(___flmul@prod),w
  6482  07EF  0850               	movwf	(?___flmul)
  6483  07F0  00BC               
  6484                           	goto	l681
  6485  07F1  2FF2               	
  6486                           l2525:	
  6487  07F2                     	line	205
  6488                           	
  6489                           l681:	
  6490  07F2                     	return
  6491  07F2  0008               	opt stack 0
  6492                           GLOBAL	__end_of___flmul
  6493                           	__end_of___flmul:
  6494  07F3                     	signat	___flmul,8316
  6495                           	global	__Umul8_16
  6496                           
  6497 ;; *************** function __Umul8_16 *****************
  6498 ;; Defined at:
  6499 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  multiplier      1    wreg     unsigned char 
  6502 ;;  multiplicand    1    0[COMMON] unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  multiplier      1    8[COMMON] unsigned char 
  6505 ;;  word_mpld       2    6[COMMON] unsigned int 
  6506 ;;  product         2    4[COMMON] unsigned int 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  2    0[COMMON] unsigned int 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6516 ;;      Params:         2       0       0       0       0
  6517 ;;      Locals:         5       0       0       0       0
  6518 ;;      Temps:          2       0       0       0       0
  6519 ;;      Totals:         9       0       0       0       0
  6520 ;;Total ram usage:        9 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		___flmul
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6529                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6530                           	line	4
  6531                           global __ptext19
  6532                           __ptext19:	;psect for function __Umul8_16
  6533  089C                     psect	text19
  6534                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6535                           	line	4
  6536                           	global	__size_of__Umul8_16
  6537                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6538  002A                     	
  6539                           __Umul8_16:	
  6540  089C                     ;incstack = 0
  6541                           	opt	stack 6
  6542                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6543                           ;__Umul8_16@multiplier stored from wreg
  6544                           	movwf	(__Umul8_16@multiplier)
  6545  089C  00F8               	line	5
  6546                           	
  6547                           l1925:	
  6548  089D                     	clrf	(__Umul8_16@product)
  6549  089D  01F4               	clrf	(__Umul8_16@product+1)
  6550  089E  01F5               	line	6
  6551                           	
  6552                           l1927:	
  6553  089F                     	movf	(__Umul8_16@multiplicand),w
  6554  089F  0870               	movwf	(??__Umul8_16+0)+0
  6555  08A0  00F2               	clrf	(??__Umul8_16+0)+0+1
  6556  08A1  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6557  08A2  0872               	movwf	(__Umul8_16@word_mpld)
  6558  08A3  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6559  08A4  0873               	movwf	(__Umul8_16@word_mpld+1)
  6560  08A5  00F7               	goto	l1929
  6561  08A6  28A7               	line	50
  6562                           	
  6563                           l718:	
  6564  08A7                     	line	51
  6565                           	
  6566                           l1929:	
  6567  08A7                     	btfss	(__Umul8_16@multiplier),(0)&7
  6568  08A7  1C78               	goto	u2131
  6569  08A8  28AA               	goto	u2130
  6570  08A9  28AB               u2131:
  6571  08AA                     	goto	l719
  6572  08AA  28B1               u2130:
  6573  08AB                     	line	52
  6574                           	
  6575                           l1931:	
  6576  08AB                     	movf	(__Umul8_16@word_mpld),w
  6577  08AB  0876               	addwf	(__Umul8_16@product),f
  6578  08AC  07F4               	skipnc
  6579  08AD  1803               	incf	(__Umul8_16@product+1),f
  6580  08AE  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6581  08AF  0877               	addwf	(__Umul8_16@product+1),f
  6582  08B0  07F5               	line	53
  6583                           	
  6584                           l719:	
  6585  08B1                     	line	54
  6586                           	movlw	01h
  6587  08B1  3001               	
  6588                           u2145:
  6589  08B2                     	clrc
  6590  08B2  1003               	rlf	(__Umul8_16@word_mpld),f
  6591  08B3  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6592  08B4  0DF7               	addlw	-1
  6593  08B5  3EFF               	skipz
  6594  08B6  1D03               	goto	u2145
  6595  08B7  28B2               	line	55
  6596                           	clrc
  6597  08B8  1003               	rrf	(__Umul8_16@multiplier),f
  6598  08B9  0CF8               
  6599                           	line	56
  6600                           	
  6601                           l1933:	
  6602  08BA                     	movf	((__Umul8_16@multiplier)),w
  6603  08BA  0878               	btfss	status,2
  6604  08BB  1D03               	goto	u2151
  6605  08BC  28BE               	goto	u2150
  6606  08BD  28BF               u2151:
  6607  08BE                     	goto	l1929
  6608  08BE  28A7               u2150:
  6609  08BF                     	goto	l1935
  6610  08BF  28C0               	
  6611                           l720:	
  6612  08C0                     	line	59
  6613                           	
  6614                           l1935:	
  6615  08C0                     	movf	(__Umul8_16@product+1),w
  6616  08C0  0875               	movwf	(?__Umul8_16+1)
  6617  08C1  00F1               	movf	(__Umul8_16@product),w
  6618  08C2  0874               	movwf	(?__Umul8_16)
  6619  08C3  00F0               	goto	l721
  6620  08C4  28C5               	
  6621                           l1937:	
  6622  08C5                     	line	60
  6623                           	
  6624                           l721:	
  6625  08C5                     	return
  6626  08C5  0008               	opt stack 0
  6627                           GLOBAL	__end_of__Umul8_16
  6628                           	__end_of__Umul8_16:
  6629  08C6                     	signat	__Umul8_16,8314
  6630                           	global	___fldiv
  6631                           
  6632 ;; *************** function ___fldiv *****************
  6633 ;; Defined at:
  6634 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  a               4   54[BANK0 ] unsigned int 
  6637 ;;  b               4   58[BANK0 ] unsigned int 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  grs             4   74[BANK0 ] unsigned long 
  6640 ;;  rem             4   67[BANK0 ] unsigned long 
  6641 ;;  new_exp         2   72[BANK0 ] int 
  6642 ;;  aexp            1   79[BANK0 ] unsigned char 
  6643 ;;  bexp            1   78[BANK0 ] unsigned char 
  6644 ;;  sign            1   71[BANK0 ] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  4   54[BANK0 ] unsigned char 
  6647 ;; Registers used:
  6648 ;;		wreg, status,2, status,0, btemp+1
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6654 ;;      Params:         0       8       0       0       0
  6655 ;;      Locals:         0      13       0       0       0
  6656 ;;      Temps:          0       5       0       0       0
  6657 ;;      Totals:         0      26       0       0       0
  6658 ;;Total ram usage:       26 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6667                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6668                           	line	8
  6669                           global __ptext20
  6670                           __ptext20:	;psect for function ___fldiv
  6671  0DF7                     psect	text20
  6672                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6673                           	line	8
  6674                           	global	__size_of___fldiv
  6675                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  6676  0209                     	
  6677                           ___fldiv:	
  6678  0DF7                     ;incstack = 0
  6679                           	opt	stack 7
  6680                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6681                           	line	26
  6682                           	
  6683                           l2245:	
  6684  0DF7                     	bcf	status, 5	;RP0=0, select bank0
  6685  0DF7  1283               	bcf	status, 6	;RP1=0, select bank0
  6686  0DF8  1303               	movf	0+(___fldiv@b)+03h,w
  6687  0DF9  085D               	andlw	080h
  6688  0DFA  3980               	movwf	(??___fldiv+0)+0
  6689  0DFB  00DE               	movf	(??___fldiv+0)+0,w
  6690  0DFC  085E               	movwf	(___fldiv@sign)
  6691  0DFD  00E7               	line	27
  6692                           	
  6693                           l2247:	
  6694  0DFE                     	movf	0+(___fldiv@b)+03h,w
  6695  0DFE  085D               	movwf	(??___fldiv+0)+0
  6696  0DFF  00DE               	addwf	(??___fldiv+0)+0,w
  6697  0E00  075E               	movwf	(??___fldiv+1)+0
  6698  0E01  00DF               	movf	(??___fldiv+1)+0,w
  6699  0E02  085F               	movwf	(___fldiv@bexp)
  6700  0E03  00EE               	line	28
  6701                           	
  6702                           l2249:	
  6703  0E04                     	btfss	0+(___fldiv@b)+02h,(7)&7
  6704  0E04  1FDC               	goto	u2751
  6705  0E05  2E07               	goto	u2750
  6706  0E06  2E08               u2751:
  6707  0E07                     	goto	l2253
  6708  0E07  2E0A               u2750:
  6709  0E08                     	line	29
  6710                           	
  6711                           l2251:	
  6712  0E08                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  6713  0E08  146E               	goto	l2253
  6714  0E09  2E0A               	line	30
  6715                           	
  6716                           l634:	
  6717  0E0A                     	line	33
  6718                           	
  6719                           l2253:	
  6720  0E0A                     	movf	((___fldiv@bexp)),w
  6721  0E0A  086E               	btfsc	status,2
  6722  0E0B  1903               	goto	u2761
  6723  0E0C  2E0E               	goto	u2760
  6724  0E0D  2E0F               u2761:
  6725  0E0E                     	goto	l2263
  6726  0E0E  2E20               u2760:
  6727  0E0F                     	line	35
  6728                           	
  6729                           l2255:	
  6730  0E0F                     		incf	((___fldiv@bexp)),w
  6731  0E0F  0A6E               	btfss	status,2
  6732  0E10  1D03               	goto	u2771
  6733  0E11  2E13               	goto	u2770
  6734  0E12  2E14               u2771:
  6735  0E13                     	goto	l2259
  6736  0E13  2E1D               u2770:
  6737  0E14                     	line	37
  6738                           	
  6739                           l2257:	
  6740  0E14                     	movlw	0x0
  6741  0E14  3000               	movwf	(___fldiv@b+3)
  6742  0E15  00DD               	movlw	0x0
  6743  0E16  3000               	movwf	(___fldiv@b+2)
  6744  0E17  00DC               	movlw	0x0
  6745  0E18  3000               	movwf	(___fldiv@b+1)
  6746  0E19  00DB               	movlw	0x0
  6747  0E1A  3000               	movwf	(___fldiv@b)
  6748  0E1B  00DA               
  6749                           	goto	l2259
  6750  0E1C  2E1D               	line	38
  6751                           	
  6752                           l636:	
  6753  0E1D                     	line	40
  6754                           	
  6755                           l2259:	
  6756  0E1D                     	bsf	(___fldiv@b)+(23/8),(23)&7
  6757  0E1D  17DC               	line	42
  6758                           	
  6759                           l2261:	
  6760  0E1E                     	clrf	0+(___fldiv@b)+03h
  6761  0E1E  01DD               	line	43
  6762                           	goto	l2265
  6763  0E1F  2E29               	line	44
  6764                           	
  6765                           l635:	
  6766  0E20                     	line	46
  6767                           	
  6768                           l2263:	
  6769  0E20                     	movlw	0x0
  6770  0E20  3000               	movwf	(___fldiv@b+3)
  6771  0E21  00DD               	movlw	0x0
  6772  0E22  3000               	movwf	(___fldiv@b+2)
  6773  0E23  00DC               	movlw	0x0
  6774  0E24  3000               	movwf	(___fldiv@b+1)
  6775  0E25  00DB               	movlw	0x0
  6776  0E26  3000               	movwf	(___fldiv@b)
  6777  0E27  00DA               
  6778                           	goto	l2265
  6779  0E28  2E29               	line	47
  6780                           	
  6781                           l637:	
  6782  0E29                     	line	49
  6783                           	
  6784                           l2265:	
  6785  0E29                     	movf	0+(___fldiv@a)+03h,w
  6786  0E29  0859               	andlw	080h
  6787  0E2A  3980               	movwf	(??___fldiv+0)+0
  6788  0E2B  00DE               	movf	(??___fldiv+0)+0,w
  6789  0E2C  085E               	xorwf	(___fldiv@sign),f
  6790  0E2D  06E7               	line	50
  6791                           	
  6792                           l2267:	
  6793  0E2E                     	movf	0+(___fldiv@a)+03h,w
  6794  0E2E  0859               	movwf	(??___fldiv+0)+0
  6795  0E2F  00DE               	addwf	(??___fldiv+0)+0,w
  6796  0E30  075E               	movwf	(??___fldiv+1)+0
  6797  0E31  00DF               	movf	(??___fldiv+1)+0,w
  6798  0E32  085F               	movwf	(___fldiv@aexp)
  6799  0E33  00EF               	line	51
  6800                           	
  6801                           l2269:	
  6802  0E34                     	btfss	0+(___fldiv@a)+02h,(7)&7
  6803  0E34  1FD8               	goto	u2781
  6804  0E35  2E37               	goto	u2780
  6805  0E36  2E38               u2781:
  6806  0E37                     	goto	l2273
  6807  0E37  2E3A               u2780:
  6808  0E38                     	line	52
  6809                           	
  6810                           l2271:	
  6811  0E38                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  6812  0E38  146F               	goto	l2273
  6813  0E39  2E3A               	line	53
  6814                           	
  6815                           l638:	
  6816  0E3A                     	line	56
  6817                           	
  6818                           l2273:	
  6819  0E3A                     	movf	((___fldiv@aexp)),w
  6820  0E3A  086F               	btfsc	status,2
  6821  0E3B  1903               	goto	u2791
  6822  0E3C  2E3E               	goto	u2790
  6823  0E3D  2E3F               u2791:
  6824  0E3E                     	goto	l2283
  6825  0E3E  2E50               u2790:
  6826  0E3F                     	line	58
  6827                           	
  6828                           l2275:	
  6829  0E3F                     		incf	((___fldiv@aexp)),w
  6830  0E3F  0A6F               	btfss	status,2
  6831  0E40  1D03               	goto	u2801
  6832  0E41  2E43               	goto	u2800
  6833  0E42  2E44               u2801:
  6834  0E43                     	goto	l2279
  6835  0E43  2E4D               u2800:
  6836  0E44                     	line	60
  6837                           	
  6838                           l2277:	
  6839  0E44                     	movlw	0x0
  6840  0E44  3000               	movwf	(___fldiv@a+3)
  6841  0E45  00D9               	movlw	0x0
  6842  0E46  3000               	movwf	(___fldiv@a+2)
  6843  0E47  00D8               	movlw	0x0
  6844  0E48  3000               	movwf	(___fldiv@a+1)
  6845  0E49  00D7               	movlw	0x0
  6846  0E4A  3000               	movwf	(___fldiv@a)
  6847  0E4B  00D6               
  6848                           	goto	l2279
  6849  0E4C  2E4D               	line	61
  6850                           	
  6851                           l640:	
  6852  0E4D                     	line	63
  6853                           	
  6854                           l2279:	
  6855  0E4D                     	bsf	(___fldiv@a)+(23/8),(23)&7
  6856  0E4D  17D8               	line	65
  6857                           	
  6858                           l2281:	
  6859  0E4E                     	clrf	0+(___fldiv@a)+03h
  6860  0E4E  01D9               	line	66
  6861                           	goto	l641
  6862  0E4F  2E58               	line	67
  6863                           	
  6864                           l639:	
  6865  0E50                     	line	69
  6866                           	
  6867                           l2283:	
  6868  0E50                     	movlw	0x0
  6869  0E50  3000               	movwf	(___fldiv@a+3)
  6870  0E51  00D9               	movlw	0x0
  6871  0E52  3000               	movwf	(___fldiv@a+2)
  6872  0E53  00D8               	movlw	0x0
  6873  0E54  3000               	movwf	(___fldiv@a+1)
  6874  0E55  00D7               	movlw	0x0
  6875  0E56  3000               	movwf	(___fldiv@a)
  6876  0E57  00D6               
  6877                           	line	70
  6878                           	
  6879                           l641:	
  6880  0E58                     	line	75
  6881                           	movf	(___fldiv@a+3),w
  6882  0E58  0859               	iorwf	(___fldiv@a+2),w
  6883  0E59  0458               	iorwf	(___fldiv@a+1),w
  6884  0E5A  0457               	iorwf	(___fldiv@a),w
  6885  0E5B  0456               	skipz
  6886  0E5C  1D03               	goto	u2811
  6887  0E5D  2E5F               	goto	u2810
  6888  0E5E  2E60               u2811:
  6889  0E5F                     	goto	l2293
  6890  0E5F  2E7A               u2810:
  6891  0E60                     	line	76
  6892                           	
  6893                           l2285:	
  6894  0E60                     	movlw	high highword(0)
  6895  0E60  3000               	movwf	(___fldiv@b+3)
  6896  0E61  00DD               	movlw	low highword(0)
  6897  0E62  3000               	movwf	(___fldiv@b+2)
  6898  0E63  00DC               	movlw	high(0)
  6899  0E64  3000               	movwf	(___fldiv@b+1)
  6900  0E65  00DB               	movlw	low(0)
  6901  0E66  3000               	movwf	(___fldiv@b)
  6902  0E67  00DA               
  6903                           	line	77
  6904                           	movlw	080h
  6905  0E68  3080               	iorwf	0+(___fldiv@b)+02h,f
  6906  0E69  04DC               	movlw	07Fh
  6907  0E6A  307F               	iorwf	1+(___fldiv@b)+02h,f
  6908  0E6B  04DD               	line	78
  6909                           	
  6910                           l2287:	
  6911  0E6C                     	movf	(___fldiv@sign),w
  6912  0E6C  0867               	movwf	(??___fldiv+0)+0
  6913  0E6D  00DE               	movf	(??___fldiv+0)+0,w
  6914  0E6E  085E               	iorwf	0+(___fldiv@b)+03h,f
  6915  0E6F  04DD               	line	79
  6916                           	
  6917                           l2289:	
  6918  0E70                     	movf	(___fldiv@b+3),w
  6919  0E70  085D               	movwf	(?___fldiv+3)
  6920  0E71  00D9               	movf	(___fldiv@b+2),w
  6921  0E72  085C               	movwf	(?___fldiv+2)
  6922  0E73  00D8               	movf	(___fldiv@b+1),w
  6923  0E74  085B               	movwf	(?___fldiv+1)
  6924  0E75  00D7               	movf	(___fldiv@b),w
  6925  0E76  085A               	movwf	(?___fldiv)
  6926  0E77  00D6               
  6927                           	goto	l643
  6928  0E78  2FFF               	
  6929                           l2291:	
  6930  0E79                     	goto	l643
  6931  0E79  2FFF               	line	80
  6932                           	
  6933                           l642:	
  6934  0E7A                     	line	83
  6935                           	
  6936                           l2293:	
  6937  0E7A                     	movf	((___fldiv@bexp)),w
  6938  0E7A  086E               	btfss	status,2
  6939  0E7B  1D03               	goto	u2821
  6940  0E7C  2E7E               	goto	u2820
  6941  0E7D  2E7F               u2821:
  6942  0E7E                     	goto	l2299
  6943  0E7E  2E91               u2820:
  6944  0E7F                     	line	84
  6945                           	
  6946                           l2295:	
  6947  0E7F                     	movlw	high highword(0)
  6948  0E7F  3000               	movwf	(___fldiv@b+3)
  6949  0E80  00DD               	movlw	low highword(0)
  6950  0E81  3000               	movwf	(___fldiv@b+2)
  6951  0E82  00DC               	movlw	high(0)
  6952  0E83  3000               	movwf	(___fldiv@b+1)
  6953  0E84  00DB               	movlw	low(0)
  6954  0E85  3000               	movwf	(___fldiv@b)
  6955  0E86  00DA               
  6956                           	line	85
  6957                           	movf	(___fldiv@b+3),w
  6958  0E87  085D               	movwf	(?___fldiv+3)
  6959  0E88  00D9               	movf	(___fldiv@b+2),w
  6960  0E89  085C               	movwf	(?___fldiv+2)
  6961  0E8A  00D8               	movf	(___fldiv@b+1),w
  6962  0E8B  085B               	movwf	(?___fldiv+1)
  6963  0E8C  00D7               	movf	(___fldiv@b),w
  6964  0E8D  085A               	movwf	(?___fldiv)
  6965  0E8E  00D6               
  6966                           	goto	l643
  6967  0E8F  2FFF               	
  6968                           l2297:	
  6969  0E90                     	goto	l643
  6970  0E90  2FFF               	line	86
  6971                           	
  6972                           l644:	
  6973  0E91                     	line	89
  6974                           	
  6975                           l2299:	
  6976  0E91                     	movf	(___fldiv@aexp),w
  6977  0E91  086F               	movwf	(??___fldiv+0)+0
  6978  0E92  00DE               	clrf	(??___fldiv+0)+0+1
  6979  0E93  01DF               	comf	(??___fldiv+0)+0,f
  6980  0E94  09DE               	comf	(??___fldiv+0)+1,f
  6981  0E95  09DF               	incf	(??___fldiv+0)+0,f
  6982  0E96  0ADE               	skipnz
  6983  0E97  1903               	incf	(??___fldiv+0)+1,f
  6984  0E98  0ADF               	movf	(___fldiv@bexp),w
  6985  0E99  086E               	addwf	0+(??___fldiv+0)+0,w
  6986  0E9A  075E               	movwf	(??___fldiv+2)+0
  6987  0E9B  00E0               	movf	1+(??___fldiv+0)+0,w
  6988  0E9C  085F               	skipnc
  6989  0E9D  1803               	incf	1+(??___fldiv+0)+0,w
  6990  0E9E  0A5F               	movwf	((??___fldiv+2)+0)+1
  6991  0E9F  00E1               	movf	0+(??___fldiv+2)+0,w
  6992  0EA0  0860               	addlw	low(07Fh)
  6993  0EA1  3E7F               	movwf	(___fldiv@new_exp)
  6994  0EA2  00E8               	movf	1+(??___fldiv+2)+0,w
  6995  0EA3  0861               	skipnc
  6996  0EA4  1803               	addlw	1
  6997  0EA5  3E01               	addlw	high(07Fh)
  6998  0EA6  3E00               	movwf	1+(___fldiv@new_exp)
  6999  0EA7  00E9               	line	92
  7000                           	
  7001                           l2301:	
  7002  0EA8                     	movf	(___fldiv@b+3),w
  7003  0EA8  085D               	movwf	(___fldiv@rem+3)
  7004  0EA9  00E6               	movf	(___fldiv@b+2),w
  7005  0EAA  085C               	movwf	(___fldiv@rem+2)
  7006  0EAB  00E5               	movf	(___fldiv@b+1),w
  7007  0EAC  085B               	movwf	(___fldiv@rem+1)
  7008  0EAD  00E4               	movf	(___fldiv@b),w
  7009  0EAE  085A               	movwf	(___fldiv@rem)
  7010  0EAF  00E3               
  7011                           	line	93
  7012                           	
  7013                           l2303:	
  7014  0EB0                     	movlw	high highword(0)
  7015  0EB0  3000               	movwf	(___fldiv@b+3)
  7016  0EB1  00DD               	movlw	low highword(0)
  7017  0EB2  3000               	movwf	(___fldiv@b+2)
  7018  0EB3  00DC               	movlw	high(0)
  7019  0EB4  3000               	movwf	(___fldiv@b+1)
  7020  0EB5  00DB               	movlw	low(0)
  7021  0EB6  3000               	movwf	(___fldiv@b)
  7022  0EB7  00DA               
  7023                           	line	94
  7024                           	
  7025                           l2305:	
  7026  0EB8                     	movlw	high highword(0)
  7027  0EB8  3000               	movwf	(___fldiv@grs+3)
  7028  0EB9  00ED               	movlw	low highword(0)
  7029  0EBA  3000               	movwf	(___fldiv@grs+2)
  7030  0EBB  00EC               	movlw	high(0)
  7031  0EBC  3000               	movwf	(___fldiv@grs+1)
  7032  0EBD  00EB               	movlw	low(0)
  7033  0EBE  3000               	movwf	(___fldiv@grs)
  7034  0EBF  00EA               
  7035                           	line	96
  7036                           	
  7037                           l2307:	
  7038  0EC0                     	clrf	(___fldiv@aexp)
  7039  0EC0  01EF               	line	97
  7040                           	goto	l2327
  7041  0EC1  2F10               	
  7042                           l646:	
  7043  0EC2                     	line	100
  7044                           	
  7045                           l2309:	
  7046  0EC2                     	movf	((___fldiv@aexp)),w
  7047  0EC2  086F               	btfsc	status,2
  7048  0EC3  1903               	goto	u2831
  7049  0EC4  2EC6               	goto	u2830
  7050  0EC5  2EC7               u2831:
  7051  0EC6                     	goto	l2319
  7052  0EC6  2EE9               u2830:
  7053  0EC7                     	line	101
  7054                           	
  7055                           l2311:	
  7056  0EC7                     	movlw	01h
  7057  0EC7  3001               	movwf	(??___fldiv+0)+0
  7058  0EC8  00DE               u2845:
  7059  0EC9                     	clrc
  7060  0EC9  1003               	rlf	(___fldiv@rem),f
  7061  0ECA  0DE3               	rlf	(___fldiv@rem+1),f
  7062  0ECB  0DE4               	rlf	(___fldiv@rem+2),f
  7063  0ECC  0DE5               	rlf	(___fldiv@rem+3),f
  7064  0ECD  0DE6               	decfsz	(??___fldiv+0)+0
  7065  0ECE  0BDE               	goto	u2845
  7066  0ECF  2EC9               	line	102
  7067                           	movlw	01h
  7068  0ED0  3001               	movwf	(??___fldiv+0)+0
  7069  0ED1  00DE               u2855:
  7070  0ED2                     	clrc
  7071  0ED2  1003               	rlf	(___fldiv@b),f
  7072  0ED3  0DDA               	rlf	(___fldiv@b+1),f
  7073  0ED4  0DDB               	rlf	(___fldiv@b+2),f
  7074  0ED5  0DDC               	rlf	(___fldiv@b+3),f
  7075  0ED6  0DDD               	decfsz	(??___fldiv+0)+0
  7076  0ED7  0BDE               	goto	u2855
  7077  0ED8  2ED2               	line	103
  7078                           	
  7079                           l2313:	
  7080  0ED9                     	btfss	(___fldiv@grs+3),(31)&7
  7081  0ED9  1FED               	goto	u2861
  7082  0EDA  2EDC               	goto	u2860
  7083  0EDB  2EDD               u2861:
  7084  0EDC                     	goto	l2317
  7085  0EDC  2EDF               u2860:
  7086  0EDD                     	line	104
  7087                           	
  7088                           l2315:	
  7089  0EDD                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7090  0EDD  145A               	goto	l2317
  7091  0EDE  2EDF               	line	105
  7092                           	
  7093                           l648:	
  7094  0EDF                     	line	106
  7095                           	
  7096                           l2317:	
  7097  0EDF                     	movlw	01h
  7098  0EDF  3001               	movwf	(??___fldiv+0)+0
  7099  0EE0  00DE               u2875:
  7100  0EE1                     	clrc
  7101  0EE1  1003               	rlf	(___fldiv@grs),f
  7102  0EE2  0DEA               	rlf	(___fldiv@grs+1),f
  7103  0EE3  0DEB               	rlf	(___fldiv@grs+2),f
  7104  0EE4  0DEC               	rlf	(___fldiv@grs+3),f
  7105  0EE5  0DED               	decfsz	(??___fldiv+0)+0
  7106  0EE6  0BDE               	goto	u2875
  7107  0EE7  2EE1               	goto	l2319
  7108  0EE8  2EE9               	line	107
  7109                           	
  7110                           l647:	
  7111  0EE9                     	line	112
  7112                           	
  7113                           l2319:	
  7114  0EE9                     	movf	(___fldiv@a+3),w
  7115  0EE9  0859               	subwf	(___fldiv@rem+3),w
  7116  0EEA  0266               	skipz
  7117  0EEB  1D03               	goto	u2885
  7118  0EEC  2EF7               	movf	(___fldiv@a+2),w
  7119  0EED  0858               	subwf	(___fldiv@rem+2),w
  7120  0EEE  0265               	skipz
  7121  0EEF  1D03               	goto	u2885
  7122  0EF0  2EF7               	movf	(___fldiv@a+1),w
  7123  0EF1  0857               	subwf	(___fldiv@rem+1),w
  7124  0EF2  0264               	skipz
  7125  0EF3  1D03               	goto	u2885
  7126  0EF4  2EF7               	movf	(___fldiv@a),w
  7127  0EF5  0856               	subwf	(___fldiv@rem),w
  7128  0EF6  0263               u2885:
  7129  0EF7                     	skipc
  7130  0EF7  1C03               	goto	u2881
  7131  0EF8  2EFA               	goto	u2880
  7132  0EF9  2EFB               u2881:
  7133  0EFA                     	goto	l2325
  7134  0EFA  2F0B               u2880:
  7135  0EFB                     	line	115
  7136                           	
  7137                           l2321:	
  7138  0EFB                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  7139  0EFB  176D               	line	116
  7140                           	
  7141                           l2323:	
  7142  0EFC                     	movf	(___fldiv@a),w
  7143  0EFC  0856               	subwf	(___fldiv@rem),f
  7144  0EFD  02E3               	movf	(___fldiv@a+1),w
  7145  0EFE  0857               	skipc
  7146  0EFF  1C03               	incfsz	(___fldiv@a+1),w
  7147  0F00  0F57               	subwf	(___fldiv@rem+1),f
  7148  0F01  02E4               	movf	(___fldiv@a+2),w
  7149  0F02  0858               	skipc
  7150  0F03  1C03               	incfsz	(___fldiv@a+2),w
  7151  0F04  0F58               	subwf	(___fldiv@rem+2),f
  7152  0F05  02E5               	movf	(___fldiv@a+3),w
  7153  0F06  0859               	skipc
  7154  0F07  1C03               	incfsz	(___fldiv@a+3),w
  7155  0F08  0F59               	subwf	(___fldiv@rem+3),f
  7156  0F09  02E6               	goto	l2325
  7157  0F0A  2F0B               	line	117
  7158                           	
  7159                           l649:	
  7160  0F0B                     	line	118
  7161                           	
  7162                           l2325:	
  7163  0F0B                     	movlw	low(01h)
  7164  0F0B  3001               	movwf	(??___fldiv+0)+0
  7165  0F0C  00DE               	movf	(??___fldiv+0)+0,w
  7166  0F0D  085E               	addwf	(___fldiv@aexp),f
  7167  0F0E  07EF               	goto	l2327
  7168  0F0F  2F10               	line	119
  7169                           	
  7170                           l645:	
  7171  0F10                     	line	97
  7172                           	
  7173                           l2327:	
  7174  0F10                     	movlw	low(01Ah)
  7175  0F10  301A               	subwf	(___fldiv@aexp),w
  7176  0F11  026F               	skipc
  7177  0F12  1C03               	goto	u2891
  7178  0F13  2F15               	goto	u2890
  7179  0F14  2F16               u2891:
  7180  0F15                     	goto	l2309
  7181  0F15  2EC2               u2890:
  7182  0F16                     	goto	l2329
  7183  0F16  2F17               	
  7184                           l650:	
  7185  0F17                     	line	122
  7186                           	
  7187                           l2329:	
  7188  0F17                     	movf	(___fldiv@rem+3),w
  7189  0F17  0866               	iorwf	(___fldiv@rem+2),w
  7190  0F18  0465               	iorwf	(___fldiv@rem+1),w
  7191  0F19  0464               	iorwf	(___fldiv@rem),w
  7192  0F1A  0463               	skipnz
  7193  0F1B  1903               	goto	u2901
  7194  0F1C  2F1E               	goto	u2900
  7195  0F1D  2F1F               u2901:
  7196  0F1E                     	goto	l2343
  7197  0F1E  2F41               u2900:
  7198  0F1F                     	line	123
  7199                           	
  7200                           l2331:	
  7201  0F1F                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  7202  0F1F  146A               	goto	l2343
  7203  0F20  2F41               	line	124
  7204                           	
  7205                           l651:	
  7206  0F21                     	line	127
  7207                           	goto	l2343
  7208  0F21  2F41               	
  7209                           l653:	
  7210  0F22                     	line	128
  7211                           	
  7212                           l2333:	
  7213  0F22                     	movlw	01h
  7214  0F22  3001               	movwf	(??___fldiv+0)+0
  7215  0F23  00DE               u2915:
  7216  0F24                     	clrc
  7217  0F24  1003               	rlf	(___fldiv@b),f
  7218  0F25  0DDA               	rlf	(___fldiv@b+1),f
  7219  0F26  0DDB               	rlf	(___fldiv@b+2),f
  7220  0F27  0DDC               	rlf	(___fldiv@b+3),f
  7221  0F28  0DDD               	decfsz	(??___fldiv+0)+0
  7222  0F29  0BDE               	goto	u2915
  7223  0F2A  2F24               	line	129
  7224                           	
  7225                           l2335:	
  7226  0F2B                     	btfss	(___fldiv@grs+3),(31)&7
  7227  0F2B  1FED               	goto	u2921
  7228  0F2C  2F2E               	goto	u2920
  7229  0F2D  2F2F               u2921:
  7230  0F2E                     	goto	l2339
  7231  0F2E  2F31               u2920:
  7232  0F2F                     	line	130
  7233                           	
  7234                           l2337:	
  7235  0F2F                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7236  0F2F  145A               	goto	l2339
  7237  0F30  2F31               	line	131
  7238                           	
  7239                           l654:	
  7240  0F31                     	line	132
  7241                           	
  7242                           l2339:	
  7243  0F31                     	movlw	01h
  7244  0F31  3001               	movwf	(??___fldiv+0)+0
  7245  0F32  00DE               u2935:
  7246  0F33                     	clrc
  7247  0F33  1003               	rlf	(___fldiv@grs),f
  7248  0F34  0DEA               	rlf	(___fldiv@grs+1),f
  7249  0F35  0DEB               	rlf	(___fldiv@grs+2),f
  7250  0F36  0DEC               	rlf	(___fldiv@grs+3),f
  7251  0F37  0DED               	decfsz	(??___fldiv+0)+0
  7252  0F38  0BDE               	goto	u2935
  7253  0F39  2F33               	line	133
  7254                           	
  7255                           l2341:	
  7256  0F3A                     	movlw	0FFh
  7257  0F3A  30FF               	addwf	(___fldiv@new_exp),f
  7258  0F3B  07E8               	skipnc
  7259  0F3C  1803               	incf	(___fldiv@new_exp+1),f
  7260  0F3D  0AE9               	movlw	0FFh
  7261  0F3E  30FF               	addwf	(___fldiv@new_exp+1),f
  7262  0F3F  07E9               	goto	l2343
  7263  0F40  2F41               	line	134
  7264                           	
  7265                           l652:	
  7266  0F41                     	line	127
  7267                           	
  7268                           l2343:	
  7269  0F41                     	btfss	(___fldiv@b+2),(23)&7
  7270  0F41  1FDC               	goto	u2941
  7271  0F42  2F44               	goto	u2940
  7272  0F43  2F45               u2941:
  7273  0F44                     	goto	l2333
  7274  0F44  2F22               u2940:
  7275  0F45                     	goto	l2345
  7276  0F45  2F46               	
  7277                           l655:	
  7278  0F46                     	line	139
  7279                           	
  7280                           l2345:	
  7281  0F46                     	clrf	(___fldiv@aexp)
  7282  0F46  01EF               	line	140
  7283                           	
  7284                           l2347:	
  7285  0F47                     	btfss	(___fldiv@grs+3),(31)&7
  7286  0F47  1FED               	goto	u2951
  7287  0F48  2F4A               	goto	u2950
  7288  0F49  2F4B               u2951:
  7289  0F4A                     	goto	l2355
  7290  0F4A  2F6B               u2950:
  7291  0F4B                     	line	141
  7292                           	
  7293                           l2349:	
  7294  0F4B                     	movlw	0FFh
  7295  0F4B  30FF               	andwf	(___fldiv@grs),w
  7296  0F4C  056A               	movwf	(??___fldiv+0)+0
  7297  0F4D  00DE               	movlw	0FFh
  7298  0F4E  30FF               	andwf	(___fldiv@grs+1),w
  7299  0F4F  056B               	movwf	((??___fldiv+0)+0+1)
  7300  0F50  00DF               	movlw	0FFh
  7301  0F51  30FF               	andwf	(___fldiv@grs+2),w
  7302  0F52  056C               	movwf	((??___fldiv+0)+0+2)
  7303  0F53  00E0               	movlw	07Fh
  7304  0F54  307F               	andwf	(___fldiv@grs+3),w
  7305  0F55  056D               	movwf	((??___fldiv+0)+0+3)
  7306  0F56  00E1               	movf	3+(??___fldiv+0)+0,w
  7307  0F57  0861               	iorwf	2+(??___fldiv+0)+0,w
  7308  0F58  0460               	iorwf	1+(??___fldiv+0)+0,w
  7309  0F59  045F               	iorwf	0+(??___fldiv+0)+0,w
  7310  0F5A  045E               	skipnz
  7311  0F5B  1903               	goto	u2961
  7312  0F5C  2F5E               	goto	u2960
  7313  0F5D  2F5F               u2961:
  7314  0F5E                     	goto	l657
  7315  0F5E  2F62               u2960:
  7316  0F5F                     	line	142
  7317                           	
  7318                           l2351:	
  7319  0F5F                     	clrf	(___fldiv@aexp)
  7320  0F5F  01EF               	incf	(___fldiv@aexp),f
  7321  0F60  0AEF               	line	143
  7322                           	goto	l2355
  7323  0F61  2F6B               	line	144
  7324                           	
  7325                           l657:	
  7326  0F62                     	line	145
  7327                           	btfss	(___fldiv@b),(0)&7
  7328  0F62  1C5A               	goto	u2971
  7329  0F63  2F65               	goto	u2970
  7330  0F64  2F66               u2971:
  7331  0F65                     	goto	l2355
  7332  0F65  2F6B               u2970:
  7333  0F66                     	line	146
  7334                           	
  7335                           l2353:	
  7336  0F66                     	clrf	(___fldiv@aexp)
  7337  0F66  01EF               	incf	(___fldiv@aexp),f
  7338  0F67  0AEF               	goto	l2355
  7339  0F68  2F6B               	line	147
  7340                           	
  7341                           l659:	
  7342  0F69                     	goto	l2355
  7343  0F69  2F6B               	line	148
  7344                           	
  7345                           l658:	
  7346  0F6A                     	goto	l2355
  7347  0F6A  2F6B               	line	149
  7348                           	
  7349                           l656:	
  7350  0F6B                     	line	150
  7351                           	
  7352                           l2355:	
  7353  0F6B                     	movf	((___fldiv@aexp)),w
  7354  0F6B  086F               	btfsc	status,2
  7355  0F6C  1903               	goto	u2981
  7356  0F6D  2F6F               	goto	u2980
  7357  0F6E  2F70               u2981:
  7358  0F6F                     	goto	l2365
  7359  0F6F  2FA3               u2980:
  7360  0F70                     	line	151
  7361                           	
  7362                           l2357:	
  7363  0F70                     	movlw	01h
  7364  0F70  3001               	addwf	(___fldiv@b),f
  7365  0F71  07DA               	movlw	0
  7366  0F72  3000               	skipnc
  7367  0F73  1803               movlw 1
  7368  0F74  3001               	addwf	(___fldiv@b+1),f
  7369  0F75  07DB               	movlw	0
  7370  0F76  3000               	skipnc
  7371  0F77  1803               movlw 1
  7372  0F78  3001               	addwf	(___fldiv@b+2),f
  7373  0F79  07DC               	movlw	0
  7374  0F7A  3000               	skipnc
  7375  0F7B  1803               movlw 1
  7376  0F7C  3001               	addwf	(___fldiv@b+3),f
  7377  0F7D  07DD               	line	152
  7378                           	
  7379                           l2359:	
  7380  0F7E                     	btfss	(___fldiv@b+3),(24)&7
  7381  0F7E  1C5D               	goto	u2991
  7382  0F7F  2F81               	goto	u2990
  7383  0F80  2F82               u2991:
  7384  0F81                     	goto	l2365
  7385  0F81  2FA3               u2990:
  7386  0F82                     	line	153
  7387                           	
  7388                           l2361:	
  7389  0F82                     	movf	(___fldiv@b),w
  7390  0F82  085A               	movwf	(??___fldiv+0)+0
  7391  0F83  00DE               	movf	(___fldiv@b+1),w
  7392  0F84  085B               	movwf	((??___fldiv+0)+0+1)
  7393  0F85  00DF               	movf	(___fldiv@b+2),w
  7394  0F86  085C               	movwf	((??___fldiv+0)+0+2)
  7395  0F87  00E0               	movf	(___fldiv@b+3),w
  7396  0F88  085D               	movwf	((??___fldiv+0)+0+3)
  7397  0F89  00E1               	movlw	01h
  7398  0F8A  3001               	movwf	(??___fldiv+4)+0
  7399  0F8B  00E2               u3005:
  7400  0F8C                     	rlf	(??___fldiv+0)+3,w
  7401  0F8C  0D61               	rrf	(??___fldiv+0)+3,f
  7402  0F8D  0CE1               	rrf	(??___fldiv+0)+2,f
  7403  0F8E  0CE0               	rrf	(??___fldiv+0)+1,f
  7404  0F8F  0CDF               	rrf	(??___fldiv+0)+0,f
  7405  0F90  0CDE               u3000:
  7406  0F91                     	decfsz	(??___fldiv+4)+0,f
  7407  0F91  0BE2               	goto	u3005
  7408  0F92  2F8C               	movf	3+(??___fldiv+0)+0,w
  7409  0F93  0861               	movwf	(___fldiv@b+3)
  7410  0F94  00DD               	movf	2+(??___fldiv+0)+0,w
  7411  0F95  0860               	movwf	(___fldiv@b+2)
  7412  0F96  00DC               	movf	1+(??___fldiv+0)+0,w
  7413  0F97  085F               	movwf	(___fldiv@b+1)
  7414  0F98  00DB               	movf	0+(??___fldiv+0)+0,w
  7415  0F99  085E               	movwf	(___fldiv@b)
  7416  0F9A  00DA               
  7417                           	line	154
  7418                           	
  7419                           l2363:	
  7420  0F9B                     	movlw	01h
  7421  0F9B  3001               	addwf	(___fldiv@new_exp),f
  7422  0F9C  07E8               	skipnc
  7423  0F9D  1803               	incf	(___fldiv@new_exp+1),f
  7424  0F9E  0AE9               	movlw	0
  7425  0F9F  3000               	addwf	(___fldiv@new_exp+1),f
  7426  0FA0  07E9               	goto	l2365
  7427  0FA1  2FA3               	line	155
  7428                           	
  7429                           l661:	
  7430  0FA2                     	goto	l2365
  7431  0FA2  2FA3               	line	156
  7432                           	
  7433                           l660:	
  7434  0FA3                     	line	159
  7435                           	
  7436                           l2365:	
  7437  0FA3                     	movf	(___fldiv@new_exp+1),w
  7438  0FA3  0869               	xorlw	80h
  7439  0FA4  3A80               	movwf	btemp+1
  7440  0FA5  00FF               	movlw	(0)^80h
  7441  0FA6  3080               	subwf	btemp+1,w
  7442  0FA7  027F               	skipz
  7443  0FA8  1D03               	goto	u3015
  7444  0FA9  2FAC               	movlw	0FFh
  7445  0FAA  30FF               	subwf	(___fldiv@new_exp),w
  7446  0FAB  0268               u3015:
  7447  0FAC                     
  7448                           	skipc
  7449  0FAC  1C03               	goto	u3011
  7450  0FAD  2FAF               	goto	u3010
  7451  0FAE  2FB0               u3011:
  7452  0FAF                     	goto	l2369
  7453  0FAF  2FBF               u3010:
  7454  0FB0                     	line	160
  7455                           	
  7456                           l2367:	
  7457  0FB0                     	movlw	0FFh
  7458  0FB0  30FF               	bcf	status, 5	;RP0=0, select bank0
  7459  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  7460  0FB2  1303               	movwf	(___fldiv@new_exp)
  7461  0FB3  00E8               	movlw	0
  7462  0FB4  3000               	movwf	((___fldiv@new_exp))+1
  7463  0FB5  00E9               	line	161
  7464                           	movlw	high highword(0)
  7465  0FB6  3000               	movwf	(___fldiv@b+3)
  7466  0FB7  00DD               	movlw	low highword(0)
  7467  0FB8  3000               	movwf	(___fldiv@b+2)
  7468  0FB9  00DC               	movlw	high(0)
  7469  0FBA  3000               	movwf	(___fldiv@b+1)
  7470  0FBB  00DB               	movlw	low(0)
  7471  0FBC  3000               	movwf	(___fldiv@b)
  7472  0FBD  00DA               
  7473                           	goto	l2369
  7474  0FBE  2FBF               	line	162
  7475                           	
  7476                           l662:	
  7477  0FBF                     	line	165
  7478                           	
  7479                           l2369:	
  7480  0FBF                     	bcf	status, 5	;RP0=0, select bank0
  7481  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  7482  0FC0  1303               	movf	(___fldiv@new_exp+1),w
  7483  0FC1  0869               	xorlw	80h
  7484  0FC2  3A80               	movwf	btemp+1
  7485  0FC3  00FF               	movlw	(0)^80h
  7486  0FC4  3080               	subwf	btemp+1,w
  7487  0FC5  027F               	skipz
  7488  0FC6  1D03               	goto	u3025
  7489  0FC7  2FCA               	movlw	01h
  7490  0FC8  3001               	subwf	(___fldiv@new_exp),w
  7491  0FC9  0268               u3025:
  7492  0FCA                     
  7493                           	skipnc
  7494  0FCA  1803               	goto	u3021
  7495  0FCB  2FCD               	goto	u3020
  7496  0FCC  2FCE               u3021:
  7497  0FCD                     	goto	l663
  7498  0FCD  2FDB               u3020:
  7499  0FCE                     	line	166
  7500                           	
  7501                           l2371:	
  7502  0FCE                     	bcf	status, 5	;RP0=0, select bank0
  7503  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7504  0FCF  1303               	clrf	(___fldiv@new_exp)
  7505  0FD0  01E8               	clrf	(___fldiv@new_exp+1)
  7506  0FD1  01E9               	line	167
  7507                           	
  7508                           l2373:	
  7509  0FD2                     	movlw	high highword(0)
  7510  0FD2  3000               	movwf	(___fldiv@b+3)
  7511  0FD3  00DD               	movlw	low highword(0)
  7512  0FD4  3000               	movwf	(___fldiv@b+2)
  7513  0FD5  00DC               	movlw	high(0)
  7514  0FD6  3000               	movwf	(___fldiv@b+1)
  7515  0FD7  00DB               	movlw	low(0)
  7516  0FD8  3000               	movwf	(___fldiv@b)
  7517  0FD9  00DA               
  7518                           	line	169
  7519                           	
  7520                           l2375:	
  7521  0FDA                     	clrf	(___fldiv@sign)
  7522  0FDA  01E7               	line	170
  7523                           	
  7524                           l663:	
  7525  0FDB                     	line	173
  7526                           	bcf	status, 5	;RP0=0, select bank0
  7527  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  7528  0FDC  1303               	movf	(___fldiv@new_exp),w
  7529  0FDD  0868               	movwf	(??___fldiv+0)+0
  7530  0FDE  00DE               	movf	(??___fldiv+0)+0,w
  7531  0FDF  085E               	movwf	(___fldiv@bexp)
  7532  0FE0  00EE               	line	175
  7533                           	
  7534                           l2377:	
  7535  0FE1                     	btfss	(___fldiv@bexp),(0)&7
  7536  0FE1  1C6E               	goto	u3031
  7537  0FE2  2FE4               	goto	u3030
  7538  0FE3  2FE5               u3031:
  7539  0FE4                     	goto	l2381
  7540  0FE4  2FE7               u3030:
  7541  0FE5                     	line	176
  7542                           	
  7543                           l2379:	
  7544  0FE5                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  7545  0FE5  17DC               	line	177
  7546                           	goto	l665
  7547  0FE6  2FEB               	line	179
  7548                           	
  7549                           l664:	
  7550  0FE7                     	line	180
  7551                           	
  7552                           l2381:	
  7553  0FE7                     	movlw	low(07Fh)
  7554  0FE7  307F               	movwf	(??___fldiv+0)+0
  7555  0FE8  00DE               	movf	(??___fldiv+0)+0,w
  7556  0FE9  085E               	andwf	0+(___fldiv@b)+02h,f
  7557  0FEA  05DC               	line	181
  7558                           	
  7559                           l665:	
  7560  0FEB                     	line	182
  7561                           	movf	(___fldiv@bexp),w
  7562  0FEB  086E               	movwf	(??___fldiv+0)+0
  7563  0FEC  00DE               	clrc
  7564  0FED  1003               	rrf	(??___fldiv+0)+0,w
  7565  0FEE  0C5E               	movwf	(??___fldiv+1)+0
  7566  0FEF  00DF               	movf	(??___fldiv+1)+0,w
  7567  0FF0  085F               	movwf	0+(___fldiv@b)+03h
  7568  0FF1  00DD               	line	183
  7569                           	movf	(___fldiv@sign),w
  7570  0FF2  0867               	movwf	(??___fldiv+0)+0
  7571  0FF3  00DE               	movf	(??___fldiv+0)+0,w
  7572  0FF4  085E               	iorwf	0+(___fldiv@b)+03h,f
  7573  0FF5  04DD               	line	184
  7574                           	
  7575                           l2383:	
  7576  0FF6                     	movf	(___fldiv@b+3),w
  7577  0FF6  085D               	movwf	(?___fldiv+3)
  7578  0FF7  00D9               	movf	(___fldiv@b+2),w
  7579  0FF8  085C               	movwf	(?___fldiv+2)
  7580  0FF9  00D8               	movf	(___fldiv@b+1),w
  7581  0FFA  085B               	movwf	(?___fldiv+1)
  7582  0FFB  00D7               	movf	(___fldiv@b),w
  7583  0FFC  085A               	movwf	(?___fldiv)
  7584  0FFD  00D6               
  7585                           	goto	l643
  7586  0FFE  2FFF               	
  7587                           l2385:	
  7588  0FFF                     	line	185
  7589                           	
  7590                           l643:	
  7591  0FFF                     	return
  7592  0FFF  0008               	opt stack 0
  7593                           GLOBAL	__end_of___fldiv
  7594                           	__end_of___fldiv:
  7595  1000                     	signat	___fldiv,8316
  7596                           	global	___fladd
  7597                           
  7598 ;; *************** function ___fladd *****************
  7599 ;; Defined at:
  7600 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  b               4    4[BANK0 ] unsigned char 
  7603 ;;  a               4    8[BANK0 ] unsigned char 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  grs             1   27[BANK0 ] unsigned char 
  7606 ;;  bexp            1   26[BANK0 ] unsigned char 
  7607 ;;  aexp            1   25[BANK0 ] unsigned char 
  7608 ;;  signs           1   24[BANK0 ] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  4    4[BANK0 ] unsigned char 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0, btemp+1
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7618 ;;      Params:         0       8       0       0       0
  7619 ;;      Locals:         0       4       0       0       0
  7620 ;;      Temps:          0      12       0       0       0
  7621 ;;      Totals:         0      24       0       0       0
  7622 ;;Total ram usage:       24 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_main
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  7631                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7632                           	line	10
  7633                           global __ptext21
  7634                           __ptext21:	;psect for function ___fladd
  7635  01C2                     psect	text21
  7636                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7637                           	line	10
  7638                           	global	__size_of___fladd
  7639                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  7640  02BC                     	
  7641                           ___fladd:	
  7642  01C2                     ;incstack = 0
  7643                           	opt	stack 7
  7644                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7645                           	line	21
  7646                           	
  7647                           l2051:	
  7648  01C2                     	bcf	status, 5	;RP0=0, select bank0
  7649  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  7650  01C3  1303               	movf	0+(___fladd@b)+03h,w
  7651  01C4  0827               	andlw	080h
  7652  01C5  3980               	movwf	(??___fladd+0)+0
  7653  01C6  00AC               	movf	(??___fladd+0)+0,w
  7654  01C7  082C               	movwf	(___fladd@signs)
  7655  01C8  00B8               	line	22
  7656                           	
  7657                           l2053:	
  7658  01C9                     	movf	0+(___fladd@b)+03h,w
  7659  01C9  0827               	movwf	(??___fladd+0)+0
  7660  01CA  00AC               	addwf	(??___fladd+0)+0,w
  7661  01CB  072C               	movwf	(??___fladd+1)+0
  7662  01CC  00AD               	movf	(??___fladd+1)+0,w
  7663  01CD  082D               	movwf	(___fladd@bexp)
  7664  01CE  00BA               	line	23
  7665                           	
  7666                           l2055:	
  7667  01CF                     	btfss	0+(___fladd@b)+02h,(7)&7
  7668  01CF  1FA6               	goto	u2291
  7669  01D0  29D2               	goto	u2290
  7670  01D1  29D3               u2291:
  7671  01D2                     	goto	l2059
  7672  01D2  29D5               u2290:
  7673  01D3                     	line	24
  7674                           	
  7675                           l2057:	
  7676  01D3                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  7677  01D3  143A               	goto	l2059
  7678  01D4  29D5               	line	25
  7679                           	
  7680                           l577:	
  7681  01D5                     	line	28
  7682                           	
  7683                           l2059:	
  7684  01D5                     	movf	((___fladd@bexp)),w
  7685  01D5  083A               	btfsc	status,2
  7686  01D6  1903               	goto	u2301
  7687  01D7  29D9               	goto	u2300
  7688  01D8  29DA               u2301:
  7689  01D9                     	goto	l2069
  7690  01D9  29EB               u2300:
  7691  01DA                     	line	30
  7692                           	
  7693                           l2061:	
  7694  01DA                     		incf	((___fladd@bexp)),w
  7695  01DA  0A3A               	btfss	status,2
  7696  01DB  1D03               	goto	u2311
  7697  01DC  29DE               	goto	u2310
  7698  01DD  29DF               u2311:
  7699  01DE                     	goto	l2065
  7700  01DE  29E8               u2310:
  7701  01DF                     	line	32
  7702                           	
  7703                           l2063:	
  7704  01DF                     	movlw	0x0
  7705  01DF  3000               	movwf	(___fladd@b+3)
  7706  01E0  00A7               	movlw	0x0
  7707  01E1  3000               	movwf	(___fladd@b+2)
  7708  01E2  00A6               	movlw	0x0
  7709  01E3  3000               	movwf	(___fladd@b+1)
  7710  01E4  00A5               	movlw	0x0
  7711  01E5  3000               	movwf	(___fladd@b)
  7712  01E6  00A4               
  7713                           	goto	l2065
  7714  01E7  29E8               	line	33
  7715                           	
  7716                           l579:	
  7717  01E8                     	line	35
  7718                           	
  7719                           l2065:	
  7720  01E8                     	bsf	(___fladd@b)+(23/8),(23)&7
  7721  01E8  17A6               	line	37
  7722                           	
  7723                           l2067:	
  7724  01E9                     	clrf	0+(___fladd@b)+03h
  7725  01E9  01A7               	line	38
  7726                           	goto	l2071
  7727  01EA  29F4               	line	39
  7728                           	
  7729                           l578:	
  7730  01EB                     	line	41
  7731                           	
  7732                           l2069:	
  7733  01EB                     	movlw	0x0
  7734  01EB  3000               	movwf	(___fladd@b+3)
  7735  01EC  00A7               	movlw	0x0
  7736  01ED  3000               	movwf	(___fladd@b+2)
  7737  01EE  00A6               	movlw	0x0
  7738  01EF  3000               	movwf	(___fladd@b+1)
  7739  01F0  00A5               	movlw	0x0
  7740  01F1  3000               	movwf	(___fladd@b)
  7741  01F2  00A4               
  7742                           	goto	l2071
  7743  01F3  29F4               	line	42
  7744                           	
  7745                           l580:	
  7746  01F4                     	line	44
  7747                           	
  7748                           l2071:	
  7749  01F4                     	movf	0+(___fladd@a)+03h,w
  7750  01F4  082B               	andlw	080h
  7751  01F5  3980               	movwf	(??___fladd+0)+0
  7752  01F6  00AC               	movf	(??___fladd+0)+0,w
  7753  01F7  082C               	movwf	(___fladd@aexp)
  7754  01F8  00B9               	line	46
  7755                           	
  7756                           l2073:	
  7757  01F9                     	movf	(___fladd@aexp),w
  7758  01F9  0839               	xorwf	(___fladd@signs),w
  7759  01FA  0638               	skipnz
  7760  01FB  1903               	goto	u2321
  7761  01FC  29FE               	goto	u2320
  7762  01FD  29FF               u2321:
  7763  01FE                     	goto	l2077
  7764  01FE  2A01               u2320:
  7765  01FF                     	line	47
  7766                           	
  7767                           l2075:	
  7768  01FF                     	bsf	(___fladd@signs)+(6/8),(6)&7
  7769  01FF  1738               	goto	l2077
  7770  0200  2A01               	line	48
  7771                           	
  7772                           l581:	
  7773  0201                     	line	49
  7774                           	
  7775                           l2077:	
  7776  0201                     	movf	0+(___fladd@a)+03h,w
  7777  0201  082B               	movwf	(??___fladd+0)+0
  7778  0202  00AC               	addwf	(??___fladd+0)+0,w
  7779  0203  072C               	movwf	(??___fladd+1)+0
  7780  0204  00AD               	movf	(??___fladd+1)+0,w
  7781  0205  082D               	movwf	(___fladd@aexp)
  7782  0206  00B9               	line	50
  7783                           	
  7784                           l2079:	
  7785  0207                     	btfss	0+(___fladd@a)+02h,(7)&7
  7786  0207  1FAA               	goto	u2331
  7787  0208  2A0A               	goto	u2330
  7788  0209  2A0B               u2331:
  7789  020A                     	goto	l2083
  7790  020A  2A0D               u2330:
  7791  020B                     	line	51
  7792                           	
  7793                           l2081:	
  7794  020B                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  7795  020B  1439               	goto	l2083
  7796  020C  2A0D               	line	52
  7797                           	
  7798                           l582:	
  7799  020D                     	line	55
  7800                           	
  7801                           l2083:	
  7802  020D                     	movf	((___fladd@aexp)),w
  7803  020D  0839               	btfsc	status,2
  7804  020E  1903               	goto	u2341
  7805  020F  2A11               	goto	u2340
  7806  0210  2A12               u2341:
  7807  0211                     	goto	l2093
  7808  0211  2A23               u2340:
  7809  0212                     	line	57
  7810                           	
  7811                           l2085:	
  7812  0212                     		incf	((___fladd@aexp)),w
  7813  0212  0A39               	btfss	status,2
  7814  0213  1D03               	goto	u2351
  7815  0214  2A16               	goto	u2350
  7816  0215  2A17               u2351:
  7817  0216                     	goto	l2089
  7818  0216  2A20               u2350:
  7819  0217                     	line	59
  7820                           	
  7821                           l2087:	
  7822  0217                     	movlw	0x0
  7823  0217  3000               	movwf	(___fladd@a+3)
  7824  0218  00AB               	movlw	0x0
  7825  0219  3000               	movwf	(___fladd@a+2)
  7826  021A  00AA               	movlw	0x0
  7827  021B  3000               	movwf	(___fladd@a+1)
  7828  021C  00A9               	movlw	0x0
  7829  021D  3000               	movwf	(___fladd@a)
  7830  021E  00A8               
  7831                           	goto	l2089
  7832  021F  2A20               	line	60
  7833                           	
  7834                           l584:	
  7835  0220                     	line	62
  7836                           	
  7837                           l2089:	
  7838  0220                     	bsf	(___fladd@a)+(23/8),(23)&7
  7839  0220  17AA               	line	64
  7840                           	
  7841                           l2091:	
  7842  0221                     	clrf	0+(___fladd@a)+03h
  7843  0221  01AB               	line	65
  7844                           	goto	l585
  7845  0222  2A2B               	line	66
  7846                           	
  7847                           l583:	
  7848  0223                     	line	68
  7849                           	
  7850                           l2093:	
  7851  0223                     	movlw	0x0
  7852  0223  3000               	movwf	(___fladd@a+3)
  7853  0224  00AB               	movlw	0x0
  7854  0225  3000               	movwf	(___fladd@a+2)
  7855  0226  00AA               	movlw	0x0
  7856  0227  3000               	movwf	(___fladd@a+1)
  7857  0228  00A9               	movlw	0x0
  7858  0229  3000               	movwf	(___fladd@a)
  7859  022A  00A8               
  7860                           	line	69
  7861                           	
  7862                           l585:	
  7863  022B                     	line	75
  7864                           	movf	(___fladd@bexp),w
  7865  022B  083A               	subwf	(___fladd@aexp),w
  7866  022C  0239               	skipnc
  7867  022D  1803               	goto	u2361
  7868  022E  2A30               	goto	u2360
  7869  022F  2A31               u2361:
  7870  0230                     	goto	l2129
  7871  0230  2A77               u2360:
  7872  0231                     	line	77
  7873                           	
  7874                           l2095:	
  7875  0231                     	btfss	(___fladd@signs),(6)&7
  7876  0231  1F38               	goto	u2371
  7877  0232  2A34               	goto	u2370
  7878  0233  2A35               u2371:
  7879  0234                     	goto	l2099
  7880  0234  2A3A               u2370:
  7881  0235                     	line	78
  7882                           	
  7883                           l2097:	
  7884  0235                     	movlw	low(080h)
  7885  0235  3080               	movwf	(??___fladd+0)+0
  7886  0236  00AC               	movf	(??___fladd+0)+0,w
  7887  0237  082C               	xorwf	(___fladd@signs),f
  7888  0238  06B8               	goto	l2099
  7889  0239  2A3A               	line	79
  7890                           	
  7891                           l587:	
  7892  023A                     	line	81
  7893                           	
  7894                           l2099:	
  7895  023A                     	movf	(___fladd@bexp),w
  7896  023A  083A               	movwf	(??___fladd+0)+0
  7897  023B  00AC               	movf	(??___fladd+0)+0,w
  7898  023C  082C               	movwf	(___fladd@grs)
  7899  023D  00BB               	line	82
  7900                           	
  7901                           l2101:	
  7902  023E                     	movf	(___fladd@aexp),w
  7903  023E  0839               	movwf	(??___fladd+0)+0
  7904  023F  00AC               	movf	(??___fladd+0)+0,w
  7905  0240  082C               	movwf	(___fladd@bexp)
  7906  0241  00BA               	line	83
  7907                           	
  7908                           l2103:	
  7909  0242                     	movf	(___fladd@grs),w
  7910  0242  083B               	movwf	(??___fladd+0)+0
  7911  0243  00AC               	movf	(??___fladd+0)+0,w
  7912  0244  082C               	movwf	(___fladd@aexp)
  7913  0245  00B9               	line	84
  7914                           	
  7915                           l2105:	
  7916  0246                     	movf	(___fladd@b),w
  7917  0246  0824               	movwf	(??___fladd+0)+0
  7918  0247  00AC               	movf	(??___fladd+0)+0,w
  7919  0248  082C               	movwf	(___fladd@grs)
  7920  0249  00BB               	line	85
  7921                           	
  7922                           l2107:	
  7923  024A                     	movf	(___fladd@a),w
  7924  024A  0828               	movwf	(??___fladd+0)+0
  7925  024B  00AC               	movf	(??___fladd+0)+0,w
  7926  024C  082C               	movwf	(___fladd@b)
  7927  024D  00A4               	line	86
  7928                           	
  7929                           l2109:	
  7930  024E                     	movf	(___fladd@grs),w
  7931  024E  083B               	movwf	(??___fladd+0)+0
  7932  024F  00AC               	movf	(??___fladd+0)+0,w
  7933  0250  082C               	movwf	(___fladd@a)
  7934  0251  00A8               	line	87
  7935                           	
  7936                           l2111:	
  7937  0252                     	movf	0+(___fladd@b)+01h,w
  7938  0252  0825               	movwf	(??___fladd+0)+0
  7939  0253  00AC               	movf	(??___fladd+0)+0,w
  7940  0254  082C               	movwf	(___fladd@grs)
  7941  0255  00BB               	line	88
  7942                           	
  7943                           l2113:	
  7944  0256                     	movf	0+(___fladd@a)+01h,w
  7945  0256  0829               	movwf	(??___fladd+0)+0
  7946  0257  00AC               	movf	(??___fladd+0)+0,w
  7947  0258  082C               	movwf	0+(___fladd@b)+01h
  7948  0259  00A5               	line	89
  7949                           	
  7950                           l2115:	
  7951  025A                     	movf	(___fladd@grs),w
  7952  025A  083B               	movwf	(??___fladd+0)+0
  7953  025B  00AC               	movf	(??___fladd+0)+0,w
  7954  025C  082C               	movwf	0+(___fladd@a)+01h
  7955  025D  00A9               	line	90
  7956                           	
  7957                           l2117:	
  7958  025E                     	movf	0+(___fladd@b)+02h,w
  7959  025E  0826               	movwf	(??___fladd+0)+0
  7960  025F  00AC               	movf	(??___fladd+0)+0,w
  7961  0260  082C               	movwf	(___fladd@grs)
  7962  0261  00BB               	line	91
  7963                           	
  7964                           l2119:	
  7965  0262                     	movf	0+(___fladd@a)+02h,w
  7966  0262  082A               	movwf	(??___fladd+0)+0
  7967  0263  00AC               	movf	(??___fladd+0)+0,w
  7968  0264  082C               	movwf	0+(___fladd@b)+02h
  7969  0265  00A6               	line	92
  7970                           	
  7971                           l2121:	
  7972  0266                     	movf	(___fladd@grs),w
  7973  0266  083B               	movwf	(??___fladd+0)+0
  7974  0267  00AC               	movf	(??___fladd+0)+0,w
  7975  0268  082C               	movwf	0+(___fladd@a)+02h
  7976  0269  00AA               	line	93
  7977                           	
  7978                           l2123:	
  7979  026A                     	movf	0+(___fladd@b)+03h,w
  7980  026A  0827               	movwf	(??___fladd+0)+0
  7981  026B  00AC               	movf	(??___fladd+0)+0,w
  7982  026C  082C               	movwf	(___fladd@grs)
  7983  026D  00BB               	line	94
  7984                           	
  7985                           l2125:	
  7986  026E                     	movf	0+(___fladd@a)+03h,w
  7987  026E  082B               	movwf	(??___fladd+0)+0
  7988  026F  00AC               	movf	(??___fladd+0)+0,w
  7989  0270  082C               	movwf	0+(___fladd@b)+03h
  7990  0271  00A7               	line	95
  7991                           	
  7992                           l2127:	
  7993  0272                     	movf	(___fladd@grs),w
  7994  0272  083B               	movwf	(??___fladd+0)+0
  7995  0273  00AC               	movf	(??___fladd+0)+0,w
  7996  0274  082C               	movwf	0+(___fladd@a)+03h
  7997  0275  00AB               	goto	l2129
  7998  0276  2A77               	line	96
  7999                           	
  8000                           l586:	
  8001  0277                     	line	98
  8002                           	
  8003                           l2129:	
  8004  0277                     	clrf	(___fladd@grs)
  8005  0277  01BB               	line	100
  8006                           	
  8007                           l2131:	
  8008  0278                     	movf	(___fladd@bexp),w
  8009  0278  083A               	movwf	(??___fladd+0)+0
  8010  0279  00AC               	clrf	(??___fladd+0)+0+1
  8011  027A  01AD               	comf	(??___fladd+0)+0,f
  8012  027B  09AC               	comf	(??___fladd+0)+1,f
  8013  027C  09AD               	incf	(??___fladd+0)+0,f
  8014  027D  0AAC               	skipnz
  8015  027E  1903               	incf	(??___fladd+0)+1,f
  8016  027F  0AAD               	movf	(___fladd@aexp),w
  8017  0280  0839               	addwf	0+(??___fladd+0)+0,w
  8018  0281  072C               	movwf	(??___fladd+2)+0
  8019  0282  00AE               	movf	1+(??___fladd+0)+0,w
  8020  0283  082D               	skipnc
  8021  0284  1803               	incf	1+(??___fladd+0)+0,w
  8022  0285  0A2D               	movwf	((??___fladd+2)+0)+1
  8023  0286  00AF               	movf	1+(??___fladd+2)+0,w
  8024  0287  082F               	xorlw	80h
  8025  0288  3A80               	movwf	btemp+1
  8026  0289  00FF               	movlw	(0)^80h
  8027  028A  3080               	subwf	btemp+1,w
  8028  028B  027F               	skipz
  8029  028C  1D03               	goto	u2385
  8030  028D  2A90               	movlw	01Ah
  8031  028E  301A               	subwf	0+(??___fladd+2)+0,w
  8032  028F  022E               u2385:
  8033  0290                     
  8034                           	skipc
  8035  0290  1C03               	goto	u2381
  8036  0291  2A93               	goto	u2380
  8037  0292  2A94               u2381:
  8038  0293                     	goto	l2147
  8039  0293  2AD5               u2380:
  8040  0294                     	line	101
  8041                           	
  8042                           l2133:	
  8043  0294                     	bcf	status, 5	;RP0=0, select bank0
  8044  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  8045  0295  1303               	movf	(___fladd@b+3),w
  8046  0296  0827               	iorwf	(___fladd@b+2),w
  8047  0297  0426               	iorwf	(___fladd@b+1),w
  8048  0298  0425               	iorwf	(___fladd@b),w
  8049  0299  0424               	skipz
  8050  029A  1D03               	goto	u2391
  8051  029B  2A9D               	goto	u2390
  8052  029C  2A9F               u2391:
  8053  029D                     	movlw	1
  8054  029D  3001               	goto	u2400
  8055  029E  2AA0               u2390:
  8056  029F                     	movlw	0
  8057  029F  3000               u2400:
  8058  02A0                     	movwf	(??___fladd+0)+0
  8059  02A0  00AC               	movf	(??___fladd+0)+0,w
  8060  02A1  082C               	movwf	(___fladd@grs)
  8061  02A2  00BB               	line	102
  8062                           	movlw	high highword(0)
  8063  02A3  3000               	movwf	(___fladd@b+3)
  8064  02A4  00A7               	movlw	low highword(0)
  8065  02A5  3000               	movwf	(___fladd@b+2)
  8066  02A6  00A6               	movlw	high(0)
  8067  02A7  3000               	movwf	(___fladd@b+1)
  8068  02A8  00A5               	movlw	low(0)
  8069  02A9  3000               	movwf	(___fladd@b)
  8070  02AA  00A4               
  8071                           	line	103
  8072                           	movf	(___fladd@aexp),w
  8073  02AB  0839               	movwf	(??___fladd+0)+0
  8074  02AC  00AC               	movf	(??___fladd+0)+0,w
  8075  02AD  082C               	movwf	(___fladd@bexp)
  8076  02AE  00BA               	line	104
  8077                           	goto	l589
  8078  02AF  2ADE               	line	105
  8079                           	
  8080                           l588:	
  8081  02B0                     	line	106
  8082                           	goto	l2147
  8083  02B0  2AD5               	
  8084                           l591:	
  8085  02B1                     	line	109
  8086                           	btfss	(___fladd@grs),(0)&7
  8087  02B1  1C3B               	goto	u2411
  8088  02B2  2AB4               	goto	u2410
  8089  02B3  2AB5               u2411:
  8090  02B4                     	goto	l2137
  8091  02B4  2ABE               u2410:
  8092  02B5                     	line	110
  8093                           	
  8094                           l2135:	
  8095  02B5                     	movf	(___fladd@grs),w
  8096  02B5  083B               	movwf	(??___fladd+0)+0
  8097  02B6  00AC               	clrc
  8098  02B7  1003               	rrf	(??___fladd+0)+0,w
  8099  02B8  0C2C               	iorlw	01h
  8100  02B9  3801               	movwf	(??___fladd+1)+0
  8101  02BA  00AD               	movf	(??___fladd+1)+0,w
  8102  02BB  082D               	movwf	(___fladd@grs)
  8103  02BC  00BB               	line	111
  8104                           	goto	l2139
  8105  02BD  2AC1               	line	112
  8106                           	
  8107                           l592:	
  8108  02BE                     	line	113
  8109                           	
  8110                           l2137:	
  8111  02BE                     	clrc
  8112  02BE  1003               	rrf	(___fladd@grs),f
  8113  02BF  0CBB               
  8114                           	goto	l2139
  8115  02C0  2AC1               	line	114
  8116                           	
  8117                           l593:	
  8118  02C1                     	line	115
  8119                           	
  8120                           l2139:	
  8121  02C1                     	btfss	(___fladd@b),(0)&7
  8122  02C1  1C24               	goto	u2421
  8123  02C2  2AC4               	goto	u2420
  8124  02C3  2AC5               u2421:
  8125  02C4                     	goto	l2143
  8126  02C4  2AC7               u2420:
  8127  02C5                     	line	116
  8128                           	
  8129                           l2141:	
  8130  02C5                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8131  02C5  17BB               	goto	l2143
  8132  02C6  2AC7               	line	117
  8133                           	
  8134                           l594:	
  8135  02C7                     	line	118
  8136                           	
  8137                           l2143:	
  8138  02C7                     	movlw	01h
  8139  02C7  3001               	movwf	(??___fladd+0)+0
  8140  02C8  00AC               u2435:
  8141  02C9                     	rlf	(___fladd@b+3),w
  8142  02C9  0D27               	rrf	(___fladd@b+3),f
  8143  02CA  0CA7               	rrf	(___fladd@b+2),f
  8144  02CB  0CA6               	rrf	(___fladd@b+1),f
  8145  02CC  0CA5               	rrf	(___fladd@b),f
  8146  02CD  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8147  02CE  0BAC               	goto	u2435
  8148  02CF  2AC9               
  8149                           	line	119
  8150                           	
  8151                           l2145:	
  8152  02D0                     	movlw	low(01h)
  8153  02D0  3001               	movwf	(??___fladd+0)+0
  8154  02D1  00AC               	movf	(??___fladd+0)+0,w
  8155  02D2  082C               	addwf	(___fladd@bexp),f
  8156  02D3  07BA               	goto	l2147
  8157  02D4  2AD5               	line	120
  8158                           	
  8159                           l590:	
  8160  02D5                     	line	106
  8161                           	
  8162                           l2147:	
  8163  02D5                     	bcf	status, 5	;RP0=0, select bank0
  8164  02D5  1283               	bcf	status, 6	;RP1=0, select bank0
  8165  02D6  1303               	movf	(___fladd@aexp),w
  8166  02D7  0839               	subwf	(___fladd@bexp),w
  8167  02D8  023A               	skipc
  8168  02D9  1C03               	goto	u2441
  8169  02DA  2ADC               	goto	u2440
  8170  02DB  2ADD               u2441:
  8171  02DC                     	goto	l591
  8172  02DC  2AB1               u2440:
  8173  02DD                     	goto	l589
  8174  02DD  2ADE               	
  8175                           l595:	
  8176  02DE                     	line	121
  8177                           	
  8178                           l589:	
  8179  02DE                     	line	124
  8180                           	btfsc	(___fladd@signs),(6)&7
  8181  02DE  1B38               	goto	u2451
  8182  02DF  2AE1               	goto	u2450
  8183  02E0  2AE2               u2451:
  8184  02E1                     	goto	l2173
  8185  02E1  2B31               u2450:
  8186  02E2                     	line	127
  8187                           	
  8188                           l2149:	
  8189  02E2                     	movf	((___fladd@bexp)),w
  8190  02E2  083A               	btfss	status,2
  8191  02E3  1D03               	goto	u2461
  8192  02E4  2AE6               	goto	u2460
  8193  02E5  2AE7               u2461:
  8194  02E6                     	goto	l2155
  8195  02E6  2AF1               u2460:
  8196  02E7                     	line	128
  8197                           	
  8198                           l2151:	
  8199  02E7                     	movlw	0x0
  8200  02E7  3000               	movwf	(?___fladd+3)
  8201  02E8  00A7               	movlw	0x0
  8202  02E9  3000               	movwf	(?___fladd+2)
  8203  02EA  00A6               	movlw	0x0
  8204  02EB  3000               	movwf	(?___fladd+1)
  8205  02EC  00A5               	movlw	0x0
  8206  02ED  3000               	movwf	(?___fladd)
  8207  02EE  00A4               
  8208                           	goto	l598
  8209  02EF  2C7D               	
  8210                           l2153:	
  8211  02F0                     	goto	l598
  8212  02F0  2C7D               	line	129
  8213                           	
  8214                           l597:	
  8215  02F1                     	line	132
  8216                           	
  8217                           l2155:	
  8218  02F1                     	movf	(___fladd@a),w
  8219  02F1  0828               	addwf	(___fladd@b),f
  8220  02F2  07A4               	movf	(___fladd@a+1),w
  8221  02F3  0829               	clrz
  8222  02F4  1103               	skipnc
  8223  02F5  1803               	addlw	1
  8224  02F6  3E01               	skipnz
  8225  02F7  1903               	goto	u2471
  8226  02F8  2AFA               	addwf	(___fladd@b+1),f
  8227  02F9  07A5               u2471:
  8228  02FA                     	movf	(___fladd@a+2),w
  8229  02FA  082A               	clrz
  8230  02FB  1103               	skipnc
  8231  02FC  1803               	addlw	1
  8232  02FD  3E01               	skipnz
  8233  02FE  1903               	goto	u2472
  8234  02FF  2B01               	addwf	(___fladd@b+2),f
  8235  0300  07A6               u2472:
  8236  0301                     	movf	(___fladd@a+3),w
  8237  0301  082B               	clrz
  8238  0302  1103               	skipnc
  8239  0303  1803               	addlw	1
  8240  0304  3E01               	skipnz
  8241  0305  1903               	goto	u2473
  8242  0306  2B08               	addwf	(___fladd@b+3),f
  8243  0307  07A7               u2473:
  8244  0308                     
  8245                           	line	134
  8246                           	
  8247                           l2157:	
  8248  0308                     	btfss	(___fladd@b+3),(24)&7
  8249  0308  1C27               	goto	u2481
  8250  0309  2B0B               	goto	u2480
  8251  030A  2B0C               u2481:
  8252  030B                     	goto	l2207
  8253  030B  2BFA               u2480:
  8254  030C                     	line	135
  8255                           	
  8256                           l2159:	
  8257  030C                     	btfss	(___fladd@grs),(0)&7
  8258  030C  1C3B               	goto	u2491
  8259  030D  2B0F               	goto	u2490
  8260  030E  2B10               u2491:
  8261  030F                     	goto	l2163
  8262  030F  2B19               u2490:
  8263  0310                     	line	136
  8264                           	
  8265                           l2161:	
  8266  0310                     	movf	(___fladd@grs),w
  8267  0310  083B               	movwf	(??___fladd+0)+0
  8268  0311  00AC               	clrc
  8269  0312  1003               	rrf	(??___fladd+0)+0,w
  8270  0313  0C2C               	iorlw	01h
  8271  0314  3801               	movwf	(??___fladd+1)+0
  8272  0315  00AD               	movf	(??___fladd+1)+0,w
  8273  0316  082D               	movwf	(___fladd@grs)
  8274  0317  00BB               	line	137
  8275                           	goto	l2165
  8276  0318  2B1C               	line	138
  8277                           	
  8278                           l600:	
  8279  0319                     	line	139
  8280                           	
  8281                           l2163:	
  8282  0319                     	clrc
  8283  0319  1003               	rrf	(___fladd@grs),f
  8284  031A  0CBB               
  8285                           	goto	l2165
  8286  031B  2B1C               	line	140
  8287                           	
  8288                           l601:	
  8289  031C                     	line	141
  8290                           	
  8291                           l2165:	
  8292  031C                     	btfss	(___fladd@b),(0)&7
  8293  031C  1C24               	goto	u2501
  8294  031D  2B1F               	goto	u2500
  8295  031E  2B20               u2501:
  8296  031F                     	goto	l2169
  8297  031F  2B22               u2500:
  8298  0320                     	line	142
  8299                           	
  8300                           l2167:	
  8301  0320                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8302  0320  17BB               	goto	l2169
  8303  0321  2B22               	line	143
  8304                           	
  8305                           l602:	
  8306  0322                     	line	144
  8307                           	
  8308                           l2169:	
  8309  0322                     	movlw	01h
  8310  0322  3001               	movwf	(??___fladd+0)+0
  8311  0323  00AC               u2515:
  8312  0324                     	rlf	(___fladd@b+3),w
  8313  0324  0D27               	rrf	(___fladd@b+3),f
  8314  0325  0CA7               	rrf	(___fladd@b+2),f
  8315  0326  0CA6               	rrf	(___fladd@b+1),f
  8316  0327  0CA5               	rrf	(___fladd@b),f
  8317  0328  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8318  0329  0BAC               	goto	u2515
  8319  032A  2B24               
  8320                           	line	145
  8321                           	
  8322                           l2171:	
  8323  032B                     	movlw	low(01h)
  8324  032B  3001               	movwf	(??___fladd+0)+0
  8325  032C  00AC               	movf	(??___fladd+0)+0,w
  8326  032D  082C               	addwf	(___fladd@bexp),f
  8327  032E  07BA               	goto	l2207
  8328  032F  2BFA               	line	146
  8329                           	
  8330                           l599:	
  8331  0330                     	line	148
  8332                           	goto	l2207
  8333  0330  2BFA               	line	149
  8334                           	
  8335                           l596:	
  8336  0331                     	line	153
  8337                           	
  8338                           l2173:	
  8339  0331                     	movf	(___fladd@b+3),w
  8340  0331  0827               	xorlw	80h
  8341  0332  3A80               	movwf	btemp+1
  8342  0333  00FF               	movf	(___fladd@a+3),w
  8343  0334  082B               	xorlw	80h
  8344  0335  3A80               	subwf	btemp+1,w
  8345  0336  027F               	
  8346                           	skipz
  8347  0337  1D03               	goto	u2523
  8348  0338  2B43               	movf	(___fladd@a+2),w
  8349  0339  082A               	subwf	(___fladd@b+2),w
  8350  033A  0226               	skipz
  8351  033B  1D03               	goto	u2523
  8352  033C  2B43               	movf	(___fladd@a+1),w
  8353  033D  0829               	subwf	(___fladd@b+1),w
  8354  033E  0225               	skipz
  8355  033F  1D03               	goto	u2523
  8356  0340  2B43               	movf	(___fladd@a),w
  8357  0341  0828               	subwf	(___fladd@b),w
  8358  0342  0224               u2523:
  8359  0343                     	skipnc
  8360  0343  1803               	goto	u2521
  8361  0344  2B46               	goto	u2520
  8362  0345  2B47               u2521:
  8363  0346                     	goto	l2183
  8364  0346  2BAD               u2520:
  8365  0347                     	line	154
  8366                           	
  8367                           l2175:	
  8368  0347                     	movlw	0FFh
  8369  0347  30FF               	movwf	((??___fladd+0)+0)
  8370  0348  00AC               	movlw	0FFh
  8371  0349  30FF               	movwf	((??___fladd+0)+0+1)
  8372  034A  00AD               	movlw	0FFh
  8373  034B  30FF               	movwf	((??___fladd+0)+0+2)
  8374  034C  00AE               	movlw	0FFh
  8375  034D  30FF               	movwf	((??___fladd+0)+0+3)
  8376  034E  00AF               	movf	(___fladd@a),w
  8377  034F  0828               	movwf	(??___fladd+4)+0
  8378  0350  00B0               	movf	(___fladd@a+1),w
  8379  0351  0829               	movwf	((??___fladd+4)+0+1)
  8380  0352  00B1               	movf	(___fladd@a+2),w
  8381  0353  082A               	movwf	((??___fladd+4)+0+2)
  8382  0354  00B2               	movf	(___fladd@a+3),w
  8383  0355  082B               	movwf	((??___fladd+4)+0+3)
  8384  0356  00B3               	comf	(___fladd@b),w
  8385  0357  0924               	movwf	(??___fladd+8)+0
  8386  0358  00B4               	comf	(___fladd@b+1),w
  8387  0359  0925               	movwf	((??___fladd+8)+0+1)
  8388  035A  00B5               	comf	(___fladd@b+2),w
  8389  035B  0926               	movwf	((??___fladd+8)+0+2)
  8390  035C  00B6               	comf	(___fladd@b+3),w
  8391  035D  0927               	movwf	((??___fladd+8)+0+3)
  8392  035E  00B7               	incf	(??___fladd+8)+0,f
  8393  035F  0AB4               	skipnz
  8394  0360  1903               	incf	((??___fladd+8)+0+1),f
  8395  0361  0AB5               	skipnz
  8396  0362  1903               	incf	((??___fladd+8)+0+2),f
  8397  0363  0AB6               	skipnz
  8398  0364  1903               	incf	((??___fladd+8)+0+3),f
  8399  0365  0AB7               	movf	0+(??___fladd+8)+0,w
  8400  0366  0834               	addwf	(??___fladd+4)+0,f
  8401  0367  07B0               	movf	1+(??___fladd+8)+0,w
  8402  0368  0835               	skipnc
  8403  0369  1803               	incfsz	1+(??___fladd+8)+0,w
  8404  036A  0F35               	goto	u2530
  8405  036B  2B6D               	goto	u2531
  8406  036C  2B6E               u2530:
  8407  036D                     	addwf	(??___fladd+4)+1,f
  8408  036D  07B1               u2531:
  8409  036E                     	movf	2+(??___fladd+8)+0,w
  8410  036E  0836               	skipnc
  8411  036F  1803               	incfsz	2+(??___fladd+8)+0,w
  8412  0370  0F36               	goto	u2532
  8413  0371  2B73               	goto	u2533
  8414  0372  2B74               u2532:
  8415  0373                     	addwf	(??___fladd+4)+2,f
  8416  0373  07B2               u2533:
  8417  0374                     	movf	3+(??___fladd+8)+0,w
  8418  0374  0837               	skipnc
  8419  0375  1803               	incf	3+(??___fladd+8)+0,w
  8420  0376  0A37               	addwf	(??___fladd+4)+3,f
  8421  0377  07B3               	movf	0+(??___fladd+4)+0,w
  8422  0378  0830               	addwf	(??___fladd+0)+0,f
  8423  0379  07AC               	movf	1+(??___fladd+4)+0,w
  8424  037A  0831               	skipnc
  8425  037B  1803               	incfsz	1+(??___fladd+4)+0,w
  8426  037C  0F31               	goto	u2540
  8427  037D  2B7F               	goto	u2541
  8428  037E  2B80               u2540:
  8429  037F                     	addwf	(??___fladd+0)+1,f
  8430  037F  07AD               u2541:
  8431  0380                     	movf	2+(??___fladd+4)+0,w
  8432  0380  0832               	skipnc
  8433  0381  1803               	incfsz	2+(??___fladd+4)+0,w
  8434  0382  0F32               	goto	u2542
  8435  0383  2B85               	goto	u2543
  8436  0384  2B86               u2542:
  8437  0385                     	addwf	(??___fladd+0)+2,f
  8438  0385  07AE               u2543:
  8439  0386                     	movf	3+(??___fladd+4)+0,w
  8440  0386  0833               	skipnc
  8441  0387  1803               	incf	3+(??___fladd+4)+0,w
  8442  0388  0A33               	addwf	(??___fladd+0)+3,f
  8443  0389  07AF               	movf	3+(??___fladd+0)+0,w
  8444  038A  082F               	movwf	(___fladd@b+3)
  8445  038B  00A7               	movf	2+(??___fladd+0)+0,w
  8446  038C  082E               	movwf	(___fladd@b+2)
  8447  038D  00A6               	movf	1+(??___fladd+0)+0,w
  8448  038E  082D               	movwf	(___fladd@b+1)
  8449  038F  00A5               	movf	0+(??___fladd+0)+0,w
  8450  0390  082C               	movwf	(___fladd@b)
  8451  0391  00A4               
  8452                           	line	155
  8453                           	movlw	low(080h)
  8454  0392  3080               	movwf	(??___fladd+0)+0
  8455  0393  00AC               	movf	(??___fladd+0)+0,w
  8456  0394  082C               	xorwf	(___fladd@signs),f
  8457  0395  06B8               	line	156
  8458                           	
  8459                           l2177:	
  8460  0396                     	comf	(___fladd@grs),f
  8461  0396  09BB               	incf	(___fladd@grs),f
  8462  0397  0ABB               	line	157
  8463                           	
  8464                           l2179:	
  8465  0398                     	movf	((___fladd@grs)),w
  8466  0398  083B               	btfss	status,2
  8467  0399  1D03               	goto	u2551
  8468  039A  2B9C               	goto	u2550
  8469  039B  2B9D               u2551:
  8470  039C                     	goto	l606
  8471  039C  2BBB               u2550:
  8472  039D                     	line	158
  8473                           	
  8474                           l2181:	
  8475  039D                     	movlw	01h
  8476  039D  3001               	addwf	(___fladd@b),f
  8477  039E  07A4               	movlw	0
  8478  039F  3000               	skipnc
  8479  03A0  1803               movlw 1
  8480  03A1  3001               	addwf	(___fladd@b+1),f
  8481  03A2  07A5               	movlw	0
  8482  03A3  3000               	skipnc
  8483  03A4  1803               movlw 1
  8484  03A5  3001               	addwf	(___fladd@b+2),f
  8485  03A6  07A6               	movlw	0
  8486  03A7  3000               	skipnc
  8487  03A8  1803               movlw 1
  8488  03A9  3001               	addwf	(___fladd@b+3),f
  8489  03AA  07A7               	goto	l606
  8490  03AB  2BBB               	line	159
  8491                           	
  8492                           l605:	
  8493  03AC                     	line	160
  8494                           	goto	l606
  8495  03AC  2BBB               	line	161
  8496                           	
  8497                           l604:	
  8498  03AD                     	line	162
  8499                           	
  8500                           l2183:	
  8501  03AD                     	movf	(___fladd@a),w
  8502  03AD  0828               	subwf	(___fladd@b),f
  8503  03AE  02A4               	movf	(___fladd@a+1),w
  8504  03AF  0829               	skipc
  8505  03B0  1C03               	incfsz	(___fladd@a+1),w
  8506  03B1  0F29               	subwf	(___fladd@b+1),f
  8507  03B2  02A5               	movf	(___fladd@a+2),w
  8508  03B3  082A               	skipc
  8509  03B4  1C03               	incfsz	(___fladd@a+2),w
  8510  03B5  0F2A               	subwf	(___fladd@b+2),f
  8511  03B6  02A6               	movf	(___fladd@a+3),w
  8512  03B7  082B               	skipc
  8513  03B8  1C03               	incfsz	(___fladd@a+3),w
  8514  03B9  0F2B               	subwf	(___fladd@b+3),f
  8515  03BA  02A7               	line	163
  8516                           	
  8517                           l606:	
  8518  03BB                     	line	166
  8519                           	movf	(___fladd@b+3),w
  8520  03BB  0827               	iorwf	(___fladd@b+2),w
  8521  03BC  0426               	iorwf	(___fladd@b+1),w
  8522  03BD  0425               	iorwf	(___fladd@b),w
  8523  03BE  0424               	skipz
  8524  03BF  1D03               	goto	u2561
  8525  03C0  2BC2               	goto	u2560
  8526  03C1  2BC3               u2561:
  8527  03C2                     	goto	l2205
  8528  03C2  2BF4               u2560:
  8529  03C3                     	
  8530                           l2185:	
  8531  03C3                     	movf	((___fladd@grs)),w
  8532  03C3  083B               	btfss	status,2
  8533  03C4  1D03               	goto	u2571
  8534  03C5  2BC7               	goto	u2570
  8535  03C6  2BC8               u2571:
  8536  03C7                     	goto	l2205
  8537  03C7  2BF4               u2570:
  8538  03C8                     	line	167
  8539                           	
  8540                           l2187:	
  8541  03C8                     	movlw	0x0
  8542  03C8  3000               	movwf	(?___fladd+3)
  8543  03C9  00A7               	movlw	0x0
  8544  03CA  3000               	movwf	(?___fladd+2)
  8545  03CB  00A6               	movlw	0x0
  8546  03CC  3000               	movwf	(?___fladd+1)
  8547  03CD  00A5               	movlw	0x0
  8548  03CE  3000               	movwf	(?___fladd)
  8549  03CF  00A4               
  8550                           	goto	l598
  8551  03D0  2C7D               	
  8552                           l2189:	
  8553  03D1                     	goto	l598
  8554  03D1  2C7D               	line	168
  8555                           	
  8556                           l607:	
  8557  03D2                     	line	171
  8558                           	goto	l2205
  8559  03D2  2BF4               	
  8560                           l609:	
  8561  03D3                     	line	172
  8562                           	
  8563                           l2191:	
  8564  03D3                     	movlw	01h
  8565  03D3  3001               	movwf	(??___fladd+0)+0
  8566  03D4  00AC               u2585:
  8567  03D5                     	clrc
  8568  03D5  1003               	rlf	(___fladd@b),f
  8569  03D6  0DA4               	rlf	(___fladd@b+1),f
  8570  03D7  0DA5               	rlf	(___fladd@b+2),f
  8571  03D8  0DA6               	rlf	(___fladd@b+3),f
  8572  03D9  0DA7               	decfsz	(??___fladd+0)+0
  8573  03DA  0BAC               	goto	u2585
  8574  03DB  2BD5               	line	173
  8575                           	
  8576                           l2193:	
  8577  03DC                     	btfss	(___fladd@grs),(7)&7
  8578  03DC  1FBB               	goto	u2591
  8579  03DD  2BDF               	goto	u2590
  8580  03DE  2BE0               u2591:
  8581  03DF                     	goto	l610
  8582  03DF  2BE1               u2590:
  8583  03E0                     	line	174
  8584                           	
  8585                           l2195:	
  8586  03E0                     	bsf	(___fladd@b)+(0/8),(0)&7
  8587  03E0  1424               	line	175
  8588                           	
  8589                           l610:	
  8590  03E1                     	line	176
  8591                           	btfss	(___fladd@grs),(0)&7
  8592  03E1  1C3B               	goto	u2601
  8593  03E2  2BE4               	goto	u2600
  8594  03E3  2BE5               u2601:
  8595  03E4                     	goto	l2199
  8596  03E4  2BE8               u2600:
  8597  03E5                     	line	177
  8598                           	
  8599                           l2197:	
  8600  03E5                     	setc
  8601  03E5  1403               	rlf	(___fladd@grs),f
  8602  03E6  0DBB               	line	178
  8603                           	goto	l2201
  8604  03E7  2BEB               	line	179
  8605                           	
  8606                           l611:	
  8607  03E8                     	line	180
  8608                           	
  8609                           l2199:	
  8610  03E8                     	clrc
  8611  03E8  1003               	rlf	(___fladd@grs),f
  8612  03E9  0DBB               
  8613                           	goto	l2201
  8614  03EA  2BEB               	line	181
  8615                           	
  8616                           l612:	
  8617  03EB                     	line	182
  8618                           	
  8619                           l2201:	
  8620  03EB                     	movf	((___fladd@bexp)),w
  8621  03EB  083A               	btfsc	status,2
  8622  03EC  1903               	goto	u2611
  8623  03ED  2BEF               	goto	u2610
  8624  03EE  2BF0               u2611:
  8625  03EF                     	goto	l2205
  8626  03EF  2BF4               u2610:
  8627  03F0                     	line	183
  8628                           	
  8629                           l2203:	
  8630  03F0                     	movlw	01h
  8631  03F0  3001               	subwf	(___fladd@bexp),f
  8632  03F1  02BA               	goto	l2205
  8633  03F2  2BF4               	line	184
  8634                           	
  8635                           l613:	
  8636  03F3                     	goto	l2205
  8637  03F3  2BF4               	line	185
  8638                           	
  8639                           l608:	
  8640  03F4                     	line	171
  8641                           	
  8642                           l2205:	
  8643  03F4                     	btfss	(___fladd@b+2),(23)&7
  8644  03F4  1FA6               	goto	u2621
  8645  03F5  2BF7               	goto	u2620
  8646  03F6  2BF8               u2621:
  8647  03F7                     	goto	l2191
  8648  03F7  2BD3               u2620:
  8649  03F8                     	goto	l2207
  8650  03F8  2BFA               	
  8651                           l614:	
  8652  03F9                     	goto	l2207
  8653  03F9  2BFA               	line	186
  8654                           	
  8655                           l603:	
  8656  03FA                     	line	192
  8657                           	
  8658                           l2207:	
  8659  03FA                     	clrf	(___fladd@aexp)
  8660  03FA  01B9               	line	193
  8661                           	
  8662                           l2209:	
  8663  03FB                     	btfss	(___fladd@grs),(7)&7
  8664  03FB  1FBB               	goto	u2631
  8665  03FC  2BFE               	goto	u2630
  8666  03FD  2BFF               u2631:
  8667  03FE                     	goto	l2217
  8668  03FE  2C11               u2630:
  8669  03FF                     	line	194
  8670                           	
  8671                           l2211:	
  8672  03FF                     	movf	(___fladd@grs),w
  8673  03FF  083B               	andlw	07Fh
  8674  0400  397F               	btfsc	status,2
  8675  0401  1903               	goto	u2641
  8676  0402  2C04               	goto	u2640
  8677  0403  2C05               u2641:
  8678  0404                     	goto	l616
  8679  0404  2C08               u2640:
  8680  0405                     	line	195
  8681                           	
  8682                           l2213:	
  8683  0405                     	clrf	(___fladd@aexp)
  8684  0405  01B9               	incf	(___fladd@aexp),f
  8685  0406  0AB9               	line	196
  8686                           	goto	l2217
  8687  0407  2C11               	line	197
  8688                           	
  8689                           l616:	
  8690  0408                     	line	198
  8691                           	btfss	(___fladd@b),(0)&7
  8692  0408  1C24               	goto	u2651
  8693  0409  2C0B               	goto	u2650
  8694  040A  2C0C               u2651:
  8695  040B                     	goto	l2217
  8696  040B  2C11               u2650:
  8697  040C                     	line	199
  8698                           	
  8699                           l2215:	
  8700  040C                     	clrf	(___fladd@aexp)
  8701  040C  01B9               	incf	(___fladd@aexp),f
  8702  040D  0AB9               	goto	l2217
  8703  040E  2C11               	line	200
  8704                           	
  8705                           l618:	
  8706  040F                     	goto	l2217
  8707  040F  2C11               	line	201
  8708                           	
  8709                           l617:	
  8710  0410                     	goto	l2217
  8711  0410  2C11               	line	202
  8712                           	
  8713                           l615:	
  8714  0411                     	line	203
  8715                           	
  8716                           l2217:	
  8717  0411                     	movf	((___fladd@aexp)),w
  8718  0411  0839               	btfsc	status,2
  8719  0412  1903               	goto	u2661
  8720  0413  2C15               	goto	u2660
  8721  0414  2C16               u2661:
  8722  0415                     	goto	l619
  8723  0415  2C4C               u2660:
  8724  0416                     	line	204
  8725                           	
  8726                           l2219:	
  8727  0416                     	movlw	01h
  8728  0416  3001               	addwf	(___fladd@b),f
  8729  0417  07A4               	movlw	0
  8730  0418  3000               	skipnc
  8731  0419  1803               movlw 1
  8732  041A  3001               	addwf	(___fladd@b+1),f
  8733  041B  07A5               	movlw	0
  8734  041C  3000               	skipnc
  8735  041D  1803               movlw 1
  8736  041E  3001               	addwf	(___fladd@b+2),f
  8737  041F  07A6               	movlw	0
  8738  0420  3000               	skipnc
  8739  0421  1803               movlw 1
  8740  0422  3001               	addwf	(___fladd@b+3),f
  8741  0423  07A7               	line	205
  8742                           	
  8743                           l2221:	
  8744  0424                     	btfss	(___fladd@b+3),(24)&7
  8745  0424  1C27               	goto	u2671
  8746  0425  2C27               	goto	u2670
  8747  0426  2C28               u2671:
  8748  0427                     	goto	l619
  8749  0427  2C4C               u2670:
  8750  0428                     	line	206
  8751                           	
  8752                           l2223:	
  8753  0428                     	movf	(___fladd@b),w
  8754  0428  0824               	movwf	(??___fladd+0)+0
  8755  0429  00AC               	movf	(___fladd@b+1),w
  8756  042A  0825               	movwf	((??___fladd+0)+0+1)
  8757  042B  00AD               	movf	(___fladd@b+2),w
  8758  042C  0826               	movwf	((??___fladd+0)+0+2)
  8759  042D  00AE               	movf	(___fladd@b+3),w
  8760  042E  0827               	movwf	((??___fladd+0)+0+3)
  8761  042F  00AF               	movlw	01h
  8762  0430  3001               	movwf	(??___fladd+4)+0
  8763  0431  00B0               u2685:
  8764  0432                     	rlf	(??___fladd+0)+3,w
  8765  0432  0D2F               	rrf	(??___fladd+0)+3,f
  8766  0433  0CAF               	rrf	(??___fladd+0)+2,f
  8767  0434  0CAE               	rrf	(??___fladd+0)+1,f
  8768  0435  0CAD               	rrf	(??___fladd+0)+0,f
  8769  0436  0CAC               u2680:
  8770  0437                     	decfsz	(??___fladd+4)+0,f
  8771  0437  0BB0               	goto	u2685
  8772  0438  2C32               	movf	3+(??___fladd+0)+0,w
  8773  0439  082F               	movwf	(___fladd@b+3)
  8774  043A  00A7               	movf	2+(??___fladd+0)+0,w
  8775  043B  082E               	movwf	(___fladd@b+2)
  8776  043C  00A6               	movf	1+(??___fladd+0)+0,w
  8777  043D  082D               	movwf	(___fladd@b+1)
  8778  043E  00A5               	movf	0+(??___fladd+0)+0,w
  8779  043F  082C               	movwf	(___fladd@b)
  8780  0440  00A4               
  8781                           	line	207
  8782                           		incf	((___fladd@bexp)),w
  8783  0441  0A3A               	btfsc	status,2
  8784  0442  1903               	goto	u2691
  8785  0443  2C45               	goto	u2690
  8786  0444  2C46               u2691:
  8787  0445                     	goto	l619
  8788  0445  2C4C               u2690:
  8789  0446                     	line	208
  8790                           	
  8791                           l2225:	
  8792  0446                     	movlw	low(01h)
  8793  0446  3001               	movwf	(??___fladd+0)+0
  8794  0447  00AC               	movf	(??___fladd+0)+0,w
  8795  0448  082C               	addwf	(___fladd@bexp),f
  8796  0449  07BA               	goto	l619
  8797  044A  2C4C               	line	209
  8798                           	
  8799                           l621:	
  8800  044B                     	goto	l619
  8801  044B  2C4C               	line	210
  8802                           	
  8803                           l620:	
  8804  044C                     	line	211
  8805                           	
  8806                           l619:	
  8807  044C                     	line	215
  8808                           		incf	((___fladd@bexp)),w
  8809  044C  0A3A               	btfsc	status,2
  8810  044D  1903               	goto	u2701
  8811  044E  2C50               	goto	u2700
  8812  044F  2C51               u2701:
  8813  0450                     	goto	l2229
  8814  0450  2C57               u2700:
  8815  0451                     	
  8816                           l2227:	
  8817  0451                     	movf	((___fladd@bexp)),w
  8818  0451  083A               	btfss	status,2
  8819  0452  1D03               	goto	u2711
  8820  0453  2C55               	goto	u2710
  8821  0454  2C56               u2711:
  8822  0455                     	goto	l2235
  8823  0455  2C67               u2710:
  8824  0456                     	goto	l2229
  8825  0456  2C57               	
  8826                           l624:	
  8827  0457                     	line	216
  8828                           	
  8829                           l2229:	
  8830  0457                     	movlw	high highword(0)
  8831  0457  3000               	movwf	(___fladd@b+3)
  8832  0458  00A7               	movlw	low highword(0)
  8833  0459  3000               	movwf	(___fladd@b+2)
  8834  045A  00A6               	movlw	high(0)
  8835  045B  3000               	movwf	(___fladd@b+1)
  8836  045C  00A5               	movlw	low(0)
  8837  045D  3000               	movwf	(___fladd@b)
  8838  045E  00A4               
  8839                           	line	218
  8840                           	
  8841                           l2231:	
  8842  045F                     	movf	((___fladd@bexp)),w
  8843  045F  083A               	btfss	status,2
  8844  0460  1D03               	goto	u2721
  8845  0461  2C63               	goto	u2720
  8846  0462  2C64               u2721:
  8847  0463                     	goto	l2235
  8848  0463  2C67               u2720:
  8849  0464                     	line	219
  8850                           	
  8851                           l2233:	
  8852  0464                     	clrf	(___fladd@signs)
  8853  0464  01B8               	goto	l2235
  8854  0465  2C67               	line	220
  8855                           	
  8856                           l625:	
  8857  0466                     	goto	l2235
  8858  0466  2C67               	line	221
  8859                           	
  8860                           l622:	
  8861  0467                     	line	225
  8862                           	
  8863                           l2235:	
  8864  0467                     	btfss	(___fladd@bexp),(0)&7
  8865  0467  1C3A               	goto	u2731
  8866  0468  2C6A               	goto	u2730
  8867  0469  2C6B               u2731:
  8868  046A                     	goto	l2239
  8869  046A  2C6D               u2730:
  8870  046B                     	line	226
  8871                           	
  8872                           l2237:	
  8873  046B                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  8874  046B  17A6               	line	227
  8875                           	goto	l627
  8876  046C  2C71               	line	229
  8877                           	
  8878                           l626:	
  8879  046D                     	line	230
  8880                           	
  8881                           l2239:	
  8882  046D                     	movlw	low(07Fh)
  8883  046D  307F               	movwf	(??___fladd+0)+0
  8884  046E  00AC               	movf	(??___fladd+0)+0,w
  8885  046F  082C               	andwf	0+(___fladd@b)+02h,f
  8886  0470  05A6               	line	231
  8887                           	
  8888                           l627:	
  8889  0471                     	line	232
  8890                           	movf	(___fladd@bexp),w
  8891  0471  083A               	movwf	(??___fladd+0)+0
  8892  0472  00AC               	clrc
  8893  0473  1003               	rrf	(??___fladd+0)+0,w
  8894  0474  0C2C               	movwf	(??___fladd+1)+0
  8895  0475  00AD               	movf	(??___fladd+1)+0,w
  8896  0476  082D               	movwf	0+(___fladd@b)+03h
  8897  0477  00A7               	line	233
  8898                           	
  8899                           l2241:	
  8900  0478                     	btfss	(___fladd@signs),(7)&7
  8901  0478  1FB8               	goto	u2741
  8902  0479  2C7B               	goto	u2740
  8903  047A  2C7C               u2741:
  8904  047B                     	goto	l628
  8905  047B  2C7D               u2740:
  8906  047C                     	line	234
  8907                           	
  8908                           l2243:	
  8909  047C                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  8910  047C  17A7               	line	235
  8911                           	
  8912                           l628:	
  8913  047D                     	line	236
  8914                           	line	237
  8915                           	
  8916                           l598:	
  8917  047D                     	return
  8918  047D  0008               	opt stack 0
  8919                           GLOBAL	__end_of___fladd
  8920                           	__end_of___fladd:
  8921  047E                     	signat	___fladd,8316
  8922                           	global	_I2C_Master_Write
  8923                           
  8924 ;; *************** function _I2C_Master_Write *****************
  8925 ;; Defined at:
  8926 ;;		line 65 in file "I2C.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  d               2    0[COMMON] unsigned int 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8940 ;;      Params:         2       0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0
  8943 ;;      Totals:         2       0       0       0       0
  8944 ;;Total ram usage:        2 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    1
  8947 ;; This function calls:
  8948 ;;		_I2C_Master_Wait
  8949 ;; This function is called by:
  8950 ;;		_main
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8954                           	file	"I2C.c"
  8955                           	line	65
  8956                           global __ptext22
  8957                           __ptext22:	;psect for function _I2C_Master_Write
  8958  0834                     psect	text22
  8959                           	file	"I2C.c"
  8960                           	line	65
  8961                           	global	__size_of_I2C_Master_Write
  8962                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  8963  000A                     	
  8964                           _I2C_Master_Write:	
  8965  0834                     ;incstack = 0
  8966                           	opt	stack 6
  8967                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8968                           	line	67
  8969                           	
  8970                           l1963:	
  8971  0834                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  8972                           	fcall	_I2C_Master_Wait
  8973  0834  120A  158A  203E  120A  158A  	line	68
  8974                           	
  8975                           l1965:	
  8976  0839                     ;I2C.c: 68:     SSPBUF = d;
  8977                           	movf	(I2C_Master_Write@d),w
  8978  0839  0870               	bcf	status, 5	;RP0=0, select bank0
  8979  083A  1283               	bcf	status, 6	;RP1=0, select bank0
  8980  083B  1303               	movwf	(19)	;volatile
  8981  083C  0093               	line	69
  8982                           	
  8983                           l124:	
  8984  083D                     	return
  8985  083D  0008               	opt stack 0
  8986                           GLOBAL	__end_of_I2C_Master_Write
  8987                           	__end_of_I2C_Master_Write:
  8988  083E                     	signat	_I2C_Master_Write,4217
  8989                           	global	_I2C_Master_Stop
  8990                           
  8991 ;; *************** function _I2C_Master_Stop *****************
  8992 ;; Defined at:
  8993 ;;		line 55 in file "I2C.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0, pclath, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9007 ;;      Params:         0       0       0       0       0
  9008 ;;      Locals:         0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0
  9010 ;;      Totals:         0       0       0       0       0
  9011 ;;Total ram usage:        0 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    1
  9014 ;; This function calls:
  9015 ;;		_I2C_Master_Wait
  9016 ;; This function is called by:
  9017 ;;		_main
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9021                           	line	55
  9022                           global __ptext23
  9023                           __ptext23:	;psect for function _I2C_Master_Stop
  9024  082B                     psect	text23
  9025                           	file	"I2C.c"
  9026                           	line	55
  9027                           	global	__size_of_I2C_Master_Stop
  9028                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  9029  0009                     	
  9030                           _I2C_Master_Stop:	
  9031  082B                     ;incstack = 0
  9032                           	opt	stack 6
  9033                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9034                           	line	57
  9035                           	
  9036                           l1983:	
  9037  082B                     ;I2C.c: 57:     I2C_Master_Wait();
  9038                           	fcall	_I2C_Master_Wait
  9039  082B  120A  158A  203E  120A  158A  	line	58
  9040                           	
  9041                           l1985:	
  9042  0830                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  9043                           	bsf	status, 5	;RP0=1, select bank1
  9044  0830  1683               	bcf	status, 6	;RP1=0, select bank1
  9045  0831  1303               	bsf	(145)^080h,2	;volatile
  9046  0832  1511               	line	59
  9047                           	
  9048                           l121:	
  9049  0833                     	return
  9050  0833  0008               	opt stack 0
  9051                           GLOBAL	__end_of_I2C_Master_Stop
  9052                           	__end_of_I2C_Master_Stop:
  9053  0834                     	signat	_I2C_Master_Stop,89
  9054                           	global	_I2C_Master_Start
  9055                           
  9056 ;; *************** function _I2C_Master_Start *****************
  9057 ;; Defined at:
  9058 ;;		line 39 in file "I2C.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0, pclath, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9072 ;;      Params:         0       0       0       0       0
  9073 ;;      Locals:         0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0
  9075 ;;      Totals:         0       0       0       0       0
  9076 ;;Total ram usage:        0 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    1
  9079 ;; This function calls:
  9080 ;;		_I2C_Master_Wait
  9081 ;; This function is called by:
  9082 ;;		_main
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9086                           	line	39
  9087                           global __ptext24
  9088                           __ptext24:	;psect for function _I2C_Master_Start
  9089  17F7                     psect	text24
  9090                           	file	"I2C.c"
  9091                           	line	39
  9092                           	global	__size_of_I2C_Master_Start
  9093                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  9094  0009                     	
  9095                           _I2C_Master_Start:	
  9096  17F7                     ;incstack = 0
  9097                           	opt	stack 6
  9098                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9099                           	line	41
  9100                           	
  9101                           l1959:	
  9102  17F7                     ;I2C.c: 41:     I2C_Master_Wait();
  9103                           	fcall	_I2C_Master_Wait
  9104  17F7  120A  158A  203E  160A  118A  	line	42
  9105                           	
  9106                           l1961:	
  9107  17FC                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  9108                           	bsf	status, 5	;RP0=1, select bank1
  9109  17FC  1683               	bcf	status, 6	;RP1=0, select bank1
  9110  17FD  1303               	bsf	(145)^080h,0	;volatile
  9111  17FE  1411               	line	43
  9112                           	
  9113                           l115:	
  9114  17FF                     	return
  9115  17FF  0008               	opt stack 0
  9116                           GLOBAL	__end_of_I2C_Master_Start
  9117                           	__end_of_I2C_Master_Start:
  9118  1800                     	signat	_I2C_Master_Start,89
  9119                           	global	_I2C_Master_Read
  9120                           
  9121 ;; *************** function _I2C_Master_Read *****************
  9122 ;; Defined at:
  9123 ;;		line 74 in file "I2C.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  a               2    0[COMMON] unsigned short 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  temp            2    4[COMMON] unsigned short 
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  2    0[COMMON] unsigned short 
  9130 ;; Registers used:
  9131 ;;		wreg, status,2, status,0, pclath, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9137 ;;      Params:         2       0       0       0       0
  9138 ;;      Locals:         2       0       0       0       0
  9139 ;;      Temps:          2       0       0       0       0
  9140 ;;      Totals:         6       0       0       0       0
  9141 ;;Total ram usage:        6 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:    1
  9144 ;; This function calls:
  9145 ;;		_I2C_Master_Wait
  9146 ;; This function is called by:
  9147 ;;		_main
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9151                           	line	74
  9152                           global __ptext25
  9153                           __ptext25:	;psect for function _I2C_Master_Read
  9154  08C6                     psect	text25
  9155                           	file	"I2C.c"
  9156                           	line	74
  9157                           	global	__size_of_I2C_Master_Read
  9158                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  9159  002F                     	
  9160                           _I2C_Master_Read:	
  9161  08C6                     ;incstack = 0
  9162                           	opt	stack 6
  9163                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9164                           	line	77
  9165                           	
  9166                           l1967:	
  9167  08C6                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  9168                           	fcall	_I2C_Master_Wait
  9169  08C6  120A  158A  203E  120A  158A  	line	78
  9170                           	
  9171                           l1969:	
  9172  08CB                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  9173                           	bsf	status, 5	;RP0=1, select bank1
  9174  08CB  1683               	bcf	status, 6	;RP1=0, select bank1
  9175  08CC  1303               	bsf	(145)^080h,3	;volatile
  9176  08CD  1591               	line	79
  9177                           ;I2C.c: 79:     I2C_Master_Wait();
  9178                           	fcall	_I2C_Master_Wait
  9179  08CE  120A  158A  203E  120A  158A  	line	80
  9180                           	
  9181                           l1971:	
  9182  08D3                     ;I2C.c: 80:     temp = SSPBUF;
  9183                           	bcf	status, 5	;RP0=0, select bank0
  9184  08D3  1283               	bcf	status, 6	;RP1=0, select bank0
  9185  08D4  1303               	movf	(19),w	;volatile
  9186  08D5  0813               	movwf	(??_I2C_Master_Read+0)+0
  9187  08D6  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  9188  08D7  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  9189  08D8  0872               	movwf	(I2C_Master_Read@temp)
  9190  08D9  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  9191  08DA  0873               	movwf	(I2C_Master_Read@temp+1)
  9192  08DB  00F5               	line	81
  9193                           	
  9194                           l1973:	
  9195  08DC                     ;I2C.c: 81:     I2C_Master_Wait();
  9196                           	fcall	_I2C_Master_Wait
  9197  08DC  120A  158A  203E  120A  158A  	line	82
  9198                           	
  9199                           l1975:	
  9200  08E1                     ;I2C.c: 82:     if(a == 1){
  9201                           		decf	((I2C_Master_Read@a)),w
  9202  08E1  0370               iorwf	((I2C_Master_Read@a+1)),w
  9203  08E2  0471               	btfss	status,2
  9204  08E3  1D03               	goto	u2161
  9205  08E4  28E6               	goto	u2160
  9206  08E5  28E7               u2161:
  9207  08E6                     	goto	l127
  9208  08E6  28EB               u2160:
  9209  08E7                     	line	83
  9210                           	
  9211                           l1977:	
  9212  08E7                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  9213                           	bsf	status, 5	;RP0=1, select bank1
  9214  08E7  1683               	bcf	status, 6	;RP1=0, select bank1
  9215  08E8  1303               	bcf	(145)^080h,5	;volatile
  9216  08E9  1291               	line	84
  9217                           ;I2C.c: 84:     }else{
  9218                           	goto	l128
  9219  08EA  28EE               	
  9220                           l127:	
  9221  08EB                     	line	85
  9222                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  9223                           	bsf	status, 5	;RP0=1, select bank1
  9224  08EB  1683               	bcf	status, 6	;RP1=0, select bank1
  9225  08EC  1303               	bsf	(145)^080h,5	;volatile
  9226  08ED  1691               	line	86
  9227                           ;I2C.c: 86:     }
  9228                           	
  9229                           l128:	
  9230  08EE                     	line	87
  9231                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  9232                           	bsf	(145)^080h,4	;volatile
  9233  08EE  1611               	line	88
  9234                           	
  9235                           l1979:	
  9236  08EF                     ;I2C.c: 88:     return temp;
  9237                           	movf	(I2C_Master_Read@temp+1),w
  9238  08EF  0875               	movwf	(?_I2C_Master_Read+1)
  9239  08F0  00F1               	movf	(I2C_Master_Read@temp),w
  9240  08F1  0874               	movwf	(?_I2C_Master_Read)
  9241  08F2  00F0               	goto	l129
  9242  08F3  28F4               	
  9243                           l1981:	
  9244  08F4                     	line	89
  9245                           	
  9246                           l129:	
  9247  08F4                     	return
  9248  08F4  0008               	opt stack 0
  9249                           GLOBAL	__end_of_I2C_Master_Read
  9250                           	__end_of_I2C_Master_Read:
  9251  08F5                     	signat	_I2C_Master_Read,4218
  9252                           	global	_I2C_Master_Wait
  9253                           
  9254 ;; *************** function _I2C_Master_Wait *****************
  9255 ;; Defined at:
  9256 ;;		line 32 in file "I2C.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;		None
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9270 ;;      Params:         0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0
  9273 ;;      Totals:         0       0       0       0       0
  9274 ;;Total ram usage:        0 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_I2C_Master_Start
  9280 ;;		_I2C_Master_Stop
  9281 ;;		_I2C_Master_Write
  9282 ;;		_I2C_Master_Read
  9283 ;;		_I2C_Master_RepeatedStart
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9287                           	line	32
  9288                           global __ptext26
  9289                           __ptext26:	;psect for function _I2C_Master_Wait
  9290  083E                     psect	text26
  9291                           	file	"I2C.c"
  9292                           	line	32
  9293                           	global	__size_of_I2C_Master_Wait
  9294                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  9295  000F                     	
  9296                           _I2C_Master_Wait:	
  9297  083E                     ;incstack = 0
  9298                           	opt	stack 6
  9299                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9300                           	line	34
  9301                           	
  9302                           l1921:	
  9303  083E                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9304                           	goto	l109
  9305  083E  283F               	
  9306                           l110:	
  9307  083F                     	
  9308                           l109:	
  9309  083F                     	bsf	status, 5	;RP0=1, select bank1
  9310  083F  1683               	bcf	status, 6	;RP1=0, select bank1
  9311  0840  1303               	btfsc	(148)^080h,(2)&7	;volatile
  9312  0841  1914               	goto	u2111
  9313  0842  2844               	goto	u2110
  9314  0843  2845               u2111:
  9315  0844                     	goto	l109
  9316  0844  283F               u2110:
  9317  0845                     	
  9318                           l1923:	
  9319  0845                     	movf	(145)^080h,w	;volatile
  9320  0845  0811               	andlw	01Fh
  9321  0846  391F               	btfss	status,2
  9322  0847  1D03               	goto	u2121
  9323  0848  284A               	goto	u2120
  9324  0849  284B               u2121:
  9325  084A                     	goto	l109
  9326  084A  283F               u2120:
  9327  084B                     	goto	l112
  9328  084B  284C               	
  9329                           l111:	
  9330  084C                     	line	35
  9331                           	
  9332                           l112:	
  9333  084C                     	return
  9334  084C  0008               	opt stack 0
  9335                           GLOBAL	__end_of_I2C_Master_Wait
  9336                           	__end_of_I2C_Master_Wait:
  9337  084D                     	signat	_I2C_Master_Wait,89
  9338                           global	___latbits
  9339                           ___latbits	equ	2
  9340  0002                     	global	btemp
  9341                           	btemp set 07Eh
  9342  007E                     
  9343                           	DABS	1,126,2	;btemp
  9344                           	global	wtemp0
  9345                           	wtemp0 set btemp+0
  9346  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      4      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15267
                                              0 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    2879
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1779
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1720
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     492
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     772
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             54 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      20       7       40.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7E      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Feb 22 10:55:07 2020

             ___fldiv@aexp 006F               ___fldiv@bexp 006E                          pc 0002  
             ___fldiv@sign 0067                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l71 0C2B                         l72 0DF3                         l73 0DF4  
                       l74 0DF4                         l77 0A95                         _s3 00B4  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l110 083F  
                      l111 084C                        l112 084C                        l121 0833  
                      l106 092C                        l115 17FF                        l124 083D  
                      l109 083F                        l127 08EB                        l151 088D  
                      l128 08EE                        l152 0895                        l160 09AB  
                      l129 08F4                        l321 0B59                        l153 089B  
                      l161 09EB                        l322 0B17                        l162 09EB  
                      l323 0B09                        l171 087E                        l324 0B1C  
                      l156 0009                        l325 0B1D                        l165 086A  
                      l326 0B48                        l270 00CA                        l174 0027  
                      l327 0B58                        l159 09CE                        l271 00DC  
                      l600 0319                        l328 0B62                        l168 0966  
                      l280 0124                        l272 00E3                        l601 031C  
                      l281 014C                        l273 00DE                        l177 0ADA  
                      l610 03E1                        l602 0322                        l274 01BC  
                      l282 0141                        l178 0AF5                        l603 03FA  
                      l611 03E8                        l283 015E                        l275 00DF  
                      l620 044C                        l612 03EB                        l604 03AD  
                      l700 0B85                        l284 019D                        l276 00E0  
                      l621 044B                        l613 03F3                        l605 03AC  
                      l701 0B97                        l269 01A8                        l285 0163  
                      l277 0100                        l622 0467                        l614 03F9  
                      l606 03BB                        l710 0BD5                        l702 0C24  
                      l286 01A7                        l278 00E1                        l615 0411  
                      l607 03D2                        l703 0BAA                        l287 01BB  
                      l279 011A                        l624 0457                        l616 0408  
                      l608 03F4                        l640 0E4D                        l720 08C0  
                      l480 007A                        l712 0BEC                        l704 0B9C  
                      l560 0A08                        l288 01C1                        l625 0466  
                      l617 0410                        l609 03D3                        l641 0E58  
                      l721 08C5                        l473 085A                        l481 007B  
                      l713 0BEC                        l705 0BB1                        l561 0A09  
                      l626 046D                        l618 040F                        l650 0F17  
                      l642 0E7A                        l634 0E0A                        l474 085B  
                      l482 008D                        l714 0BF8                        l706 0BCD  
                      l562 0A22                        l570 0981                        l627 0471  
                      l619 044C                        l651 0F21                        l643 0FFF  
                      l635 0E20                        l483 00B1                        l715 0C1B  
                      l707 0BB2                        l563 0A30                        l571 0982  
                      l628 047D                        l580 01F4                        l660 0FA3  
                      l652 0F41                        l644 0E91                        l636 0E1D  
                      l484 009E                        l708 0BD4                        l564 0A36  
                      l572 0993                        l581 0201                        l661 0FA2  
                      l653 0F22                        l645 0F10                        l637 0E29  
                      l485 00AA                        l477 0045                        l709 0BE1  
                      l557 0A31                        l573 09A1                        l590 02D5  
                      l582 020D                        l662 0FBF                        l654 0F31  
                      l646 0EC2                        l638 0E3A                        l718 08A7  
                      l670 0491                        l486 009F                        l478 00C1  
                      l558 0A03                        l574 09A7                        l591 02B1  
                      l583 0223                        l663 0FDB                        l655 0F46  
                      l647 0EE9                        l639 0E50                        l719 08B1  
                      l671 04A6                        l487 00B0                        l479 008E  
                      l559 09F7                        l567 09A2                        l592 02BE  
                      l584 0220                        l664 0FE7                        l656 0F6B  
                      l648 0EDF                        l680 04E9                        l672 04A4  
                      l488 00C1                        l568 097C                        l593 02C1  
                      l585 022B                        l577 01D5                        l665 0FEB  
                      l657 0F62                        l649 0F0B                        l681 07F2  
                      l673 04AF                        l569 0970                        l594 02C7  
                      l586 0277                        l578 01EB                        l658 0F6A  
                      l690 0796                        l682 0734                        l674 04C0  
                      l595 02DE                        l587 023A                        l579 01E8  
                      l659 0F69                        l691 0795                        l683 0715  
                      l675 04D5                        l596 0331                        l588 02B0  
                      l692 07AE                        l684 0724                        l676 04D3  
                      l597 02F1                        l589 02DE                        l693 07E5  
                      l685 0739                        l677 04DE                        l598 047D  
                      l694 07C9                        l686 075E                        l678 04F3  
                      l599 0330                        l695 07E5                        l687 0755  
                      l696 07DD                        l688 075D                        l689 075C  
                      l699 0B7D                        _GIE 005F                        _RD0 0040  
                      _RD1 0041               __CFG_CPD$OFF 0000                        _adc 00BA  
                      _lux 00A0                        fsr0 0004                        indf 0000  
             ___flmul@aexp 004E               ___flmul@bexp 004F               ___flmul@sign 0049  
             ___flmul@temp 0054               ___flmul@prod 0050               __CFG_LVP$OFF 0000  
             ___fltol@exp1 007A                       l2001 0ADA                       l2011 085A  
                     l2003 0AE2                       l2101 023E                       l2013 085B  
                     l2021 0045                       l2005 0AEF                       l2111 0252  
                     l2103 0242                       l2007 084D                       l2031 0069  
                     l2023 005A                       l2015 0028                       l2201 03EB  
                     l2121 0266                       l2113 0256                       l2105 0246  
                     l2009 0857                       l2041 0094                       l2033 0070  
                     l2025 005B                       l2017 003B                       l2211 03FF  
                     l2203 03F0                       l2131 0278                       l2123 026A  
                     l2115 025A                       l2107 024A                       l2051 01C2  
                     l2043 009D                       l2035 0079                       l2027 0063  
                     l2019 0044                       l2221 0424                       l2213 0405  
                     l2205 03F4                       l2141 02C5                       l2133 0294  
                     l2125 026E                       l2117 025E                       l2109 024E  
                     l2061 01DA                       l2053 01C9                       l2301 0EA8  
                     l2045 009F                       l2037 007B                       l2029 0065  
                     l2231 045F                       l2223 0428                       l2215 040C  
                     l2207 03FA                       l2151 02E7                       l2143 02C7  
                     l2135 02B5                       l2127 0272                       l2119 0262  
                     l2071 01F4                       l2063 01DF                       l2055 01CF  
                     l2311 0EC7                       l2303 0EB0                       l2047 00B1  
                     l2039 008E                       l2241 0478                       l2233 0464  
                     l2225 0446                       l2217 0411                       l2209 03FB  
                     l2161 0310                       l2153 02F0                       l2145 02D0  
                     l2137 02BE                       l2129 0277                       l2081 020B  
                     l2073 01F9                       l2065 01E8                       l2057 01D3  
                     l2321 0EFB                       l2313 0ED9                       l2305 0EB8  
                     l2401 04A4                       l2049 00B6                       l2243 047C  
                     l2235 0467                       l2227 0451                       l2219 0416  
                     l2171 032B                       l2163 0319                       l2155 02F1  
                     l2139 02C1                       l2147 02D5                       l2091 0221  
                     l2083 020D                       l2075 01FF                       l2067 01E9  
                     l2059 01D5                       l2331 0F1F                       l2323 0EFC  
                     l2315 0EDD                       l2307 0EC0                       l2251 0E08  
                     l2411 04BE                       l2403 04A6                       l2237 046B  
                     l2229 0457                       l2181 039D                       l2165 031C  
                     l2157 0308                       l2149 02E2                       l2173 0331  
                     l2085 0212                       l2093 0223                       l2077 0201  
                     l2069 01EB                       l2341 0F3A                       l2333 0F22  
                     l2325 0F0B                       l2317 0EDF                       l2309 0EC2  
                     l2261 0E1E                       l2253 0E0A                       l2245 0DF7  
                     l2501 0775                       l2421 04D5                       l2413 04C0  
                     l2405 04AF                       l2239 046D                       l2191 03D3  
                     l2175 0347                       l2183 03AD                       l2167 0320  
                     l2159 030C                       l2095 0231                       l2087 0217  
                     l2079 0207                       l2351 0F5F                       l2335 0F2B  
                     l2343 0F41                       l2319 0EE9                       l2327 0F10  
                     l2271 0E38                       l2255 0E0F                       l2263 0E20  
                     l2247 0DFE                       l2511 07BD                       l2503 078E  
                     l2431 04F3                       l2423 04DE                       l2415 04C5  
                     l2407 04B4                       l2193 03DC                       l2185 03C3  
                     l2177 0396                       l2169 0322                       l2097 0235  
                     l2089 0220                       l2361 0F82                       l2353 0F66  
                     l2345 0F46                       l2337 0F2F                       l2329 0F17  
                     l2281 0E4E                       l2273 0E3A                       l2265 0E29  
                     l2257 0E14                       l2249 0E04                       l2521 07DD  
                     l2513 07C7                       l2505 0796                       l2441 0575  
                     l2433 0503                       l2425 04E3                       l2417 04CA  
                     l2409 04BA                       l1721 085D                       l1801 00DC  
                     l2601 0CA2                       l2195 03E0                       l2187 03C8  
                     l2179 0398                       l2099 023A                       l2371 0FCE  
                     l2363 0F9B                       l2355 0F6B                       l2347 0F47  
                     l2339 0F31                       l2291 0E79                       l2275 0E3F  
                     l2283 0E50                       l2267 0E2E                       l2259 0E1D  
                     l2523 07E9                       l2515 07C9                       l2507 07A3  
                     l2451 05E3                       l2443 0591                       l2435 0510  
                     l2427 04E9                       l2419 04D3                       l2531 0B6D  
                     l1723 0860                       l1731 09EE                       l1811 010C  
                     l1803 00E2                       l2611 0DAB                       l2603 0CAC  
                     l2197 03E5                       l2189 03D1                       l2381 0FE7  
                     l2373 0FD2                       l2357 0F70                       l2365 0FA3  
                     l2349 0F4B                       l2285 0E60                       l2293 0E7A  
                     l2277 0E44                       l2269 0E34                       l2525 07F2  
                     l2517 07D7                       l2509 07AE                       l2461 0673  
                     l2453 05F3                       l2445 05AD                       l2437 052D  
                     l2429 04F2                       l2541 0B9C                       l2533 0B7D  
                     l1901 092D                       l1725 0862                       l1741 0A09  
                     l1733 09F4                       l1821 0123                       l1813 0110  
                     l1805 00E3                       l2621 0DE1                       l2613 0DBB  
                     l2605 0D09                       l2199 03E8                       l2383 0FF6  
                     l2375 0FDA                       l2367 0FB0                       l2359 0F7E  
                     l2295 0E7F                       l2287 0E6C                       l2279 0E4D  
                     l2519 07DB                       l2471 0707                       l2463 0683  
                     l2455 0610                       l2447 05B6                       l2439 0549  
                     l2391 048B                       l2551 0BD5                       l2543 0BAA  
                     l2535 0B8D                       l2527 0B64                       l1911 094E  
                     l1903 0936                       l1727 0867                       l1743 0A1A  
                     l1735 09F7                       l1751 0A31                       l1831 0152  
                     l1823 0124                       l1815 0114                       l1807 0100  
                     l2623 0DE9                       l2615 0DC7                       l2607 0D1C  
                     l1921 083E                       l2385 0FFF                       l2377 0FE1  
                     l2369 0FBF                       l2297 0E90                       l2289 0E70  
                     l2481 072D                       l2473 0715                       l2465 06B0  
                     l2457 0629                       l2449 05C6                       l2393 048F  
                     l2561 0C10                       l2553 0BE1                       l2545 0BB2  
                     l2537 0B96                       l2529 0B69                       l1913 0954  
                     l1905 093C                       l1753 0A36                       l1745 0A20  
                     l1737 09FE                       l1729 09EC                       l1761 0977  
                     l1841 0198                       l1833 0159                       l1825 0140  
                     l1817 011A                       l1809 0108                       l2617 0DCF  
                     l2609 0D98                       l1923 0845                       l2379 0FE5  
                     l2299 0E91                       l1931 08AB                       l2491 0752  
                     l2475 071E                       l2483 0734                       l2467 06D6  
                     l2459 0646                       l2395 0491                       l2387 047E  
                     l2563 0C15                       l2555 0BE5                       l2547 0BB6  
                     l2539 0B97                       l1915 095A                       l1907 0942  
                     l1747 0A22                       l1739 0A03                       l1771 099A  
                     l1763 097C                       l1755 0967                       l1843 019D  
                     l1835 015E                       l1827 0141                       l1819 011C  
                     l2619 0DD5                       l2571 0C25                       l1933 08BA  
                     l1925 089D                       l2493 0759                       l2485 0739  
                     l2477 0722                       l2469 06FE                       l2397 0496  
                     l2389 0485                       l2565 0C19                       l2557 0BF0  
                     l2549 0BC4                       l1861 0B17                       l1917 0960  
                     l1909 0948                       l1781 09C7                       l1941 0A43  
                     l1749 0A29                       l1765 0982                       l1757 096D  
                     l1773 09A2                       l1837 0163                       l1829 014C  
                     l1845 01A8                       l2581 0C4C                       l2573 0C2B  
                     l1935 08C0                       l1927 089F                       l2495 075E  
                     l2487 073A                       l2479 0724                       l2399 049B  
                     l2567 0C1B                       l2559 0BFA                       l1871 0B48  
                     l1863 0B1D                       l1855 0AF6                       l1791 087B  
                     l1919 0003                       l1783 09CE                       l1951 0A6B  
                     l1943 0A50                       l1775 09A7                       l1767 098C  
                     l1759 0970                       l1839 0191                       l1847 01BC  
                     l2591 0C77                       l2583 0C56                       l2575 0C30  
                     l1961 17FC                       l1937 08C5                       l1929 08A7  
                     l2497 0763                       l2489 073E                       l2569 0C24  
                     l1873 0B51                       l1865 0B26                       l1857 0B06  
                     l1785 086C                       l1881 0885                       l1777 09A8  
                     l1953 0A77                       l1945 0A55                       l1769 0993  
                     l1849 01C1                       l2649 00F5                       l1793 00C5  
                     l2593 0C81                       l2585 0C5B                       l2577 0C39  
                     l1971 08D3                       l1963 0834                       l2499 0771  
                     l1867 0B38                       l1859 0B09                       l1875 0B59  
                     l1891 08F9                       l1787 086F                       l1883 088D  
                     l1779 09AB                       l1955 0A80                       l1947 0A5A  
                     l1939 0A37                       l1795 00CA                       l2595 0C86  
                     l2587 0C64                       l2579 0C47                       l1981 08F4  
                     l1973 08DC                       l1965 0839                       l1877 0B62  
                     l1869 0B46                       l1893 08FC                       l1789 0871  
                     l1885 0895                       l1957 0A8C                       l1949 0A62  
                     l1797 00D0                       l2597 0C8F                       l2589 0C72  
                     l1975 08E1                       l1967 08C6                       l1959 17F7  
                     l1983 082B                       l1895 0929                       l1879 0880  
                     l1799 00D7                       l1887 000D                       l1991 0AAB  
                     l2599 0C9D                       l1977 08E7                       l1969 08CB  
                     l1985 0830                       l1897 092A                       l1889 08F5  
                     l1993 0AB8                       l1979 08EF                       l1899 092B  
                     l1995 0ABE                       l1987 0A99                       l1997 0ACB  
                     l1989 0AA3                       l1999 0AD3                       STR_1 081D  
                     STR_2 0820                       STR_3 0823                       STR_4 0826  
                     STR_5 081A                       u2000 01A6                       u2001 01A5  
                     u2010 01BA                       u2011 01B9                       u2020 0B06  
                     u2100 090C                       u2021 0B05                       u2110 0845  
                     u2111 0844                       u2120 084B                       u3000 0F91  
                     u2200 0053                       u2040 0B1B                       u2121 084A  
                     u2041 0B1A                       u2105 0907                       u3010 0FB0  
                     u2130 08AB                       u2210 0069                       u3011 0FAF  
                     u2131 08AA                       u2211 0068                       u2035 0B0B  
                     u2300 01DA                       u3020 0FCE                       u3100 04E3  
                     u2220 0070                       u2060 0B38                       u2301 01D9  
                     u3021 0FCD                       u3005 0F8C                       u3101 04E2  
                     u2221 006F                       u2205 004E                       u2061 0B37  
                     u2310 01DF                       u3030 0FE5                       u2150 08BF  
                     u3110 04E8                       u2311 01DE                       u3031 0FE4  
                     u3015 0FAC                       u2151 08BE                       u3111 04E7  
                     u2055 0B1F                       u2160 08E7                       u2400 02A0  
                     u2320 01FF                       u3040 048F                       u2240 008C  
                     u2080 0B57                       u2161 08E6                       u2321 01FE  
                     u3025 0FCA                       u2145 08B2                       u3201 0638  
                     u3121 053B                       u3041 048E                       u2241 008B  
                     u2081 0B56                       u2065 0B34                       u2410 02B5  
                     u2330 020B                       u3202 063F                       u3122 0542  
                     u3050 0496                       u2250 0094                       u2090 0885  
                     u2170 0AD3                       u2411 02B4                       u2331 020A  
                     u3211 0665                       u3203 0646                       u3131 0557  
                     u3123 0549                       u3051 0495                       u2251 0093  
                     u2235 007C                       u2075 0B49                       u2091 0884  
                     u2171 0AD2                       u2500 0320                       u2420 02C5  
                     u2340 0212                       u3212 066C                       u3132 055E  
                     u3060 049B                       u2180 0857                       u2501 031F  
                     u2421 02C4                       u2341 0211                       u3221 0692  
                     u3213 0673                       u3141 0583                       u3133 0565  
                     u3061 049A                       u2181 0856                       u2350 0217  
                     u3310 0738                       u3230 06BC                       u3222 0699  
                     u3142 058A                       u3070 04BE                       u2270 00AF  
                     u2190 003B                       u2351 0216                       u3311 0737  
                     u3223 06A0                       u3151 059F                       u3143 0591  
                     u3071 04BD                       u2271 00AE                       u2191 003A  
                     u2600 03E5                       u2520 0347                       u2440 02DD  
                     u2360 0231                       u3400 07DB                       u3320 073E  
                     u3152 05A6                       u3080 04C5                       u2280 00B6  
                     u1800 0A07                       u2601 03E4                       u2521 0346  
                     u2441 02DC                       u2361 0230                       u3401 07DA  
                     u3321 073D                       u3305 0726                       u3241 06C8  
                     u3153 05AD                       u3081 04C4                       u2281 00B5  
                     u2265 00A1                       u1801 0A06                       u2610 03F0  
                     u2530 036D                       u2450 02E2                       u2370 0235  
                     u2290 01D3                       u3330 0752                       u3250 06E4  
                     u3242 06CF                       u3090 04CA                       u3410 0B69  
                     u2611 03EF                       u2531 036E                       u2523 0343  
                     u2515 0324                       u2451 02E1                       u2435 02C9  
                     u2371 0234                       u2291 01D2                       u3331 0751  
                     u3243 06D6                       u3235 06B7                       u3171 05D5  
                     u3091 04C9                       u3411 0B68                       u2700 0451  
                     u2620 03F8                       u2540 037F                       u2532 0373  
                     u2460 02E7                       u2380 0294                       u3340 0759  
                     u3172 05DC                       u3500 0BEB                       u3420 0B6D  
                     u1820 0A1A                       u1900 09A0                       u2701 0450  
                     u2621 03F7                       u2541 0380                       u2533 0374  
                     u2461 02E6                       u2381 0293                       u3341 0758  
                     u3261 06F0                       u3181 0602                       u3173 05E3  
                     u3165 05AF                       u3501 0BEA                       u3421 0B6C  
                     u1821 0A19                       u1901 099F                       u2710 0456  
                     u2630 03FF                       u2550 039D                       u2542 0385  
                     u2390 029F                       u3350 0763                       u3262 06F7  
                     u3182 0609                       u3510 0BF0                       u3430 0B8D  
                     u1910 09B5                       u2711 0455                       u2631 03FE  
                     u2551 039C                       u2543 0386                       u2471 02FA  
                     u2391 029D                       u3351 0762                       u3263 06FE  
                     u3255 06DF                       u3183 0610                       u3511 0BEF  
                     u3431 0B8C                       u1815 0A0A                       u2720 0464  
                     u2640 0405                       u2560 03C3                       u2480 030C  
                     u2472 0301                       u2800 0E44                       u3360 0775  
                     u3520 0C05                       u1920 09D8                       u1840 0A2F  
                     u2721 0463                       u2641 0404                       u2561 03C2  
                     u2481 030B                       u2473 0308                       u2385 0290  
                     u2801 0E43                       u3361 0774                       u1841 0A2E  
                     u1825 0A16                       u2730 046B                       u2650 040C  
                     u2570 03C8                       u2490 0310                       u2810 0E60  
                     u3370 0784                       u3290 0722                       u3530 0C15  
                     u3450 0BB0                       u1930 09EA                       u1850 096D  
                     u2731 046A                       u2651 040B                       u2571 03C7  
                     u2491 030F                       u2811 0E5F                       u3291 0721  
                     u3275 0700                       u3195 0612                       u3531 0C14  
                     u3451 0BAF                       u1931 09E9                       u1835 0A23  
                     u1851 096C                       u2740 047C                       u2660 0416  
                     u2900 0F1F                       u2820 0E7F                       u3380 07A3  
                     u3540 0C19                       u1780 09F4                       u1940 00D0  
                     u2741 047B                       u2661 0415                       u2901 0F1E  
                     u2821 0E7E                       u3381 07A2                       u3285 0717  
                     u3541 0C18                       u3525 0C00                       u3445 0BA1  
                     u1781 09F3                       u1941 00CF                       u2670 0428  
                     u2590 03E0                       u2830 0EC7                       u2750 0E08  
                     u3390 07BD                       u3470 0BD3                       u1870 0980  
                     u1950 0110                       u2671 0427                       u2591 03DF  
                     u2831 0EC6                       u2751 0E07                       u3391 07BC  
                     u3375 077F                       u3471 0BD2                       u3607 0876  
                     u1871 097F                       u1951 010F                       u2680 0437  
                     u2920 0F2F                       u2760 0E0F                       u1880 098C  
                     u1960 0122                       u2585 03D5                       u2921 0F2E  
                     u2761 0E0E                       u3385 079F                       u3465 0BC5  
                     u1881 098B                       u1865 0971                       u1961 0121  
                     u2690 0446                       u2770 0E14                       u3490 0BE5  
                     u1970 013F                       u2691 0445                       u2915 0F24  
                     u2771 0E13                       u3395 07B9                       u3491 0BE4  
                     u1795 09F8                       u1971 013E                       _PEIE 005E  
                     u2940 0F45                       u2860 0EDD                       u2780 0E38  
                     u1980 014B                       u2685 0432                       u2941 0F44  
                     u2861 0EDC                       u2845 0EC9                       u2781 0E37  
                     u3485 0BD9                       u1885 0988                       u1981 014A  
                     u3557 0C52                       u2950 0F4B                       u2790 0E3F  
                     u1990 0152                       u2951 0F4A                       u2935 0F33  
                     u2855 0ED2                       u2791 0E3E                       u1895 0994  
                     u1991 0151                       u1975 013B                       u3567 0C7D  
                     u2960 0F5F                       u2880 0EFB                       u2961 0F5E  
                     u2881 0EFA                       u3577 0CA8                       u2970 0F66  
                     u2890 0F16                       u2971 0F65                       u2891 0F15  
                     u2875 0EE1                       u3587 0865                       u2980 0F70  
                     u2981 0F6F                       u2885 0EF7                       u3597 0931  
                     u2990 0F82                       u2991 0F81               __CFG_WRT$OFF 0000  
                     _dec1 00B8                       _dec2 00B5          writeStrLCD@string 0072  
                     _main 0C25                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000            ___fldiv@new_exp 0068           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
              _writeIntLCD 000A              ___fltol@sign1 0079            __end_of___fladd 047E  
                    ?_main 0070            __end_of___fldiv 1000            __end_of___flneg 085C  
            __CFG_WDTE$OFF 0000            __end_of___flmul 07F3            __end_of___fltol 00C2  
                    _ANSEL 0188            __end_of___lldiv 0B63            __end_of___lwdiv 0A37  
          __end_of___lwmod 09A8                _writeStrLCD 09A8                      _PORTB 0006  
                    _PORTD 0008                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
          __end_of_initLCD 0967            __end_of_dpowers 081A                      _setup 0A37  
    __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 01C2  
           __CFG_MCLRE$OFF 0000            __initialization 07F3               __end_of_main 0DF7  
                   ??_main 00BC               _writeCharLCD 085C          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 0C25             __CFG_PWRTE$OFF 0000  
        writeIntLCD@buffer 0030          writeIntLCD@numero 0034                     _clcLCD 0003  
                   _cmdLCD 086B                  ??___fladd 002C                  ??___fldiv 005E  
                ??___flneg 007E                  ??___flmul 0044                  ??___fltol 0074  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 007C  
                   _float1 00AC                     _float2 00A4                     _cursor 00BB  
                ??_initLCD 0073         __size_of__Umul8_16 002A                  ??_sprintf 0023  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
  __end_of__initialization 07FC          writeFloat@decimal 0035                 ___flneg@f1 0020  
               ___fltol@f1 0070          writeFloat@initPos 0036          writeFloat@integer 0038  
           __pcstackCOMMON 0070              __end_of_setup 0A96                    ??_setup 0028  
               __pbssBANK1 00A0              ?_setCursorLCD 0073          __end_of__Umul8_16 08C6  
               __pmaintext 0C25                    ?_clcLCD 0070                    ?_cmdLCD 0070  
             ?_writeIntLCD 0070               ?_writeStrLCD 0072                  ?___xxtofl 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0800  
           ??_setCursorLCD 0074                    ___fladd 01C2              setCursorLCD@x 0073  
            setCursorLCD@y 0075                    ___fldiv 0DF7            __size_of_clcLCD 0007  
                  ___flneg 084D            __size_of_cmdLCD 0014                    ___flmul 047E  
                  ___fltol 0028                    ___lldiv 0AF6                    ___lwdiv 09EC  
                  ___lwmod 0967                    __ptext1 0A96                    __ptext2 000A  
                  __ptext3 00C2                    __ptext4 0967                    __ptext5 09EC  
                  __ptext6 0A37                    __ptext7 09A8                    __ptext8 085C  
                  __ptext9 087F                    _initLCD 092D                    _entero1 00B9  
                  _entero2 00B6                    _counter 00B7                    _dpowers 0810  
               ??___xxtofl 0074   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002F  
 __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009                    _sprintf 00C2  
                  clrloop0 17F0       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                ___fladd@grs 003B  
            ___xxtofl@sign 0078                  _TRISCbits 0087                ___fldiv@grs 006A  
              ___fldiv@rem 0063                ___flmul@grs 004A                 _writeFloat 0A96  
           __end_of_clcLCD 000A             __end_of_cmdLCD 087F       __end_of_setCursorLCD 089C  
     __size_of_writeIntLCD 001E        start_initialization 07F3       __size_of_writeStrLCD 0044  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073  
                 ??_cmdLCD 0070                  __Umul8_16 089C                  ___fladd@a 0028  
                ___fladd@b 0024                  ___fldiv@a 0056                  ___fldiv@b 005A  
                ___flmul@a 0040                  ___flmul@b 003C                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00BC          __size_of___xxtofl 00C2  
    writeCharLCD@character 0071                sprintf@flag 0027                sprintf@prec 0028  
         _I2C_Master_Start 17F7           _I2C_Master_Write 0834           ___lwdiv@dividend 0072  
                cmdLCD@cmd 0072                   ?___fladd 0024                   ?___fldiv 0056  
                 ?___flneg 0020                   ?___flmul 003C                   ?___fltol 0070  
                 ?___lldiv 0070                ?_writeFloat 0035                 ?__Umul8_16 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 0800  
                 ?_initLCD 0070              ?_writeCharLCD 0070           ___lwdiv@quotient 0075  
                 ?_sprintf 0020             __size_of_setup 005F                  clear_ram0 17EF  
    __size_of_setCursorLCD 001D                __stringbase 080F             ??_writeCharLCD 0070  
      I2C_Master_Read@temp 0074        __size_of_writeFloat 0060               _setCursorLCD 087F  
              ??__Umul8_16 0072           __size_of___fladd 02BC           __size_of___fldiv 0209  
         __size_of___flneg 000F           __size_of___flmul 0375           __size_of___fltol 009A  
         __size_of___lldiv 006D           __size_of___lwdiv 004B           __size_of___lwmod 0041  
       __end_of__stringtab 0810                 sprintf@val 0029            _I2C_Master_Init 08F5  
          _I2C_Master_Read 08C6           __size_of_initLCD 003A                   ___xxtofl 0B63  
          _I2C_Master_Wait 083E            _I2C_Master_Stop 082B            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 092D                   __ptext11 0003  
                 __ptext20 0DF7                   __ptext12 086B                   __ptext21 01C2  
                 __ptext13 08F5                   __ptext22 0834                   __ptext14 0AF6  
                 __ptext23 082B                   __ptext15 0B63                   __ptext24 17F7  
                 __ptext16 0028                   __ptext25 08C6                   __ptext17 084D  
                 __ptext26 083E                   __ptext18 047E                   __ptext19 089C  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 0100              __size_of_main 01D2  
                 _sensorF1 00B0                   _sensorF2 00A8              ??_writeIntLCD 002D  
            ??_writeStrLCD 0074   __end_of_I2C_Master_Start 1800   __end_of_I2C_Master_Write 083E  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074       __end_of_writeCharLCD 086B                  stringcode 080A  
             ??_writeFloat 0037    __end_of_I2C_Master_Init 092D    __end_of_I2C_Master_Read 08F5  
  __end_of_I2C_Master_Wait 084D    __end_of_I2C_Master_Stop 0834     __Umul8_16@multiplicand 0070  
                 sprintf@c 002C                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 080A                   stringtab 0800        __end_of_writeIntLCD 0028  
              _SSPCON2bits 0091        __end_of_writeStrLCD 09EC              ___fladd@signs 0038  
       __end_of_writeFloat 0AF6               ___fladd@aexp 0039               ___fladd@bexp 003A  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
