

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Feb 22 12:20:59 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_Config_Time_Date
   868                           	FNCALL	_main,_I2C_Master_Read
   869                           	FNCALL	_main,_I2C_Master_Start
   870                           	FNCALL	_main,_I2C_Master_Stop
   871                           	FNCALL	_main,_I2C_Master_Write
   872                           	FNCALL	_main,_Update_Current_Date_Time
   873                           	FNCALL	_main,___fladd
   874                           	FNCALL	_main,___fldiv
   875                           	FNCALL	_main,___flmul
   876                           	FNCALL	_main,___flneg
   877                           	FNCALL	_main,___fltol
   878                           	FNCALL	_main,___xxtofl
   879                           	FNCALL	_main,_setCursorLCD
   880                           	FNCALL	_main,_setup
   881                           	FNCALL	_main,_writeCharLCD
   882                           	FNCALL	_main,_writeFloat
   883                           	FNCALL	_main,_writeIntLCD
   884                           	FNCALL	_main,_writeStrLCD
   885                           	FNCALL	_writeFloat,_setCursorLCD
   886                           	FNCALL	_writeFloat,_writeCharLCD
   887                           	FNCALL	_writeFloat,_writeIntLCD
   888                           	FNCALL	_writeIntLCD,_sprintf
   889                           	FNCALL	_writeIntLCD,_writeStrLCD
   890                           	FNCALL	_sprintf,___lwdiv
   891                           	FNCALL	_sprintf,___lwmod
   892                           	FNCALL	_setup,_I2C_Master_Init
   893                           	FNCALL	_setup,_clcLCD
   894                           	FNCALL	_setup,_initLCD
   895                           	FNCALL	_setup,_setCursorLCD
   896                           	FNCALL	_setup,_writeStrLCD
   897                           	FNCALL	_writeStrLCD,_writeCharLCD
   898                           	FNCALL	_setCursorLCD,_cmdLCD
   899                           	FNCALL	_initLCD,_cmdLCD
   900                           	FNCALL	_clcLCD,_cmdLCD
   901                           	FNCALL	_I2C_Master_Init,___lldiv
   902                           	FNCALL	___flmul,__Umul8_16
   903                           	FNCALL	_Update_Current_Date_Time,_BCD_2_DEC
   904                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Read
   905                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Start
   906                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Stop
   907                           	FNCALL	_Update_Current_Date_Time,_I2C_Master_Write
   908                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   909                           	FNCALL	_BCD_2_DEC,___wmul
   910                           	FNCALL	_Config_Time_Date,_DEC_2_BCD
   911                           	FNCALL	_Config_Time_Date,_I2C_Master_Start
   912                           	FNCALL	_Config_Time_Date,_I2C_Master_Stop
   913                           	FNCALL	_Config_Time_Date,_I2C_Master_Write
   914                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   915                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   916                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   917                           	FNCALL	_DEC_2_BCD,___awdiv
   918                           	FNCALL	_DEC_2_BCD,___awmod
   919                           	FNROOT	_main
   920                           	global	_dpowers
   921                           psect	strings,class=STRING,delta=2,noexec
   922                           global __pstrings
   923                           __pstrings:
   924  1000                     stringtab:
   925  1000                     	global    __stringtab
   926                           __stringtab:
   927  1000                     ;	String table - string pointers are 1 byte each
   928                           	btfsc	(btemp+1),7
   929  1000  1BFF               	ljmp	stringcode
   930  1001  280A               	bcf	status,7
   931  1002  1383               	btfsc	(btemp+1),0
   932  1003  187F               	bsf	status,7
   933  1004  1783               	movf	indf,w
   934  1005  0800               	incf fsr
   935  1006  0A84               skipnz
   936  1007  1903               incf btemp+1
   937  1008  0AFF               	return
   938  1009  0008               stringcode:stringdir:
   939  100A                     movlw high(stringdir)
      + 100A                     stringdir:	
   940  100A  3010               movwf pclath
   941  100B  008A               movf fsr,w
   942  100C  0804               incf fsr
   943  100D  0A84               	addwf pc
   944  100E  0782               	global __stringbase
   945                           __stringbase:
   946  100F                     	retlw	0
   947  100F  3400               psect	strings
   948                           	global    __end_of__stringtab
   949                           __end_of__stringtab:
   950  1010                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   951                           	line	358
   952                           _dpowers:
   953  1010                     	retlw	01h
   954  1010  3401               	retlw	0
   955  1011  3400               
   956                           	retlw	0Ah
   957  1012  340A               	retlw	0
   958  1013  3400               
   959                           	retlw	064h
   960  1014  3464               	retlw	0
   961  1015  3400               
   962                           	retlw	0E8h
   963  1016  34E8               	retlw	03h
   964  1017  3403               
   965                           	retlw	010h
   966  1018  3410               	retlw	027h
   967  1019  3427               
   968                           	global __end_of_dpowers
   969                           __end_of_dpowers:
   970  101A                     	global	_dpowers
   971                           	global	_float1
   972                           	global	_sensorF1
   973                           	global	_year
   974                           	global	_month
   975                           	global	_date
   976                           	global	_hour
   977                           	global	_min
   978                           	global	_sec
   979                           	global	_s3
   980                           	global	_counter
   981                           	global	_dec1
   982                           	global	_entero1
   983                           	global	_adc
   984                           	global	_cursor
   985                           	global	_SSPBUF
   986                           _SSPBUF	set	0x13
   987  0013                     	global	_SSPCON
   988                           _SSPCON	set	0x14
   989  0014                     	global	_PORTD
   990                           _PORTD	set	0x8
   991  0008                     	global	_PORTB
   992                           _PORTB	set	0x6
   993  0006                     	global	_RD1
   994                           _RD1	set	0x41
   995  0041                     	global	_RD0
   996                           _RD0	set	0x40
   997  0040                     	global	_SSPIF
   998                           _SSPIF	set	0x63
   999  0063                     	global	_PEIE
  1000                           _PEIE	set	0x5E
  1001  005E                     	global	_GIE
  1002                           _GIE	set	0x5F
  1003  005F                     	global	_SSPCON2bits
  1004                           _SSPCON2bits	set	0x91
  1005  0091                     	global	_TRISCbits
  1006                           _TRISCbits	set	0x87
  1007  0087                     	global	_SSPSTAT
  1008                           _SSPSTAT	set	0x94
  1009  0094                     	global	_SSPADD
  1010                           _SSPADD	set	0x93
  1011  0093                     	global	_SSPCON2
  1012                           _SSPCON2	set	0x91
  1013  0091                     	global	_TRISD
  1014                           _TRISD	set	0x88
  1015  0088                     	global	_TRISB
  1016                           _TRISB	set	0x86
  1017  0086                     	global	_SSPIE
  1018                           _SSPIE	set	0x463
  1019  0463                     	global	_TRISC4
  1020                           _TRISC4	set	0x43C
  1021  043C                     	global	_TRISC3
  1022                           _TRISC3	set	0x43B
  1023  043B                     	global	_ANSELH
  1024                           _ANSELH	set	0x189
  1025  0189                     	global	_ANSEL
  1026                           _ANSEL	set	0x188
  1027  0188                     	
  1028                           STR_5:	
  1029  101A                     	retlw	37	;'%'
  1030  101A  3425               	retlw	100	;'d'
  1031  101B  3464               	retlw	0
  1032  101C  3400               psect	strings
  1033                           	
  1034                           STR_1:	
  1035  101D                     	retlw	32	;' '
  1036  101D  3420               	retlw	32	;' '
  1037  101E  3420               	retlw	0
  1038  101F  3400               psect	strings
  1039                           	
  1040                           STR_2:	
  1041  1020                     	retlw	83	;'S'
  1042  1020  3453               	retlw	49	;'1'
  1043  1021  3431               	retlw	0
  1044  1022  3400               psect	strings
  1045                           	
  1046                           STR_3:	
  1047  1023                     	retlw	83	;'S'
  1048  1023  3453               	retlw	50	;'2'
  1049  1024  3432               	retlw	0
  1050  1025  3400               psect	strings
  1051                           	
  1052                           STR_4:	
  1053  1026                     	retlw	83	;'S'
  1054  1026  3453               	retlw	51	;'3'
  1055  1027  3433               	retlw	0
  1056  1028  3400               psect	strings
  1057                           ; #config settings
  1058                           global __CFG_FOSC$INTRC_NOCLKOUT
  1059                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1060  0000                     global __CFG_WDTE$OFF
  1061                           __CFG_WDTE$OFF equ 0x0
  1062  0000                     global __CFG_PWRTE$OFF
  1063                           __CFG_PWRTE$OFF equ 0x0
  1064  0000                     global __CFG_MCLRE$OFF
  1065                           __CFG_MCLRE$OFF equ 0x0
  1066  0000                     global __CFG_CP$OFF
  1067                           __CFG_CP$OFF equ 0x0
  1068  0000                     global __CFG_CPD$OFF
  1069                           __CFG_CPD$OFF equ 0x0
  1070  0000                     global __CFG_BOREN$OFF
  1071                           __CFG_BOREN$OFF equ 0x0
  1072  0000                     global __CFG_IESO$OFF
  1073                           __CFG_IESO$OFF equ 0x0
  1074  0000                     global __CFG_FCMEN$OFF
  1075                           __CFG_FCMEN$OFF equ 0x0
  1076  0000                     global __CFG_LVP$OFF
  1077                           __CFG_LVP$OFF equ 0x0
  1078  0000                     global __CFG_BOR4V$BOR40V
  1079                           __CFG_BOR4V$BOR40V equ 0x0
  1080  0000                     global __CFG_WRT$OFF
  1081                           __CFG_WRT$OFF equ 0x0
  1082  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s9ms."
  1083                           	line	#
  1084                           psect cinit,class=CODE,delta=2
  1085                           global start_initialization
  1086                           start_initialization:
  1087  07F3                     
  1088                           global __initialization
  1089                           __initialization:
  1090  07F3                     psect	bssBANK1,class=BANK1,space=1,noexec
  1091                           global __pbssBANK1
  1092                           __pbssBANK1:
  1093  00A0                     _lux:
  1094  00A0                            ds      4
  1095  00A0                     
  1096                           _float2:
  1097  00A4                            ds      4
  1098  00A4                     
  1099                           _sensorF2:
  1100  00A8                            ds      4
  1101  00A8                     
  1102                           _float1:
  1103  00AC                            ds      4
  1104  00AC                     
  1105                           _sensorF1:
  1106  00B0                            ds      4
  1107  00B0                     
  1108                           _year:
  1109  00B4                            ds      1
  1110  00B4                     
  1111                           _month:
  1112  00B5                            ds      1
  1113  00B5                     
  1114                           _date:
  1115  00B6                            ds      1
  1116  00B6                     
  1117                           _hour:
  1118  00B7                            ds      1
  1119  00B7                     
  1120                           _min:
  1121  00B8                            ds      1
  1122  00B8                     
  1123                           _sec:
  1124  00B9                            ds      1
  1125  00B9                     
  1126                           _s3:
  1127  00BA                            ds      1
  1128  00BA                     
  1129                           _dec2:
  1130  00BB                            ds      1
  1131  00BB                     
  1132                           _entero2:
  1133  00BC                            ds      1
  1134  00BC                     
  1135                           _counter:
  1136  00BD                            ds      1
  1137  00BD                     
  1138                           _dec1:
  1139  00BE                            ds      1
  1140  00BE                     
  1141                           _entero1:
  1142  00BF                            ds      1
  1143  00BF                     
  1144                           _adc:
  1145  00C0                            ds      1
  1146  00C0                     
  1147                           _cursor:
  1148  00C1                            ds      1
  1149  00C1                     
  1150                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s9ms."
  1151                           	line	#
  1152                           psect clrtext,class=CODE,delta=2
  1153                           global clear_ram0
  1154                           ;	Called with FSR containing the base address, and
  1155                           ;	W with the last address+1
  1156                           clear_ram0:
  1157  1434                     	clrwdt			;clear the watchdog before getting into this loop
  1158  1434  0064               clrloop0:
  1159  1435                     	clrf	indf		;clear RAM location pointed to by FSR
  1160  1435  0180               	incf	fsr,f		;increment pointer
  1161  1436  0A84               	xorwf	fsr,w		;XOR with final address
  1162  1437  0604               	btfsc	status,2	;have we reached the end yet?
  1163  1438  1903               	retlw	0		;all done for this memory range, return
  1164  1439  3400               	xorwf	fsr,w		;XOR again to restore value
  1165  143A  0604               	goto	clrloop0		;do the next byte
  1166  143B  2C35               
  1167                           ; Clear objects allocated to BANK1
  1168                           psect cinit,class=CODE,delta=2,merge=1
  1169                           	bcf	status, 7	;select IRP bank0
  1170  07F3  1383               	movlw	low(__pbssBANK1)
  1171  07F4  30A0               	movwf	fsr
  1172  07F5  0084               	movlw	low((__pbssBANK1)+022h)
  1173  07F6  30C2               	fcall	clear_ram0
  1174  07F7  160A  118A  2434  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1175                           global end_of_initialization,__end_of__initialization
  1176                           
  1177                           ;End of C runtime variable initialization code
  1178                           
  1179                           end_of_initialization:
  1180  07FC                     __end_of__initialization:
  1181  07FC                     clrf status
  1182  07FC  0183               ljmp _main	;jump to C main() function
  1183  07FD  120A  158A  2BF8   psect	cstackBANK1,class=BANK1,space=1,noexec
  1184                           global __pcstackBANK1
  1185                           __pcstackBANK1:
  1186  00C2                     ??_main:	; 1 bytes @ 0x0
  1187  00C2                     	ds	4
  1188  00C2                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1189                           global __pcstackCOMMON
  1190                           __pcstackCOMMON:
  1191  0070                     ?_setup:	; 1 bytes @ 0x0
  1192  0070                     ?_Config_Time_Date:	; 1 bytes @ 0x0
  1193  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1194  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1195  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1196  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1197  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1198  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1199  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1200  0070                     ?_Update_Current_Date_Time:	; 1 bytes @ 0x0
  1201  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1202  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1203  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1204  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1205  0070                     ?_main:	; 1 bytes @ 0x0
  1206  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1207  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1208  0070                     	global	?_I2C_Master_Read
  1209                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1210  0070                     	global	?__Umul8_16
  1211                           ?__Umul8_16:	; 2 bytes @ 0x0
  1212  0070                     	global	?___wmul
  1213                           ?___wmul:	; 2 bytes @ 0x0
  1214  0070                     	global	?___awdiv
  1215                           ?___awdiv:	; 2 bytes @ 0x0
  1216  0070                     	global	?___awmod
  1217                           ?___awmod:	; 2 bytes @ 0x0
  1218  0070                     	global	?___lwdiv
  1219                           ?___lwdiv:	; 2 bytes @ 0x0
  1220  0070                     	global	?___lldiv
  1221                           ?___lldiv:	; 4 bytes @ 0x0
  1222  0070                     	global	?___fltol
  1223                           ?___fltol:	; 4 bytes @ 0x0
  1224  0070                     	global	?___xxtofl
  1225                           ?___xxtofl:	; 4 bytes @ 0x0
  1226  0070                     	global	__Umul8_16@multiplicand
  1227                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1228  0070                     	global	I2C_Master_Read@a
  1229                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1230  0070                     	global	___wmul@multiplier
  1231                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1232  0070                     	global	___awdiv@divisor
  1233                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1234  0070                     	global	___awmod@divisor
  1235                           ___awmod@divisor:	; 2 bytes @ 0x0
  1236  0070                     	global	___lwdiv@divisor
  1237                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1238  0070                     	global	___lldiv@divisor
  1239                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1240  0070                     	global	___fltol@f1
  1241                           ___fltol@f1:	; 4 bytes @ 0x0
  1242  0070                     	global	___xxtofl@val
  1243                           ___xxtofl@val:	; 4 bytes @ 0x0
  1244  0070                     	ds	1
  1245  0070                     	global	writeCharLCD@character
  1246                           writeCharLCD@character:	; 1 bytes @ 0x1
  1247  0071                     	ds	1
  1248  0071                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1249  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1250  0072                     ??__Umul8_16:	; 1 bytes @ 0x2
  1251  0072                     	global	cmdLCD@cmd
  1252                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1253  0072                     	global	writeStrLCD@string
  1254                           writeStrLCD@string:	; 2 bytes @ 0x2
  1255  0072                     	global	___wmul@multiplicand
  1256                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1257  0072                     	global	___awdiv@dividend
  1258                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1259  0072                     	global	___awmod@dividend
  1260                           ___awmod@dividend:	; 2 bytes @ 0x2
  1261  0072                     	global	___lwdiv@dividend
  1262                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1263  0072                     	ds	1
  1264  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1265  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1266  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1267  0073                     	global	setCursorLCD@x
  1268                           setCursorLCD@x:	; 1 bytes @ 0x3
  1269  0073                     	ds	1
  1270  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1271  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1272  0074                     ??___wmul:	; 1 bytes @ 0x4
  1273  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1274  0074                     ??___awmod:	; 1 bytes @ 0x4
  1275  0074                     ??___fltol:	; 1 bytes @ 0x4
  1276  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1277  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1278  0074                     	global	I2C_Master_Read@temp
  1279                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1280  0074                     	global	___wmul@product
  1281                           ___wmul@product:	; 2 bytes @ 0x4
  1282  0074                     	global	__Umul8_16@product
  1283                           __Umul8_16@product:	; 2 bytes @ 0x4
  1284  0074                     	global	___lldiv@dividend
  1285                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1286  0074                     	ds	1
  1287  0074                     	global	setCursorLCD@y
  1288                           setCursorLCD@y:	; 1 bytes @ 0x5
  1289  0075                     	global	___awdiv@counter
  1290                           ___awdiv@counter:	; 1 bytes @ 0x5
  1291  0075                     	global	___awmod@counter
  1292                           ___awmod@counter:	; 1 bytes @ 0x5
  1293  0075                     	global	___lwdiv@quotient
  1294                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1295  0075                     	ds	1
  1296  0075                     	global	?_BCD_2_DEC
  1297                           ?_BCD_2_DEC:	; 2 bytes @ 0x6
  1298  0076                     	global	___awdiv@sign
  1299                           ___awdiv@sign:	; 1 bytes @ 0x6
  1300  0076                     	global	___awmod@sign
  1301                           ___awmod@sign:	; 1 bytes @ 0x6
  1302  0076                     	global	BCD_2_DEC@to_convert
  1303                           BCD_2_DEC@to_convert:	; 2 bytes @ 0x6
  1304  0076                     	global	__Umul8_16@word_mpld
  1305                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1306  0076                     	ds	1
  1307  0076                     	global	___lwdiv@counter
  1308                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1309  0077                     	global	writeStrLCD@cont
  1310                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1311  0077                     	global	___awdiv@quotient
  1312                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1313  0077                     	ds	1
  1314  0077                     ??_BCD_2_DEC:	; 1 bytes @ 0x8
  1315  0078                     ??___lldiv:	; 1 bytes @ 0x8
  1316  0078                     	global	?___lwmod
  1317                           ?___lwmod:	; 2 bytes @ 0x8
  1318  0078                     	global	___xxtofl@sign
  1319                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1320  0078                     	global	__Umul8_16@multiplier
  1321                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1322  0078                     	global	___lwmod@divisor
  1323                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1324  0078                     	ds	1
  1325  0078                     	global	?_DEC_2_BCD
  1326                           ?_DEC_2_BCD:	; 2 bytes @ 0x9
  1327  0079                     	global	___fltol@sign1
  1328                           ___fltol@sign1:	; 1 bytes @ 0x9
  1329  0079                     	global	___xxtofl@exp
  1330                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1331  0079                     	global	DEC_2_BCD@to_convert
  1332                           DEC_2_BCD@to_convert:	; 2 bytes @ 0x9
  1333  0079                     	global	___lldiv@quotient
  1334                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1335  0079                     	ds	1
  1336  0079                     	global	___fltol@exp1
  1337                           ___fltol@exp1:	; 1 bytes @ 0xA
  1338  007A                     	global	___lwmod@dividend
  1339                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1340  007A                     	global	___xxtofl@arg
  1341                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1342  007A                     	ds	1
  1343  007A                     ??_DEC_2_BCD:	; 1 bytes @ 0xB
  1344  007B                     	ds	1
  1345  007B                     ??___lwmod:	; 1 bytes @ 0xC
  1346  007C                     	ds	1
  1347  007C                     ??_I2C_Master_Write:	; 1 bytes @ 0xD
  1348  007D                     ??_Update_Current_Date_Time:	; 1 bytes @ 0xD
  1349  007D                     	global	___lldiv@counter
  1350                           ___lldiv@counter:	; 1 bytes @ 0xD
  1351  007D                     	global	___lwmod@counter
  1352                           ___lwmod@counter:	; 1 bytes @ 0xD
  1353  007D                     	ds	1
  1354  007D                     ??___flneg:	; 1 bytes @ 0xE
  1355  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1356                           global __pcstackBANK0
  1357                           __pcstackBANK0:
  1358  0020                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1359  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1360  0020                     	global	?_sprintf
  1361                           ?_sprintf:	; 2 bytes @ 0x0
  1362  0020                     	global	?___flneg
  1363                           ?___flneg:	; 4 bytes @ 0x0
  1364  0020                     	global	sprintf@f
  1365                           sprintf@f:	; 1 bytes @ 0x0
  1366  0020                     	global	I2C_Master_Write@d
  1367                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1368  0020                     	global	I2C_Master_Init@c
  1369                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1370  0020                     	global	___flneg@f1
  1371                           ___flneg@f1:	; 4 bytes @ 0x0
  1372  0020                     	ds	2
  1373  0020                     ??_Config_Time_Date:	; 1 bytes @ 0x2
  1374  0022                     	ds	1
  1375  0022                     ??_sprintf:	; 1 bytes @ 0x3
  1376  0023                     	ds	1
  1377  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1378  0024                     	global	?___fladd
  1379                           ?___fladd:	; 4 bytes @ 0x4
  1380  0024                     	global	___fladd@b
  1381                           ___fladd@b:	; 4 bytes @ 0x4
  1382  0024                     	ds	2
  1383  0024                     	global	sprintf@ap
  1384                           sprintf@ap:	; 1 bytes @ 0x6
  1385  0026                     	ds	1
  1386  0026                     	global	sprintf@flag
  1387                           sprintf@flag:	; 1 bytes @ 0x7
  1388  0027                     	ds	1
  1389  0027                     ??_setup:	; 1 bytes @ 0x8
  1390  0028                     	global	sprintf@prec
  1391                           sprintf@prec:	; 1 bytes @ 0x8
  1392  0028                     	global	___fladd@a
  1393                           ___fladd@a:	; 4 bytes @ 0x8
  1394  0028                     	ds	1
  1395  0028                     	global	sprintf@val
  1396                           sprintf@val:	; 2 bytes @ 0x9
  1397  0029                     	ds	2
  1398  0029                     	global	sprintf@sp
  1399                           sprintf@sp:	; 1 bytes @ 0xB
  1400  002B                     	ds	1
  1401  002B                     ??___fladd:	; 1 bytes @ 0xC
  1402  002C                     	global	sprintf@c
  1403                           sprintf@c:	; 1 bytes @ 0xC
  1404  002C                     	ds	1
  1405  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1406  002D                     	ds	3
  1407  002D                     	global	writeIntLCD@buffer
  1408                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1409  0030                     	ds	4
  1410  0030                     	global	writeIntLCD@numero
  1411                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1412  0034                     	ds	1
  1413  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1414  0035                     	global	writeFloat@decimal
  1415                           writeFloat@decimal:	; 1 bytes @ 0x15
  1416  0035                     	ds	1
  1417  0035                     	global	writeFloat@initPos
  1418                           writeFloat@initPos:	; 1 bytes @ 0x16
  1419  0036                     	ds	1
  1420  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1421  0037                     	ds	1
  1422  0037                     	global	writeFloat@integer
  1423                           writeFloat@integer:	; 1 bytes @ 0x18
  1424  0038                     	global	___fladd@signs
  1425                           ___fladd@signs:	; 1 bytes @ 0x18
  1426  0038                     	ds	1
  1427  0038                     	global	___fladd@aexp
  1428                           ___fladd@aexp:	; 1 bytes @ 0x19
  1429  0039                     	ds	1
  1430  0039                     	global	___fladd@bexp
  1431                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1432  003A                     	ds	1
  1433  003A                     	global	___fladd@grs
  1434                           ___fladd@grs:	; 1 bytes @ 0x1B
  1435  003B                     	ds	1
  1436  003B                     	global	?___flmul
  1437                           ?___flmul:	; 4 bytes @ 0x1C
  1438  003C                     	global	___flmul@b
  1439                           ___flmul@b:	; 4 bytes @ 0x1C
  1440  003C                     	ds	4
  1441  003C                     	global	___flmul@a
  1442                           ___flmul@a:	; 4 bytes @ 0x20
  1443  0040                     	ds	4
  1444  0040                     ??___flmul:	; 1 bytes @ 0x24
  1445  0044                     	ds	5
  1446  0044                     	global	___flmul@sign
  1447                           ___flmul@sign:	; 1 bytes @ 0x29
  1448  0049                     	ds	1
  1449  0049                     	global	___flmul@grs
  1450                           ___flmul@grs:	; 4 bytes @ 0x2A
  1451  004A                     	ds	4
  1452  004A                     	global	___flmul@aexp
  1453                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1454  004E                     	ds	1
  1455  004E                     	global	___flmul@bexp
  1456                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1457  004F                     	ds	1
  1458  004F                     	global	___flmul@prod
  1459                           ___flmul@prod:	; 4 bytes @ 0x30
  1460  0050                     	ds	4
  1461  0050                     	global	___flmul@temp
  1462                           ___flmul@temp:	; 2 bytes @ 0x34
  1463  0054                     	ds	2
  1464  0054                     	global	?___fldiv
  1465                           ?___fldiv:	; 4 bytes @ 0x36
  1466  0056                     	global	___fldiv@a
  1467                           ___fldiv@a:	; 4 bytes @ 0x36
  1468  0056                     	ds	4
  1469  0056                     	global	___fldiv@b
  1470                           ___fldiv@b:	; 4 bytes @ 0x3A
  1471  005A                     	ds	4
  1472  005A                     ??___fldiv:	; 1 bytes @ 0x3E
  1473  005E                     	ds	5
  1474  005E                     	global	___fldiv@rem
  1475                           ___fldiv@rem:	; 4 bytes @ 0x43
  1476  0063                     	ds	4
  1477  0063                     	global	___fldiv@sign
  1478                           ___fldiv@sign:	; 1 bytes @ 0x47
  1479  0067                     	ds	1
  1480  0067                     	global	___fldiv@new_exp
  1481                           ___fldiv@new_exp:	; 2 bytes @ 0x48
  1482  0068                     	ds	2
  1483  0068                     	global	___fldiv@grs
  1484                           ___fldiv@grs:	; 4 bytes @ 0x4A
  1485  006A                     	ds	4
  1486  006A                     	global	___fldiv@bexp
  1487                           ___fldiv@bexp:	; 1 bytes @ 0x4E
  1488  006E                     	ds	1
  1489  006E                     	global	___fldiv@aexp
  1490                           ___fldiv@aexp:	; 1 bytes @ 0x4F
  1491  006F                     	ds	1
  1492  006F                     ;!
  1493                           ;!Data Sizes:
  1494                           ;!    Strings     15
  1495                           ;!    Constant    10
  1496                           ;!    Data        0
  1497                           ;!    BSS         34
  1498                           ;!    Persistent  0
  1499                           ;!    Stack       0
  1500                           ;!
  1501                           ;!Auto Spaces:
  1502                           ;!    Space          Size  Autos    Used
  1503                           ;!    COMMON           14     14      14
  1504                           ;!    BANK0            80     80      80
  1505                           ;!    BANK1            80      4      38
  1506                           ;!    BANK3            96      0       0
  1507                           ;!    BANK2            96      0       0
  1508                           
  1509                           ;!
  1510                           ;!Pointer List with Targets:
  1511                           ;!
  1512                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1513                           ;!		 -> STR_5(CODE[3]), 
  1514                           ;!
  1515                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
  1516                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1517                           ;!
  1518                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1519                           ;!		 -> ?_sprintf(BANK0[2]), 
  1520                           ;!
  1521                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
  1522                           ;!		 -> writeIntLCD@buffer(BANK0[4]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
  1523                           ;!		 -> STR_1(CODE[3]), 
  1524                           ;!
  1525                           
  1526                           
  1527                           ;!
  1528                           ;!Critical Paths under _main in COMMON
  1529                           ;!
  1530                           ;!    _main->_Update_Current_Date_Time
  1531                           ;!    _main->___xxtofl
  1532                           ;!    _sprintf->___lwmod
  1533                           ;!    ___lwmod->___lwdiv
  1534                           ;!    _writeStrLCD->_writeCharLCD
  1535                           ;!    _setCursorLCD->_cmdLCD
  1536                           ;!    _initLCD->_cmdLCD
  1537                           ;!    _clcLCD->_cmdLCD
  1538                           ;!    _I2C_Master_Init->___lldiv
  1539                           ;!    ___flneg->___xxtofl
  1540                           ;!    ___flmul->___xxtofl
  1541                           ;!    ___fldiv->___xxtofl
  1542                           ;!    ___fladd->___xxtofl
  1543                           ;!    _BCD_2_DEC->_I2C_Master_Read
  1544                           ;!    _BCD_2_DEC->___wmul
  1545                           ;!    _Config_Time_Date->_DEC_2_BCD
  1546                           ;!    _I2C_Master_Write->_DEC_2_BCD
  1547                           ;!    _DEC_2_BCD->___awdiv
  1548                           ;!
  1549                           ;!Critical Paths under _main in BANK0
  1550                           ;!
  1551                           ;!    _main->___fldiv
  1552                           ;!    _writeFloat->_writeIntLCD
  1553                           ;!    _writeIntLCD->_sprintf
  1554                           ;!    _setup->_I2C_Master_Init
  1555                           ;!    ___flmul->___fladd
  1556                           ;!    ___fldiv->___flmul
  1557                           ;!    ___fladd->___flneg
  1558                           ;!    _Update_Current_Date_Time->_I2C_Master_Write
  1559                           ;!    _Config_Time_Date->_I2C_Master_Write
  1560                           ;!
  1561                           ;!Critical Paths under _main in BANK1
  1562                           ;!
  1563                           ;!    None.
  1564                           ;!
  1565                           ;!Critical Paths under _main in BANK3
  1566                           ;!
  1567                           ;!    None.
  1568                           ;!
  1569                           ;!Critical Paths under _main in BANK2
  1570                           ;!
  1571                           ;!    None.
  1572                           
  1573 ;;
  1574 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1575 ;;
  1576                           
  1577                           ;!
  1578                           ;!Call Graph Tables:
  1579                           ;!
  1580                           ;! ---------------------------------------------------------------------------------
  1581                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1582                           ;! ---------------------------------------------------------------------------------
  1583                           ;! (0) _main                                                 4     4      0   23808
  1584                           ;!                                              0 BANK1      4     4      0
  1585                           ;!                   _Config_Time_Date
  1586                           ;!                    _I2C_Master_Read
  1587                           ;!                   _I2C_Master_Start
  1588                           ;!                    _I2C_Master_Stop
  1589                           ;!                   _I2C_Master_Write
  1590                           ;!           _Update_Current_Date_Time
  1591                           ;!                            ___fladd
  1592                           ;!                            ___fldiv
  1593                           ;!                            ___flmul
  1594                           ;!                            ___flneg
  1595                           ;!                            ___fltol
  1596                           ;!                           ___xxtofl
  1597                           ;!                       _setCursorLCD
  1598                           ;!                              _setup
  1599                           ;!                       _writeCharLCD
  1600                           ;!                         _writeFloat
  1601                           ;!                        _writeIntLCD
  1602                           ;!                        _writeStrLCD
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (1) _writeFloat                                           4     2      2    2879
  1605                           ;!                                             21 BANK0      4     2      2
  1606                           ;!                       _setCursorLCD
  1607                           ;!                       _writeCharLCD
  1608                           ;!                        _writeIntLCD
  1609                           ;! ---------------------------------------------------------------------------------
  1610                           ;! (1) _writeIntLCD                                          8     8      0    1779
  1611                           ;!                                             13 BANK0      8     8      0
  1612                           ;!                            _sprintf
  1613                           ;!                        _writeStrLCD
  1614                           ;! ---------------------------------------------------------------------------------
  1615                           ;! (2) _sprintf                                             21    18      3    1211
  1616                           ;!                                              0 BANK0     13    10      3
  1617                           ;!                            ___lwdiv
  1618                           ;!                            ___lwmod
  1619                           ;! ---------------------------------------------------------------------------------
  1620                           ;! (3) ___lwmod                                              6     2      4     311
  1621                           ;!                                              8 COMMON     6     2      4
  1622                           ;!                            ___lwdiv (ARG)
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (3) ___lwdiv                                              8     4      4     314
  1625                           ;!                                              0 COMMON     8     4      4
  1626                           ;! ---------------------------------------------------------------------------------
  1627                           ;! (1) _setup                                                1     1      0    1720
  1628                           ;!                                              8 BANK0      1     1      0
  1629                           ;!                    _I2C_Master_Init
  1630                           ;!                             _clcLCD
  1631                           ;!                            _initLCD
  1632                           ;!                       _setCursorLCD
  1633                           ;!                        _writeStrLCD
  1634                           ;! ---------------------------------------------------------------------------------
  1635                           ;! (1) _writeStrLCD                                          7     5      2     492
  1636                           ;!                                              2 COMMON     7     5      2
  1637                           ;!                       _writeCharLCD
  1638                           ;! ---------------------------------------------------------------------------------
  1639                           ;! (2) _writeCharLCD                                         2     2      0      22
  1640                           ;!                                              0 COMMON     2     2      0
  1641                           ;! ---------------------------------------------------------------------------------
  1642                           ;! (2) _setCursorLCD                                         3     2      1     772
  1643                           ;!                                              3 COMMON     3     2      1
  1644                           ;!                             _cmdLCD
  1645                           ;! ---------------------------------------------------------------------------------
  1646                           ;! (2) _initLCD                                              2     2      0      22
  1647                           ;!                                              3 COMMON     2     2      0
  1648                           ;!                             _cmdLCD
  1649                           ;! ---------------------------------------------------------------------------------
  1650                           ;! (2) _clcLCD                                               0     0      0      22
  1651                           ;!                             _cmdLCD
  1652                           ;! ---------------------------------------------------------------------------------
  1653                           ;! (3) _cmdLCD                                               3     3      0      22
  1654                           ;!                                              0 COMMON     3     3      0
  1655                           ;! ---------------------------------------------------------------------------------
  1656                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1657                           ;!                                              0 BANK0      8     4      4
  1658                           ;!                            ___lldiv
  1659                           ;! ---------------------------------------------------------------------------------
  1660                           ;! (3) ___lldiv                                             14     6      8     314
  1661                           ;!                                              0 COMMON    14     6      8
  1662                           ;! ---------------------------------------------------------------------------------
  1663                           ;! (1) ___xxtofl                                            14    10      4     474
  1664                           ;!                                              0 COMMON    14    10      4
  1665                           ;! ---------------------------------------------------------------------------------
  1666                           ;! (1) ___fltol                                             11     7      4     381
  1667                           ;!                                              0 COMMON    11     7      4
  1668                           ;! ---------------------------------------------------------------------------------
  1669                           ;! (1) ___flneg                                              4     0      4     121
  1670                           ;!                                              0 BANK0      4     0      4
  1671                           ;!                           ___xxtofl (ARG)
  1672                           ;! ---------------------------------------------------------------------------------
  1673                           ;! (1) ___flmul                                             26    18      8    2569
  1674                           ;!                                             28 BANK0     26    18      8
  1675                           ;!                          __Umul8_16
  1676                           ;!                            ___fladd (ARG)
  1677                           ;!                            ___flneg (ARG)
  1678                           ;!                           ___xxtofl (ARG)
  1679                           ;! ---------------------------------------------------------------------------------
  1680                           ;! (2) __Umul8_16                                            9     7      2     799
  1681                           ;!                                              0 COMMON     9     7      2
  1682                           ;! ---------------------------------------------------------------------------------
  1683                           ;! (1) ___fldiv                                             26    18      8    1273
  1684                           ;!                                             54 BANK0     26    18      8
  1685                           ;!                            ___flmul (ARG)
  1686                           ;!                           ___xxtofl (ARG)
  1687                           ;! ---------------------------------------------------------------------------------
  1688                           ;! (1) ___fladd                                             24    16      8    2262
  1689                           ;!                                              4 BANK0     24    16      8
  1690                           ;!                            ___flneg (ARG)
  1691                           ;!                           ___xxtofl (ARG)
  1692                           ;! ---------------------------------------------------------------------------------
  1693                           ;! (1) _Update_Current_Date_Time                             1     1      0    3395
  1694                           ;!                                             13 COMMON     1     1      0
  1695                           ;!                          _BCD_2_DEC
  1696                           ;!                    _I2C_Master_Read
  1697                           ;!                   _I2C_Master_Start
  1698                           ;!                    _I2C_Master_Stop
  1699                           ;!                   _I2C_Master_Write
  1700                           ;! ---------------------------------------------------------------------------------
  1701                           ;! (2) _I2C_Master_Read                                      6     4      2     881
  1702                           ;!                                              0 COMMON     6     4      2
  1703                           ;!                    _I2C_Master_Wait
  1704                           ;! ---------------------------------------------------------------------------------
  1705                           ;! (2) _BCD_2_DEC                                            4     2      2     820
  1706                           ;!                                              6 COMMON     4     2      2
  1707                           ;!                    _I2C_Master_Read (ARG)
  1708                           ;!                             ___wmul
  1709                           ;! ---------------------------------------------------------------------------------
  1710                           ;! (3) ___wmul                                               6     2      4     244
  1711                           ;!                                              0 COMMON     6     2      4
  1712                           ;! ---------------------------------------------------------------------------------
  1713                           ;! (1) _Config_Time_Date                                     2     2      0    3094
  1714                           ;!                                              2 BANK0      2     2      0
  1715                           ;!                          _DEC_2_BCD
  1716                           ;!                   _I2C_Master_Start
  1717                           ;!                    _I2C_Master_Stop
  1718                           ;!                   _I2C_Master_Write
  1719                           ;! ---------------------------------------------------------------------------------
  1720                           ;! (2) _I2C_Master_Write                                     2     0      2    1694
  1721                           ;!                                              0 BANK0      2     0      2
  1722                           ;!                          _DEC_2_BCD (ARG)
  1723                           ;!                    _I2C_Master_Wait
  1724                           ;! ---------------------------------------------------------------------------------
  1725                           ;! (2) _I2C_Master_Stop                                      0     0      0       0
  1726                           ;!                    _I2C_Master_Wait
  1727                           ;! ---------------------------------------------------------------------------------
  1728                           ;! (2) _I2C_Master_Start                                     0     0      0       0
  1729                           ;!                    _I2C_Master_Wait
  1730                           ;! ---------------------------------------------------------------------------------
  1731                           ;! (3) _I2C_Master_Wait                                      0     0      0       0
  1732                           ;! ---------------------------------------------------------------------------------
  1733                           ;! (2) _DEC_2_BCD                                            4     2      2    1400
  1734                           ;!                                              9 COMMON     4     2      2
  1735                           ;!                            ___awdiv
  1736                           ;!                            ___awmod
  1737                           ;! ---------------------------------------------------------------------------------
  1738                           ;! (3) ___awmod                                              7     3      4     448
  1739                           ;!                                              0 COMMON     7     3      4
  1740                           ;! ---------------------------------------------------------------------------------
  1741                           ;! (3) ___awdiv                                              9     5      4     452
  1742                           ;!                                              0 COMMON     9     5      4
  1743                           ;! ---------------------------------------------------------------------------------
  1744                           ;! Estimated maximum stack depth 3
  1745                           ;! ---------------------------------------------------------------------------------
  1746                           ;!
  1747                           ;! Call Graph Graphs:
  1748                           ;!
  1749                           ;! _main (ROOT)
  1750                           ;!   _Config_Time_Date
  1751                           ;!     _DEC_2_BCD
  1752                           ;!       ___awdiv
  1753                           ;!       ___awmod
  1754                           ;!     _I2C_Master_Start
  1755                           ;!       _I2C_Master_Wait
  1756                           ;!     _I2C_Master_Stop
  1757                           ;!       _I2C_Master_Wait
  1758                           ;!     _I2C_Master_Write
  1759                           ;!       _DEC_2_BCD (ARG)
  1760                           ;!         ___awdiv
  1761                           ;!         ___awmod
  1762                           ;!       _I2C_Master_Wait (ARG)
  1763                           ;!   _I2C_Master_Read
  1764                           ;!     _I2C_Master_Wait
  1765                           ;!   _I2C_Master_Start
  1766                           ;!     _I2C_Master_Wait
  1767                           ;!   _I2C_Master_Stop
  1768                           ;!     _I2C_Master_Wait
  1769                           ;!   _I2C_Master_Write
  1770                           ;!     _DEC_2_BCD (ARG)
  1771                           ;!       ___awdiv
  1772                           ;!       ___awmod
  1773                           ;!     _I2C_Master_Wait (ARG)
  1774                           ;!   _Update_Current_Date_Time
  1775                           ;!     _BCD_2_DEC
  1776                           ;!       _I2C_Master_Read (ARG)
  1777                           ;!         _I2C_Master_Wait
  1778                           ;!       ___wmul (ARG)
  1779                           ;!     _I2C_Master_Read
  1780                           ;!       _I2C_Master_Wait
  1781                           ;!     _I2C_Master_Start
  1782                           ;!       _I2C_Master_Wait
  1783                           ;!     _I2C_Master_Stop
  1784                           ;!       _I2C_Master_Wait
  1785                           ;!     _I2C_Master_Write
  1786                           ;!       _DEC_2_BCD (ARG)
  1787                           ;!         ___awdiv
  1788                           ;!         ___awmod
  1789                           ;!       _I2C_Master_Wait (ARG)
  1790                           ;!   ___fladd
  1791                           ;!     ___flneg (ARG)
  1792                           ;!       ___xxtofl (ARG)
  1793                           ;!     ___xxtofl (ARG)
  1794                           ;!   ___fldiv
  1795                           ;!     ___flmul (ARG)
  1796                           ;!       __Umul8_16
  1797                           ;!       ___fladd (ARG)
  1798                           ;!         ___flneg (ARG)
  1799                           ;!           ___xxtofl (ARG)
  1800                           ;!         ___xxtofl (ARG)
  1801                           ;!       ___flneg (ARG)
  1802                           ;!         ___xxtofl (ARG)
  1803                           ;!       ___xxtofl (ARG)
  1804                           ;!     ___xxtofl (ARG)
  1805                           ;!   ___flmul
  1806                           ;!     __Umul8_16
  1807                           ;!     ___fladd (ARG)
  1808                           ;!       ___flneg (ARG)
  1809                           ;!         ___xxtofl (ARG)
  1810                           ;!       ___xxtofl (ARG)
  1811                           ;!     ___flneg (ARG)
  1812                           ;!       ___xxtofl (ARG)
  1813                           ;!     ___xxtofl (ARG)
  1814                           ;!   ___flneg
  1815                           ;!     ___xxtofl (ARG)
  1816                           ;!   ___fltol
  1817                           ;!   ___xxtofl
  1818                           ;!   _setCursorLCD
  1819                           ;!     _cmdLCD
  1820                           ;!   _setup
  1821                           ;!     _I2C_Master_Init
  1822                           ;!       ___lldiv
  1823                           ;!     _clcLCD
  1824                           ;!       _cmdLCD
  1825                           ;!     _initLCD
  1826                           ;!       _cmdLCD
  1827                           ;!     _setCursorLCD
  1828                           ;!       _cmdLCD
  1829                           ;!     _writeStrLCD
  1830                           ;!       _writeCharLCD
  1831                           ;!   _writeCharLCD
  1832                           ;!   _writeFloat
  1833                           ;!     _setCursorLCD
  1834                           ;!       _cmdLCD
  1835                           ;!     _writeCharLCD
  1836                           ;!     _writeIntLCD
  1837                           ;!       _sprintf
  1838                           ;!         ___lwdiv
  1839                           ;!         ___lwmod
  1840                           ;!           ___lwdiv (ARG)
  1841                           ;!       _writeStrLCD
  1842                           ;!         _writeCharLCD
  1843                           ;!   _writeIntLCD
  1844                           ;!     _sprintf
  1845                           ;!       ___lwdiv
  1846                           ;!       ___lwmod
  1847                           ;!         ___lwdiv (ARG)
  1848                           ;!     _writeStrLCD
  1849                           ;!       _writeCharLCD
  1850                           ;!   _writeStrLCD
  1851                           ;!     _writeCharLCD
  1852                           ;!
  1853                           
  1854                           ;! Address spaces:
  1855                           
  1856                           ;!Name               Size   Autos  Total    Cost      Usage
  1857                           ;!BITCOMMON            E      0       0       0        0.0%
  1858                           ;!EEDATA             100      0       0       0        0.0%
  1859                           ;!NULL                 0      0       0       0        0.0%
  1860                           ;!CODE                 0      0       0       0        0.0%
  1861                           ;!COMMON               E      E       E       1      100.0%
  1862                           ;!BITSFR0              0      0       0       1        0.0%
  1863                           ;!SFR0                 0      0       0       1        0.0%
  1864                           ;!BITSFR1              0      0       0       2        0.0%
  1865                           ;!SFR1                 0      0       0       2        0.0%
  1866                           ;!STACK                0      0       0       2        0.0%
  1867                           ;!ABS                  0      0      84       3        0.0%
  1868                           ;!BITBANK0            50      0       0       4        0.0%
  1869                           ;!BITSFR3              0      0       0       4        0.0%
  1870                           ;!SFR3                 0      0       0       4        0.0%
  1871                           ;!BANK0               50     50      50       5      100.0%
  1872                           ;!BITSFR2              0      0       0       5        0.0%
  1873                           ;!SFR2                 0      0       0       5        0.0%
  1874                           ;!BITBANK1            50      0       0       6        0.0%
  1875                           ;!BANK1               50      4      26       7       47.5%
  1876                           ;!BITBANK3            60      0       0       8        0.0%
  1877                           ;!BANK3               60      0       0       9        0.0%
  1878                           ;!BITBANK2            60      0       0      10        0.0%
  1879                           ;!BANK2               60      0       0      11        0.0%
  1880                           ;!DATA                 0      0      84      12        0.0%
  1881                           
  1882                           	global	_main
  1883                           
  1884 ;; *************** function _main *****************
  1885 ;; Defined at:
  1886 ;;		line 65 in file "mainM.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : B00/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1900 ;;      Params:         0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0
  1902 ;;      Temps:          0       0       4       0       0
  1903 ;;      Totals:         0       0       4       0       0
  1904 ;;Total ram usage:        4 bytes
  1905 ;; Hardware stack levels required when called:    4
  1906 ;; This function calls:
  1907 ;;		_Config_Time_Date
  1908 ;;		_I2C_Master_Read
  1909 ;;		_I2C_Master_Start
  1910 ;;		_I2C_Master_Stop
  1911 ;;		_I2C_Master_Write
  1912 ;;		_Update_Current_Date_Time
  1913 ;;		___fladd
  1914 ;;		___fldiv
  1915 ;;		___flmul
  1916 ;;		___flneg
  1917 ;;		___fltol
  1918 ;;		___xxtofl
  1919 ;;		_setCursorLCD
  1920 ;;		_setup
  1921 ;;		_writeCharLCD
  1922 ;;		_writeFloat
  1923 ;;		_writeIntLCD
  1924 ;;		_writeStrLCD
  1925 ;; This function is called by:
  1926 ;;		Startup code after reset
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1930                           	file	"mainM.c"
  1931                           	line	65
  1932                           global __pmaintext
  1933                           __pmaintext:	;psect for function _main
  1934  0BF8                     psect	maintext
  1935                           	file	"mainM.c"
  1936                           	line	65
  1937                           	global	__size_of_main
  1938                           	__size_of_main	equ	__end_of_main-_main
  1939  01FF                     	
  1940                           _main:	
  1941  0BF8                     ;incstack = 0
  1942                           	opt	stack 4
  1943                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1944                           	line	66
  1945                           	
  1946                           l2860:	
  1947  0BF8                     ;mainM.c: 66:     setup();
  1948                           	fcall	_setup
  1949  0BF8  120A  158A  2047  120A  158A  	line	67
  1950                           	
  1951                           l2862:	
  1952  0BFD                     ;mainM.c: 67:     Config_Time_Date();
  1953                           	fcall	_Config_Time_Date
  1954  0BFD  120A  158A  222B  120A  158A  	goto	l2864
  1955  0C02  2C03               	line	68
  1956                           ;mainM.c: 68:     while(1){
  1957                           	
  1958                           l87:	
  1959  0C03                     	line	69
  1960                           	
  1961                           l2864:	
  1962  0C03                     ;mainM.c: 69:         I2C_Master_Start();
  1963                           	fcall	_I2C_Master_Start
  1964  0C03  160A  118A  243C  120A  158A  	line	70
  1965                           	
  1966                           l2866:	
  1967  0C08                     ;mainM.c: 70:         I2C_Master_Write(0x51);
  1968                           	movlw	051h
  1969  0C08  3051               	bcf	status, 5	;RP0=0, select bank0
  1970  0C09  1283               	bcf	status, 6	;RP1=0, select bank0
  1971  0C0A  1303               	movwf	(I2C_Master_Write@d)
  1972  0C0B  00A0               	movlw	0
  1973  0C0C  3000               	movwf	((I2C_Master_Write@d))+1
  1974  0C0D  00A1               	fcall	_I2C_Master_Write
  1975  0C0E  160A  118A  244E  120A  158A  	line	71
  1976                           	
  1977                           l2868:	
  1978  0C13                     ;mainM.c: 71:         adc = I2C_Master_Read(0);
  1979                           	movlw	0
  1980  0C13  3000               	movwf	(I2C_Master_Read@a)
  1981  0C14  00F0               	movwf	(I2C_Master_Read@a+1)
  1982  0C15  00F1               	fcall	_I2C_Master_Read
  1983  0C16  160A  118A  254C  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1984  0C1B  0870               	bsf	status, 5	;RP0=1, select bank1
  1985  0C1C  1683               	bcf	status, 6	;RP1=0, select bank1
  1986  0C1D  1303               	movwf	(??_main+0)^080h+0
  1987  0C1E  00C2               	movf	(??_main+0)^080h+0,w
  1988  0C1F  0842               	movwf	(_adc)^080h
  1989  0C20  00C0               	line	72
  1990                           	
  1991                           l2870:	
  1992  0C21                     ;mainM.c: 72:         I2C_Master_Stop();
  1993                           	fcall	_I2C_Master_Stop
  1994  0C21  160A  118A  2445  120A  158A  	line	73
  1995                           	
  1996                           l2872:	
  1997  0C26                     ;mainM.c: 73:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1998                           	opt asmopt_push
  1999                           opt asmopt_off
  2000                           movlw	13
  2001  0C26  300D               	bsf	status, 5	;RP0=1, select bank1
  2002  0C27  1683               	bcf	status, 6	;RP1=0, select bank1
  2003  0C28  1303               movwf	((??_main+0)^080h+0+1),f
  2004  0C29  00C3               	movlw	251
  2005  0C2A  30FB               movwf	((??_main+0)^080h+0),f
  2006  0C2B  00C2               	u4037:
  2007  0C2C                     decfsz	((??_main+0)^080h+0),f
  2008  0C2C  0BC2               	goto	u4037
  2009  0C2D  2C2C               	decfsz	((??_main+0)^080h+0+1),f
  2010  0C2E  0BC3               	goto	u4037
  2011  0C2F  2C2C               opt asmopt_pop
  2012                           
  2013                           	line	75
  2014                           	
  2015                           l2874:	
  2016  0C30                     ;mainM.c: 75:         I2C_Master_Start();
  2017                           	fcall	_I2C_Master_Start
  2018  0C30  160A  118A  243C  120A  158A  	line	76
  2019                           	
  2020                           l2876:	
  2021  0C35                     ;mainM.c: 76:         I2C_Master_Write(0x61);
  2022                           	movlw	061h
  2023  0C35  3061               	bcf	status, 5	;RP0=0, select bank0
  2024  0C36  1283               	bcf	status, 6	;RP1=0, select bank0
  2025  0C37  1303               	movwf	(I2C_Master_Write@d)
  2026  0C38  00A0               	movlw	0
  2027  0C39  3000               	movwf	((I2C_Master_Write@d))+1
  2028  0C3A  00A1               	fcall	_I2C_Master_Write
  2029  0C3B  160A  118A  244E  120A  158A  	line	77
  2030                           	
  2031                           l2878:	
  2032  0C40                     ;mainM.c: 77:         counter = I2C_Master_Read(0);
  2033                           	movlw	0
  2034  0C40  3000               	movwf	(I2C_Master_Read@a)
  2035  0C41  00F0               	movwf	(I2C_Master_Read@a+1)
  2036  0C42  00F1               	fcall	_I2C_Master_Read
  2037  0C43  160A  118A  254C  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  2038  0C48  0870               	bsf	status, 5	;RP0=1, select bank1
  2039  0C49  1683               	bcf	status, 6	;RP1=0, select bank1
  2040  0C4A  1303               	movwf	(??_main+0)^080h+0
  2041  0C4B  00C2               	movf	(??_main+0)^080h+0,w
  2042  0C4C  0842               	movwf	(_counter)^080h
  2043  0C4D  00BD               	line	78
  2044                           	
  2045                           l2880:	
  2046  0C4E                     ;mainM.c: 78:         I2C_Master_Stop();
  2047                           	fcall	_I2C_Master_Stop
  2048  0C4E  160A  118A  2445  120A  158A  	line	79
  2049                           	
  2050                           l2882:	
  2051  0C53                     ;mainM.c: 79:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2052                           	opt asmopt_push
  2053                           opt asmopt_off
  2054                           movlw	13
  2055  0C53  300D               	bsf	status, 5	;RP0=1, select bank1
  2056  0C54  1683               	bcf	status, 6	;RP1=0, select bank1
  2057  0C55  1303               movwf	((??_main+0)^080h+0+1),f
  2058  0C56  00C3               	movlw	251
  2059  0C57  30FB               movwf	((??_main+0)^080h+0),f
  2060  0C58  00C2               	u4047:
  2061  0C59                     decfsz	((??_main+0)^080h+0),f
  2062  0C59  0BC2               	goto	u4047
  2063  0C5A  2C59               	decfsz	((??_main+0)^080h+0+1),f
  2064  0C5B  0BC3               	goto	u4047
  2065  0C5C  2C59               opt asmopt_pop
  2066                           
  2067                           	line	81
  2068                           	
  2069                           l2884:	
  2070  0C5D                     ;mainM.c: 81:         I2C_Master_Start();
  2071                           	fcall	_I2C_Master_Start
  2072  0C5D  160A  118A  243C  120A  158A  	line	82
  2073                           	
  2074                           l2886:	
  2075  0C62                     ;mainM.c: 82:         I2C_Master_Write(0x41);
  2076                           	movlw	041h
  2077  0C62  3041               	bcf	status, 5	;RP0=0, select bank0
  2078  0C63  1283               	bcf	status, 6	;RP1=0, select bank0
  2079  0C64  1303               	movwf	(I2C_Master_Write@d)
  2080  0C65  00A0               	movlw	0
  2081  0C66  3000               	movwf	((I2C_Master_Write@d))+1
  2082  0C67  00A1               	fcall	_I2C_Master_Write
  2083  0C68  160A  118A  244E  120A  158A  	line	83
  2084                           	
  2085                           l2888:	
  2086  0C6D                     ;mainM.c: 83:         s3 = I2C_Master_Read(0);
  2087                           	movlw	0
  2088  0C6D  3000               	movwf	(I2C_Master_Read@a)
  2089  0C6E  00F0               	movwf	(I2C_Master_Read@a+1)
  2090  0C6F  00F1               	fcall	_I2C_Master_Read
  2091  0C70  160A  118A  254C  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  2092  0C75  0870               	bsf	status, 5	;RP0=1, select bank1
  2093  0C76  1683               	bcf	status, 6	;RP1=0, select bank1
  2094  0C77  1303               	movwf	(??_main+0)^080h+0
  2095  0C78  00C2               	movf	(??_main+0)^080h+0,w
  2096  0C79  0842               	movwf	(_s3)^080h
  2097  0C7A  00BA               	line	84
  2098                           	
  2099                           l2890:	
  2100  0C7B                     ;mainM.c: 84:         I2C_Master_Stop();
  2101                           	fcall	_I2C_Master_Stop
  2102  0C7B  160A  118A  2445  120A  158A  	line	85
  2103                           	
  2104                           l2892:	
  2105  0C80                     ;mainM.c: 85:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2106                           	opt asmopt_push
  2107                           opt asmopt_off
  2108                           movlw	13
  2109  0C80  300D               	bsf	status, 5	;RP0=1, select bank1
  2110  0C81  1683               	bcf	status, 6	;RP1=0, select bank1
  2111  0C82  1303               movwf	((??_main+0)^080h+0+1),f
  2112  0C83  00C3               	movlw	251
  2113  0C84  30FB               movwf	((??_main+0)^080h+0),f
  2114  0C85  00C2               	u4057:
  2115  0C86                     decfsz	((??_main+0)^080h+0),f
  2116  0C86  0BC2               	goto	u4057
  2117  0C87  2C86               	decfsz	((??_main+0)^080h+0+1),f
  2118  0C88  0BC3               	goto	u4057
  2119  0C89  2C86               opt asmopt_pop
  2120                           
  2121                           	line	88
  2122                           	
  2123                           l2894:	
  2124  0C8A                     ;mainM.c: 88:         sensorF1 = (float) adc * 5/255;
  2125                           	movlw	0x43
  2126  0C8A  3043               	bcf	status, 5	;RP0=0, select bank0
  2127  0C8B  1283               	bcf	status, 6	;RP1=0, select bank0
  2128  0C8C  1303               	movwf	(___fldiv@a+3)
  2129  0C8D  00D9               	movlw	0x7f
  2130  0C8E  307F               	movwf	(___fldiv@a+2)
  2131  0C8F  00D8               	movlw	0x0
  2132  0C90  3000               	movwf	(___fldiv@a+1)
  2133  0C91  00D7               	movlw	0x0
  2134  0C92  3000               	movwf	(___fldiv@a)
  2135  0C93  00D6               
  2136                           	movlw	0x40
  2137  0C94  3040               	movwf	(___flmul@b+3)
  2138  0C95  00BF               	movlw	0xa0
  2139  0C96  30A0               	movwf	(___flmul@b+2)
  2140  0C97  00BE               	movlw	0x0
  2141  0C98  3000               	movwf	(___flmul@b+1)
  2142  0C99  00BD               	movlw	0x0
  2143  0C9A  3000               	movwf	(___flmul@b)
  2144  0C9B  00BC               
  2145                           	bsf	status, 5	;RP0=1, select bank1
  2146  0C9C  1683               	bcf	status, 6	;RP1=0, select bank1
  2147  0C9D  1303               	movf	(_adc)^080h,w
  2148  0C9E  0840               	movwf	(??_main+0)^080h+0
  2149  0C9F  00C2               	clrf	(??_main+0)^080h+0+1
  2150  0CA0  01C3               	clrf	(??_main+0)^080h+0+2
  2151  0CA1  01C4               	clrf	(??_main+0)^080h+0+3
  2152  0CA2  01C5               	movf	3+(??_main+0)^080h+0,w
  2153  0CA3  0845               	movwf	(___xxtofl@val+3)
  2154  0CA4  00F3               	movf	2+(??_main+0)^080h+0,w
  2155  0CA5  0844               	movwf	(___xxtofl@val+2)
  2156  0CA6  00F2               	movf	1+(??_main+0)^080h+0,w
  2157  0CA7  0843               	movwf	(___xxtofl@val+1)
  2158  0CA8  00F1               	movf	0+(??_main+0)^080h+0,w
  2159  0CA9  0842               	movwf	(___xxtofl@val)
  2160  0CAA  00F0               
  2161                           	movlw	low(0)
  2162  0CAB  3000               	fcall	___xxtofl
  2163  0CAC  120A  158A  2169  120A  158A  	movf	(3+(?___xxtofl)),w
  2164  0CB1  0873               	bcf	status, 5	;RP0=0, select bank0
  2165  0CB2  1283               	bcf	status, 6	;RP1=0, select bank0
  2166  0CB3  1303               	movwf	(___flmul@a+3)
  2167  0CB4  00C3               	movf	(2+(?___xxtofl)),w
  2168  0CB5  0872               	movwf	(___flmul@a+2)
  2169  0CB6  00C2               	movf	(1+(?___xxtofl)),w
  2170  0CB7  0871               	movwf	(___flmul@a+1)
  2171  0CB8  00C1               	movf	(0+(?___xxtofl)),w
  2172  0CB9  0870               	movwf	(___flmul@a)
  2173  0CBA  00C0               
  2174                           	fcall	___flmul
  2175  0CBB  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2176  0CC0  1283               	bcf	status, 6	;RP1=0, select bank0
  2177  0CC1  1303               	movf	(3+(?___flmul)),w
  2178  0CC2  083F               	movwf	(___fldiv@b+3)
  2179  0CC3  00DD               	movf	(2+(?___flmul)),w
  2180  0CC4  083E               	movwf	(___fldiv@b+2)
  2181  0CC5  00DC               	movf	(1+(?___flmul)),w
  2182  0CC6  083D               	movwf	(___fldiv@b+1)
  2183  0CC7  00DB               	movf	(0+(?___flmul)),w
  2184  0CC8  083C               	movwf	(___fldiv@b)
  2185  0CC9  00DA               
  2186                           	fcall	___fldiv
  2187  0CCA  120A  158A  25F7  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2188  0CCF  1283               	bcf	status, 6	;RP1=0, select bank0
  2189  0CD0  1303               	movf	(3+(?___fldiv)),w
  2190  0CD1  0859               	bsf	status, 5	;RP0=1, select bank1
  2191  0CD2  1683               	bcf	status, 6	;RP1=0, select bank1
  2192  0CD3  1303               	movwf	(_sensorF1+3)^080h
  2193  0CD4  00B3               	bcf	status, 5	;RP0=0, select bank0
  2194  0CD5  1283               	bcf	status, 6	;RP1=0, select bank0
  2195  0CD6  1303               	movf	(2+(?___fldiv)),w
  2196  0CD7  0858               	bsf	status, 5	;RP0=1, select bank1
  2197  0CD8  1683               	bcf	status, 6	;RP1=0, select bank1
  2198  0CD9  1303               	movwf	(_sensorF1+2)^080h
  2199  0CDA  00B2               	bcf	status, 5	;RP0=0, select bank0
  2200  0CDB  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  0CDC  1303               	movf	(1+(?___fldiv)),w
  2202  0CDD  0857               	bsf	status, 5	;RP0=1, select bank1
  2203  0CDE  1683               	bcf	status, 6	;RP1=0, select bank1
  2204  0CDF  1303               	movwf	(_sensorF1+1)^080h
  2205  0CE0  00B1               	bcf	status, 5	;RP0=0, select bank0
  2206  0CE1  1283               	bcf	status, 6	;RP1=0, select bank0
  2207  0CE2  1303               	movf	(0+(?___fldiv)),w
  2208  0CE3  0856               	bsf	status, 5	;RP0=1, select bank1
  2209  0CE4  1683               	bcf	status, 6	;RP1=0, select bank1
  2210  0CE5  1303               	movwf	(_sensorF1)^080h
  2211  0CE6  00B0               
  2212                           	line	89
  2213                           	
  2214                           l2896:	
  2215  0CE7                     ;mainM.c: 89:         entero1 = (int) sensorF1;
  2216                           	movf	(_sensorF1+3)^080h,w
  2217  0CE7  0833               	movwf	(___fltol@f1+3)
  2218  0CE8  00F3               	movf	(_sensorF1+2)^080h,w
  2219  0CE9  0832               	movwf	(___fltol@f1+2)
  2220  0CEA  00F2               	movf	(_sensorF1+1)^080h,w
  2221  0CEB  0831               	movwf	(___fltol@f1+1)
  2222  0CEC  00F1               	movf	(_sensorF1)^080h,w
  2223  0CED  0830               	movwf	(___fltol@f1)
  2224  0CEE  00F0               
  2225                           	fcall	___fltol
  2226  0CEF  120A  158A  20CF  120A  158A  	movf	(0+(?___fltol)),w
  2227  0CF4  0870               	bsf	status, 5	;RP0=1, select bank1
  2228  0CF5  1683               	bcf	status, 6	;RP1=0, select bank1
  2229  0CF6  1303               	movwf	(??_main+0)^080h+0
  2230  0CF7  00C2               	movf	(??_main+0)^080h+0,w
  2231  0CF8  0842               	movwf	(_entero1)^080h
  2232  0CF9  00BF               	line	90
  2233                           	
  2234                           l2898:	
  2235  0CFA                     ;mainM.c: 90:         float1 = (sensorF1 - entero1)*100;
  2236                           	movlw	0x42
  2237  0CFA  3042               	bcf	status, 5	;RP0=0, select bank0
  2238  0CFB  1283               	bcf	status, 6	;RP1=0, select bank0
  2239  0CFC  1303               	movwf	(___flmul@b+3)
  2240  0CFD  00BF               	movlw	0xc8
  2241  0CFE  30C8               	movwf	(___flmul@b+2)
  2242  0CFF  00BE               	movlw	0x0
  2243  0D00  3000               	movwf	(___flmul@b+1)
  2244  0D01  00BD               	movlw	0x0
  2245  0D02  3000               	movwf	(___flmul@b)
  2246  0D03  00BC               
  2247                           	bsf	status, 5	;RP0=1, select bank1
  2248  0D04  1683               	bcf	status, 6	;RP1=0, select bank1
  2249  0D05  1303               	movf	(_sensorF1+3)^080h,w
  2250  0D06  0833               	bcf	status, 5	;RP0=0, select bank0
  2251  0D07  1283               	bcf	status, 6	;RP1=0, select bank0
  2252  0D08  1303               	movwf	(___fladd@b+3)
  2253  0D09  00A7               	bsf	status, 5	;RP0=1, select bank1
  2254  0D0A  1683               	bcf	status, 6	;RP1=0, select bank1
  2255  0D0B  1303               	movf	(_sensorF1+2)^080h,w
  2256  0D0C  0832               	bcf	status, 5	;RP0=0, select bank0
  2257  0D0D  1283               	bcf	status, 6	;RP1=0, select bank0
  2258  0D0E  1303               	movwf	(___fladd@b+2)
  2259  0D0F  00A6               	bsf	status, 5	;RP0=1, select bank1
  2260  0D10  1683               	bcf	status, 6	;RP1=0, select bank1
  2261  0D11  1303               	movf	(_sensorF1+1)^080h,w
  2262  0D12  0831               	bcf	status, 5	;RP0=0, select bank0
  2263  0D13  1283               	bcf	status, 6	;RP1=0, select bank0
  2264  0D14  1303               	movwf	(___fladd@b+1)
  2265  0D15  00A5               	bsf	status, 5	;RP0=1, select bank1
  2266  0D16  1683               	bcf	status, 6	;RP1=0, select bank1
  2267  0D17  1303               	movf	(_sensorF1)^080h,w
  2268  0D18  0830               	bcf	status, 5	;RP0=0, select bank0
  2269  0D19  1283               	bcf	status, 6	;RP1=0, select bank0
  2270  0D1A  1303               	movwf	(___fladd@b)
  2271  0D1B  00A4               
  2272                           	bsf	status, 5	;RP0=1, select bank1
  2273  0D1C  1683               	bcf	status, 6	;RP1=0, select bank1
  2274  0D1D  1303               	movf	(_entero1)^080h,w
  2275  0D1E  083F               	movwf	(??_main+0)^080h+0
  2276  0D1F  00C2               	clrf	(??_main+0)^080h+0+1
  2277  0D20  01C3               	clrf	(??_main+0)^080h+0+2
  2278  0D21  01C4               	clrf	(??_main+0)^080h+0+3
  2279  0D22  01C5               	movf	3+(??_main+0)^080h+0,w
  2280  0D23  0845               	movwf	(___xxtofl@val+3)
  2281  0D24  00F3               	movf	2+(??_main+0)^080h+0,w
  2282  0D25  0844               	movwf	(___xxtofl@val+2)
  2283  0D26  00F2               	movf	1+(??_main+0)^080h+0,w
  2284  0D27  0843               	movwf	(___xxtofl@val+1)
  2285  0D28  00F1               	movf	0+(??_main+0)^080h+0,w
  2286  0D29  0842               	movwf	(___xxtofl@val)
  2287  0D2A  00F0               
  2288                           	movlw	low(01h)
  2289  0D2B  3001               	fcall	___xxtofl
  2290  0D2C  120A  158A  2169  120A  158A  	movf	(3+(?___xxtofl)),w
  2291  0D31  0873               	bcf	status, 5	;RP0=0, select bank0
  2292  0D32  1283               	bcf	status, 6	;RP1=0, select bank0
  2293  0D33  1303               	movwf	(___flneg@f1+3)
  2294  0D34  00A3               	movf	(2+(?___xxtofl)),w
  2295  0D35  0872               	movwf	(___flneg@f1+2)
  2296  0D36  00A2               	movf	(1+(?___xxtofl)),w
  2297  0D37  0871               	movwf	(___flneg@f1+1)
  2298  0D38  00A1               	movf	(0+(?___xxtofl)),w
  2299  0D39  0870               	movwf	(___flneg@f1)
  2300  0D3A  00A0               
  2301                           	fcall	___flneg
  2302  0D3B  160A  118A  2467  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2303  0D40  1283               	bcf	status, 6	;RP1=0, select bank0
  2304  0D41  1303               	movf	(3+(?___flneg)),w
  2305  0D42  0823               	movwf	(___fladd@a+3)
  2306  0D43  00AB               	movf	(2+(?___flneg)),w
  2307  0D44  0822               	movwf	(___fladd@a+2)
  2308  0D45  00AA               	movf	(1+(?___flneg)),w
  2309  0D46  0821               	movwf	(___fladd@a+1)
  2310  0D47  00A9               	movf	(0+(?___flneg)),w
  2311  0D48  0820               	movwf	(___fladd@a)
  2312  0D49  00A8               
  2313                           	fcall	___fladd
  2314  0D4A  120A  118A  21C2  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2315  0D4F  1283               	bcf	status, 6	;RP1=0, select bank0
  2316  0D50  1303               	movf	(3+(?___fladd)),w
  2317  0D51  0827               	movwf	(___flmul@a+3)
  2318  0D52  00C3               	movf	(2+(?___fladd)),w
  2319  0D53  0826               	movwf	(___flmul@a+2)
  2320  0D54  00C2               	movf	(1+(?___fladd)),w
  2321  0D55  0825               	movwf	(___flmul@a+1)
  2322  0D56  00C1               	movf	(0+(?___fladd)),w
  2323  0D57  0824               	movwf	(___flmul@a)
  2324  0D58  00C0               
  2325                           	fcall	___flmul
  2326  0D59  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2327  0D5E  1283               	bcf	status, 6	;RP1=0, select bank0
  2328  0D5F  1303               	movf	(3+(?___flmul)),w
  2329  0D60  083F               	bsf	status, 5	;RP0=1, select bank1
  2330  0D61  1683               	bcf	status, 6	;RP1=0, select bank1
  2331  0D62  1303               	movwf	(_float1+3)^080h
  2332  0D63  00AF               	bcf	status, 5	;RP0=0, select bank0
  2333  0D64  1283               	bcf	status, 6	;RP1=0, select bank0
  2334  0D65  1303               	movf	(2+(?___flmul)),w
  2335  0D66  083E               	bsf	status, 5	;RP0=1, select bank1
  2336  0D67  1683               	bcf	status, 6	;RP1=0, select bank1
  2337  0D68  1303               	movwf	(_float1+2)^080h
  2338  0D69  00AE               	bcf	status, 5	;RP0=0, select bank0
  2339  0D6A  1283               	bcf	status, 6	;RP1=0, select bank0
  2340  0D6B  1303               	movf	(1+(?___flmul)),w
  2341  0D6C  083D               	bsf	status, 5	;RP0=1, select bank1
  2342  0D6D  1683               	bcf	status, 6	;RP1=0, select bank1
  2343  0D6E  1303               	movwf	(_float1+1)^080h
  2344  0D6F  00AD               	bcf	status, 5	;RP0=0, select bank0
  2345  0D70  1283               	bcf	status, 6	;RP1=0, select bank0
  2346  0D71  1303               	movf	(0+(?___flmul)),w
  2347  0D72  083C               	bsf	status, 5	;RP0=1, select bank1
  2348  0D73  1683               	bcf	status, 6	;RP1=0, select bank1
  2349  0D74  1303               	movwf	(_float1)^080h
  2350  0D75  00AC               
  2351                           	line	91
  2352                           	
  2353                           l2900:	
  2354  0D76                     ;mainM.c: 91:         dec1 = (int) float1;
  2355                           	movf	(_float1+3)^080h,w
  2356  0D76  082F               	movwf	(___fltol@f1+3)
  2357  0D77  00F3               	movf	(_float1+2)^080h,w
  2358  0D78  082E               	movwf	(___fltol@f1+2)
  2359  0D79  00F2               	movf	(_float1+1)^080h,w
  2360  0D7A  082D               	movwf	(___fltol@f1+1)
  2361  0D7B  00F1               	movf	(_float1)^080h,w
  2362  0D7C  082C               	movwf	(___fltol@f1)
  2363  0D7D  00F0               
  2364                           	fcall	___fltol
  2365  0D7E  120A  158A  20CF  120A  158A  	movf	(0+(?___fltol)),w
  2366  0D83  0870               	bsf	status, 5	;RP0=1, select bank1
  2367  0D84  1683               	bcf	status, 6	;RP1=0, select bank1
  2368  0D85  1303               	movwf	(??_main+0)^080h+0
  2369  0D86  00C2               	movf	(??_main+0)^080h+0,w
  2370  0D87  0842               	movwf	(_dec1)^080h
  2371  0D88  00BE               	line	93
  2372                           	
  2373                           l2902:	
  2374  0D89                     ;mainM.c: 93:         writeFloat(entero1, dec1, 1);
  2375                           	movf	(_dec1)^080h,w
  2376  0D89  083E               	movwf	(??_main+0)^080h+0
  2377  0D8A  00C2               	movf	(??_main+0)^080h+0,w
  2378  0D8B  0842               	bcf	status, 5	;RP0=0, select bank0
  2379  0D8C  1283               	bcf	status, 6	;RP1=0, select bank0
  2380  0D8D  1303               	movwf	(writeFloat@decimal)
  2381  0D8E  00B5               	clrf	(writeFloat@initPos)
  2382  0D8F  01B6               	incf	(writeFloat@initPos),f
  2383  0D90  0AB6               	bsf	status, 5	;RP0=1, select bank1
  2384  0D91  1683               	bcf	status, 6	;RP1=0, select bank1
  2385  0D92  1303               	movf	(_entero1)^080h,w
  2386  0D93  083F               	fcall	_writeFloat
  2387  0D94  160A  118A  265F  120A  158A  	line	94
  2388                           	
  2389                           l2904:	
  2390  0D99                     ;mainM.c: 94:         setCursorLCD(2, 7);
  2391                           	movlw	low(07h)
  2392  0D99  3007               	bsf	status, 5	;RP0=1, select bank1
  2393  0D9A  1683               	bcf	status, 6	;RP1=0, select bank1
  2394  0D9B  1303               	movwf	(??_main+0)^080h+0
  2395  0D9C  00C2               	movf	(??_main+0)^080h+0,w
  2396  0D9D  0842               	movwf	(setCursorLCD@x)
  2397  0D9E  00F3               	movlw	low(02h)
  2398  0D9F  3002               	fcall	_setCursorLCD
  2399  0DA0  160A  118A  2499  120A  158A  	line	95
  2400                           	
  2401                           l2906:	
  2402  0DA5                     ;mainM.c: 95:         writeIntLCD(counter);
  2403                           	bsf	status, 5	;RP0=1, select bank1
  2404  0DA5  1683               	bcf	status, 6	;RP1=0, select bank1
  2405  0DA6  1303               	movf	(_counter)^080h,w
  2406  0DA7  083D               	fcall	_writeIntLCD
  2407  0DA8  160A  118A  24B6  120A  158A  	line	96
  2408                           	
  2409                           l2908:	
  2410  0DAD                     ;mainM.c: 96:         writeCharLCD(' ');
  2411                           	movlw	low(020h)
  2412  0DAD  3020               	fcall	_writeCharLCD
  2413  0DAE  160A  118A  2476  120A  158A  	line	97
  2414                           	
  2415                           l2910:	
  2416  0DB3                     ;mainM.c: 97:         setCursorLCD(2, 10);
  2417                           	movlw	low(0Ah)
  2418  0DB3  300A               	bsf	status, 5	;RP0=1, select bank1
  2419  0DB4  1683               	bcf	status, 6	;RP1=0, select bank1
  2420  0DB5  1303               	movwf	(??_main+0)^080h+0
  2421  0DB6  00C2               	movf	(??_main+0)^080h+0,w
  2422  0DB7  0842               	movwf	(setCursorLCD@x)
  2423  0DB8  00F3               	movlw	low(02h)
  2424  0DB9  3002               	fcall	_setCursorLCD
  2425  0DBA  160A  118A  2499  120A  158A  	line	98
  2426                           	
  2427                           l2912:	
  2428  0DBF                     ;mainM.c: 98:         Update_Current_Date_Time();
  2429                           	fcall	_Update_Current_Date_Time
  2430  0DBF  120A  118A  2051  120A  158A  	line	99
  2431                           	
  2432                           l2914:	
  2433  0DC4                     ;mainM.c: 99:         if(min<10){
  2434                           	movlw	low(0Ah)
  2435  0DC4  300A               	bsf	status, 5	;RP0=1, select bank1
  2436  0DC5  1683               	bcf	status, 6	;RP1=0, select bank1
  2437  0DC6  1303               	subwf	(_min)^080h,w
  2438  0DC7  0238               	skipnc
  2439  0DC8  1803               	goto	u4021
  2440  0DC9  2DCB               	goto	u4020
  2441  0DCA  2DCC               u4021:
  2442  0DCB                     	goto	l2918
  2443  0DCB  2DD3               u4020:
  2444  0DCC                     	line	100
  2445                           	
  2446                           l2916:	
  2447  0DCC                     ;mainM.c: 100:             writeCharLCD('0');
  2448                           	movlw	low(030h)
  2449  0DCC  3030               	fcall	_writeCharLCD
  2450  0DCD  160A  118A  2476  120A  158A  	goto	l2918
  2451  0DD2  2DD3               	line	101
  2452                           ;mainM.c: 101:         }
  2453                           	
  2454                           l88:	
  2455  0DD3                     	line	102
  2456                           	
  2457                           l2918:	
  2458  0DD3                     ;mainM.c: 102:         writeIntLCD(min);
  2459                           	bsf	status, 5	;RP0=1, select bank1
  2460  0DD3  1683               	bcf	status, 6	;RP1=0, select bank1
  2461  0DD4  1303               	movf	(_min)^080h,w
  2462  0DD5  0838               	fcall	_writeIntLCD
  2463  0DD6  160A  118A  24B6  120A  158A  	line	103
  2464                           	
  2465                           l2920:	
  2466  0DDB                     ;mainM.c: 103:         writeCharLCD(':');
  2467                           	movlw	low(03Ah)
  2468  0DDB  303A               	fcall	_writeCharLCD
  2469  0DDC  160A  118A  2476  120A  158A  	line	104
  2470                           ;mainM.c: 104:         writeIntLCD(sec);
  2471                           	bsf	status, 5	;RP0=1, select bank1
  2472  0DE1  1683               	bcf	status, 6	;RP1=0, select bank1
  2473  0DE2  1303               	movf	(_sec)^080h,w
  2474  0DE3  0839               	fcall	_writeIntLCD
  2475  0DE4  160A  118A  24B6  120A  158A  	line	105
  2476                           ;mainM.c: 105:         writeStrLCD("  ");
  2477                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2478  0DE9  300E               	movwf	(writeStrLCD@string)
  2479  0DEA  00F2               	movlw	80h
  2480  0DEB  3080               	movwf	(writeStrLCD@string+1)
  2481  0DEC  00F3               	fcall	_writeStrLCD
  2482  0DED  120A  158A  2003  120A  158A  	goto	l2864
  2483  0DF2  2C03               	line	106
  2484                           ;mainM.c: 106:     }
  2485                           	
  2486                           l89:	
  2487  0DF3                     	goto	l2864
  2488  0DF3  2C03               	
  2489                           l90:	
  2490  0DF4                     	line	108
  2491                           ;mainM.c: 107:     return;
  2492                           	
  2493                           l91:	
  2494  0DF4                     	global	start
  2495                           	ljmp	start
  2496  0DF4  120A  118A  2800   	opt stack 0
  2497                           GLOBAL	__end_of_main
  2498                           	__end_of_main:
  2499  0DF7                     	signat	_main,89
  2500                           	global	_writeFloat
  2501                           
  2502 ;; *************** function _writeFloat *****************
  2503 ;; Defined at:
  2504 ;;		line 63 in file "LCD.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  integer         1    wreg     unsigned char 
  2507 ;;  decimal         1   21[BANK0 ] unsigned char 
  2508 ;;  initPos         1   22[BANK0 ] unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  integer         1   24[BANK0 ] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       2       0       0       0
  2521 ;;      Locals:         0       1       0       0       0
  2522 ;;      Temps:          0       1       0       0       0
  2523 ;;      Totals:         0       4       0       0       0
  2524 ;;Total ram usage:        4 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    3
  2527 ;; This function calls:
  2528 ;;		_setCursorLCD
  2529 ;;		_writeCharLCD
  2530 ;;		_writeIntLCD
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2536                           	file	"LCD.c"
  2537                           	line	63
  2538                           global __ptext1
  2539                           __ptext1:	;psect for function _writeFloat
  2540  165F                     psect	text1
  2541                           	file	"LCD.c"
  2542                           	line	63
  2543                           	global	__size_of_writeFloat
  2544                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2545  0060                     	
  2546                           _writeFloat:	
  2547  165F                     ;incstack = 0
  2548                           	opt	stack 4
  2549                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2550                           ;writeFloat@integer stored from wreg
  2551                           	bcf	status, 5	;RP0=0, select bank0
  2552  165F  1283               	bcf	status, 6	;RP1=0, select bank0
  2553  1660  1303               	movwf	(writeFloat@integer)
  2554  1661  00B8               	line	66
  2555                           	
  2556                           l2274:	
  2557  1662                     ;LCD.c: 66:     setCursorLCD(2, initPos);
  2558                           	movf	(writeFloat@initPos),w
  2559  1662  0836               	movwf	(??_writeFloat+0)+0
  2560  1663  00B7               	movf	(??_writeFloat+0)+0,w
  2561  1664  0837               	movwf	(setCursorLCD@x)
  2562  1665  00F3               	movlw	low(02h)
  2563  1666  3002               	fcall	_setCursorLCD
  2564  1667  160A  118A  2499  160A  118A  	line	67
  2565                           	
  2566                           l2276:	
  2567  166C                     ;LCD.c: 67:     writeIntLCD(integer);
  2568                           	bcf	status, 5	;RP0=0, select bank0
  2569  166C  1283               	bcf	status, 6	;RP1=0, select bank0
  2570  166D  1303               	movf	(writeFloat@integer),w
  2571  166E  0838               	fcall	_writeIntLCD
  2572  166F  160A  118A  24B6  160A  118A  	line	68
  2573                           	
  2574                           l2278:	
  2575  1674                     ;LCD.c: 68:     setCursorLCD(2, initPos + 1);
  2576                           	bcf	status, 5	;RP0=0, select bank0
  2577  1674  1283               	bcf	status, 6	;RP1=0, select bank0
  2578  1675  1303               	movf	(writeFloat@initPos),w
  2579  1676  0836               	addlw	01h
  2580  1677  3E01               	movwf	(??_writeFloat+0)+0
  2581  1678  00B7               	movf	(??_writeFloat+0)+0,w
  2582  1679  0837               	movwf	(setCursorLCD@x)
  2583  167A  00F3               	movlw	low(02h)
  2584  167B  3002               	fcall	_setCursorLCD
  2585  167C  160A  118A  2499  160A  118A  	line	69
  2586                           	
  2587                           l2280:	
  2588  1681                     ;LCD.c: 69:     writeCharLCD('.');
  2589                           	movlw	low(02Eh)
  2590  1681  302E               	fcall	_writeCharLCD
  2591  1682  160A  118A  2476  160A  118A  	line	70
  2592                           	
  2593                           l2282:	
  2594  1687                     ;LCD.c: 70:     setCursorLCD(2, initPos + 2);
  2595                           	bcf	status, 5	;RP0=0, select bank0
  2596  1687  1283               	bcf	status, 6	;RP1=0, select bank0
  2597  1688  1303               	movf	(writeFloat@initPos),w
  2598  1689  0836               	addlw	02h
  2599  168A  3E02               	movwf	(??_writeFloat+0)+0
  2600  168B  00B7               	movf	(??_writeFloat+0)+0,w
  2601  168C  0837               	movwf	(setCursorLCD@x)
  2602  168D  00F3               	movlw	low(02h)
  2603  168E  3002               	fcall	_setCursorLCD
  2604  168F  160A  118A  2499  160A  118A  	line	72
  2605                           	
  2606                           l2284:	
  2607  1694                     ;LCD.c: 72:     if(decimal < 10){
  2608                           	movlw	low(0Ah)
  2609  1694  300A               	bcf	status, 5	;RP0=0, select bank0
  2610  1695  1283               	bcf	status, 6	;RP1=0, select bank0
  2611  1696  1303               	subwf	(writeFloat@decimal),w
  2612  1697  0235               	skipnc
  2613  1698  1803               	goto	u2641
  2614  1699  2E9B               	goto	u2640
  2615  169A  2E9C               u2641:
  2616  169B                     	goto	l2288
  2617  169B  2EA3               u2640:
  2618  169C                     	line	73
  2619                           	
  2620                           l2286:	
  2621  169C                     ;LCD.c: 73:         writeCharLCD('0');
  2622                           	movlw	low(030h)
  2623  169C  3030               	fcall	_writeCharLCD
  2624  169D  160A  118A  2476  160A  118A  	goto	l2288
  2625  16A2  2EA3               	line	74
  2626                           ;LCD.c: 74:     }
  2627                           	
  2628                           l206:	
  2629  16A3                     	line	75
  2630                           	
  2631                           l2288:	
  2632  16A3                     ;LCD.c: 75:     writeIntLCD(decimal);
  2633                           	bcf	status, 5	;RP0=0, select bank0
  2634  16A3  1283               	bcf	status, 6	;RP1=0, select bank0
  2635  16A4  1303               	movf	(writeFloat@decimal),w
  2636  16A5  0835               	fcall	_writeIntLCD
  2637  16A6  160A  118A  24B6  160A  118A  	line	77
  2638                           	
  2639                           l2290:	
  2640  16AB                     ;LCD.c: 77:     setCursorLCD(2, initPos + 4);
  2641                           	bcf	status, 5	;RP0=0, select bank0
  2642  16AB  1283               	bcf	status, 6	;RP1=0, select bank0
  2643  16AC  1303               	movf	(writeFloat@initPos),w
  2644  16AD  0836               	addlw	04h
  2645  16AE  3E04               	movwf	(??_writeFloat+0)+0
  2646  16AF  00B7               	movf	(??_writeFloat+0)+0,w
  2647  16B0  0837               	movwf	(setCursorLCD@x)
  2648  16B1  00F3               	movlw	low(02h)
  2649  16B2  3002               	fcall	_setCursorLCD
  2650  16B3  160A  118A  2499  160A  118A  	line	78
  2651                           	
  2652                           l2292:	
  2653  16B8                     ;LCD.c: 78:     writeCharLCD('V');
  2654                           	movlw	low(056h)
  2655  16B8  3056               	fcall	_writeCharLCD
  2656  16B9  160A  118A  2476  160A  118A  	line	79
  2657                           	
  2658                           l207:	
  2659  16BE                     	return
  2660  16BE  0008               	opt stack 0
  2661                           GLOBAL	__end_of_writeFloat
  2662                           	__end_of_writeFloat:
  2663  16BF                     	signat	_writeFloat,12409
  2664                           	global	_writeIntLCD
  2665                           
  2666 ;; *************** function _writeIntLCD *****************
  2667 ;; Defined at:
  2668 ;;		line 57 in file "LCD.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  numero          1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  numero          1   20[BANK0 ] unsigned char 
  2673 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       0       0       0       0
  2684 ;;      Locals:         0       5       0       0       0
  2685 ;;      Temps:          0       3       0       0       0
  2686 ;;      Totals:         0       8       0       0       0
  2687 ;;Total ram usage:        8 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		_sprintf
  2692 ;;		_writeStrLCD
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;;		_writeFloat
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2699                           	line	57
  2700                           global __ptext2
  2701                           __ptext2:	;psect for function _writeIntLCD
  2702  14B6                     psect	text2
  2703                           	file	"LCD.c"
  2704                           	line	57
  2705                           	global	__size_of_writeIntLCD
  2706                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2707  001E                     	
  2708                           _writeIntLCD:	
  2709  14B6                     ;incstack = 0
  2710                           	opt	stack 5
  2711                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2712                           ;writeIntLCD@numero stored from wreg
  2713                           	bcf	status, 5	;RP0=0, select bank0
  2714  14B6  1283               	bcf	status, 6	;RP1=0, select bank0
  2715  14B7  1303               	movwf	(writeIntLCD@numero)
  2716  14B8  00B4               	line	59
  2717                           	
  2718                           l2184:	
  2719  14B9                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2720                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2721  14B9  300B               	movwf	(??_writeIntLCD+0)+0
  2722  14BA  00AD               	movf	(??_writeIntLCD+0)+0,w
  2723  14BB  082D               	movwf	(sprintf@f)
  2724  14BC  00A0               	movf	(writeIntLCD@numero),w
  2725  14BD  0834               	movwf	(??_writeIntLCD+1)+0
  2726  14BE  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2727  14BF  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2728  14C0  082E               	movwf	0+(?_sprintf)+01h
  2729  14C1  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2730  14C2  082F               	movwf	1+(?_sprintf)+01h
  2731  14C3  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2732  14C4  3030               	fcall	_sprintf
  2733  14C5  120A  158A  22F8  160A  118A  	line	60
  2734                           ;LCD.c: 60:     writeStrLCD(buffer);
  2735                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2736  14CA  3030               	movwf	(writeStrLCD@string)
  2737  14CB  00F2               	movlw	(0x0)
  2738  14CC  3000               	movwf	(writeStrLCD@string+1)
  2739  14CD  00F3               	fcall	_writeStrLCD
  2740  14CE  120A  158A  2003  160A  118A  	line	61
  2741                           	
  2742                           l203:	
  2743  14D3                     	return
  2744  14D3  0008               	opt stack 0
  2745                           GLOBAL	__end_of_writeIntLCD
  2746                           	__end_of_writeIntLCD:
  2747  14D4                     	signat	_writeIntLCD,4217
  2748                           	global	_sprintf
  2749                           
  2750 ;; *************** function _sprintf *****************
  2751 ;; Defined at:
  2752 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  sp              1    wreg     PTR unsigned char 
  2755 ;;		 -> writeIntLCD@buffer(4), 
  2756 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2757 ;;		 -> STR_5(3), 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2760 ;;		 -> writeIntLCD@buffer(4), 
  2761 ;;  tmpval          4    0        struct .
  2762 ;;  val             2    9[BANK0 ] unsigned int 
  2763 ;;  cp              2    0        PTR const unsigned char 
  2764 ;;  len             2    0        unsigned int 
  2765 ;;  c               1   12[BANK0 ] unsigned char 
  2766 ;;  prec            1    8[BANK0 ] char 
  2767 ;;  flag            1    7[BANK0 ] unsigned char 
  2768 ;;  ap              1    6[BANK0 ] PTR void [1]
  2769 ;;		 -> ?_sprintf(2), 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    0[BANK0 ] int 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2779 ;;      Params:         0       3       0       0       0
  2780 ;;      Locals:         0       7       0       0       0
  2781 ;;      Temps:          0       3       0       0       0
  2782 ;;      Totals:         0      13       0       0       0
  2783 ;;Total ram usage:       13 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    1
  2786 ;; This function calls:
  2787 ;;		___lwdiv
  2788 ;;		___lwmod
  2789 ;; This function is called by:
  2790 ;;		_writeIntLCD
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2794                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2795                           	line	500
  2796                           global __ptext3
  2797                           __ptext3:	;psect for function _sprintf
  2798  0AF8                     psect	text3
  2799                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2800                           	line	500
  2801                           	global	__size_of_sprintf
  2802                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2803  0100                     	
  2804                           _sprintf:	
  2805  0AF8                     ;incstack = 0
  2806                           	opt	stack 5
  2807                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2808                           ;sprintf@sp stored from wreg
  2809                           	bcf	status, 5	;RP0=0, select bank0
  2810  0AF8  1283               	bcf	status, 6	;RP1=0, select bank0
  2811  0AF9  1303               	movwf	(sprintf@sp)
  2812  0AFA  00AB               	line	545
  2813                           	
  2814                           l1966:	
  2815  0AFB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2816                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2817  0AFB  3021               	movwf	(??_sprintf+0)+0
  2818  0AFC  00A3               	movf	(??_sprintf+0)+0,w
  2819  0AFD  0823               	movwf	(sprintf@ap)
  2820  0AFE  00A6               	line	548
  2821                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2822                           	goto	l2018
  2823  0AFF  2BDE               	
  2824                           l311:	
  2825  0B00                     	line	550
  2826                           	
  2827                           l1968:	
  2828  0B00                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2829                           		movlw	37
  2830  0B00  3025               	xorwf	((sprintf@c)),w
  2831  0B01  062C               	btfsc	status,2
  2832  0B02  1903               	goto	u2201
  2833  0B03  2B05               	goto	u2200
  2834  0B04  2B06               u2201:
  2835  0B05                     	goto	l1974
  2836  0B05  2B12               u2200:
  2837  0B06                     	line	553
  2838                           	
  2839                           l1970:	
  2840  0B06                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2841                           	movf	(sprintf@c),w
  2842  0B06  082C               	movwf	(??_sprintf+0)+0
  2843  0B07  00A3               	movf	(sprintf@sp),w
  2844  0B08  082B               	movwf	fsr0
  2845  0B09  0084               	movf	(??_sprintf+0)+0,w
  2846  0B0A  0823               	bcf	status, 7	;select IRP bank0
  2847  0B0B  1383               	movwf	indf
  2848  0B0C  0080               	
  2849                           l1972:	
  2850  0B0D                     	movlw	low(01h)
  2851  0B0D  3001               	movwf	(??_sprintf+0)+0
  2852  0B0E  00A3               	movf	(??_sprintf+0)+0,w
  2853  0B0F  0823               	addwf	(sprintf@sp),f
  2854  0B10  07AB               	line	554
  2855                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2856                           	goto	l2018
  2857  0B11  2BDE               	line	555
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2859                           	
  2860                           l312:	
  2861  0B12                     	line	560
  2862                           	
  2863                           l1974:	
  2864  0B12                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2865                           	clrf	(sprintf@flag)
  2866  0B12  01A7               	line	654
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2868                           	goto	l1978
  2869  0B13  2B19               	line	656
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2871                           	
  2872                           l314:	
  2873  0B14                     	line	657
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2875                           	goto	l2020
  2876  0B14  2BF2               	line	716
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2878                           	
  2879                           l316:	
  2880  0B15                     	goto	l1980
  2881  0B15  2B36               	line	717
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2883                           	
  2884                           l317:	
  2885  0B16                     	line	718
  2886                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2887                           	goto	l1980
  2888  0B16  2B36               	line	821
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2890                           	
  2891                           l319:	
  2892  0B17                     	line	832
  2893                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2894                           	goto	l2018
  2895  0B17  2BDE               	line	841
  2896                           	
  2897                           l1976:	
  2898  0B18                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2899                           	goto	l1980
  2900  0B18  2B36               	
  2901                           l313:	
  2902  0B19                     	
  2903                           l1978:	
  2904  0B19                     	movlw	01h
  2905  0B19  3001               	addwf	(sprintf@f),f
  2906  0B1A  07A0               	movlw	-01h
  2907  0B1B  30FF               	addwf	(sprintf@f),w
  2908  0B1C  0720               	movwf	fsr0
  2909  0B1D  0084               	fcall	stringdir
  2910  0B1E  160A  118A  200A  120A  158A  	movwf	(sprintf@c)
  2911  0B23  00AC               	movwf	(??_sprintf+0)+0
  2912  0B24  00A3               	clrf	(??_sprintf+0)+0+1
  2913  0B25  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2914                           ; Switch size 1, requested type "space"
  2915                           ; Number of cases is 1, Range of values is 0 to 0
  2916                           ; switch strategies available:
  2917                           ; Name         Instructions Cycles
  2918                           ; simple_byte            4     3 (average)
  2919                           ; direct_byte           11     8 (fixed)
  2920                           ; jumptable            260     6 (fixed)
  2921                           ;	Chosen strategy is simple_byte
  2922                           
  2923                           	movf 1+(??_sprintf+0)+0,w
  2924  0B26  0824               	opt asmopt_push
  2925                           	opt asmopt_off
  2926                           	xorlw	0^0	; case 0
  2927  0B27  3A00               	skipnz
  2928  0B28  1903               	goto	l2946
  2929  0B29  2B2B               	goto	l2018
  2930  0B2A  2BDE               	opt asmopt_pop
  2931                           	
  2932                           l2946:	
  2933  0B2B                     ; Switch size 1, requested type "space"
  2934                           ; Number of cases is 3, Range of values is 0 to 105
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte           10     6 (average)
  2938                           ; jumptable            260     6 (fixed)
  2939                           ;	Chosen strategy is simple_byte
  2940                           
  2941                           	movf 0+(??_sprintf+0)+0,w
  2942  0B2B  0823               	opt asmopt_push
  2943                           	opt asmopt_off
  2944                           	xorlw	0^0	; case 0
  2945  0B2C  3A00               	skipnz
  2946  0B2D  1903               	goto	l2020
  2947  0B2E  2BF2               	xorlw	100^0	; case 100
  2948  0B2F  3A64               	skipnz
  2949  0B30  1903               	goto	l1980
  2950  0B31  2B36               	xorlw	105^100	; case 105
  2951  0B32  3A0D               	skipnz
  2952  0B33  1903               	goto	l1980
  2953  0B34  2B36               	goto	l2018
  2954  0B35  2BDE               	opt asmopt_pop
  2955                           
  2956                           	
  2957                           l318:	
  2958  0B36                     	line	1278
  2959                           	
  2960                           l1980:	
  2961  0B36                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2962                           	movf	(sprintf@ap),w
  2963  0B36  0826               	movwf	fsr0
  2964  0B37  0084               	bcf	status, 7	;select IRP bank0
  2965  0B38  1383               	movf	indf,w
  2966  0B39  0800               	movwf	(sprintf@val)
  2967  0B3A  00A9               	incf	fsr0,f
  2968  0B3B  0A84               	movf	indf,w
  2969  0B3C  0800               	movwf	(sprintf@val+1)
  2970  0B3D  00AA               	
  2971                           l1982:	
  2972  0B3E                     	movlw	low(02h)
  2973  0B3E  3002               	movwf	(??_sprintf+0)+0
  2974  0B3F  00A3               	movf	(??_sprintf+0)+0,w
  2975  0B40  0823               	addwf	(sprintf@ap),f
  2976  0B41  07A6               	line	1280
  2977                           	
  2978                           l1984:	
  2979  0B42                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2980                           	btfss	(sprintf@val+1),7
  2981  0B42  1FAA               	goto	u2211
  2982  0B43  2B45               	goto	u2210
  2983  0B44  2B46               u2211:
  2984  0B45                     	goto	l1990
  2985  0B45  2B50               u2210:
  2986  0B46                     	line	1281
  2987                           	
  2988                           l1986:	
  2989  0B46                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2990                           	movlw	low(03h)
  2991  0B46  3003               	movwf	(??_sprintf+0)+0
  2992  0B47  00A3               	movf	(??_sprintf+0)+0,w
  2993  0B48  0823               	iorwf	(sprintf@flag),f
  2994  0B49  04A7               	line	1282
  2995                           	
  2996                           l1988:	
  2997  0B4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2998                           	comf	(sprintf@val),f
  2999  0B4A  09A9               	comf	(sprintf@val+1),f
  3000  0B4B  09AA               	incf	(sprintf@val),f
  3001  0B4C  0AA9               	skipnz
  3002  0B4D  1903               	incf	(sprintf@val+1),f
  3003  0B4E  0AAA               	goto	l1990
  3004  0B4F  2B50               	line	1283
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  3006                           	
  3007                           l320:	
  3008  0B50                     	line	1324
  3009                           	
  3010                           l1990:	
  3011  0B50                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3012                           	clrf	(sprintf@c)
  3013  0B50  01AC               	incf	(sprintf@c),f
  3014  0B51  0AAC               	
  3015                           l1992:	
  3016  0B52                     		movlw	5
  3017  0B52  3005               	xorwf	((sprintf@c)),w
  3018  0B53  062C               	btfss	status,2
  3019  0B54  1D03               	goto	u2221
  3020  0B55  2B57               	goto	u2220
  3021  0B56  2B58               u2221:
  3022  0B57                     	goto	l1996
  3023  0B57  2B5A               u2220:
  3024  0B58                     	goto	l2002
  3025  0B58  2B82               	
  3026                           l1994:	
  3027  0B59                     	goto	l2002
  3028  0B59  2B82               	
  3029                           l321:	
  3030  0B5A                     	line	1325
  3031                           	
  3032                           l1996:	
  3033  0B5A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  3034                           	movf	(sprintf@c),w
  3035  0B5A  082C               	movwf	(??_sprintf+0)+0
  3036  0B5B  00A3               	addwf	(??_sprintf+0)+0,w
  3037  0B5C  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3038  0B5D  3E01               	movwf	fsr0
  3039  0B5E  0084               	fcall	stringdir
  3040  0B5F  160A  118A  200A  120A  158A  	movwf	(??_sprintf+1)+0
  3041  0B64  00A4               	fcall	stringdir
  3042  0B65  160A  118A  200A  120A  158A  	movwf	(??_sprintf+1)+0+1
  3043  0B6A  00A5               	movf	1+(??_sprintf+1)+0,w
  3044  0B6B  0825               	subwf	(sprintf@val+1),w
  3045  0B6C  022A               	skipz
  3046  0B6D  1D03               	goto	u2235
  3047  0B6E  2B71               	movf	0+(??_sprintf+1)+0,w
  3048  0B6F  0824               	subwf	(sprintf@val),w
  3049  0B70  0229               u2235:
  3050  0B71                     	skipnc
  3051  0B71  1803               	goto	u2231
  3052  0B72  2B74               	goto	u2230
  3053  0B73  2B75               u2231:
  3054  0B74                     	goto	l2000
  3055  0B74  2B77               u2230:
  3056  0B75                     	goto	l2002
  3057  0B75  2B82               	line	1326
  3058                           	
  3059                           l1998:	
  3060  0B76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  3061                           	goto	l2002
  3062  0B76  2B82               	
  3063                           l323:	
  3064  0B77                     	
  3065                           l2000:	
  3066  0B77                     	movlw	low(01h)
  3067  0B77  3001               	movwf	(??_sprintf+0)+0
  3068  0B78  00A3               	movf	(??_sprintf+0)+0,w
  3069  0B79  0823               	addwf	(sprintf@c),f
  3070  0B7A  07AC               		movlw	5
  3071  0B7B  3005               	xorwf	((sprintf@c)),w
  3072  0B7C  062C               	btfss	status,2
  3073  0B7D  1D03               	goto	u2241
  3074  0B7E  2B80               	goto	u2240
  3075  0B7F  2B81               u2241:
  3076  0B80                     	goto	l1996
  3077  0B80  2B5A               u2240:
  3078  0B81                     	goto	l2002
  3079  0B81  2B82               	
  3080                           l322:	
  3081  0B82                     	line	1457
  3082                           	
  3083                           l2002:	
  3084  0B82                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  3085                           	movf	(sprintf@flag),w
  3086  0B82  0827               	andlw	03h
  3087  0B83  3903               	btfsc	status,2
  3088  0B84  1903               	goto	u2251
  3089  0B85  2B87               	goto	u2250
  3090  0B86  2B88               u2251:
  3091  0B87                     	goto	l2008
  3092  0B87  2B94               u2250:
  3093  0B88                     	line	1458
  3094                           	
  3095                           l2004:	
  3096  0B88                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  3097                           	movlw	low(02Dh)
  3098  0B88  302D               	movwf	(??_sprintf+0)+0
  3099  0B89  00A3               	movf	(sprintf@sp),w
  3100  0B8A  082B               	movwf	fsr0
  3101  0B8B  0084               	movf	(??_sprintf+0)+0,w
  3102  0B8C  0823               	bcf	status, 7	;select IRP bank0
  3103  0B8D  1383               	movwf	indf
  3104  0B8E  0080               	
  3105                           l2006:	
  3106  0B8F                     	movlw	low(01h)
  3107  0B8F  3001               	movwf	(??_sprintf+0)+0
  3108  0B90  00A3               	movf	(??_sprintf+0)+0,w
  3109  0B91  0823               	addwf	(sprintf@sp),f
  3110  0B92  07AB               	goto	l2008
  3111  0B93  2B94               	
  3112                           l324:	
  3113  0B94                     	line	1491
  3114                           	
  3115                           l2008:	
  3116  0B94                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  3117                           	movf	(sprintf@c),w
  3118  0B94  082C               	movwf	(??_sprintf+0)+0
  3119  0B95  00A3               	movf	(??_sprintf+0)+0,w
  3120  0B96  0823               	movwf	(sprintf@prec)
  3121  0B97  00A8               	line	1493
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3123                           	goto	l2016
  3124  0B98  2BD3               	
  3125                           l326:	
  3126  0B99                     	line	1508
  3127                           	
  3128                           l2010:	
  3129  0B99                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  3130                           	movlw	0Ah
  3131  0B99  300A               	movwf	(___lwmod@divisor)
  3132  0B9A  00F8               	movlw	0
  3133  0B9B  3000               	movwf	((___lwmod@divisor))+1
  3134  0B9C  00F9               	movf	(sprintf@prec),w
  3135  0B9D  0828               	movwf	(??_sprintf+0)+0
  3136  0B9E  00A3               	addwf	(??_sprintf+0)+0,w
  3137  0B9F  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3138  0BA0  3E01               	movwf	fsr0
  3139  0BA1  0084               	fcall	stringdir
  3140  0BA2  160A  118A  200A  120A  158A  	movwf	(___lwdiv@divisor)
  3141  0BA7  00F0               	fcall	stringdir
  3142  0BA8  160A  118A  200A  120A  158A  	movwf	(___lwdiv@divisor+1)
  3143  0BAD  00F1               	movf	(sprintf@val+1),w
  3144  0BAE  082A               	movwf	(___lwdiv@dividend+1)
  3145  0BAF  00F3               	movf	(sprintf@val),w
  3146  0BB0  0829               	movwf	(___lwdiv@dividend)
  3147  0BB1  00F2               	fcall	___lwdiv
  3148  0BB2  120A  118A  2006  120A  158A  	movf	(1+(?___lwdiv)),w
  3149  0BB7  0871               	movwf	(___lwmod@dividend+1)
  3150  0BB8  00FB               	movf	(0+(?___lwdiv)),w
  3151  0BB9  0870               	movwf	(___lwmod@dividend)
  3152  0BBA  00FA               	fcall	___lwmod
  3153  0BBB  160A  118A  261E  120A  158A  	movf	(0+(?___lwmod)),w
  3154  0BC0  0878               	addlw	030h
  3155  0BC1  3E30               	bcf	status, 5	;RP0=0, select bank0
  3156  0BC2  1283               	bcf	status, 6	;RP1=0, select bank0
  3157  0BC3  1303               	movwf	(??_sprintf+1)+0
  3158  0BC4  00A4               	movf	(??_sprintf+1)+0,w
  3159  0BC5  0824               	movwf	(sprintf@c)
  3160  0BC6  00AC               	line	1543
  3161                           	
  3162                           l2012:	
  3163  0BC7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  3164                           	movf	(sprintf@c),w
  3165  0BC7  082C               	movwf	(??_sprintf+0)+0
  3166  0BC8  00A3               	movf	(sprintf@sp),w
  3167  0BC9  082B               	movwf	fsr0
  3168  0BCA  0084               	movf	(??_sprintf+0)+0,w
  3169  0BCB  0823               	bcf	status, 7	;select IRP bank0
  3170  0BCC  1383               	movwf	indf
  3171  0BCD  0080               	
  3172                           l2014:	
  3173  0BCE                     	movlw	low(01h)
  3174  0BCE  3001               	movwf	(??_sprintf+0)+0
  3175  0BCF  00A3               	movf	(??_sprintf+0)+0,w
  3176  0BD0  0823               	addwf	(sprintf@sp),f
  3177  0BD1  07AB               	goto	l2016
  3178  0BD2  2BD3               	line	1544
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  3180                           	
  3181                           l325:	
  3182  0BD3                     	line	1493
  3183                           	
  3184                           l2016:	
  3185  0BD3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3186                           	movlw	low(-1)
  3187  0BD3  30FF               	movwf	(??_sprintf+0)+0
  3188  0BD4  00A3               	movf	(??_sprintf+0)+0,w
  3189  0BD5  0823               	addwf	(sprintf@prec),f
  3190  0BD6  07A8               		incf	(((sprintf@prec))),w
  3191  0BD7  0A28               	btfss	status,2
  3192  0BD8  1D03               	goto	u2261
  3193  0BD9  2BDB               	goto	u2260
  3194  0BDA  2BDC               u2261:
  3195  0BDB                     	goto	l2010
  3196  0BDB  2B99               u2260:
  3197  0BDC                     	goto	l2018
  3198  0BDC  2BDE               	
  3199                           l327:	
  3200  0BDD                     	goto	l2018
  3201  0BDD  2BDE               	line	1552
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  3203                           	
  3204                           l310:	
  3205  0BDE                     	line	548
  3206                           	
  3207                           l2018:	
  3208  0BDE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  3209                           	movlw	01h
  3210  0BDE  3001               	addwf	(sprintf@f),f
  3211  0BDF  07A0               	movlw	-01h
  3212  0BE0  30FF               	addwf	(sprintf@f),w
  3213  0BE1  0720               	movwf	fsr0
  3214  0BE2  0084               	fcall	stringdir
  3215  0BE3  160A  118A  200A  120A  158A  	movwf	(??_sprintf+0)+0
  3216  0BE8  00A3               	movf	(??_sprintf+0)+0,w
  3217  0BE9  0823               	movwf	(sprintf@c)
  3218  0BEA  00AC               	movf	(((sprintf@c))),w
  3219  0BEB  082C               	btfss	status,2
  3220  0BEC  1D03               	goto	u2271
  3221  0BED  2BEF               	goto	u2270
  3222  0BEE  2BF0               u2271:
  3223  0BEF                     	goto	l1968
  3224  0BEF  2B00               u2270:
  3225  0BF0                     	goto	l2020
  3226  0BF0  2BF2               	
  3227                           l328:	
  3228  0BF1                     	goto	l2020
  3229  0BF1  2BF2               	line	1554
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  3231                           	
  3232                           l315:	
  3233  0BF2                     	line	1557
  3234                           	
  3235                           l2020:	
  3236  0BF2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  3237                           	movf	(sprintf@sp),w
  3238  0BF2  082B               	movwf	fsr0
  3239  0BF3  0084               	bcf	status, 7	;select IRP bank0
  3240  0BF4  1383               	clrf	indf
  3241  0BF5  0180               	goto	l329
  3242  0BF6  2BF7               	line	1559
  3243                           	
  3244                           l2022:	
  3245  0BF7                     	line	1560
  3246                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  3247                           	
  3248                           l329:	
  3249  0BF7                     	return
  3250  0BF7  0008               	opt stack 0
  3251                           GLOBAL	__end_of_sprintf
  3252                           	__end_of_sprintf:
  3253  0BF8                     	signat	_sprintf,4698
  3254                           	global	___lwmod
  3255                           
  3256 ;; *************** function ___lwmod *****************
  3257 ;; Defined at:
  3258 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  divisor         2    8[COMMON] unsigned int 
  3261 ;;  dividend        2   10[COMMON] unsigned int 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  counter         1   13[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2    8[COMMON] unsigned int 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         4       0       0       0       0
  3274 ;;      Locals:         1       0       0       0       0
  3275 ;;      Temps:          1       0       0       0       0
  3276 ;;      Totals:         6       0       0       0       0
  3277 ;;Total ram usage:        6 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_sprintf
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3286                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3287                           	line	5
  3288                           global __ptext4
  3289                           __ptext4:	;psect for function ___lwmod
  3290  161E                     psect	text4
  3291                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3292                           	line	5
  3293                           	global	__size_of___lwmod
  3294                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3295  0041                     	
  3296                           ___lwmod:	
  3297  161E                     ;incstack = 0
  3298                           	opt	stack 5
  3299                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3300                           	line	12
  3301                           	
  3302                           l1924:	
  3303  161E                     	movf	((___lwmod@divisor)),w
  3304  161E  0878               iorwf	((___lwmod@divisor+1)),w
  3305  161F  0479               	btfsc	status,2
  3306  1620  1903               	goto	u2091
  3307  1621  2E23               	goto	u2090
  3308  1622  2E24               u2091:
  3309  1623                     	goto	l1942
  3310  1623  2E59               u2090:
  3311  1624                     	line	13
  3312                           	
  3313                           l1926:	
  3314  1624                     	clrf	(___lwmod@counter)
  3315  1624  01FD               	incf	(___lwmod@counter),f
  3316  1625  0AFD               	line	14
  3317                           	goto	l1932
  3318  1626  2E33               	
  3319                           l610:	
  3320  1627                     	line	15
  3321                           	
  3322                           l1928:	
  3323  1627                     	movlw	01h
  3324  1627  3001               	
  3325                           u2105:
  3326  1628                     	clrc
  3327  1628  1003               	rlf	(___lwmod@divisor),f
  3328  1629  0DF8               	rlf	(___lwmod@divisor+1),f
  3329  162A  0DF9               	addlw	-1
  3330  162B  3EFF               	skipz
  3331  162C  1D03               	goto	u2105
  3332  162D  2E28               	line	16
  3333                           	
  3334                           l1930:	
  3335  162E                     	movlw	low(01h)
  3336  162E  3001               	movwf	(??___lwmod+0)+0
  3337  162F  00FC               	movf	(??___lwmod+0)+0,w
  3338  1630  087C               	addwf	(___lwmod@counter),f
  3339  1631  07FD               	goto	l1932
  3340  1632  2E33               	line	17
  3341                           	
  3342                           l609:	
  3343  1633                     	line	14
  3344                           	
  3345                           l1932:	
  3346  1633                     	btfss	(___lwmod@divisor+1),(15)&7
  3347  1633  1FF9               	goto	u2111
  3348  1634  2E36               	goto	u2110
  3349  1635  2E37               u2111:
  3350  1636                     	goto	l1928
  3351  1636  2E27               u2110:
  3352  1637                     	goto	l1934
  3353  1637  2E39               	
  3354                           l611:	
  3355  1638                     	goto	l1934
  3356  1638  2E39               	line	18
  3357                           	
  3358                           l612:	
  3359  1639                     	line	19
  3360                           	
  3361                           l1934:	
  3362  1639                     	movf	(___lwmod@divisor+1),w
  3363  1639  0879               	subwf	(___lwmod@dividend+1),w
  3364  163A  027B               	skipz
  3365  163B  1D03               	goto	u2125
  3366  163C  2E3F               	movf	(___lwmod@divisor),w
  3367  163D  0878               	subwf	(___lwmod@dividend),w
  3368  163E  027A               u2125:
  3369  163F                     	skipc
  3370  163F  1C03               	goto	u2121
  3371  1640  2E42               	goto	u2120
  3372  1641  2E43               u2121:
  3373  1642                     	goto	l1938
  3374  1642  2E4A               u2120:
  3375  1643                     	line	20
  3376                           	
  3377                           l1936:	
  3378  1643                     	movf	(___lwmod@divisor),w
  3379  1643  0878               	subwf	(___lwmod@dividend),f
  3380  1644  02FA               	movf	(___lwmod@divisor+1),w
  3381  1645  0879               	skipc
  3382  1646  1C03               	decf	(___lwmod@dividend+1),f
  3383  1647  03FB               	subwf	(___lwmod@dividend+1),f
  3384  1648  02FB               	goto	l1938
  3385  1649  2E4A               	
  3386                           l613:	
  3387  164A                     	line	21
  3388                           	
  3389                           l1938:	
  3390  164A                     	movlw	01h
  3391  164A  3001               	
  3392                           u2135:
  3393  164B                     	clrc
  3394  164B  1003               	rrf	(___lwmod@divisor+1),f
  3395  164C  0CF9               	rrf	(___lwmod@divisor),f
  3396  164D  0CF8               	addlw	-1
  3397  164E  3EFF               	skipz
  3398  164F  1D03               	goto	u2135
  3399  1650  2E4B               	line	22
  3400                           	
  3401                           l1940:	
  3402  1651                     	movlw	01h
  3403  1651  3001               	subwf	(___lwmod@counter),f
  3404  1652  02FD               	btfss	status,2
  3405  1653  1D03               	goto	u2141
  3406  1654  2E56               	goto	u2140
  3407  1655  2E57               u2141:
  3408  1656                     	goto	l1934
  3409  1656  2E39               u2140:
  3410  1657                     	goto	l1942
  3411  1657  2E59               	
  3412                           l614:	
  3413  1658                     	goto	l1942
  3414  1658  2E59               	line	23
  3415                           	
  3416                           l608:	
  3417  1659                     	line	24
  3418                           	
  3419                           l1942:	
  3420  1659                     	movf	(___lwmod@dividend+1),w
  3421  1659  087B               	movwf	(?___lwmod+1)
  3422  165A  00F9               	movf	(___lwmod@dividend),w
  3423  165B  087A               	movwf	(?___lwmod)
  3424  165C  00F8               	goto	l615
  3425  165D  2E5E               	
  3426                           l1944:	
  3427  165E                     	line	25
  3428                           	
  3429                           l615:	
  3430  165E                     	return
  3431  165E  0008               	opt stack 0
  3432                           GLOBAL	__end_of___lwmod
  3433                           	__end_of___lwmod:
  3434  165F                     	signat	___lwmod,8314
  3435                           	global	___lwdiv
  3436                           
  3437 ;; *************** function ___lwdiv *****************
  3438 ;; Defined at:
  3439 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  divisor         2    0[COMMON] unsigned int 
  3442 ;;  dividend        2    2[COMMON] unsigned int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  quotient        2    5[COMMON] unsigned int 
  3445 ;;  counter         1    7[COMMON] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  2    0[COMMON] unsigned int 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         4       0       0       0       0
  3456 ;;      Locals:         3       0       0       0       0
  3457 ;;      Temps:          1       0       0       0       0
  3458 ;;      Totals:         8       0       0       0       0
  3459 ;;Total ram usage:        8 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_sprintf
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3468                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3469                           	line	5
  3470                           global __ptext5
  3471                           __ptext5:	;psect for function ___lwdiv
  3472  0006                     psect	text5
  3473                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3474                           	line	5
  3475                           	global	__size_of___lwdiv
  3476                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3477  004B                     	
  3478                           ___lwdiv:	
  3479  0006                     ;incstack = 0
  3480                           	opt	stack 5
  3481                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3482                           	line	13
  3483                           	
  3484                           l1898:	
  3485  0006                     	clrf	(___lwdiv@quotient)
  3486  0006  01F5               	clrf	(___lwdiv@quotient+1)
  3487  0007  01F6               	line	14
  3488                           	
  3489                           l1900:	
  3490  0008                     	movf	((___lwdiv@divisor)),w
  3491  0008  0870               iorwf	((___lwdiv@divisor+1)),w
  3492  0009  0471               	btfsc	status,2
  3493  000A  1903               	goto	u2021
  3494  000B  280D               	goto	u2020
  3495  000C  280E               u2021:
  3496  000D                     	goto	l1920
  3497  000D  284B               u2020:
  3498  000E                     	line	15
  3499                           	
  3500                           l1902:	
  3501  000E                     	clrf	(___lwdiv@counter)
  3502  000E  01F7               	incf	(___lwdiv@counter),f
  3503  000F  0AF7               	line	16
  3504                           	goto	l1908
  3505  0010  281D               	
  3506                           l600:	
  3507  0011                     	line	17
  3508                           	
  3509                           l1904:	
  3510  0011                     	movlw	01h
  3511  0011  3001               	
  3512                           u2035:
  3513  0012                     	clrc
  3514  0012  1003               	rlf	(___lwdiv@divisor),f
  3515  0013  0DF0               	rlf	(___lwdiv@divisor+1),f
  3516  0014  0DF1               	addlw	-1
  3517  0015  3EFF               	skipz
  3518  0016  1D03               	goto	u2035
  3519  0017  2812               	line	18
  3520                           	
  3521                           l1906:	
  3522  0018                     	movlw	low(01h)
  3523  0018  3001               	movwf	(??___lwdiv+0)+0
  3524  0019  00F4               	movf	(??___lwdiv+0)+0,w
  3525  001A  0874               	addwf	(___lwdiv@counter),f
  3526  001B  07F7               	goto	l1908
  3527  001C  281D               	line	19
  3528                           	
  3529                           l599:	
  3530  001D                     	line	16
  3531                           	
  3532                           l1908:	
  3533  001D                     	btfss	(___lwdiv@divisor+1),(15)&7
  3534  001D  1FF1               	goto	u2041
  3535  001E  2820               	goto	u2040
  3536  001F  2821               u2041:
  3537  0020                     	goto	l1904
  3538  0020  2811               u2040:
  3539  0021                     	goto	l1910
  3540  0021  2823               	
  3541                           l601:	
  3542  0022                     	goto	l1910
  3543  0022  2823               	line	20
  3544                           	
  3545                           l602:	
  3546  0023                     	line	21
  3547                           	
  3548                           l1910:	
  3549  0023                     	movlw	01h
  3550  0023  3001               	
  3551                           u2055:
  3552  0024                     	clrc
  3553  0024  1003               	rlf	(___lwdiv@quotient),f
  3554  0025  0DF5               	rlf	(___lwdiv@quotient+1),f
  3555  0026  0DF6               	addlw	-1
  3556  0027  3EFF               	skipz
  3557  0028  1D03               	goto	u2055
  3558  0029  2824               	line	22
  3559                           	movf	(___lwdiv@divisor+1),w
  3560  002A  0871               	subwf	(___lwdiv@dividend+1),w
  3561  002B  0273               	skipz
  3562  002C  1D03               	goto	u2065
  3563  002D  2830               	movf	(___lwdiv@divisor),w
  3564  002E  0870               	subwf	(___lwdiv@dividend),w
  3565  002F  0272               u2065:
  3566  0030                     	skipc
  3567  0030  1C03               	goto	u2061
  3568  0031  2833               	goto	u2060
  3569  0032  2834               u2061:
  3570  0033                     	goto	l1916
  3571  0033  283C               u2060:
  3572  0034                     	line	23
  3573                           	
  3574                           l1912:	
  3575  0034                     	movf	(___lwdiv@divisor),w
  3576  0034  0870               	subwf	(___lwdiv@dividend),f
  3577  0035  02F2               	movf	(___lwdiv@divisor+1),w
  3578  0036  0871               	skipc
  3579  0037  1C03               	decf	(___lwdiv@dividend+1),f
  3580  0038  03F3               	subwf	(___lwdiv@dividend+1),f
  3581  0039  02F3               	line	24
  3582                           	
  3583                           l1914:	
  3584  003A                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3585  003A  1475               	goto	l1916
  3586  003B  283C               	line	25
  3587                           	
  3588                           l603:	
  3589  003C                     	line	26
  3590                           	
  3591                           l1916:	
  3592  003C                     	movlw	01h
  3593  003C  3001               	
  3594                           u2075:
  3595  003D                     	clrc
  3596  003D  1003               	rrf	(___lwdiv@divisor+1),f
  3597  003E  0CF1               	rrf	(___lwdiv@divisor),f
  3598  003F  0CF0               	addlw	-1
  3599  0040  3EFF               	skipz
  3600  0041  1D03               	goto	u2075
  3601  0042  283D               	line	27
  3602                           	
  3603                           l1918:	
  3604  0043                     	movlw	01h
  3605  0043  3001               	subwf	(___lwdiv@counter),f
  3606  0044  02F7               	btfss	status,2
  3607  0045  1D03               	goto	u2081
  3608  0046  2848               	goto	u2080
  3609  0047  2849               u2081:
  3610  0048                     	goto	l1910
  3611  0048  2823               u2080:
  3612  0049                     	goto	l1920
  3613  0049  284B               	
  3614                           l604:	
  3615  004A                     	goto	l1920
  3616  004A  284B               	line	28
  3617                           	
  3618                           l598:	
  3619  004B                     	line	29
  3620                           	
  3621                           l1920:	
  3622  004B                     	movf	(___lwdiv@quotient+1),w
  3623  004B  0876               	movwf	(?___lwdiv+1)
  3624  004C  00F1               	movf	(___lwdiv@quotient),w
  3625  004D  0875               	movwf	(?___lwdiv)
  3626  004E  00F0               	goto	l605
  3627  004F  2850               	
  3628                           l1922:	
  3629  0050                     	line	30
  3630                           	
  3631                           l605:	
  3632  0050                     	return
  3633  0050  0008               	opt stack 0
  3634                           GLOBAL	__end_of___lwdiv
  3635                           	__end_of___lwdiv:
  3636  0051                     	signat	___lwdiv,8314
  3637                           	global	_setup
  3638                           
  3639 ;; *************** function _setup *****************
  3640 ;; Defined at:
  3641 ;;		line 112 in file "mainM.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0
  3657 ;;      Temps:          0       1       0       0       0
  3658 ;;      Totals:         0       1       0       0       0
  3659 ;;Total ram usage:        1 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		_I2C_Master_Init
  3664 ;;		_clcLCD
  3665 ;;		_initLCD
  3666 ;;		_setCursorLCD
  3667 ;;		_writeStrLCD
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3673                           	file	"mainM.c"
  3674                           	line	112
  3675                           global __ptext6
  3676                           __ptext6:	;psect for function _setup
  3677  0847                     psect	text6
  3678                           	file	"mainM.c"
  3679                           	line	112
  3680                           	global	__size_of_setup
  3681                           	__size_of_setup	equ	__end_of_setup-_setup
  3682  0088                     	
  3683                           _setup:	
  3684  0847                     ;incstack = 0
  3685                           	opt	stack 5
  3686                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3687                           	line	114
  3688                           	
  3689                           l2240:	
  3690  0847                     ;mainM.c: 114:     ANSEL = 0;
  3691                           	bsf	status, 5	;RP0=1, select bank3
  3692  0847  1683               	bsf	status, 6	;RP1=1, select bank3
  3693  0848  1703               	clrf	(392)^0180h	;volatile
  3694  0849  0188               	line	115
  3695                           ;mainM.c: 115:     ANSELH = 0;
  3696                           	clrf	(393)^0180h	;volatile
  3697  084A  0189               	line	116
  3698                           ;mainM.c: 116:     TRISB = 0;
  3699                           	bsf	status, 5	;RP0=1, select bank1
  3700  084B  1683               	bcf	status, 6	;RP1=0, select bank1
  3701  084C  1303               	clrf	(134)^080h	;volatile
  3702  084D  0186               	line	117
  3703                           ;mainM.c: 117:     TRISD = 0;
  3704                           	clrf	(136)^080h	;volatile
  3705  084E  0188               	line	118
  3706                           ;mainM.c: 118:     PORTB = 0;
  3707                           	bcf	status, 5	;RP0=0, select bank0
  3708  084F  1283               	bcf	status, 6	;RP1=0, select bank0
  3709  0850  1303               	clrf	(6)	;volatile
  3710  0851  0186               	line	119
  3711                           ;mainM.c: 119:     PORTD = 0;
  3712                           	clrf	(8)	;volatile
  3713  0852  0188               	line	120
  3714                           	
  3715                           l2242:	
  3716  0853                     ;mainM.c: 120:     I2C_Master_Init(100000);
  3717                           	movlw	0
  3718  0853  3000               	movwf	(I2C_Master_Init@c+3)
  3719  0854  00A3               	movlw	01h
  3720  0855  3001               	movwf	(I2C_Master_Init@c+2)
  3721  0856  00A2               	movlw	086h
  3722  0857  3086               	movwf	(I2C_Master_Init@c+1)
  3723  0858  00A1               	movlw	0A0h
  3724  0859  30A0               	movwf	(I2C_Master_Init@c)
  3725  085A  00A0               
  3726                           	fcall	_I2C_Master_Init
  3727  085B  160A  118A  25AC  120A  158A  	line	122
  3728                           	
  3729                           l2244:	
  3730  0860                     ;mainM.c: 122:     initLCD();
  3731                           	fcall	_initLCD
  3732  0860  160A  118A  25E4  120A  158A  	line	123
  3733                           	
  3734                           l2246:	
  3735  0865                     ;mainM.c: 123:     clcLCD();
  3736                           	fcall	_clcLCD
  3737  0865  160A  118A  242D  120A  158A  	line	126
  3738                           	
  3739                           l2248:	
  3740  086A                     ;mainM.c: 126:     setCursorLCD(1, 1);
  3741                           	clrf	(setCursorLCD@x)
  3742  086A  01F3               	incf	(setCursorLCD@x),f
  3743  086B  0AF3               	movlw	low(01h)
  3744  086C  3001               	fcall	_setCursorLCD
  3745  086D  160A  118A  2499  120A  158A  	line	127
  3746                           	
  3747                           l2250:	
  3748  0872                     ;mainM.c: 127:     writeStrLCD("S1");
  3749                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3750  0872  3011               	movwf	(writeStrLCD@string)
  3751  0873  00F2               	movlw	80h
  3752  0874  3080               	movwf	(writeStrLCD@string+1)
  3753  0875  00F3               	fcall	_writeStrLCD
  3754  0876  120A  158A  2003  120A  158A  	line	128
  3755                           	
  3756                           l2252:	
  3757  087B                     ;mainM.c: 128:     setCursorLCD(1, 7);
  3758                           	movlw	low(07h)
  3759  087B  3007               	bcf	status, 5	;RP0=0, select bank0
  3760  087C  1283               	bcf	status, 6	;RP1=0, select bank0
  3761  087D  1303               	movwf	(??_setup+0)+0
  3762  087E  00A8               	movf	(??_setup+0)+0,w
  3763  087F  0828               	movwf	(setCursorLCD@x)
  3764  0880  00F3               	movlw	low(01h)
  3765  0881  3001               	fcall	_setCursorLCD
  3766  0882  160A  118A  2499  120A  158A  	line	129
  3767                           	
  3768                           l2254:	
  3769  0887                     ;mainM.c: 129:     writeStrLCD("S2");
  3770                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3771  0887  3014               	movwf	(writeStrLCD@string)
  3772  0888  00F2               	movlw	80h
  3773  0889  3080               	movwf	(writeStrLCD@string+1)
  3774  088A  00F3               	fcall	_writeStrLCD
  3775  088B  120A  158A  2003  120A  158A  	line	130
  3776                           	
  3777                           l2256:	
  3778  0890                     ;mainM.c: 130:     setCursorLCD(1, 10);
  3779                           	movlw	low(0Ah)
  3780  0890  300A               	bcf	status, 5	;RP0=0, select bank0
  3781  0891  1283               	bcf	status, 6	;RP1=0, select bank0
  3782  0892  1303               	movwf	(??_setup+0)+0
  3783  0893  00A8               	movf	(??_setup+0)+0,w
  3784  0894  0828               	movwf	(setCursorLCD@x)
  3785  0895  00F3               	movlw	low(01h)
  3786  0896  3001               	fcall	_setCursorLCD
  3787  0897  160A  118A  2499  120A  158A  	line	131
  3788                           	
  3789                           l2258:	
  3790  089C                     ;mainM.c: 131:     writeStrLCD("S3");
  3791                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3792  089C  3017               	movwf	(writeStrLCD@string)
  3793  089D  00F2               	movlw	80h
  3794  089E  3080               	movwf	(writeStrLCD@string+1)
  3795  089F  00F3               	fcall	_writeStrLCD
  3796  08A0  120A  158A  2003  120A  158A  	line	133
  3797                           	
  3798                           l2260:	
  3799  08A5                     ;mainM.c: 133:     date = 22;
  3800                           	movlw	low(016h)
  3801  08A5  3016               	bcf	status, 5	;RP0=0, select bank0
  3802  08A6  1283               	bcf	status, 6	;RP1=0, select bank0
  3803  08A7  1303               	movwf	(??_setup+0)+0
  3804  08A8  00A8               	movf	(??_setup+0)+0,w
  3805  08A9  0828               	bsf	status, 5	;RP0=1, select bank1
  3806  08AA  1683               	bcf	status, 6	;RP1=0, select bank1
  3807  08AB  1303               	movwf	(_date)^080h
  3808  08AC  00B6               	line	134
  3809                           	
  3810                           l2262:	
  3811  08AD                     ;mainM.c: 134:     month = 2;
  3812                           	movlw	low(02h)
  3813  08AD  3002               	bcf	status, 5	;RP0=0, select bank0
  3814  08AE  1283               	bcf	status, 6	;RP1=0, select bank0
  3815  08AF  1303               	movwf	(??_setup+0)+0
  3816  08B0  00A8               	movf	(??_setup+0)+0,w
  3817  08B1  0828               	bsf	status, 5	;RP0=1, select bank1
  3818  08B2  1683               	bcf	status, 6	;RP1=0, select bank1
  3819  08B3  1303               	movwf	(_month)^080h
  3820  08B4  00B5               	line	135
  3821                           	
  3822                           l2264:	
  3823  08B5                     ;mainM.c: 135:     year = 20;
  3824                           	movlw	low(014h)
  3825  08B5  3014               	bcf	status, 5	;RP0=0, select bank0
  3826  08B6  1283               	bcf	status, 6	;RP1=0, select bank0
  3827  08B7  1303               	movwf	(??_setup+0)+0
  3828  08B8  00A8               	movf	(??_setup+0)+0,w
  3829  08B9  0828               	bsf	status, 5	;RP0=1, select bank1
  3830  08BA  1683               	bcf	status, 6	;RP1=0, select bank1
  3831  08BB  1303               	movwf	(_year)^080h
  3832  08BC  00B4               	line	136
  3833                           	
  3834                           l2266:	
  3835  08BD                     ;mainM.c: 136:     sec = 0;
  3836                           	clrf	(_sec)^080h
  3837  08BD  01B9               	line	137
  3838                           	
  3839                           l2268:	
  3840  08BE                     ;mainM.c: 137:     min = 59;
  3841                           	movlw	low(03Bh)
  3842  08BE  303B               	bcf	status, 5	;RP0=0, select bank0
  3843  08BF  1283               	bcf	status, 6	;RP1=0, select bank0
  3844  08C0  1303               	movwf	(??_setup+0)+0
  3845  08C1  00A8               	movf	(??_setup+0)+0,w
  3846  08C2  0828               	bsf	status, 5	;RP0=1, select bank1
  3847  08C3  1683               	bcf	status, 6	;RP1=0, select bank1
  3848  08C4  1303               	movwf	(_min)^080h
  3849  08C5  00B8               	line	138
  3850                           	
  3851                           l2270:	
  3852  08C6                     ;mainM.c: 138:     hour = 11;
  3853                           	movlw	low(0Bh)
  3854  08C6  300B               	bcf	status, 5	;RP0=0, select bank0
  3855  08C7  1283               	bcf	status, 6	;RP1=0, select bank0
  3856  08C8  1303               	movwf	(??_setup+0)+0
  3857  08C9  00A8               	movf	(??_setup+0)+0,w
  3858  08CA  0828               	bsf	status, 5	;RP0=1, select bank1
  3859  08CB  1683               	bcf	status, 6	;RP1=0, select bank1
  3860  08CC  1303               	movwf	(_hour)^080h
  3861  08CD  00B7               	line	139
  3862                           	
  3863                           l94:	
  3864  08CE                     	return
  3865  08CE  0008               	opt stack 0
  3866                           GLOBAL	__end_of_setup
  3867                           	__end_of_setup:
  3868  08CF                     	signat	_setup,89
  3869                           	global	_writeStrLCD
  3870                           
  3871 ;; *************** function _writeStrLCD *****************
  3872 ;; Defined at:
  3873 ;;		line 21 in file "LCD.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  string          2    2[COMMON] PTR unsigned char 
  3876 ;;		 -> writeIntLCD@buffer(4), STR_4(3), STR_3(3), STR_2(3), 
  3877 ;;		 -> STR_1(3), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  cont            2    7[COMMON] int 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         2       0       0       0       0
  3890 ;;      Locals:         2       0       0       0       0
  3891 ;;      Temps:          3       0       0       0       0
  3892 ;;      Totals:         7       0       0       0       0
  3893 ;;Total ram usage:        7 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    1
  3896 ;; This function calls:
  3897 ;;		_writeCharLCD
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;;		_setup
  3901 ;;		_writeIntLCD
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3905                           	file	"LCD.c"
  3906                           	line	21
  3907                           global __ptext7
  3908                           __ptext7:	;psect for function _writeStrLCD
  3909  0803                     psect	text7
  3910                           	file	"LCD.c"
  3911                           	line	21
  3912                           	global	__size_of_writeStrLCD
  3913                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3914  0044                     	
  3915                           _writeStrLCD:	
  3916  0803                     ;incstack = 0
  3917                           	opt	stack 6
  3918                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3919                           	line	23
  3920                           	
  3921                           l1946:	
  3922  0803                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3923                           	clrf	(writeStrLCD@cont)
  3924  0803  01F7               	clrf	(writeStrLCD@cont+1)
  3925  0804  01F8               	goto	l1952
  3926  0805  2829               	
  3927                           l189:	
  3928  0806                     	line	24
  3929                           	
  3930                           l1948:	
  3931  0806                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3932                           	movf	(writeStrLCD@cont),w
  3933  0806  0877               	addwf	(writeStrLCD@string),w
  3934  0807  0772               	movwf	(??_writeStrLCD+1)+0
  3935  0808  00F5               	movf	(writeStrLCD@string+1),w
  3936  0809  0873               	movwf	(??_writeStrLCD+0)+0
  3937  080A  00F4               	skipnc
  3938  080B  1803               	incf	(??_writeStrLCD+0)+0,f
  3939  080C  0AF4               	btfss	(writeStrLCD@cont),7
  3940  080D  1FF7               	goto	u2150
  3941  080E  2810               	decf	(??_writeStrLCD+0)+0,f
  3942  080F  03F4               u2150:
  3943  0810                     	movf	(??_writeStrLCD+0)+0,w
  3944  0810  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3945  0811  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3946  0812  0876               	bcf	status, 5	;RP0=0, select bank0
  3947  0813  1283               	bcf	status, 6	;RP1=0, select bank0
  3948  0814  1303               	movwf	btemp+1
  3949  0815  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3950  0816  0875               	movwf	fsr0
  3951  0817  0084               	fcall	stringtab
  3952  0818  160A  118A  2000  120A  158A  	fcall	_writeCharLCD
  3953  081D  160A  118A  2476  120A  158A  	line	25
  3954                           	
  3955                           l1950:	
  3956  0822                     ;LCD.c: 25:     }
  3957                           	movlw	01h
  3958  0822  3001               	addwf	(writeStrLCD@cont),f
  3959  0823  07F7               	skipnc
  3960  0824  1803               	incf	(writeStrLCD@cont+1),f
  3961  0825  0AF8               	movlw	0
  3962  0826  3000               	addwf	(writeStrLCD@cont+1),f
  3963  0827  07F8               	goto	l1952
  3964  0828  2829               	
  3965                           l188:	
  3966  0829                     	
  3967                           l1952:	
  3968  0829                     	movf	(writeStrLCD@cont),w
  3969  0829  0877               	addwf	(writeStrLCD@string),w
  3970  082A  0772               	movwf	(??_writeStrLCD+1)+0
  3971  082B  00F5               	movf	(writeStrLCD@string+1),w
  3972  082C  0873               	movwf	(??_writeStrLCD+0)+0
  3973  082D  00F4               	skipnc
  3974  082E  1803               	incf	(??_writeStrLCD+0)+0,f
  3975  082F  0AF4               	btfss	(writeStrLCD@cont),7
  3976  0830  1FF7               	goto	u2160
  3977  0831  2833               	decf	(??_writeStrLCD+0)+0,f
  3978  0832  03F4               u2160:
  3979  0833                     	movf	(??_writeStrLCD+0)+0,w
  3980  0833  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3981  0834  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3982  0835  0876               	bcf	status, 5	;RP0=0, select bank0
  3983  0836  1283               	bcf	status, 6	;RP1=0, select bank0
  3984  0837  1303               	movwf	btemp+1
  3985  0838  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3986  0839  0875               	movwf	fsr0
  3987  083A  0084               	fcall	stringtab
  3988  083B  160A  118A  2000  120A  158A  	xorlw	0
  3989  0840  3A00               	skipz
  3990  0841  1D03               	goto	u2171
  3991  0842  2844               	goto	u2170
  3992  0843  2845               u2171:
  3993  0844                     	goto	l1948
  3994  0844  2806               u2170:
  3995  0845                     	goto	l191
  3996  0845  2846               	
  3997                           l190:	
  3998  0846                     	line	26
  3999                           	
  4000                           l191:	
  4001  0846                     	return
  4002  0846  0008               	opt stack 0
  4003                           GLOBAL	__end_of_writeStrLCD
  4004                           	__end_of_writeStrLCD:
  4005  0847                     	signat	_writeStrLCD,4217
  4006                           	global	_writeCharLCD
  4007                           
  4008 ;; *************** function _writeCharLCD *****************
  4009 ;; Defined at:
  4010 ;;		line 28 in file "LCD.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  character       1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  character       1    1[COMMON] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0
  4026 ;;      Temps:          1       0       0       0       0
  4027 ;;      Totals:         2       0       0       0       0
  4028 ;;Total ram usage:        2 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;;		_writeStrLCD
  4035 ;;		_writeFloat
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4039                           	line	28
  4040                           global __ptext8
  4041                           __ptext8:	;psect for function _writeCharLCD
  4042  1476                     psect	text8
  4043                           	file	"LCD.c"
  4044                           	line	28
  4045                           	global	__size_of_writeCharLCD
  4046                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  4047  000F                     	
  4048                           _writeCharLCD:	
  4049  1476                     ;incstack = 0
  4050                           	opt	stack 6
  4051                           ; Regs used in _writeCharLCD: [wreg]
  4052                           ;writeCharLCD@character stored from wreg
  4053                           	movwf	(writeCharLCD@character)
  4054  1476  00F1               	line	29
  4055                           	
  4056                           l1890:	
  4057  1477                     ;LCD.c: 29:    RD0 = 1;
  4058                           	bcf	status, 5	;RP0=0, select bank0
  4059  1477  1283               	bcf	status, 6	;RP1=0, select bank0
  4060  1478  1303               	bsf	(64/8),(64)&7	;volatile
  4061  1479  1408               	line	30
  4062                           	
  4063                           l1892:	
  4064  147A                     ;LCD.c: 30:    PORTB = character;
  4065                           	movf	(writeCharLCD@character),w
  4066  147A  0871               	movwf	(6)	;volatile
  4067  147B  0086               	line	31
  4068                           	
  4069                           l1894:	
  4070  147C                     ;LCD.c: 31:    RD1 = 1;
  4071                           	bsf	(65/8),(65)&7	;volatile
  4072  147C  1488               	line	32
  4073                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4074                           	opt asmopt_push
  4075                           opt asmopt_off
  4076                           	movlw	13
  4077  147D  300D               movwf	((??_writeCharLCD+0)+0),f
  4078  147E  00F0               	u4067:
  4079  147F                     decfsz	(??_writeCharLCD+0)+0,f
  4080  147F  0BF0               	goto	u4067
  4081  1480  2C7F               opt asmopt_pop
  4082                           
  4083                           	line	33
  4084                           	
  4085                           l1896:	
  4086  1481                     ;LCD.c: 33:    RD1 = 0;
  4087                           	bcf	status, 5	;RP0=0, select bank0
  4088  1481  1283               	bcf	status, 6	;RP1=0, select bank0
  4089  1482  1303               	bcf	(65/8),(65)&7	;volatile
  4090  1483  1088               	line	34
  4091                           	
  4092                           l194:	
  4093  1484                     	return
  4094  1484  0008               	opt stack 0
  4095                           GLOBAL	__end_of_writeCharLCD
  4096                           	__end_of_writeCharLCD:
  4097  1485                     	signat	_writeCharLCD,4217
  4098                           	global	_setCursorLCD
  4099                           
  4100 ;; *************** function _setCursorLCD *****************
  4101 ;; Defined at:
  4102 ;;		line 8 in file "LCD.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  y               1    wreg     unsigned char 
  4105 ;;  x               1    3[COMMON] unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  y               1    5[COMMON] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         1       0       0       0       0
  4118 ;;      Locals:         1       0       0       0       0
  4119 ;;      Temps:          1       0       0       0       0
  4120 ;;      Totals:         3       0       0       0       0
  4121 ;;Total ram usage:        3 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    1
  4124 ;; This function calls:
  4125 ;;		_cmdLCD
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;;		_setup
  4129 ;;		_writeFloat
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4133                           	line	8
  4134                           global __ptext9
  4135                           __ptext9:	;psect for function _setCursorLCD
  4136  1499                     psect	text9
  4137                           	file	"LCD.c"
  4138                           	line	8
  4139                           	global	__size_of_setCursorLCD
  4140                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  4141  001D                     	
  4142                           _setCursorLCD:	
  4143  1499                     ;incstack = 0
  4144                           	opt	stack 5
  4145                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4146                           ;setCursorLCD@y stored from wreg
  4147                           	movwf	(setCursorLCD@y)
  4148  1499  00F5               	line	9
  4149                           	
  4150                           l2176:	
  4151  149A                     ;LCD.c: 9:     if(y == 1){
  4152                           		decf	((setCursorLCD@y)),w
  4153  149A  0375               	btfss	status,2
  4154  149B  1D03               	goto	u2591
  4155  149C  2C9E               	goto	u2590
  4156  149D  2C9F               u2591:
  4157  149E                     	goto	l2180
  4158  149E  2CA7               u2590:
  4159  149F                     	line	10
  4160                           	
  4161                           l2178:	
  4162  149F                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  4163                           	movf	(setCursorLCD@x),w
  4164  149F  0873               	addlw	07Fh
  4165  14A0  3E7F               	movwf	(??_setCursorLCD+0)+0
  4166  14A1  00F4               	movf	(??_setCursorLCD+0)+0,w
  4167  14A2  0874               	bsf	status, 5	;RP0=1, select bank1
  4168  14A3  1683               	bcf	status, 6	;RP1=0, select bank1
  4169  14A4  1303               	movwf	(_cursor)^080h
  4170  14A5  00C1               	line	11
  4171                           ;LCD.c: 11:     }else{
  4172                           	goto	l2182
  4173  14A6  2CAF               	
  4174                           l180:	
  4175  14A7                     	line	12
  4176                           	
  4177                           l2180:	
  4178  14A7                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  4179                           	movf	(setCursorLCD@x),w
  4180  14A7  0873               	addlw	0BFh
  4181  14A8  3EBF               	movwf	(??_setCursorLCD+0)+0
  4182  14A9  00F4               	movf	(??_setCursorLCD+0)+0,w
  4183  14AA  0874               	bsf	status, 5	;RP0=1, select bank1
  4184  14AB  1683               	bcf	status, 6	;RP1=0, select bank1
  4185  14AC  1303               	movwf	(_cursor)^080h
  4186  14AD  00C1               	goto	l2182
  4187  14AE  2CAF               	line	13
  4188                           ;LCD.c: 13:     }
  4189                           	
  4190                           l181:	
  4191  14AF                     	line	14
  4192                           	
  4193                           l2182:	
  4194  14AF                     ;LCD.c: 14:     cmdLCD(cursor);
  4195                           	movf	(_cursor)^080h,w
  4196  14AF  0841               	fcall	_cmdLCD
  4197  14B0  160A  118A  2485  160A  118A  	line	15
  4198                           	
  4199                           l182:	
  4200  14B5                     	return
  4201  14B5  0008               	opt stack 0
  4202                           GLOBAL	__end_of_setCursorLCD
  4203                           	__end_of_setCursorLCD:
  4204  14B6                     	signat	_setCursorLCD,8313
  4205                           	global	_initLCD
  4206                           
  4207 ;; *************** function _initLCD *****************
  4208 ;; Defined at:
  4209 ;;		line 36 in file "LCD.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0, pclath, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4223 ;;      Params:         0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0
  4225 ;;      Temps:          2       0       0       0       0
  4226 ;;      Totals:         2       0       0       0       0
  4227 ;;Total ram usage:        2 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    1
  4230 ;; This function calls:
  4231 ;;		_cmdLCD
  4232 ;; This function is called by:
  4233 ;;		_setup
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4237                           	line	36
  4238                           global __ptext10
  4239                           __ptext10:	;psect for function _initLCD
  4240  15E4                     psect	text10
  4241                           	file	"LCD.c"
  4242                           	line	36
  4243                           	global	__size_of_initLCD
  4244                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  4245  003A                     	
  4246                           _initLCD:	
  4247  15E4                     ;incstack = 0
  4248                           	opt	stack 5
  4249                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4250                           	line	37
  4251                           	
  4252                           l2198:	
  4253  15E4                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  4254                           	opt asmopt_push
  4255                           opt asmopt_off
  4256                           movlw	20
  4257  15E4  3014               movwf	((??_initLCD+0)+0+1),f
  4258  15E5  00F4               	movlw	121
  4259  15E6  3079               movwf	((??_initLCD+0)+0),f
  4260  15E7  00F3               	u4077:
  4261  15E8                     decfsz	((??_initLCD+0)+0),f
  4262  15E8  0BF3               	goto	u4077
  4263  15E9  2DE8               	decfsz	((??_initLCD+0)+0+1),f
  4264  15EA  0BF4               	goto	u4077
  4265  15EB  2DE8               	nop2
  4266  15EC  2DED               opt asmopt_pop
  4267                           
  4268                           	line	38
  4269                           	
  4270                           l2200:	
  4271  15ED                     ;LCD.c: 38:     cmdLCD(0x030);
  4272                           	movlw	low(030h)
  4273  15ED  3030               	fcall	_cmdLCD
  4274  15EE  160A  118A  2485  160A  118A  	line	39
  4275                           	
  4276                           l2202:	
  4277  15F3                     ;LCD.c: 39:     cmdLCD(0x030);
  4278                           	movlw	low(030h)
  4279  15F3  3030               	fcall	_cmdLCD
  4280  15F4  160A  118A  2485  160A  118A  	line	40
  4281                           	
  4282                           l2204:	
  4283  15F9                     ;LCD.c: 40:     cmdLCD(0x030);
  4284                           	movlw	low(030h)
  4285  15F9  3030               	fcall	_cmdLCD
  4286  15FA  160A  118A  2485  160A  118A  	line	42
  4287                           	
  4288                           l2206:	
  4289  15FF                     ;LCD.c: 42:     cmdLCD(0x38);
  4290                           	movlw	low(038h)
  4291  15FF  3038               	fcall	_cmdLCD
  4292  1600  160A  118A  2485  160A  118A  	line	43
  4293                           	
  4294                           l2208:	
  4295  1605                     ;LCD.c: 43:     cmdLCD(0x10);
  4296                           	movlw	low(010h)
  4297  1605  3010               	fcall	_cmdLCD
  4298  1606  160A  118A  2485  160A  118A  	line	44
  4299                           	
  4300                           l2210:	
  4301  160B                     ;LCD.c: 44:     cmdLCD(0x01);
  4302                           	movlw	low(01h)
  4303  160B  3001               	fcall	_cmdLCD
  4304  160C  160A  118A  2485  160A  118A  	line	45
  4305                           	
  4306                           l2212:	
  4307  1611                     ;LCD.c: 45:     cmdLCD(0x06);
  4308                           	movlw	low(06h)
  4309  1611  3006               	fcall	_cmdLCD
  4310  1612  160A  118A  2485  160A  118A  	line	46
  4311                           	
  4312                           l2214:	
  4313  1617                     ;LCD.c: 46:     cmdLCD(0x0E);
  4314                           	movlw	low(0Eh)
  4315  1617  300E               	fcall	_cmdLCD
  4316  1618  160A  118A  2485  160A  118A  	line	47
  4317                           	
  4318                           l197:	
  4319  161D                     	return
  4320  161D  0008               	opt stack 0
  4321                           GLOBAL	__end_of_initLCD
  4322                           	__end_of_initLCD:
  4323  161E                     	signat	_initLCD,89
  4324                           	global	_clcLCD
  4325                           
  4326 ;; *************** function _clcLCD *****************
  4327 ;; Defined at:
  4328 ;;		line 17 in file "LCD.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         0       0       0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    1
  4349 ;; This function calls:
  4350 ;;		_cmdLCD
  4351 ;; This function is called by:
  4352 ;;		_setup
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4356                           	line	17
  4357                           global __ptext11
  4358                           __ptext11:	;psect for function _clcLCD
  4359  142D                     psect	text11
  4360                           	file	"LCD.c"
  4361                           	line	17
  4362                           	global	__size_of_clcLCD
  4363                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  4364  0007                     	
  4365                           _clcLCD:	
  4366  142D                     ;incstack = 0
  4367                           	opt	stack 5
  4368                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  4369                           	line	18
  4370                           	
  4371                           l2216:	
  4372  142D                     ;LCD.c: 18:     cmdLCD(0x01);
  4373                           	movlw	low(01h)
  4374  142D  3001               	fcall	_cmdLCD
  4375  142E  160A  118A  2485  160A  118A  	line	19
  4376                           	
  4377                           l185:	
  4378  1433                     	return
  4379  1433  0008               	opt stack 0
  4380                           GLOBAL	__end_of_clcLCD
  4381                           	__end_of_clcLCD:
  4382  1434                     	signat	_clcLCD,89
  4383                           	global	_cmdLCD
  4384                           
  4385 ;; *************** function _cmdLCD *****************
  4386 ;; Defined at:
  4387 ;;		line 49 in file "LCD.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  cmd             1    wreg     unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  cmd             1    2[COMMON] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       0       0       0       0
  4402 ;;      Locals:         1       0       0       0       0
  4403 ;;      Temps:          2       0       0       0       0
  4404 ;;      Totals:         3       0       0       0       0
  4405 ;;Total ram usage:        3 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_setCursorLCD
  4411 ;;		_clcLCD
  4412 ;;		_initLCD
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4416                           	line	49
  4417                           global __ptext12
  4418                           __ptext12:	;psect for function _cmdLCD
  4419  1485                     psect	text12
  4420                           	file	"LCD.c"
  4421                           	line	49
  4422                           	global	__size_of_cmdLCD
  4423                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  4424  0014                     	
  4425                           _cmdLCD:	
  4426  1485                     ;incstack = 0
  4427                           	opt	stack 5
  4428                           ; Regs used in _cmdLCD: [wreg]
  4429                           ;cmdLCD@cmd stored from wreg
  4430                           	movwf	(cmdLCD@cmd)
  4431  1485  00F2               	line	50
  4432                           	
  4433                           l1958:	
  4434  1486                     ;LCD.c: 50:     RD0 = 0;
  4435                           	bcf	status, 5	;RP0=0, select bank0
  4436  1486  1283               	bcf	status, 6	;RP1=0, select bank0
  4437  1487  1303               	bcf	(64/8),(64)&7	;volatile
  4438  1488  1008               	line	51
  4439                           	
  4440                           l1960:	
  4441  1489                     ;LCD.c: 51:  PORTB = cmd;
  4442                           	movf	(cmdLCD@cmd),w
  4443  1489  0872               	movwf	(6)	;volatile
  4444  148A  0086               	line	52
  4445                           	
  4446                           l1962:	
  4447  148B                     ;LCD.c: 52:  RD1 = 1;
  4448                           	bsf	(65/8),(65)&7	;volatile
  4449  148B  1488               	line	53
  4450                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4451                           	opt asmopt_push
  4452                           opt asmopt_off
  4453                           movlw	6
  4454  148C  3006               movwf	((??_cmdLCD+0)+0+1),f
  4455  148D  00F1               	movlw	48
  4456  148E  3030               movwf	((??_cmdLCD+0)+0),f
  4457  148F  00F0               	u4087:
  4458  1490                     decfsz	((??_cmdLCD+0)+0),f
  4459  1490  0BF0               	goto	u4087
  4460  1491  2C90               	decfsz	((??_cmdLCD+0)+0+1),f
  4461  1492  0BF1               	goto	u4087
  4462  1493  2C90               	nop
  4463  1494  0000               opt asmopt_pop
  4464                           
  4465                           	line	54
  4466                           	
  4467                           l1964:	
  4468  1495                     ;LCD.c: 54:     RD1 = 0;
  4469                           	bcf	status, 5	;RP0=0, select bank0
  4470  1495  1283               	bcf	status, 6	;RP1=0, select bank0
  4471  1496  1303               	bcf	(65/8),(65)&7	;volatile
  4472  1497  1088               	line	55
  4473                           	
  4474                           l200:	
  4475  1498                     	return
  4476  1498  0008               	opt stack 0
  4477                           GLOBAL	__end_of_cmdLCD
  4478                           	__end_of_cmdLCD:
  4479  1499                     	signat	_cmdLCD,4217
  4480                           	global	_I2C_Master_Init
  4481                           
  4482 ;; *************** function _I2C_Master_Init *****************
  4483 ;; Defined at:
  4484 ;;		line 16 in file "I2C.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  c               4    0[BANK0 ] const unsigned long 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, pclath, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4498 ;;      Params:         0       4       0       0       0
  4499 ;;      Locals:         0       0       0       0       0
  4500 ;;      Temps:          0       4       0       0       0
  4501 ;;      Totals:         0       8       0       0       0
  4502 ;;Total ram usage:        8 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    1
  4505 ;; This function calls:
  4506 ;;		___lldiv
  4507 ;; This function is called by:
  4508 ;;		_setup
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4512                           	file	"I2C.c"
  4513                           	line	16
  4514                           global __ptext13
  4515                           __ptext13:	;psect for function _I2C_Master_Init
  4516  15AC                     psect	text13
  4517                           	file	"I2C.c"
  4518                           	line	16
  4519                           	global	__size_of_I2C_Master_Init
  4520                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4521  0038                     	
  4522                           _I2C_Master_Init:	
  4523  15AC                     ;incstack = 0
  4524                           	opt	stack 5
  4525                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4526                           	line	18
  4527                           	
  4528                           l2186:	
  4529  15AC                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  4530                           	movlw	low(028h)
  4531  15AC  3028               	bcf	status, 5	;RP0=0, select bank0
  4532  15AD  1283               	bcf	status, 6	;RP1=0, select bank0
  4533  15AE  1303               	movwf	(20)	;volatile
  4534  15AF  0094               	line	19
  4535                           	
  4536                           l2188:	
  4537  15B0                     ;I2C.c: 19:     SSPCON2 = 0;
  4538                           	bsf	status, 5	;RP0=1, select bank1
  4539  15B0  1683               	bcf	status, 6	;RP1=0, select bank1
  4540  15B1  1303               	clrf	(145)^080h	;volatile
  4541  15B2  0191               	line	20
  4542                           	
  4543                           l2190:	
  4544  15B3                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  4545                           	bcf	status, 5	;RP0=0, select bank0
  4546  15B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4547  15B4  1303               	movf	(I2C_Master_Init@c),w
  4548  15B5  0820               	movwf	(??_I2C_Master_Init+0)+0
  4549  15B6  00A4               	movf	(I2C_Master_Init@c+1),w
  4550  15B7  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  4551  15B8  00A5               	movf	(I2C_Master_Init@c+2),w
  4552  15B9  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  4553  15BA  00A6               	movf	(I2C_Master_Init@c+3),w
  4554  15BB  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  4555  15BC  00A7               	movlw	02h
  4556  15BD  3002               u2605:
  4557  15BE                     	clrc
  4558  15BE  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4559  15BF  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  4560  15C0  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  4561  15C1  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  4562  15C2  0DA7               u2600:
  4563  15C3                     	addlw	-1
  4564  15C3  3EFF               	skipz
  4565  15C4  1D03               	goto	u2605
  4566  15C5  2DBE               	movf	3+(??_I2C_Master_Init+0)+0,w
  4567  15C6  0827               	movwf	(___lldiv@divisor+3)
  4568  15C7  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4569  15C8  0826               	movwf	(___lldiv@divisor+2)
  4570  15C9  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4571  15CA  0825               	movwf	(___lldiv@divisor+1)
  4572  15CB  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4573  15CC  0824               	movwf	(___lldiv@divisor)
  4574  15CD  00F0               
  4575                           	movlw	0
  4576  15CE  3000               	movwf	(___lldiv@dividend+3)
  4577  15CF  00F7               	movlw	03Dh
  4578  15D0  303D               	movwf	(___lldiv@dividend+2)
  4579  15D1  00F6               	movlw	09h
  4580  15D2  3009               	movwf	(___lldiv@dividend+1)
  4581  15D3  00F5               	movlw	0
  4582  15D4  3000               	movwf	(___lldiv@dividend)
  4583  15D5  00F4               
  4584                           	fcall	___lldiv
  4585  15D6  160A  118A  2722  160A  118A  	movf	(0+(?___lldiv)),w
  4586  15DB  0870               	addlw	0FFh
  4587  15DC  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4588  15DD  1683               	bcf	status, 6	;RP1=0, select bank1
  4589  15DE  1303               	movwf	(147)^080h	;volatile
  4590  15DF  0093               	line	21
  4591                           	
  4592                           l2192:	
  4593  15E0                     ;I2C.c: 21:     SSPSTAT = 0;
  4594                           	clrf	(148)^080h	;volatile
  4595  15E0  0194               	line	22
  4596                           	
  4597                           l2194:	
  4598  15E1                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4599                           	bsf	(135)^080h,3	;volatile
  4600  15E1  1587               	line	23
  4601                           	
  4602                           l2196:	
  4603  15E2                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4604                           	bsf	(135)^080h,4	;volatile
  4605  15E2  1607               	line	24
  4606                           	
  4607                           l135:	
  4608  15E3                     	return
  4609  15E3  0008               	opt stack 0
  4610                           GLOBAL	__end_of_I2C_Master_Init
  4611                           	__end_of_I2C_Master_Init:
  4612  15E4                     	signat	_I2C_Master_Init,4217
  4613                           	global	___lldiv
  4614                           
  4615 ;; *************** function ___lldiv *****************
  4616 ;; Defined at:
  4617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  divisor         4    0[COMMON] unsigned long 
  4620 ;;  dividend        4    4[COMMON] unsigned long 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  quotient        4    9[COMMON] unsigned long 
  4623 ;;  counter         1   13[COMMON] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  4    0[COMMON] unsigned long 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         8       0       0       0       0
  4634 ;;      Locals:         5       0       0       0       0
  4635 ;;      Temps:          1       0       0       0       0
  4636 ;;      Totals:        14       0       0       0       0
  4637 ;;Total ram usage:       14 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_I2C_Master_Init
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4646                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4647                           	line	5
  4648                           global __ptext14
  4649                           __ptext14:	;psect for function ___lldiv
  4650  1722                     psect	text14
  4651                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4652                           	line	5
  4653                           	global	__size_of___lldiv
  4654                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4655  006D                     	
  4656                           ___lldiv:	
  4657  1722                     ;incstack = 0
  4658                           	opt	stack 5
  4659                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4660                           	line	13
  4661                           	
  4662                           l2042:	
  4663  1722                     	movlw	high highword(0)
  4664  1722  3000               	movwf	(___lldiv@quotient+3)
  4665  1723  00FC               	movlw	low highword(0)
  4666  1724  3000               	movwf	(___lldiv@quotient+2)
  4667  1725  00FB               	movlw	high(0)
  4668  1726  3000               	movwf	(___lldiv@quotient+1)
  4669  1727  00FA               	movlw	low(0)
  4670  1728  3000               	movwf	(___lldiv@quotient)
  4671  1729  00F9               
  4672                           	line	14
  4673                           	movf	(___lldiv@divisor+3),w
  4674  172A  0873               	iorwf	(___lldiv@divisor+2),w
  4675  172B  0472               	iorwf	(___lldiv@divisor+1),w
  4676  172C  0471               	iorwf	(___lldiv@divisor),w
  4677  172D  0470               	skipnz
  4678  172E  1903               	goto	u2321
  4679  172F  2F31               	goto	u2320
  4680  1730  2F32               u2321:
  4681  1731                     	goto	l2062
  4682  1731  2F85               u2320:
  4683  1732                     	line	15
  4684                           	
  4685                           l2044:	
  4686  1732                     	clrf	(___lldiv@counter)
  4687  1732  01FD               	incf	(___lldiv@counter),f
  4688  1733  0AFD               	line	16
  4689                           	goto	l2048
  4690  1734  2F43               	
  4691                           l364:	
  4692  1735                     	line	17
  4693                           	
  4694                           l2046:	
  4695  1735                     	movlw	01h
  4696  1735  3001               	movwf	(??___lldiv+0)+0
  4697  1736  00F8               u2335:
  4698  1737                     	clrc
  4699  1737  1003               	rlf	(___lldiv@divisor),f
  4700  1738  0DF0               	rlf	(___lldiv@divisor+1),f
  4701  1739  0DF1               	rlf	(___lldiv@divisor+2),f
  4702  173A  0DF2               	rlf	(___lldiv@divisor+3),f
  4703  173B  0DF3               	decfsz	(??___lldiv+0)+0
  4704  173C  0BF8               	goto	u2335
  4705  173D  2F37               	line	18
  4706                           	movlw	low(01h)
  4707  173E  3001               	movwf	(??___lldiv+0)+0
  4708  173F  00F8               	movf	(??___lldiv+0)+0,w
  4709  1740  0878               	addwf	(___lldiv@counter),f
  4710  1741  07FD               	goto	l2048
  4711  1742  2F43               	line	19
  4712                           	
  4713                           l363:	
  4714  1743                     	line	16
  4715                           	
  4716                           l2048:	
  4717  1743                     	btfss	(___lldiv@divisor+3),(31)&7
  4718  1743  1FF3               	goto	u2341
  4719  1744  2F46               	goto	u2340
  4720  1745  2F47               u2341:
  4721  1746                     	goto	l2046
  4722  1746  2F35               u2340:
  4723  1747                     	goto	l2050
  4724  1747  2F49               	
  4725                           l365:	
  4726  1748                     	goto	l2050
  4727  1748  2F49               	line	20
  4728                           	
  4729                           l366:	
  4730  1749                     	line	21
  4731                           	
  4732                           l2050:	
  4733  1749                     	movlw	01h
  4734  1749  3001               	movwf	(??___lldiv+0)+0
  4735  174A  00F8               u2355:
  4736  174B                     	clrc
  4737  174B  1003               	rlf	(___lldiv@quotient),f
  4738  174C  0DF9               	rlf	(___lldiv@quotient+1),f
  4739  174D  0DFA               	rlf	(___lldiv@quotient+2),f
  4740  174E  0DFB               	rlf	(___lldiv@quotient+3),f
  4741  174F  0DFC               	decfsz	(??___lldiv+0)+0
  4742  1750  0BF8               	goto	u2355
  4743  1751  2F4B               	line	22
  4744                           	
  4745                           l2052:	
  4746  1752                     	movf	(___lldiv@divisor+3),w
  4747  1752  0873               	subwf	(___lldiv@dividend+3),w
  4748  1753  0277               	skipz
  4749  1754  1D03               	goto	u2365
  4750  1755  2F60               	movf	(___lldiv@divisor+2),w
  4751  1756  0872               	subwf	(___lldiv@dividend+2),w
  4752  1757  0276               	skipz
  4753  1758  1D03               	goto	u2365
  4754  1759  2F60               	movf	(___lldiv@divisor+1),w
  4755  175A  0871               	subwf	(___lldiv@dividend+1),w
  4756  175B  0275               	skipz
  4757  175C  1D03               	goto	u2365
  4758  175D  2F60               	movf	(___lldiv@divisor),w
  4759  175E  0870               	subwf	(___lldiv@dividend),w
  4760  175F  0274               u2365:
  4761  1760                     	skipc
  4762  1760  1C03               	goto	u2361
  4763  1761  2F63               	goto	u2360
  4764  1762  2F64               u2361:
  4765  1763                     	goto	l2058
  4766  1763  2F74               u2360:
  4767  1764                     	line	23
  4768                           	
  4769                           l2054:	
  4770  1764                     	movf	(___lldiv@divisor),w
  4771  1764  0870               	subwf	(___lldiv@dividend),f
  4772  1765  02F4               	movf	(___lldiv@divisor+1),w
  4773  1766  0871               	skipc
  4774  1767  1C03               	incfsz	(___lldiv@divisor+1),w
  4775  1768  0F71               	subwf	(___lldiv@dividend+1),f
  4776  1769  02F5               	movf	(___lldiv@divisor+2),w
  4777  176A  0872               	skipc
  4778  176B  1C03               	incfsz	(___lldiv@divisor+2),w
  4779  176C  0F72               	subwf	(___lldiv@dividend+2),f
  4780  176D  02F6               	movf	(___lldiv@divisor+3),w
  4781  176E  0873               	skipc
  4782  176F  1C03               	incfsz	(___lldiv@divisor+3),w
  4783  1770  0F73               	subwf	(___lldiv@dividend+3),f
  4784  1771  02F7               	line	24
  4785                           	
  4786                           l2056:	
  4787  1772                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4788  1772  1479               	goto	l2058
  4789  1773  2F74               	line	25
  4790                           	
  4791                           l367:	
  4792  1774                     	line	26
  4793                           	
  4794                           l2058:	
  4795  1774                     	movlw	01h
  4796  1774  3001               u2375:
  4797  1775                     	clrc
  4798  1775  1003               	rrf	(___lldiv@divisor+3),f
  4799  1776  0CF3               	rrf	(___lldiv@divisor+2),f
  4800  1777  0CF2               	rrf	(___lldiv@divisor+1),f
  4801  1778  0CF1               	rrf	(___lldiv@divisor),f
  4802  1779  0CF0               	addlw	-1
  4803  177A  3EFF               	skipz
  4804  177B  1D03               	goto	u2375
  4805  177C  2F75               
  4806                           	line	27
  4807                           	
  4808                           l2060:	
  4809  177D                     	movlw	01h
  4810  177D  3001               	subwf	(___lldiv@counter),f
  4811  177E  02FD               	btfss	status,2
  4812  177F  1D03               	goto	u2381
  4813  1780  2F82               	goto	u2380
  4814  1781  2F83               u2381:
  4815  1782                     	goto	l2050
  4816  1782  2F49               u2380:
  4817  1783                     	goto	l2062
  4818  1783  2F85               	
  4819                           l368:	
  4820  1784                     	goto	l2062
  4821  1784  2F85               	line	28
  4822                           	
  4823                           l362:	
  4824  1785                     	line	29
  4825                           	
  4826                           l2062:	
  4827  1785                     	movf	(___lldiv@quotient+3),w
  4828  1785  087C               	movwf	(?___lldiv+3)
  4829  1786  00F3               	movf	(___lldiv@quotient+2),w
  4830  1787  087B               	movwf	(?___lldiv+2)
  4831  1788  00F2               	movf	(___lldiv@quotient+1),w
  4832  1789  087A               	movwf	(?___lldiv+1)
  4833  178A  00F1               	movf	(___lldiv@quotient),w
  4834  178B  0879               	movwf	(?___lldiv)
  4835  178C  00F0               
  4836                           	goto	l369
  4837  178D  2F8E               	
  4838                           l2064:	
  4839  178E                     	line	30
  4840                           	
  4841                           l369:	
  4842  178E                     	return
  4843  178E  0008               	opt stack 0
  4844                           GLOBAL	__end_of___lldiv
  4845                           	__end_of___lldiv:
  4846  178F                     	signat	___lldiv,8316
  4847                           	global	___xxtofl
  4848                           
  4849 ;; *************** function ___xxtofl *****************
  4850 ;; Defined at:
  4851 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  sign            1    wreg     unsigned char 
  4854 ;;  val             4    0[COMMON] long 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  sign            1    8[COMMON] unsigned char 
  4857 ;;  arg             4   10[COMMON] unsigned long 
  4858 ;;  exp             1    9[COMMON] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  4    0[COMMON] unsigned char 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         4       0       0       0       0
  4869 ;;      Locals:         6       0       0       0       0
  4870 ;;      Temps:          4       0       0       0       0
  4871 ;;      Totals:        14       0       0       0       0
  4872 ;;Total ram usage:       14 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4881                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4882                           	line	10
  4883                           global __ptext15
  4884                           __ptext15:	;psect for function ___xxtofl
  4885  0969                     psect	text15
  4886                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4887                           	line	10
  4888                           	global	__size_of___xxtofl
  4889                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4890  00C2                     	
  4891                           ___xxtofl:	
  4892  0969                     ;incstack = 0
  4893                           	opt	stack 7
  4894                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4895                           ;___xxtofl@sign stored from wreg
  4896                           	movwf	(___xxtofl@sign)
  4897  0969  00F8               	line	15
  4898                           	
  4899                           l2816:	
  4900  096A                     	movf	((___xxtofl@sign)),w
  4901  096A  0878               	btfsc	status,2
  4902  096B  1903               	goto	u3881
  4903  096C  296E               	goto	u3880
  4904  096D  296F               u3881:
  4905  096E                     	goto	l2822
  4906  096E  2983               u3880:
  4907  096F                     	
  4908                           l2818:	
  4909  096F                     	btfss	(___xxtofl@val+3),7
  4910  096F  1FF3               	goto	u3891
  4911  0970  2972               	goto	u3890
  4912  0971  2973               u3891:
  4913  0972                     	goto	l2822
  4914  0972  2983               u3890:
  4915  0973                     	line	16
  4916                           	
  4917                           l2820:	
  4918  0973                     	comf	(___xxtofl@val)+0,w
  4919  0973  0970               	movwf	(___xxtofl@arg)
  4920  0974  00FA               	comf	(___xxtofl@val)+1,w
  4921  0975  0971               	movwf	(___xxtofl@arg+1)
  4922  0976  00FB               	comf	(___xxtofl@val)+2,w
  4923  0977  0972               	movwf	(___xxtofl@arg+2)
  4924  0978  00FC               	comf	(___xxtofl@val)+3,w
  4925  0979  0973               	movwf	(___xxtofl@arg+3)
  4926  097A  00FD               	incf	(___xxtofl@arg),f
  4927  097B  0AFA               	skipnz
  4928  097C  1903               	incf	(___xxtofl@arg+1),f
  4929  097D  0AFB               	skipnz
  4930  097E  1903               	incf	(___xxtofl@arg+2),f
  4931  097F  0AFC               	skipnz
  4932  0980  1903               	incf	(___xxtofl@arg+3),f
  4933  0981  0AFD               	line	17
  4934                           	goto	l741
  4935  0982  298B               	line	18
  4936                           	
  4937                           l740:	
  4938  0983                     	line	19
  4939                           	
  4940                           l2822:	
  4941  0983                     	movf	(___xxtofl@val+3),w
  4942  0983  0873               	movwf	(___xxtofl@arg+3)
  4943  0984  00FD               	movf	(___xxtofl@val+2),w
  4944  0985  0872               	movwf	(___xxtofl@arg+2)
  4945  0986  00FC               	movf	(___xxtofl@val+1),w
  4946  0987  0871               	movwf	(___xxtofl@arg+1)
  4947  0988  00FB               	movf	(___xxtofl@val),w
  4948  0989  0870               	movwf	(___xxtofl@arg)
  4949  098A  00FA               
  4950                           	line	20
  4951                           	
  4952                           l741:	
  4953  098B                     	line	21
  4954                           	movf	(___xxtofl@val+3),w
  4955  098B  0873               	iorwf	(___xxtofl@val+2),w
  4956  098C  0472               	iorwf	(___xxtofl@val+1),w
  4957  098D  0471               	iorwf	(___xxtofl@val),w
  4958  098E  0470               	skipz
  4959  098F  1D03               	goto	u3901
  4960  0990  2992               	goto	u3900
  4961  0991  2993               u3901:
  4962  0992                     	goto	l2828
  4963  0992  299D               u3900:
  4964  0993                     	line	22
  4965                           	
  4966                           l2824:	
  4967  0993                     	movlw	0x0
  4968  0993  3000               	movwf	(?___xxtofl+3)
  4969  0994  00F3               	movlw	0x0
  4970  0995  3000               	movwf	(?___xxtofl+2)
  4971  0996  00F2               	movlw	0x0
  4972  0997  3000               	movwf	(?___xxtofl+1)
  4973  0998  00F1               	movlw	0x0
  4974  0999  3000               	movwf	(?___xxtofl)
  4975  099A  00F0               
  4976                           	goto	l743
  4977  099B  2A2A               	
  4978                           l2826:	
  4979  099C                     	goto	l743
  4980  099C  2A2A               	
  4981                           l742:	
  4982  099D                     	line	23
  4983                           	
  4984                           l2828:	
  4985  099D                     	movlw	low(096h)
  4986  099D  3096               	movwf	(??___xxtofl+0)+0
  4987  099E  00F4               	movf	(??___xxtofl+0)+0,w
  4988  099F  0874               	movwf	(___xxtofl@exp)
  4989  09A0  00F9               	line	24
  4990                           	goto	l2832
  4991  09A1  29B0               	
  4992                           l745:	
  4993  09A2                     	line	25
  4994                           	
  4995                           l2830:	
  4996  09A2                     	movlw	low(01h)
  4997  09A2  3001               	movwf	(??___xxtofl+0)+0
  4998  09A3  00F4               	movf	(??___xxtofl+0)+0,w
  4999  09A4  0874               	addwf	(___xxtofl@exp),f
  5000  09A5  07F9               	line	26
  5001                           	movlw	01h
  5002  09A6  3001               u3915:
  5003  09A7                     	clrc
  5004  09A7  1003               	rrf	(___xxtofl@arg+3),f
  5005  09A8  0CFD               	rrf	(___xxtofl@arg+2),f
  5006  09A9  0CFC               	rrf	(___xxtofl@arg+1),f
  5007  09AA  0CFB               	rrf	(___xxtofl@arg),f
  5008  09AB  0CFA               	addlw	-1
  5009  09AC  3EFF               	skipz
  5010  09AD  1D03               	goto	u3915
  5011  09AE  29A7               
  5012                           	goto	l2832
  5013  09AF  29B0               	line	27
  5014                           	
  5015                           l744:	
  5016  09B0                     	line	24
  5017                           	
  5018                           l2832:	
  5019  09B0                     	movlw	high highword(0FE000000h)
  5020  09B0  30FE               	andwf	(___xxtofl@arg+3),w
  5021  09B1  057D               	btfss	status,2
  5022  09B2  1D03               	goto	u3921
  5023  09B3  29B5               	goto	u3920
  5024  09B4  29B6               u3921:
  5025  09B5                     	goto	l2830
  5026  09B5  29A2               u3920:
  5027  09B6                     	goto	l747
  5028  09B6  29D3               	
  5029                           l746:	
  5030  09B7                     	line	28
  5031                           	goto	l747
  5032  09B7  29D3               	
  5033                           l748:	
  5034  09B8                     	line	29
  5035                           	
  5036                           l2834:	
  5037  09B8                     	movlw	low(01h)
  5038  09B8  3001               	movwf	(??___xxtofl+0)+0
  5039  09B9  00F4               	movf	(??___xxtofl+0)+0,w
  5040  09BA  0874               	addwf	(___xxtofl@exp),f
  5041  09BB  07F9               	line	30
  5042                           	
  5043                           l2836:	
  5044  09BC                     	movlw	01h
  5045  09BC  3001               	addwf	(___xxtofl@arg),f
  5046  09BD  07FA               	movlw	0
  5047  09BE  3000               	skipnc
  5048  09BF  1803               movlw 1
  5049  09C0  3001               	addwf	(___xxtofl@arg+1),f
  5050  09C1  07FB               	movlw	0
  5051  09C2  3000               	skipnc
  5052  09C3  1803               movlw 1
  5053  09C4  3001               	addwf	(___xxtofl@arg+2),f
  5054  09C5  07FC               	movlw	0
  5055  09C6  3000               	skipnc
  5056  09C7  1803               movlw 1
  5057  09C8  3001               	addwf	(___xxtofl@arg+3),f
  5058  09C9  07FD               	line	31
  5059                           	
  5060                           l2838:	
  5061  09CA                     	movlw	01h
  5062  09CA  3001               u3935:
  5063  09CB                     	clrc
  5064  09CB  1003               	rrf	(___xxtofl@arg+3),f
  5065  09CC  0CFD               	rrf	(___xxtofl@arg+2),f
  5066  09CD  0CFC               	rrf	(___xxtofl@arg+1),f
  5067  09CE  0CFB               	rrf	(___xxtofl@arg),f
  5068  09CF  0CFA               	addlw	-1
  5069  09D0  3EFF               	skipz
  5070  09D1  1D03               	goto	u3935
  5071  09D2  29CB               
  5072                           	line	32
  5073                           	
  5074                           l747:	
  5075  09D3                     	line	28
  5076                           	movlw	high highword(0FF000000h)
  5077  09D3  30FF               	andwf	(___xxtofl@arg+3),w
  5078  09D4  057D               	btfss	status,2
  5079  09D5  1D03               	goto	u3941
  5080  09D6  29D8               	goto	u3940
  5081  09D7  29D9               u3941:
  5082  09D8                     	goto	l2834
  5083  09D8  29B8               u3940:
  5084  09D9                     	goto	l2842
  5085  09D9  29E7               	
  5086                           l749:	
  5087  09DA                     	line	33
  5088                           	goto	l2842
  5089  09DA  29E7               	
  5090                           l751:	
  5091  09DB                     	line	34
  5092                           	
  5093                           l2840:	
  5094  09DB                     	movlw	01h
  5095  09DB  3001               	subwf	(___xxtofl@exp),f
  5096  09DC  02F9               	line	35
  5097                           	movlw	01h
  5098  09DD  3001               	movwf	(??___xxtofl+0)+0
  5099  09DE  00F4               u3955:
  5100  09DF                     	clrc
  5101  09DF  1003               	rlf	(___xxtofl@arg),f
  5102  09E0  0DFA               	rlf	(___xxtofl@arg+1),f
  5103  09E1  0DFB               	rlf	(___xxtofl@arg+2),f
  5104  09E2  0DFC               	rlf	(___xxtofl@arg+3),f
  5105  09E3  0DFD               	decfsz	(??___xxtofl+0)+0
  5106  09E4  0BF4               	goto	u3955
  5107  09E5  29DF               	goto	l2842
  5108  09E6  29E7               	line	36
  5109                           	
  5110                           l750:	
  5111  09E7                     	line	33
  5112                           	
  5113                           l2842:	
  5114  09E7                     	btfsc	(___xxtofl@arg+2),(23)&7
  5115  09E7  1BFC               	goto	u3961
  5116  09E8  29EA               	goto	u3960
  5117  09E9  29EB               u3961:
  5118  09EA                     	goto	l754
  5119  09EA  29F2               u3960:
  5120  09EB                     	
  5121                           l2844:	
  5122  09EB                     	movlw	low(02h)
  5123  09EB  3002               	subwf	(___xxtofl@exp),w
  5124  09EC  0279               	skipnc
  5125  09ED  1803               	goto	u3971
  5126  09EE  29F0               	goto	u3970
  5127  09EF  29F1               u3971:
  5128  09F0                     	goto	l2840
  5129  09F0  29DB               u3970:
  5130  09F1                     	goto	l754
  5131  09F1  29F2               	
  5132                           l753:	
  5133  09F2                     	
  5134                           l754:	
  5135  09F2                     	line	37
  5136                           	btfsc	(___xxtofl@exp),(0)&7
  5137  09F2  1879               	goto	u3981
  5138  09F3  29F5               	goto	u3980
  5139  09F4  29F6               u3981:
  5140  09F5                     	goto	l755
  5141  09F5  29FE               u3980:
  5142  09F6                     	line	38
  5143                           	
  5144                           l2846:	
  5145  09F6                     	movlw	0FFh
  5146  09F6  30FF               	andwf	(___xxtofl@arg),f
  5147  09F7  05FA               	movlw	0FFh
  5148  09F8  30FF               	andwf	(___xxtofl@arg+1),f
  5149  09F9  05FB               	movlw	07Fh
  5150  09FA  307F               	andwf	(___xxtofl@arg+2),f
  5151  09FB  05FC               	movlw	0FFh
  5152  09FC  30FF               	andwf	(___xxtofl@arg+3),f
  5153  09FD  05FD               	
  5154                           l755:	
  5155  09FE                     	line	39
  5156                           	clrc
  5157  09FE  1003               	rrf	(___xxtofl@exp),f
  5158  09FF  0CF9               
  5159                           	line	40
  5160                           	
  5161                           l2848:	
  5162  0A00                     	movf	(___xxtofl@exp),w
  5163  0A00  0879               	movwf	(??___xxtofl+0)+0
  5164  0A01  00F4               	clrf	(??___xxtofl+0)+0+1
  5165  0A02  01F5               	clrf	(??___xxtofl+0)+0+2
  5166  0A03  01F6               	clrf	(??___xxtofl+0)+0+3
  5167  0A04  01F7               	movlw	018h
  5168  0A05  3018               u3995:
  5169  0A06                     	clrc
  5170  0A06  1003               	rlf	(??___xxtofl+0)+0,f
  5171  0A07  0DF4               	rlf	(??___xxtofl+0)+1,f
  5172  0A08  0DF5               	rlf	(??___xxtofl+0)+2,f
  5173  0A09  0DF6               	rlf	(??___xxtofl+0)+3,f
  5174  0A0A  0DF7               u3990:
  5175  0A0B                     	addlw	-1
  5176  0A0B  3EFF               	skipz
  5177  0A0C  1D03               	goto	u3995
  5178  0A0D  2A06               	movf	0+(??___xxtofl+0)+0,w
  5179  0A0E  0874               	iorwf	(___xxtofl@arg),f
  5180  0A0F  04FA               	movf	1+(??___xxtofl+0)+0,w
  5181  0A10  0875               	iorwf	(___xxtofl@arg+1),f
  5182  0A11  04FB               	movf	2+(??___xxtofl+0)+0,w
  5183  0A12  0876               	iorwf	(___xxtofl@arg+2),f
  5184  0A13  04FC               	movf	3+(??___xxtofl+0)+0,w
  5185  0A14  0877               	iorwf	(___xxtofl@arg+3),f
  5186  0A15  04FD               	line	41
  5187                           	
  5188                           l2850:	
  5189  0A16                     	movf	((___xxtofl@sign)),w
  5190  0A16  0878               	btfsc	status,2
  5191  0A17  1903               	goto	u4001
  5192  0A18  2A1A               	goto	u4000
  5193  0A19  2A1B               u4001:
  5194  0A1A                     	goto	l2856
  5195  0A1A  2A21               u4000:
  5196  0A1B                     	
  5197                           l2852:	
  5198  0A1B                     	btfss	(___xxtofl@val+3),7
  5199  0A1B  1FF3               	goto	u4011
  5200  0A1C  2A1E               	goto	u4010
  5201  0A1D  2A1F               u4011:
  5202  0A1E                     	goto	l2856
  5203  0A1E  2A21               u4010:
  5204  0A1F                     	line	42
  5205                           	
  5206                           l2854:	
  5207  0A1F                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  5208  0A1F  17FD               	goto	l2856
  5209  0A20  2A21               	
  5210                           l756:	
  5211  0A21                     	line	43
  5212                           	
  5213                           l2856:	
  5214  0A21                     	movf	(___xxtofl@arg+3),w
  5215  0A21  087D               	movwf	(?___xxtofl+3)
  5216  0A22  00F3               	movf	(___xxtofl@arg+2),w
  5217  0A23  087C               	movwf	(?___xxtofl+2)
  5218  0A24  00F2               	movf	(___xxtofl@arg+1),w
  5219  0A25  087B               	movwf	(?___xxtofl+1)
  5220  0A26  00F1               	movf	(___xxtofl@arg),w
  5221  0A27  087A               	movwf	(?___xxtofl)
  5222  0A28  00F0               
  5223                           	goto	l743
  5224  0A29  2A2A               	
  5225                           l2858:	
  5226  0A2A                     	line	44
  5227                           	
  5228                           l743:	
  5229  0A2A                     	return
  5230  0A2A  0008               	opt stack 0
  5231                           GLOBAL	__end_of___xxtofl
  5232                           	__end_of___xxtofl:
  5233  0A2B                     	signat	___xxtofl,8316
  5234                           	global	___fltol
  5235                           
  5236 ;; *************** function ___fltol *****************
  5237 ;; Defined at:
  5238 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  f1              4    0[COMMON] unsigned char 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  exp1            1   10[COMMON] unsigned char 
  5243 ;;  sign1           1    9[COMMON] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  4    0[COMMON] long 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5253 ;;      Params:         4       0       0       0       0
  5254 ;;      Locals:         2       0       0       0       0
  5255 ;;      Temps:          5       0       0       0       0
  5256 ;;      Totals:        11       0       0       0       0
  5257 ;;Total ram usage:       11 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_main
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  5266                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5267                           	line	43
  5268                           global __ptext16
  5269                           __ptext16:	;psect for function ___fltol
  5270  08CF                     psect	text16
  5271                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5272                           	line	43
  5273                           	global	__size_of___fltol
  5274                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  5275  009A                     	
  5276                           ___fltol:	
  5277  08CF                     ;incstack = 0
  5278                           	opt	stack 7
  5279                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5280                           	line	47
  5281                           	
  5282                           l2304:	
  5283  08CF                     	movf	(___fltol@f1),w
  5284  08CF  0870               	movwf	(??___fltol+0)+0
  5285  08D0  00F4               	movf	(___fltol@f1+1),w
  5286  08D1  0871               	movwf	((??___fltol+0)+0+1)
  5287  08D2  00F5               	movf	(___fltol@f1+2),w
  5288  08D3  0872               	movwf	((??___fltol+0)+0+2)
  5289  08D4  00F6               	movf	(___fltol@f1+3),w
  5290  08D5  0873               	movwf	((??___fltol+0)+0+3)
  5291  08D6  00F7               	clrc
  5292  08D7  1003               	rlf	(??___fltol+0)+2,w
  5293  08D8  0D76               	rlf	(??___fltol+0)+3,w
  5294  08D9  0D77               	movwf	(??___fltol+4)+0
  5295  08DA  00F8               	movf	(??___fltol+4)+0,w
  5296  08DB  0878               	movwf	(___fltol@exp1)
  5297  08DC  00FA               	movf	(((___fltol@exp1))),w
  5298  08DD  087A               	btfss	status,2
  5299  08DE  1D03               	goto	u2661
  5300  08DF  28E1               	goto	u2660
  5301  08E0  28E2               u2661:
  5302  08E1                     	goto	l2310
  5303  08E1  28EC               u2660:
  5304  08E2                     	line	48
  5305                           	
  5306                           l2306:	
  5307  08E2                     	movlw	high highword(0)
  5308  08E2  3000               	movwf	(?___fltol+3)
  5309  08E3  00F3               	movlw	low highword(0)
  5310  08E4  3000               	movwf	(?___fltol+2)
  5311  08E5  00F2               	movlw	high(0)
  5312  08E6  3000               	movwf	(?___fltol+1)
  5313  08E7  00F1               	movlw	low(0)
  5314  08E8  3000               	movwf	(?___fltol)
  5315  08E9  00F0               
  5316                           	goto	l519
  5317  08EA  2968               	
  5318                           l2308:	
  5319  08EB                     	goto	l519
  5320  08EB  2968               	
  5321                           l518:	
  5322  08EC                     	line	49
  5323                           	
  5324                           l2310:	
  5325  08EC                     	movf	(___fltol@f1),w
  5326  08EC  0870               	movwf	(??___fltol+0)+0
  5327  08ED  00F4               	movf	(___fltol@f1+1),w
  5328  08EE  0871               	movwf	((??___fltol+0)+0+1)
  5329  08EF  00F5               	movf	(___fltol@f1+2),w
  5330  08F0  0872               	movwf	((??___fltol+0)+0+2)
  5331  08F1  00F6               	movf	(___fltol@f1+3),w
  5332  08F2  0873               	movwf	((??___fltol+0)+0+3)
  5333  08F3  00F7               	movlw	01Fh
  5334  08F4  301F               u2675:
  5335  08F5                     	clrc
  5336  08F5  1003               	rrf	(??___fltol+0)+3,f
  5337  08F6  0CF7               	rrf	(??___fltol+0)+2,f
  5338  08F7  0CF6               	rrf	(??___fltol+0)+1,f
  5339  08F8  0CF5               	rrf	(??___fltol+0)+0,f
  5340  08F9  0CF4               u2670:
  5341  08FA                     	addlw	-1
  5342  08FA  3EFF               	skipz
  5343  08FB  1D03               	goto	u2675
  5344  08FC  28F5               	movf	0+(??___fltol+0)+0,w
  5345  08FD  0874               	movwf	(??___fltol+4)+0
  5346  08FE  00F8               	movf	(??___fltol+4)+0,w
  5347  08FF  0878               	movwf	(___fltol@sign1)
  5348  0900  00F9               	line	50
  5349                           	
  5350                           l2312:	
  5351  0901                     	bsf	(___fltol@f1)+(23/8),(23)&7
  5352  0901  17F2               	line	51
  5353                           	
  5354                           l2314:	
  5355  0902                     	movlw	0FFh
  5356  0902  30FF               	andwf	(___fltol@f1),f
  5357  0903  05F0               	movlw	0FFh
  5358  0904  30FF               	andwf	(___fltol@f1+1),f
  5359  0905  05F1               	movlw	0FFh
  5360  0906  30FF               	andwf	(___fltol@f1+2),f
  5361  0907  05F2               	movlw	0
  5362  0908  3000               	andwf	(___fltol@f1+3),f
  5363  0909  05F3               	line	52
  5364                           	
  5365                           l2316:	
  5366  090A                     	movlw	096h
  5367  090A  3096               	subwf	(___fltol@exp1),f
  5368  090B  02FA               	line	53
  5369                           	
  5370                           l2318:	
  5371  090C                     	btfss	(___fltol@exp1),7
  5372  090C  1FFA               	goto	u2681
  5373  090D  290F               	goto	u2680
  5374  090E  2910               u2681:
  5375  090F                     	goto	l2328
  5376  090F  2935               u2680:
  5377  0910                     	line	54
  5378                           	
  5379                           l2320:	
  5380  0910                     	movf	(___fltol@exp1),w
  5381  0910  087A               	xorlw	80h
  5382  0911  3A80               	addlw	-((-23)^80h)
  5383  0912  3E97               	skipnc
  5384  0913  1803               	goto	u2691
  5385  0914  2916               	goto	u2690
  5386  0915  2917               u2691:
  5387  0916                     	goto	l2326
  5388  0916  2922               u2690:
  5389  0917                     	line	55
  5390                           	
  5391                           l2322:	
  5392  0917                     	movlw	high highword(0)
  5393  0917  3000               	movwf	(?___fltol+3)
  5394  0918  00F3               	movlw	low highword(0)
  5395  0919  3000               	movwf	(?___fltol+2)
  5396  091A  00F2               	movlw	high(0)
  5397  091B  3000               	movwf	(?___fltol+1)
  5398  091C  00F1               	movlw	low(0)
  5399  091D  3000               	movwf	(?___fltol)
  5400  091E  00F0               
  5401                           	goto	l519
  5402  091F  2968               	
  5403                           l2324:	
  5404  0920                     	goto	l519
  5405  0920  2968               	
  5406                           l521:	
  5407  0921                     	goto	l2326
  5408  0921  2922               	line	56
  5409                           	
  5410                           l522:	
  5411  0922                     	line	57
  5412                           	
  5413                           l2326:	
  5414  0922                     	movlw	01h
  5415  0922  3001               u2705:
  5416  0923                     	clrc
  5417  0923  1003               	rrf	(___fltol@f1+3),f
  5418  0924  0CF3               	rrf	(___fltol@f1+2),f
  5419  0925  0CF2               	rrf	(___fltol@f1+1),f
  5420  0926  0CF1               	rrf	(___fltol@f1),f
  5421  0927  0CF0               	addlw	-1
  5422  0928  3EFF               	skipz
  5423  0929  1D03               	goto	u2705
  5424  092A  2923               
  5425                           	line	58
  5426                           	movlw	low(01h)
  5427  092B  3001               	movwf	(??___fltol+0)+0
  5428  092C  00F4               	movf	(??___fltol+0)+0,w
  5429  092D  0874               	addwf	(___fltol@exp1),f
  5430  092E  07FA               	btfss	status,2
  5431  092F  1D03               	goto	u2711
  5432  0930  2932               	goto	u2710
  5433  0931  2933               u2711:
  5434  0932                     	goto	l2326
  5435  0932  2922               u2710:
  5436  0933                     	goto	l2336
  5437  0933  2958               	
  5438                           l523:	
  5439  0934                     	line	59
  5440                           	goto	l2336
  5441  0934  2958               	
  5442                           l520:	
  5443  0935                     	line	60
  5444                           	
  5445                           l2328:	
  5446  0935                     	movlw	low(020h)
  5447  0935  3020               	subwf	(___fltol@exp1),w
  5448  0936  027A               	skipc
  5449  0937  1C03               	goto	u2721
  5450  0938  293A               	goto	u2720
  5451  0939  293B               u2721:
  5452  093A                     	goto	l526
  5453  093A  2951               u2720:
  5454  093B                     	line	61
  5455                           	
  5456                           l2330:	
  5457  093B                     	movlw	high highword(0)
  5458  093B  3000               	movwf	(?___fltol+3)
  5459  093C  00F3               	movlw	low highword(0)
  5460  093D  3000               	movwf	(?___fltol+2)
  5461  093E  00F2               	movlw	high(0)
  5462  093F  3000               	movwf	(?___fltol+1)
  5463  0940  00F1               	movlw	low(0)
  5464  0941  3000               	movwf	(?___fltol)
  5465  0942  00F0               
  5466                           	goto	l519
  5467  0943  2968               	
  5468                           l2332:	
  5469  0944                     	goto	l519
  5470  0944  2968               	
  5471                           l525:	
  5472  0945                     	line	62
  5473                           	goto	l526
  5474  0945  2951               	
  5475                           l527:	
  5476  0946                     	line	63
  5477                           	
  5478                           l2334:	
  5479  0946                     	movlw	01h
  5480  0946  3001               	movwf	(??___fltol+0)+0
  5481  0947  00F4               u2735:
  5482  0948                     	clrc
  5483  0948  1003               	rlf	(___fltol@f1),f
  5484  0949  0DF0               	rlf	(___fltol@f1+1),f
  5485  094A  0DF1               	rlf	(___fltol@f1+2),f
  5486  094B  0DF2               	rlf	(___fltol@f1+3),f
  5487  094C  0DF3               	decfsz	(??___fltol+0)+0
  5488  094D  0BF4               	goto	u2735
  5489  094E  2948               	line	64
  5490                           	movlw	01h
  5491  094F  3001               	subwf	(___fltol@exp1),f
  5492  0950  02FA               	line	65
  5493                           	
  5494                           l526:	
  5495  0951                     	line	62
  5496                           	movf	((___fltol@exp1)),w
  5497  0951  087A               	btfss	status,2
  5498  0952  1D03               	goto	u2741
  5499  0953  2955               	goto	u2740
  5500  0954  2956               u2741:
  5501  0955                     	goto	l2334
  5502  0955  2946               u2740:
  5503  0956                     	goto	l2336
  5504  0956  2958               	
  5505                           l528:	
  5506  0957                     	goto	l2336
  5507  0957  2958               	line	66
  5508                           	
  5509                           l524:	
  5510  0958                     	line	67
  5511                           	
  5512                           l2336:	
  5513  0958                     	movf	((___fltol@sign1)),w
  5514  0958  0879               	btfsc	status,2
  5515  0959  1903               	goto	u2751
  5516  095A  295C               	goto	u2750
  5517  095B  295D               u2751:
  5518  095C                     	goto	l529
  5519  095C  2968               u2750:
  5520  095D                     	line	68
  5521                           	
  5522                           l2338:	
  5523  095D                     	comf	(___fltol@f1),f
  5524  095D  09F0               	comf	(___fltol@f1+1),f
  5525  095E  09F1               	comf	(___fltol@f1+2),f
  5526  095F  09F2               	comf	(___fltol@f1+3),f
  5527  0960  09F3               	incf	(___fltol@f1),f
  5528  0961  0AF0               	skipnz
  5529  0962  1903               	incf	(___fltol@f1+1),f
  5530  0963  0AF1               	skipnz
  5531  0964  1903               	incf	(___fltol@f1+2),f
  5532  0965  0AF2               	skipnz
  5533  0966  1903               	incf	(___fltol@f1+3),f
  5534  0967  0AF3               	
  5535                           l529:	
  5536  0968                     	line	69
  5537                           	line	70
  5538                           	
  5539                           l519:	
  5540  0968                     	return
  5541  0968  0008               	opt stack 0
  5542                           GLOBAL	__end_of___fltol
  5543                           	__end_of___fltol:
  5544  0969                     	signat	___fltol,4220
  5545                           	global	___flneg
  5546                           
  5547 ;; *************** function ___flneg *****************
  5548 ;; Defined at:
  5549 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  f1              4    0[BANK0 ] long 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  4    0[BANK0 ] long 
  5556 ;; Registers used:
  5557 ;;		wreg
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5563 ;;      Params:         0       4       0       0       0
  5564 ;;      Locals:         0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0
  5566 ;;      Totals:         0       4       0       0       0
  5567 ;;Total ram usage:        4 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_main
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5576                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5577                           	line	15
  5578                           global __ptext17
  5579                           __ptext17:	;psect for function ___flneg
  5580  1467                     psect	text17
  5581                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5582                           	line	15
  5583                           	global	__size_of___flneg
  5584                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5585  000F                     	
  5586                           ___flneg:	
  5587  1467                     ;incstack = 0
  5588                           	opt	stack 7
  5589                           ; Regs used in ___flneg: [wreg]
  5590                           	line	17
  5591                           	
  5592                           l2296:	
  5593  1467                     	bcf	status, 5	;RP0=0, select bank0
  5594  1467  1283               	bcf	status, 6	;RP1=0, select bank0
  5595  1468  1303               	movf	(___flneg@f1+3),w
  5596  1469  0823               	iorwf	(___flneg@f1+2),w
  5597  146A  0422               	iorwf	(___flneg@f1+1),w
  5598  146B  0421               	iorwf	(___flneg@f1),w
  5599  146C  0420               	skipnz
  5600  146D  1903               	goto	u2651
  5601  146E  2C70               	goto	u2650
  5602  146F  2C71               u2651:
  5603  1470                     	goto	l2300
  5604  1470  2C74               u2650:
  5605  1471                     	line	18
  5606                           	
  5607                           l2298:	
  5608  1471                     	movlw	080h
  5609  1471  3080               	xorwf	(___flneg@f1+3),f
  5610  1472  06A3               	goto	l2300
  5611  1473  2C74               	
  5612                           l514:	
  5613  1474                     	line	19
  5614                           	
  5615                           l2300:	
  5616  1474                     	goto	l515
  5617  1474  2C75               	
  5618                           l2302:	
  5619  1475                     	line	20
  5620                           	
  5621                           l515:	
  5622  1475                     	return
  5623  1475  0008               	opt stack 0
  5624                           GLOBAL	__end_of___flneg
  5625                           	__end_of___flneg:
  5626  1476                     	signat	___flneg,4220
  5627                           	global	___flmul
  5628                           
  5629 ;; *************** function ___flmul *****************
  5630 ;; Defined at:
  5631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  b               4   28[BANK0 ] long 
  5634 ;;  a               4   32[BANK0 ] long 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  prod            4   48[BANK0 ] struct .
  5637 ;;  grs             4   42[BANK0 ] unsigned long 
  5638 ;;  temp            2   52[BANK0 ] struct .
  5639 ;;  bexp            1   47[BANK0 ] unsigned char 
  5640 ;;  aexp            1   46[BANK0 ] unsigned char 
  5641 ;;  sign            1   41[BANK0 ] unsigned char 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  4   28[BANK0 ] unsigned char 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5651 ;;      Params:         0       8       0       0       0
  5652 ;;      Locals:         0      13       0       0       0
  5653 ;;      Temps:          0       5       0       0       0
  5654 ;;      Totals:         0      26       0       0       0
  5655 ;;Total ram usage:       26 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    1
  5658 ;; This function calls:
  5659 ;;		__Umul8_16
  5660 ;; This function is called by:
  5661 ;;		_main
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5665                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5666                           	line	8
  5667                           global __ptext18
  5668                           __ptext18:	;psect for function ___flmul
  5669  047E                     psect	text18
  5670                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5671                           	line	8
  5672                           	global	__size_of___flmul
  5673                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5674  0375                     	
  5675                           ___flmul:	
  5676  047E                     ;incstack = 0
  5677                           	opt	stack 6
  5678                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5679                           	line	17
  5680                           	
  5681                           l2676:	
  5682  047E                     	bcf	status, 5	;RP0=0, select bank0
  5683  047E  1283               	bcf	status, 6	;RP1=0, select bank0
  5684  047F  1303               	movf	0+(___flmul@b)+03h,w
  5685  0480  083F               	andlw	080h
  5686  0481  3980               	movwf	(??___flmul+0)+0
  5687  0482  00C4               	movf	(??___flmul+0)+0,w
  5688  0483  0844               	movwf	(___flmul@sign)
  5689  0484  00C9               	line	18
  5690                           	
  5691                           l2678:	
  5692  0485                     	movf	0+(___flmul@b)+03h,w
  5693  0485  083F               	movwf	(??___flmul+0)+0
  5694  0486  00C4               	addwf	(??___flmul+0)+0,w
  5695  0487  0744               	movwf	(??___flmul+1)+0
  5696  0488  00C5               	movf	(??___flmul+1)+0,w
  5697  0489  0845               	movwf	(___flmul@bexp)
  5698  048A  00CF               	line	19
  5699                           	
  5700                           l2680:	
  5701  048B                     	btfss	0+(___flmul@b)+02h,(7)&7
  5702  048B  1FBE               	goto	u3511
  5703  048C  2C8E               	goto	u3510
  5704  048D  2C8F               u3511:
  5705  048E                     	goto	l2684
  5706  048E  2C91               u3510:
  5707  048F                     	line	20
  5708                           	
  5709                           l2682:	
  5710  048F                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5711  048F  144F               	goto	l2684
  5712  0490  2C91               	line	21
  5713                           	
  5714                           l711:	
  5715  0491                     	line	24
  5716                           	
  5717                           l2684:	
  5718  0491                     	movf	((___flmul@bexp)),w
  5719  0491  084F               	btfsc	status,2
  5720  0492  1903               	goto	u3521
  5721  0493  2C95               	goto	u3520
  5722  0494  2C96               u3521:
  5723  0495                     	goto	l2692
  5724  0495  2CA6               u3520:
  5725  0496                     	line	26
  5726                           	
  5727                           l2686:	
  5728  0496                     		incf	((___flmul@bexp)),w
  5729  0496  0A4F               	btfss	status,2
  5730  0497  1D03               	goto	u3531
  5731  0498  2C9A               	goto	u3530
  5732  0499  2C9B               u3531:
  5733  049A                     	goto	l2690
  5734  049A  2CA4               u3530:
  5735  049B                     	line	28
  5736                           	
  5737                           l2688:	
  5738  049B                     	movlw	0x0
  5739  049B  3000               	movwf	(___flmul@b+3)
  5740  049C  00BF               	movlw	0x0
  5741  049D  3000               	movwf	(___flmul@b+2)
  5742  049E  00BE               	movlw	0x0
  5743  049F  3000               	movwf	(___flmul@b+1)
  5744  04A0  00BD               	movlw	0x0
  5745  04A1  3000               	movwf	(___flmul@b)
  5746  04A2  00BC               
  5747                           	goto	l2690
  5748  04A3  2CA4               	line	29
  5749                           	
  5750                           l713:	
  5751  04A4                     	line	31
  5752                           	
  5753                           l2690:	
  5754  04A4                     	bsf	(___flmul@b)+(23/8),(23)&7
  5755  04A4  17BE               	line	33
  5756                           	goto	l2694
  5757  04A5  2CAF               	line	34
  5758                           	
  5759                           l712:	
  5760  04A6                     	line	36
  5761                           	
  5762                           l2692:	
  5763  04A6                     	movlw	0x0
  5764  04A6  3000               	movwf	(___flmul@b+3)
  5765  04A7  00BF               	movlw	0x0
  5766  04A8  3000               	movwf	(___flmul@b+2)
  5767  04A9  00BE               	movlw	0x0
  5768  04AA  3000               	movwf	(___flmul@b+1)
  5769  04AB  00BD               	movlw	0x0
  5770  04AC  3000               	movwf	(___flmul@b)
  5771  04AD  00BC               
  5772                           	goto	l2694
  5773  04AE  2CAF               	line	37
  5774                           	
  5775                           l714:	
  5776  04AF                     	line	39
  5777                           	
  5778                           l2694:	
  5779  04AF                     	movf	0+(___flmul@a)+03h,w
  5780  04AF  0843               	andlw	080h
  5781  04B0  3980               	movwf	(??___flmul+0)+0
  5782  04B1  00C4               	movf	(??___flmul+0)+0,w
  5783  04B2  0844               	xorwf	(___flmul@sign),f
  5784  04B3  06C9               	line	40
  5785                           	
  5786                           l2696:	
  5787  04B4                     	movf	0+(___flmul@a)+03h,w
  5788  04B4  0843               	movwf	(??___flmul+0)+0
  5789  04B5  00C4               	addwf	(??___flmul+0)+0,w
  5790  04B6  0744               	movwf	(??___flmul+1)+0
  5791  04B7  00C5               	movf	(??___flmul+1)+0,w
  5792  04B8  0845               	movwf	(___flmul@aexp)
  5793  04B9  00CE               	line	41
  5794                           	
  5795                           l2698:	
  5796  04BA                     	btfss	0+(___flmul@a)+02h,(7)&7
  5797  04BA  1FC2               	goto	u3541
  5798  04BB  2CBD               	goto	u3540
  5799  04BC  2CBE               u3541:
  5800  04BD                     	goto	l2702
  5801  04BD  2CC0               u3540:
  5802  04BE                     	line	42
  5803                           	
  5804                           l2700:	
  5805  04BE                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5806  04BE  144E               	goto	l2702
  5807  04BF  2CC0               	line	43
  5808                           	
  5809                           l715:	
  5810  04C0                     	line	45
  5811                           	
  5812                           l2702:	
  5813  04C0                     	movf	((___flmul@aexp)),w
  5814  04C0  084E               	btfsc	status,2
  5815  04C1  1903               	goto	u3551
  5816  04C2  2CC4               	goto	u3550
  5817  04C3  2CC5               u3551:
  5818  04C4                     	goto	l2710
  5819  04C4  2CD5               u3550:
  5820  04C5                     	line	48
  5821                           	
  5822                           l2704:	
  5823  04C5                     		incf	((___flmul@aexp)),w
  5824  04C5  0A4E               	btfss	status,2
  5825  04C6  1D03               	goto	u3561
  5826  04C7  2CC9               	goto	u3560
  5827  04C8  2CCA               u3561:
  5828  04C9                     	goto	l2708
  5829  04C9  2CD3               u3560:
  5830  04CA                     	line	50
  5831                           	
  5832                           l2706:	
  5833  04CA                     	movlw	0x0
  5834  04CA  3000               	movwf	(___flmul@a+3)
  5835  04CB  00C3               	movlw	0x0
  5836  04CC  3000               	movwf	(___flmul@a+2)
  5837  04CD  00C2               	movlw	0x0
  5838  04CE  3000               	movwf	(___flmul@a+1)
  5839  04CF  00C1               	movlw	0x0
  5840  04D0  3000               	movwf	(___flmul@a)
  5841  04D1  00C0               
  5842                           	goto	l2708
  5843  04D2  2CD3               	line	51
  5844                           	
  5845                           l717:	
  5846  04D3                     	line	53
  5847                           	
  5848                           l2708:	
  5849  04D3                     	bsf	(___flmul@a)+(23/8),(23)&7
  5850  04D3  17C2               	line	54
  5851                           	goto	l2712
  5852  04D4  2CDE               	line	55
  5853                           	
  5854                           l716:	
  5855  04D5                     	line	57
  5856                           	
  5857                           l2710:	
  5858  04D5                     	movlw	0x0
  5859  04D5  3000               	movwf	(___flmul@a+3)
  5860  04D6  00C3               	movlw	0x0
  5861  04D7  3000               	movwf	(___flmul@a+2)
  5862  04D8  00C2               	movlw	0x0
  5863  04D9  3000               	movwf	(___flmul@a+1)
  5864  04DA  00C1               	movlw	0x0
  5865  04DB  3000               	movwf	(___flmul@a)
  5866  04DC  00C0               
  5867                           	goto	l2712
  5868  04DD  2CDE               	line	58
  5869                           	
  5870                           l718:	
  5871  04DE                     	line	65
  5872                           	
  5873                           l2712:	
  5874  04DE                     	movf	((___flmul@aexp)),w
  5875  04DE  084E               	btfsc	status,2
  5876  04DF  1903               	goto	u3571
  5877  04E0  2CE2               	goto	u3570
  5878  04E1  2CE3               u3571:
  5879  04E2                     	goto	l2716
  5880  04E2  2CE9               u3570:
  5881  04E3                     	
  5882                           l2714:	
  5883  04E3                     	movf	((___flmul@bexp)),w
  5884  04E3  084F               	btfss	status,2
  5885  04E4  1D03               	goto	u3581
  5886  04E5  2CE7               	goto	u3580
  5887  04E6  2CE8               u3581:
  5888  04E7                     	goto	l2720
  5889  04E7  2CF3               u3580:
  5890  04E8                     	goto	l2716
  5891  04E8  2CE9               	
  5892                           l721:	
  5893  04E9                     	line	66
  5894                           	
  5895                           l2716:	
  5896  04E9                     	movlw	0x0
  5897  04E9  3000               	movwf	(?___flmul+3)
  5898  04EA  00BF               	movlw	0x0
  5899  04EB  3000               	movwf	(?___flmul+2)
  5900  04EC  00BE               	movlw	0x0
  5901  04ED  3000               	movwf	(?___flmul+1)
  5902  04EE  00BD               	movlw	0x0
  5903  04EF  3000               	movwf	(?___flmul)
  5904  04F0  00BC               
  5905                           	goto	l722
  5906  04F1  2FF2               	
  5907                           l2718:	
  5908  04F2                     	goto	l722
  5909  04F2  2FF2               	line	67
  5910                           	
  5911                           l719:	
  5912  04F3                     	line	119
  5913                           	
  5914                           l2720:	
  5915  04F3                     	movf	(___flmul@b),w
  5916  04F3  083C               	movwf	(??___flmul+0)+0
  5917  04F4  00C4               	movf	(??___flmul+0)+0,w
  5918  04F5  0844               	movwf	(__Umul8_16@multiplicand)
  5919  04F6  00F0               	movf	0+(___flmul@a)+02h,w
  5920  04F7  0842               	fcall	__Umul8_16
  5921  04F8  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  5922  04FD  0871               	bcf	status, 5	;RP0=0, select bank0
  5923  04FE  1283               	bcf	status, 6	;RP1=0, select bank0
  5924  04FF  1303               	movwf	(___flmul@temp+1)
  5925  0500  00D5               	movf	(0+(?__Umul8_16)),w
  5926  0501  0870               	movwf	(___flmul@temp)
  5927  0502  00D4               	line	120
  5928                           	
  5929                           l2722:	
  5930  0503                     	movf	(___flmul@temp),w
  5931  0503  0854               	movwf	(??___flmul+0)+0
  5932  0504  00C4               	clrf	(??___flmul+0)+0+1
  5933  0505  01C5               	clrf	(??___flmul+0)+0+2
  5934  0506  01C6               	clrf	(??___flmul+0)+0+3
  5935  0507  01C7               	movf	3+(??___flmul+0)+0,w
  5936  0508  0847               	movwf	(___flmul@grs+3)
  5937  0509  00CD               	movf	2+(??___flmul+0)+0,w
  5938  050A  0846               	movwf	(___flmul@grs+2)
  5939  050B  00CC               	movf	1+(??___flmul+0)+0,w
  5940  050C  0845               	movwf	(___flmul@grs+1)
  5941  050D  00CB               	movf	0+(??___flmul+0)+0,w
  5942  050E  0844               	movwf	(___flmul@grs)
  5943  050F  00CA               
  5944                           	line	121
  5945                           	
  5946                           l2724:	
  5947  0510                     	movf	0+(___flmul@temp)+01h,w
  5948  0510  0855               	movwf	(??___flmul+0)+0
  5949  0511  00C4               	clrf	(??___flmul+0)+0+1
  5950  0512  01C5               	clrf	(??___flmul+0)+0+2
  5951  0513  01C6               	clrf	(??___flmul+0)+0+3
  5952  0514  01C7               	movf	3+(??___flmul+0)+0,w
  5953  0515  0847               	movwf	(___flmul@prod+3)
  5954  0516  00D3               	movf	2+(??___flmul+0)+0,w
  5955  0517  0846               	movwf	(___flmul@prod+2)
  5956  0518  00D2               	movf	1+(??___flmul+0)+0,w
  5957  0519  0845               	movwf	(___flmul@prod+1)
  5958  051A  00D1               	movf	0+(??___flmul+0)+0,w
  5959  051B  0844               	movwf	(___flmul@prod)
  5960  051C  00D0               
  5961                           	line	122
  5962                           	movf	0+(___flmul@b)+01h,w
  5963  051D  083D               	movwf	(??___flmul+0)+0
  5964  051E  00C4               	movf	(??___flmul+0)+0,w
  5965  051F  0844               	movwf	(__Umul8_16@multiplicand)
  5966  0520  00F0               	movf	0+(___flmul@a)+01h,w
  5967  0521  0841               	fcall	__Umul8_16
  5968  0522  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  5969  0527  0871               	bcf	status, 5	;RP0=0, select bank0
  5970  0528  1283               	bcf	status, 6	;RP1=0, select bank0
  5971  0529  1303               	movwf	(___flmul@temp+1)
  5972  052A  00D5               	movf	(0+(?__Umul8_16)),w
  5973  052B  0870               	movwf	(___flmul@temp)
  5974  052C  00D4               	line	123
  5975                           	
  5976                           l2726:	
  5977  052D                     	movf	(___flmul@temp),w
  5978  052D  0854               	movwf	(??___flmul+0)+0
  5979  052E  00C4               	clrf	(??___flmul+0)+0+1
  5980  052F  01C5               	clrf	(??___flmul+0)+0+2
  5981  0530  01C6               	clrf	(??___flmul+0)+0+3
  5982  0531  01C7               	movf	0+(??___flmul+0)+0,w
  5983  0532  0844               	addwf	(___flmul@grs),f
  5984  0533  07CA               	movf	1+(??___flmul+0)+0,w
  5985  0534  0845               	clrz
  5986  0535  1103               	skipnc
  5987  0536  1803               	addlw	1
  5988  0537  3E01               	skipnz
  5989  0538  1903               	goto	u3591
  5990  0539  2D3B               	addwf	(___flmul@grs+1),f
  5991  053A  07CB               u3591:
  5992  053B                     	movf	2+(??___flmul+0)+0,w
  5993  053B  0846               	clrz
  5994  053C  1103               	skipnc
  5995  053D  1803               	addlw	1
  5996  053E  3E01               	skipnz
  5997  053F  1903               	goto	u3592
  5998  0540  2D42               	addwf	(___flmul@grs+2),f
  5999  0541  07CC               u3592:
  6000  0542                     	movf	3+(??___flmul+0)+0,w
  6001  0542  0847               	clrz
  6002  0543  1103               	skipnc
  6003  0544  1803               	addlw	1
  6004  0545  3E01               	skipnz
  6005  0546  1903               	goto	u3593
  6006  0547  2D49               	addwf	(___flmul@grs+3),f
  6007  0548  07CD               u3593:
  6008  0549                     
  6009                           	line	124
  6010                           	
  6011                           l2728:	
  6012  0549                     	movf	0+(___flmul@temp)+01h,w
  6013  0549  0855               	movwf	(??___flmul+0)+0
  6014  054A  00C4               	clrf	(??___flmul+0)+0+1
  6015  054B  01C5               	clrf	(??___flmul+0)+0+2
  6016  054C  01C6               	clrf	(??___flmul+0)+0+3
  6017  054D  01C7               	movf	0+(??___flmul+0)+0,w
  6018  054E  0844               	addwf	(___flmul@prod),f
  6019  054F  07D0               	movf	1+(??___flmul+0)+0,w
  6020  0550  0845               	clrz
  6021  0551  1103               	skipnc
  6022  0552  1803               	addlw	1
  6023  0553  3E01               	skipnz
  6024  0554  1903               	goto	u3601
  6025  0555  2D57               	addwf	(___flmul@prod+1),f
  6026  0556  07D1               u3601:
  6027  0557                     	movf	2+(??___flmul+0)+0,w
  6028  0557  0846               	clrz
  6029  0558  1103               	skipnc
  6030  0559  1803               	addlw	1
  6031  055A  3E01               	skipnz
  6032  055B  1903               	goto	u3602
  6033  055C  2D5E               	addwf	(___flmul@prod+2),f
  6034  055D  07D2               u3602:
  6035  055E                     	movf	3+(??___flmul+0)+0,w
  6036  055E  0847               	clrz
  6037  055F  1103               	skipnc
  6038  0560  1803               	addlw	1
  6039  0561  3E01               	skipnz
  6040  0562  1903               	goto	u3603
  6041  0563  2D65               	addwf	(___flmul@prod+3),f
  6042  0564  07D3               u3603:
  6043  0565                     
  6044                           	line	125
  6045                           	movf	0+(___flmul@b)+02h,w
  6046  0565  083E               	movwf	(??___flmul+0)+0
  6047  0566  00C4               	movf	(??___flmul+0)+0,w
  6048  0567  0844               	movwf	(__Umul8_16@multiplicand)
  6049  0568  00F0               	movf	(___flmul@a),w
  6050  0569  0840               	fcall	__Umul8_16
  6051  056A  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6052  056F  0871               	bcf	status, 5	;RP0=0, select bank0
  6053  0570  1283               	bcf	status, 6	;RP1=0, select bank0
  6054  0571  1303               	movwf	(___flmul@temp+1)
  6055  0572  00D5               	movf	(0+(?__Umul8_16)),w
  6056  0573  0870               	movwf	(___flmul@temp)
  6057  0574  00D4               	line	126
  6058                           	
  6059                           l2730:	
  6060  0575                     	movf	(___flmul@temp),w
  6061  0575  0854               	movwf	(??___flmul+0)+0
  6062  0576  00C4               	clrf	(??___flmul+0)+0+1
  6063  0577  01C5               	clrf	(??___flmul+0)+0+2
  6064  0578  01C6               	clrf	(??___flmul+0)+0+3
  6065  0579  01C7               	movf	0+(??___flmul+0)+0,w
  6066  057A  0844               	addwf	(___flmul@grs),f
  6067  057B  07CA               	movf	1+(??___flmul+0)+0,w
  6068  057C  0845               	clrz
  6069  057D  1103               	skipnc
  6070  057E  1803               	addlw	1
  6071  057F  3E01               	skipnz
  6072  0580  1903               	goto	u3611
  6073  0581  2D83               	addwf	(___flmul@grs+1),f
  6074  0582  07CB               u3611:
  6075  0583                     	movf	2+(??___flmul+0)+0,w
  6076  0583  0846               	clrz
  6077  0584  1103               	skipnc
  6078  0585  1803               	addlw	1
  6079  0586  3E01               	skipnz
  6080  0587  1903               	goto	u3612
  6081  0588  2D8A               	addwf	(___flmul@grs+2),f
  6082  0589  07CC               u3612:
  6083  058A                     	movf	3+(??___flmul+0)+0,w
  6084  058A  0847               	clrz
  6085  058B  1103               	skipnc
  6086  058C  1803               	addlw	1
  6087  058D  3E01               	skipnz
  6088  058E  1903               	goto	u3613
  6089  058F  2D91               	addwf	(___flmul@grs+3),f
  6090  0590  07CD               u3613:
  6091  0591                     
  6092                           	line	127
  6093                           	
  6094                           l2732:	
  6095  0591                     	movf	0+(___flmul@temp)+01h,w
  6096  0591  0855               	movwf	(??___flmul+0)+0
  6097  0592  00C4               	clrf	(??___flmul+0)+0+1
  6098  0593  01C5               	clrf	(??___flmul+0)+0+2
  6099  0594  01C6               	clrf	(??___flmul+0)+0+3
  6100  0595  01C7               	movf	0+(??___flmul+0)+0,w
  6101  0596  0844               	addwf	(___flmul@prod),f
  6102  0597  07D0               	movf	1+(??___flmul+0)+0,w
  6103  0598  0845               	clrz
  6104  0599  1103               	skipnc
  6105  059A  1803               	addlw	1
  6106  059B  3E01               	skipnz
  6107  059C  1903               	goto	u3621
  6108  059D  2D9F               	addwf	(___flmul@prod+1),f
  6109  059E  07D1               u3621:
  6110  059F                     	movf	2+(??___flmul+0)+0,w
  6111  059F  0846               	clrz
  6112  05A0  1103               	skipnc
  6113  05A1  1803               	addlw	1
  6114  05A2  3E01               	skipnz
  6115  05A3  1903               	goto	u3622
  6116  05A4  2DA6               	addwf	(___flmul@prod+2),f
  6117  05A5  07D2               u3622:
  6118  05A6                     	movf	3+(??___flmul+0)+0,w
  6119  05A6  0847               	clrz
  6120  05A7  1103               	skipnc
  6121  05A8  1803               	addlw	1
  6122  05A9  3E01               	skipnz
  6123  05AA  1903               	goto	u3623
  6124  05AB  2DAD               	addwf	(___flmul@prod+3),f
  6125  05AC  07D3               u3623:
  6126  05AD                     
  6127                           	line	128
  6128                           	
  6129                           l2734:	
  6130  05AD                     	movlw	08h
  6131  05AD  3008               	movwf	(??___flmul+0)+0
  6132  05AE  00C4               u3635:
  6133  05AF                     	clrc
  6134  05AF  1003               	rlf	(___flmul@grs),f
  6135  05B0  0DCA               	rlf	(___flmul@grs+1),f
  6136  05B1  0DCB               	rlf	(___flmul@grs+2),f
  6137  05B2  0DCC               	rlf	(___flmul@grs+3),f
  6138  05B3  0DCD               	decfsz	(??___flmul+0)+0
  6139  05B4  0BC4               	goto	u3635
  6140  05B5  2DAF               	line	129
  6141                           	
  6142                           l2736:	
  6143  05B6                     	movf	0+(___flmul@b)+01h,w
  6144  05B6  083D               	movwf	(??___flmul+0)+0
  6145  05B7  00C4               	movf	(??___flmul+0)+0,w
  6146  05B8  0844               	movwf	(__Umul8_16@multiplicand)
  6147  05B9  00F0               	movf	(___flmul@a),w
  6148  05BA  0840               	fcall	__Umul8_16
  6149  05BB  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6150  05C0  0871               	bcf	status, 5	;RP0=0, select bank0
  6151  05C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6152  05C2  1303               	movwf	(___flmul@temp+1)
  6153  05C3  00D5               	movf	(0+(?__Umul8_16)),w
  6154  05C4  0870               	movwf	(___flmul@temp)
  6155  05C5  00D4               	line	130
  6156                           	
  6157                           l2738:	
  6158  05C6                     	movf	(___flmul@temp),w
  6159  05C6  0854               	movwf	((??___flmul+0)+0)
  6160  05C7  00C4               	movf	(___flmul@temp+1),w
  6161  05C8  0855               	movwf	((??___flmul+0)+0+1)
  6162  05C9  00C5               	clrf	((??___flmul+0)+0+2)
  6163  05CA  01C6               	clrf	((??___flmul+0)+0+3)
  6164  05CB  01C7               	movf	0+(??___flmul+0)+0,w
  6165  05CC  0844               	addwf	(___flmul@grs),f
  6166  05CD  07CA               	movf	1+(??___flmul+0)+0,w
  6167  05CE  0845               	clrz
  6168  05CF  1103               	skipnc
  6169  05D0  1803               	addlw	1
  6170  05D1  3E01               	skipnz
  6171  05D2  1903               	goto	u3641
  6172  05D3  2DD5               	addwf	(___flmul@grs+1),f
  6173  05D4  07CB               u3641:
  6174  05D5                     	movf	2+(??___flmul+0)+0,w
  6175  05D5  0846               	clrz
  6176  05D6  1103               	skipnc
  6177  05D7  1803               	addlw	1
  6178  05D8  3E01               	skipnz
  6179  05D9  1903               	goto	u3642
  6180  05DA  2DDC               	addwf	(___flmul@grs+2),f
  6181  05DB  07CC               u3642:
  6182  05DC                     	movf	3+(??___flmul+0)+0,w
  6183  05DC  0847               	clrz
  6184  05DD  1103               	skipnc
  6185  05DE  1803               	addlw	1
  6186  05DF  3E01               	skipnz
  6187  05E0  1903               	goto	u3643
  6188  05E1  2DE3               	addwf	(___flmul@grs+3),f
  6189  05E2  07CD               u3643:
  6190  05E3                     
  6191                           	line	131
  6192                           	
  6193                           l2740:	
  6194  05E3                     	movf	(___flmul@b),w
  6195  05E3  083C               	movwf	(??___flmul+0)+0
  6196  05E4  00C4               	movf	(??___flmul+0)+0,w
  6197  05E5  0844               	movwf	(__Umul8_16@multiplicand)
  6198  05E6  00F0               	movf	0+(___flmul@a)+01h,w
  6199  05E7  0841               	fcall	__Umul8_16
  6200  05E8  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6201  05ED  0871               	bcf	status, 5	;RP0=0, select bank0
  6202  05EE  1283               	bcf	status, 6	;RP1=0, select bank0
  6203  05EF  1303               	movwf	(___flmul@temp+1)
  6204  05F0  00D5               	movf	(0+(?__Umul8_16)),w
  6205  05F1  0870               	movwf	(___flmul@temp)
  6206  05F2  00D4               	line	132
  6207                           	
  6208                           l2742:	
  6209  05F3                     	movf	(___flmul@temp),w
  6210  05F3  0854               	movwf	((??___flmul+0)+0)
  6211  05F4  00C4               	movf	(___flmul@temp+1),w
  6212  05F5  0855               	movwf	((??___flmul+0)+0+1)
  6213  05F6  00C5               	clrf	((??___flmul+0)+0+2)
  6214  05F7  01C6               	clrf	((??___flmul+0)+0+3)
  6215  05F8  01C7               	movf	0+(??___flmul+0)+0,w
  6216  05F9  0844               	addwf	(___flmul@grs),f
  6217  05FA  07CA               	movf	1+(??___flmul+0)+0,w
  6218  05FB  0845               	clrz
  6219  05FC  1103               	skipnc
  6220  05FD  1803               	addlw	1
  6221  05FE  3E01               	skipnz
  6222  05FF  1903               	goto	u3651
  6223  0600  2E02               	addwf	(___flmul@grs+1),f
  6224  0601  07CB               u3651:
  6225  0602                     	movf	2+(??___flmul+0)+0,w
  6226  0602  0846               	clrz
  6227  0603  1103               	skipnc
  6228  0604  1803               	addlw	1
  6229  0605  3E01               	skipnz
  6230  0606  1903               	goto	u3652
  6231  0607  2E09               	addwf	(___flmul@grs+2),f
  6232  0608  07CC               u3652:
  6233  0609                     	movf	3+(??___flmul+0)+0,w
  6234  0609  0847               	clrz
  6235  060A  1103               	skipnc
  6236  060B  1803               	addlw	1
  6237  060C  3E01               	skipnz
  6238  060D  1903               	goto	u3653
  6239  060E  2E10               	addwf	(___flmul@grs+3),f
  6240  060F  07CD               u3653:
  6241  0610                     
  6242                           	line	133
  6243                           	
  6244                           l2744:	
  6245  0610                     	movlw	08h
  6246  0610  3008               	movwf	(??___flmul+0)+0
  6247  0611  00C4               u3665:
  6248  0612                     	clrc
  6249  0612  1003               	rlf	(___flmul@grs),f
  6250  0613  0DCA               	rlf	(___flmul@grs+1),f
  6251  0614  0DCB               	rlf	(___flmul@grs+2),f
  6252  0615  0DCC               	rlf	(___flmul@grs+3),f
  6253  0616  0DCD               	decfsz	(??___flmul+0)+0
  6254  0617  0BC4               	goto	u3665
  6255  0618  2E12               	line	134
  6256                           	movf	(___flmul@b),w
  6257  0619  083C               	movwf	(??___flmul+0)+0
  6258  061A  00C4               	movf	(??___flmul+0)+0,w
  6259  061B  0844               	movwf	(__Umul8_16@multiplicand)
  6260  061C  00F0               	movf	(___flmul@a),w
  6261  061D  0840               	fcall	__Umul8_16
  6262  061E  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6263  0623  0871               	bcf	status, 5	;RP0=0, select bank0
  6264  0624  1283               	bcf	status, 6	;RP1=0, select bank0
  6265  0625  1303               	movwf	(___flmul@temp+1)
  6266  0626  00D5               	movf	(0+(?__Umul8_16)),w
  6267  0627  0870               	movwf	(___flmul@temp)
  6268  0628  00D4               	line	135
  6269                           	
  6270                           l2746:	
  6271  0629                     	movf	(___flmul@temp),w
  6272  0629  0854               	movwf	((??___flmul+0)+0)
  6273  062A  00C4               	movf	(___flmul@temp+1),w
  6274  062B  0855               	movwf	((??___flmul+0)+0+1)
  6275  062C  00C5               	clrf	((??___flmul+0)+0+2)
  6276  062D  01C6               	clrf	((??___flmul+0)+0+3)
  6277  062E  01C7               	movf	0+(??___flmul+0)+0,w
  6278  062F  0844               	addwf	(___flmul@grs),f
  6279  0630  07CA               	movf	1+(??___flmul+0)+0,w
  6280  0631  0845               	clrz
  6281  0632  1103               	skipnc
  6282  0633  1803               	addlw	1
  6283  0634  3E01               	skipnz
  6284  0635  1903               	goto	u3671
  6285  0636  2E38               	addwf	(___flmul@grs+1),f
  6286  0637  07CB               u3671:
  6287  0638                     	movf	2+(??___flmul+0)+0,w
  6288  0638  0846               	clrz
  6289  0639  1103               	skipnc
  6290  063A  1803               	addlw	1
  6291  063B  3E01               	skipnz
  6292  063C  1903               	goto	u3672
  6293  063D  2E3F               	addwf	(___flmul@grs+2),f
  6294  063E  07CC               u3672:
  6295  063F                     	movf	3+(??___flmul+0)+0,w
  6296  063F  0847               	clrz
  6297  0640  1103               	skipnc
  6298  0641  1803               	addlw	1
  6299  0642  3E01               	skipnz
  6300  0643  1903               	goto	u3673
  6301  0644  2E46               	addwf	(___flmul@grs+3),f
  6302  0645  07CD               u3673:
  6303  0646                     
  6304                           	line	136
  6305                           	
  6306                           l2748:	
  6307  0646                     	movf	0+(___flmul@b)+01h,w
  6308  0646  083D               	movwf	(??___flmul+0)+0
  6309  0647  00C4               	movf	(??___flmul+0)+0,w
  6310  0648  0844               	movwf	(__Umul8_16@multiplicand)
  6311  0649  00F0               	movf	0+(___flmul@a)+02h,w
  6312  064A  0842               	fcall	__Umul8_16
  6313  064B  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6314  0650  0871               	bcf	status, 5	;RP0=0, select bank0
  6315  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  6316  0652  1303               	movwf	(___flmul@temp+1)
  6317  0653  00D5               	movf	(0+(?__Umul8_16)),w
  6318  0654  0870               	movwf	(___flmul@temp)
  6319  0655  00D4               	line	137
  6320                           	movf	(___flmul@temp),w
  6321  0656  0854               	movwf	((??___flmul+0)+0)
  6322  0657  00C4               	movf	(___flmul@temp+1),w
  6323  0658  0855               	movwf	((??___flmul+0)+0+1)
  6324  0659  00C5               	clrf	((??___flmul+0)+0+2)
  6325  065A  01C6               	clrf	((??___flmul+0)+0+3)
  6326  065B  01C7               	movf	0+(??___flmul+0)+0,w
  6327  065C  0844               	addwf	(___flmul@prod),f
  6328  065D  07D0               	movf	1+(??___flmul+0)+0,w
  6329  065E  0845               	clrz
  6330  065F  1103               	skipnc
  6331  0660  1803               	addlw	1
  6332  0661  3E01               	skipnz
  6333  0662  1903               	goto	u3681
  6334  0663  2E65               	addwf	(___flmul@prod+1),f
  6335  0664  07D1               u3681:
  6336  0665                     	movf	2+(??___flmul+0)+0,w
  6337  0665  0846               	clrz
  6338  0666  1103               	skipnc
  6339  0667  1803               	addlw	1
  6340  0668  3E01               	skipnz
  6341  0669  1903               	goto	u3682
  6342  066A  2E6C               	addwf	(___flmul@prod+2),f
  6343  066B  07D2               u3682:
  6344  066C                     	movf	3+(??___flmul+0)+0,w
  6345  066C  0847               	clrz
  6346  066D  1103               	skipnc
  6347  066E  1803               	addlw	1
  6348  066F  3E01               	skipnz
  6349  0670  1903               	goto	u3683
  6350  0671  2E73               	addwf	(___flmul@prod+3),f
  6351  0672  07D3               u3683:
  6352  0673                     
  6353                           	line	138
  6354                           	
  6355                           l2750:	
  6356  0673                     	movf	0+(___flmul@b)+02h,w
  6357  0673  083E               	movwf	(??___flmul+0)+0
  6358  0674  00C4               	movf	(??___flmul+0)+0,w
  6359  0675  0844               	movwf	(__Umul8_16@multiplicand)
  6360  0676  00F0               	movf	0+(___flmul@a)+01h,w
  6361  0677  0841               	fcall	__Umul8_16
  6362  0678  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6363  067D  0871               	bcf	status, 5	;RP0=0, select bank0
  6364  067E  1283               	bcf	status, 6	;RP1=0, select bank0
  6365  067F  1303               	movwf	(___flmul@temp+1)
  6366  0680  00D5               	movf	(0+(?__Umul8_16)),w
  6367  0681  0870               	movwf	(___flmul@temp)
  6368  0682  00D4               	line	139
  6369                           	
  6370                           l2752:	
  6371  0683                     	movf	(___flmul@temp),w
  6372  0683  0854               	movwf	((??___flmul+0)+0)
  6373  0684  00C4               	movf	(___flmul@temp+1),w
  6374  0685  0855               	movwf	((??___flmul+0)+0+1)
  6375  0686  00C5               	clrf	((??___flmul+0)+0+2)
  6376  0687  01C6               	clrf	((??___flmul+0)+0+3)
  6377  0688  01C7               	movf	0+(??___flmul+0)+0,w
  6378  0689  0844               	addwf	(___flmul@prod),f
  6379  068A  07D0               	movf	1+(??___flmul+0)+0,w
  6380  068B  0845               	clrz
  6381  068C  1103               	skipnc
  6382  068D  1803               	addlw	1
  6383  068E  3E01               	skipnz
  6384  068F  1903               	goto	u3691
  6385  0690  2E92               	addwf	(___flmul@prod+1),f
  6386  0691  07D1               u3691:
  6387  0692                     	movf	2+(??___flmul+0)+0,w
  6388  0692  0846               	clrz
  6389  0693  1103               	skipnc
  6390  0694  1803               	addlw	1
  6391  0695  3E01               	skipnz
  6392  0696  1903               	goto	u3692
  6393  0697  2E99               	addwf	(___flmul@prod+2),f
  6394  0698  07D2               u3692:
  6395  0699                     	movf	3+(??___flmul+0)+0,w
  6396  0699  0847               	clrz
  6397  069A  1103               	skipnc
  6398  069B  1803               	addlw	1
  6399  069C  3E01               	skipnz
  6400  069D  1903               	goto	u3693
  6401  069E  2EA0               	addwf	(___flmul@prod+3),f
  6402  069F  07D3               u3693:
  6403  06A0                     
  6404                           	line	140
  6405                           	movf	0+(___flmul@b)+02h,w
  6406  06A0  083E               	movwf	(??___flmul+0)+0
  6407  06A1  00C4               	movf	(??___flmul+0)+0,w
  6408  06A2  0844               	movwf	(__Umul8_16@multiplicand)
  6409  06A3  00F0               	movf	0+(___flmul@a)+02h,w
  6410  06A4  0842               	fcall	__Umul8_16
  6411  06A5  160A  118A  2522  120A  118A  	movf	(1+(?__Umul8_16)),w
  6412  06AA  0871               	bcf	status, 5	;RP0=0, select bank0
  6413  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  6414  06AC  1303               	movwf	(___flmul@temp+1)
  6415  06AD  00D5               	movf	(0+(?__Umul8_16)),w
  6416  06AE  0870               	movwf	(___flmul@temp)
  6417  06AF  00D4               	line	141
  6418                           	
  6419                           l2754:	
  6420  06B0                     	movf	(___flmul@temp),w
  6421  06B0  0854               	movwf	((??___flmul+0)+0)
  6422  06B1  00C4               	movf	(___flmul@temp+1),w
  6423  06B2  0855               	movwf	((??___flmul+0)+0+1)
  6424  06B3  00C5               	clrf	((??___flmul+0)+0+2)
  6425  06B4  01C6               	clrf	((??___flmul+0)+0+3)
  6426  06B5  01C7               	movlw	08h
  6427  06B6  3008               u3705:
  6428  06B7                     	clrc
  6429  06B7  1003               	rlf	(??___flmul+0)+0,f
  6430  06B8  0DC4               	rlf	(??___flmul+0)+1,f
  6431  06B9  0DC5               	rlf	(??___flmul+0)+2,f
  6432  06BA  0DC6               	rlf	(??___flmul+0)+3,f
  6433  06BB  0DC7               u3700:
  6434  06BC                     	addlw	-1
  6435  06BC  3EFF               	skipz
  6436  06BD  1D03               	goto	u3705
  6437  06BE  2EB7               	movf	0+(??___flmul+0)+0,w
  6438  06BF  0844               	addwf	(___flmul@prod),f
  6439  06C0  07D0               	movf	1+(??___flmul+0)+0,w
  6440  06C1  0845               	clrz
  6441  06C2  1103               	skipnc
  6442  06C3  1803               	addlw	1
  6443  06C4  3E01               	skipnz
  6444  06C5  1903               	goto	u3711
  6445  06C6  2EC8               	addwf	(___flmul@prod+1),f
  6446  06C7  07D1               u3711:
  6447  06C8                     	movf	2+(??___flmul+0)+0,w
  6448  06C8  0846               	clrz
  6449  06C9  1103               	skipnc
  6450  06CA  1803               	addlw	1
  6451  06CB  3E01               	skipnz
  6452  06CC  1903               	goto	u3712
  6453  06CD  2ECF               	addwf	(___flmul@prod+2),f
  6454  06CE  07D2               u3712:
  6455  06CF                     	movf	3+(??___flmul+0)+0,w
  6456  06CF  0847               	clrz
  6457  06D0  1103               	skipnc
  6458  06D1  1803               	addlw	1
  6459  06D2  3E01               	skipnz
  6460  06D3  1903               	goto	u3713
  6461  06D4  2ED6               	addwf	(___flmul@prod+3),f
  6462  06D5  07D3               u3713:
  6463  06D6                     
  6464                           	line	145
  6465                           	
  6466                           l2756:	
  6467  06D6                     	movf	(___flmul@grs),w
  6468  06D6  084A               	movwf	(??___flmul+0)+0
  6469  06D7  00C4               	movf	(___flmul@grs+1),w
  6470  06D8  084B               	movwf	((??___flmul+0)+0+1)
  6471  06D9  00C5               	movf	(___flmul@grs+2),w
  6472  06DA  084C               	movwf	((??___flmul+0)+0+2)
  6473  06DB  00C6               	movf	(___flmul@grs+3),w
  6474  06DC  084D               	movwf	((??___flmul+0)+0+3)
  6475  06DD  00C7               	movlw	018h
  6476  06DE  3018               u3725:
  6477  06DF                     	clrc
  6478  06DF  1003               	rrf	(??___flmul+0)+3,f
  6479  06E0  0CC7               	rrf	(??___flmul+0)+2,f
  6480  06E1  0CC6               	rrf	(??___flmul+0)+1,f
  6481  06E2  0CC5               	rrf	(??___flmul+0)+0,f
  6482  06E3  0CC4               u3720:
  6483  06E4                     	addlw	-1
  6484  06E4  3EFF               	skipz
  6485  06E5  1D03               	goto	u3725
  6486  06E6  2EDF               	movf	0+(??___flmul+0)+0,w
  6487  06E7  0844               	addwf	(___flmul@prod),f
  6488  06E8  07D0               	movf	1+(??___flmul+0)+0,w
  6489  06E9  0845               	clrz
  6490  06EA  1103               	skipnc
  6491  06EB  1803               	addlw	1
  6492  06EC  3E01               	skipnz
  6493  06ED  1903               	goto	u3731
  6494  06EE  2EF0               	addwf	(___flmul@prod+1),f
  6495  06EF  07D1               u3731:
  6496  06F0                     	movf	2+(??___flmul+0)+0,w
  6497  06F0  0846               	clrz
  6498  06F1  1103               	skipnc
  6499  06F2  1803               	addlw	1
  6500  06F3  3E01               	skipnz
  6501  06F4  1903               	goto	u3732
  6502  06F5  2EF7               	addwf	(___flmul@prod+2),f
  6503  06F6  07D2               u3732:
  6504  06F7                     	movf	3+(??___flmul+0)+0,w
  6505  06F7  0847               	clrz
  6506  06F8  1103               	skipnc
  6507  06F9  1803               	addlw	1
  6508  06FA  3E01               	skipnz
  6509  06FB  1903               	goto	u3733
  6510  06FC  2EFE               	addwf	(___flmul@prod+3),f
  6511  06FD  07D3               u3733:
  6512  06FE                     
  6513                           	line	146
  6514                           	
  6515                           l2758:	
  6516  06FE                     	movlw	08h
  6517  06FE  3008               	movwf	(??___flmul+0)+0
  6518  06FF  00C4               u3745:
  6519  0700                     	clrc
  6520  0700  1003               	rlf	(___flmul@grs),f
  6521  0701  0DCA               	rlf	(___flmul@grs+1),f
  6522  0702  0DCB               	rlf	(___flmul@grs+2),f
  6523  0703  0DCC               	rlf	(___flmul@grs+3),f
  6524  0704  0DCD               	decfsz	(??___flmul+0)+0
  6525  0705  0BC4               	goto	u3745
  6526  0706  2F00               	line	149
  6527                           	
  6528                           l2760:	
  6529  0707                     	movf	(___flmul@bexp),w
  6530  0707  084F               	addwf	(___flmul@aexp),w
  6531  0708  074E               	movwf	(??___flmul+0)+0
  6532  0709  00C4               	clrf	(??___flmul+0)+0+1
  6533  070A  01C5               	rlf	1+(??___flmul+0)+0,f
  6534  070B  0DC5               	
  6535                           	movf	0+(??___flmul+0)+0,w
  6536  070C  0844               	addlw	low(-126)
  6537  070D  3E82               	movwf	(___flmul@temp)
  6538  070E  00D4               	movf	1+(??___flmul+0)+0,w
  6539  070F  0845               	skipnc
  6540  0710  1803               	addlw	1
  6541  0711  3E01               	addlw	high(-126)
  6542  0712  3EFF               	movwf	1+(___flmul@temp)
  6543  0713  00D5               	line	152
  6544                           	goto	l2772
  6545  0714  2F34               	
  6546                           l724:	
  6547  0715                     	line	153
  6548                           	
  6549                           l2762:	
  6550  0715                     	movlw	01h
  6551  0715  3001               	movwf	(??___flmul+0)+0
  6552  0716  00C4               u3755:
  6553  0717                     	clrc
  6554  0717  1003               	rlf	(___flmul@prod),f
  6555  0718  0DD0               	rlf	(___flmul@prod+1),f
  6556  0719  0DD1               	rlf	(___flmul@prod+2),f
  6557  071A  0DD2               	rlf	(___flmul@prod+3),f
  6558  071B  0DD3               	decfsz	(??___flmul+0)+0
  6559  071C  0BC4               	goto	u3755
  6560  071D  2F17               	line	154
  6561                           	
  6562                           l2764:	
  6563  071E                     	btfss	(___flmul@grs+3),(31)&7
  6564  071E  1FCD               	goto	u3761
  6565  071F  2F21               	goto	u3760
  6566  0720  2F22               u3761:
  6567  0721                     	goto	l2768
  6568  0721  2F24               u3760:
  6569  0722                     	line	155
  6570                           	
  6571                           l2766:	
  6572  0722                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6573  0722  1450               	goto	l2768
  6574  0723  2F24               	line	156
  6575                           	
  6576                           l725:	
  6577  0724                     	line	157
  6578                           	
  6579                           l2768:	
  6580  0724                     	movlw	01h
  6581  0724  3001               	movwf	(??___flmul+0)+0
  6582  0725  00C4               u3775:
  6583  0726                     	clrc
  6584  0726  1003               	rlf	(___flmul@grs),f
  6585  0727  0DCA               	rlf	(___flmul@grs+1),f
  6586  0728  0DCB               	rlf	(___flmul@grs+2),f
  6587  0729  0DCC               	rlf	(___flmul@grs+3),f
  6588  072A  0DCD               	decfsz	(??___flmul+0)+0
  6589  072B  0BC4               	goto	u3775
  6590  072C  2F26               	line	158
  6591                           	
  6592                           l2770:	
  6593  072D                     	movlw	0FFh
  6594  072D  30FF               	addwf	(___flmul@temp),f
  6595  072E  07D4               	skipnc
  6596  072F  1803               	incf	(___flmul@temp+1),f
  6597  0730  0AD5               	movlw	0FFh
  6598  0731  30FF               	addwf	(___flmul@temp+1),f
  6599  0732  07D5               	goto	l2772
  6600  0733  2F34               	line	159
  6601                           	
  6602                           l723:	
  6603  0734                     	line	152
  6604                           	
  6605                           l2772:	
  6606  0734                     	btfss	(___flmul@prod+2),(23)&7
  6607  0734  1FD2               	goto	u3781
  6608  0735  2F37               	goto	u3780
  6609  0736  2F38               u3781:
  6610  0737                     	goto	l2762
  6611  0737  2F15               u3780:
  6612  0738                     	goto	l2774
  6613  0738  2F39               	
  6614                           l726:	
  6615  0739                     	line	163
  6616                           	
  6617                           l2774:	
  6618  0739                     	clrf	(___flmul@aexp)
  6619  0739  01CE               	line	164
  6620                           	
  6621                           l2776:	
  6622  073A                     	btfss	(___flmul@grs+3),(31)&7
  6623  073A  1FCD               	goto	u3791
  6624  073B  2F3D               	goto	u3790
  6625  073C  2F3E               u3791:
  6626  073D                     	goto	l2784
  6627  073D  2F5E               u3790:
  6628  073E                     	line	165
  6629                           	
  6630                           l2778:	
  6631  073E                     	movlw	0FFh
  6632  073E  30FF               	andwf	(___flmul@grs),w
  6633  073F  054A               	movwf	(??___flmul+0)+0
  6634  0740  00C4               	movlw	0FFh
  6635  0741  30FF               	andwf	(___flmul@grs+1),w
  6636  0742  054B               	movwf	((??___flmul+0)+0+1)
  6637  0743  00C5               	movlw	0FFh
  6638  0744  30FF               	andwf	(___flmul@grs+2),w
  6639  0745  054C               	movwf	((??___flmul+0)+0+2)
  6640  0746  00C6               	movlw	07Fh
  6641  0747  307F               	andwf	(___flmul@grs+3),w
  6642  0748  054D               	movwf	((??___flmul+0)+0+3)
  6643  0749  00C7               	movf	3+(??___flmul+0)+0,w
  6644  074A  0847               	iorwf	2+(??___flmul+0)+0,w
  6645  074B  0446               	iorwf	1+(??___flmul+0)+0,w
  6646  074C  0445               	iorwf	0+(??___flmul+0)+0,w
  6647  074D  0444               	skipnz
  6648  074E  1903               	goto	u3801
  6649  074F  2F51               	goto	u3800
  6650  0750  2F52               u3801:
  6651  0751                     	goto	l728
  6652  0751  2F55               u3800:
  6653  0752                     	line	166
  6654                           	
  6655                           l2780:	
  6656  0752                     	clrf	(___flmul@aexp)
  6657  0752  01CE               	incf	(___flmul@aexp),f
  6658  0753  0ACE               	line	167
  6659                           	goto	l2784
  6660  0754  2F5E               	line	168
  6661                           	
  6662                           l728:	
  6663  0755                     	line	169
  6664                           	btfss	(___flmul@prod),(0)&7
  6665  0755  1C50               	goto	u3811
  6666  0756  2F58               	goto	u3810
  6667  0757  2F59               u3811:
  6668  0758                     	goto	l2784
  6669  0758  2F5E               u3810:
  6670  0759                     	line	170
  6671                           	
  6672                           l2782:	
  6673  0759                     	clrf	(___flmul@aexp)
  6674  0759  01CE               	incf	(___flmul@aexp),f
  6675  075A  0ACE               	goto	l2784
  6676  075B  2F5E               	line	171
  6677                           	
  6678                           l730:	
  6679  075C                     	goto	l2784
  6680  075C  2F5E               	line	172
  6681                           	
  6682                           l729:	
  6683  075D                     	goto	l2784
  6684  075D  2F5E               	line	173
  6685                           	
  6686                           l727:	
  6687  075E                     	line	174
  6688                           	
  6689                           l2784:	
  6690  075E                     	movf	((___flmul@aexp)),w
  6691  075E  084E               	btfsc	status,2
  6692  075F  1903               	goto	u3821
  6693  0760  2F62               	goto	u3820
  6694  0761  2F63               u3821:
  6695  0762                     	goto	l2794
  6696  0762  2F96               u3820:
  6697  0763                     	line	175
  6698                           	
  6699                           l2786:	
  6700  0763                     	movlw	01h
  6701  0763  3001               	addwf	(___flmul@prod),f
  6702  0764  07D0               	movlw	0
  6703  0765  3000               	skipnc
  6704  0766  1803               movlw 1
  6705  0767  3001               	addwf	(___flmul@prod+1),f
  6706  0768  07D1               	movlw	0
  6707  0769  3000               	skipnc
  6708  076A  1803               movlw 1
  6709  076B  3001               	addwf	(___flmul@prod+2),f
  6710  076C  07D2               	movlw	0
  6711  076D  3000               	skipnc
  6712  076E  1803               movlw 1
  6713  076F  3001               	addwf	(___flmul@prod+3),f
  6714  0770  07D3               	line	176
  6715                           	
  6716                           l2788:	
  6717  0771                     	btfss	(___flmul@prod+3),(24)&7
  6718  0771  1C53               	goto	u3831
  6719  0772  2F74               	goto	u3830
  6720  0773  2F75               u3831:
  6721  0774                     	goto	l2794
  6722  0774  2F96               u3830:
  6723  0775                     	line	177
  6724                           	
  6725                           l2790:	
  6726  0775                     	movf	(___flmul@prod),w
  6727  0775  0850               	movwf	(??___flmul+0)+0
  6728  0776  00C4               	movf	(___flmul@prod+1),w
  6729  0777  0851               	movwf	((??___flmul+0)+0+1)
  6730  0778  00C5               	movf	(___flmul@prod+2),w
  6731  0779  0852               	movwf	((??___flmul+0)+0+2)
  6732  077A  00C6               	movf	(___flmul@prod+3),w
  6733  077B  0853               	movwf	((??___flmul+0)+0+3)
  6734  077C  00C7               	movlw	01h
  6735  077D  3001               	movwf	(??___flmul+4)+0
  6736  077E  00C8               u3845:
  6737  077F                     	rlf	(??___flmul+0)+3,w
  6738  077F  0D47               	rrf	(??___flmul+0)+3,f
  6739  0780  0CC7               	rrf	(??___flmul+0)+2,f
  6740  0781  0CC6               	rrf	(??___flmul+0)+1,f
  6741  0782  0CC5               	rrf	(??___flmul+0)+0,f
  6742  0783  0CC4               u3840:
  6743  0784                     	decfsz	(??___flmul+4)+0,f
  6744  0784  0BC8               	goto	u3845
  6745  0785  2F7F               	movf	3+(??___flmul+0)+0,w
  6746  0786  0847               	movwf	(___flmul@prod+3)
  6747  0787  00D3               	movf	2+(??___flmul+0)+0,w
  6748  0788  0846               	movwf	(___flmul@prod+2)
  6749  0789  00D2               	movf	1+(??___flmul+0)+0,w
  6750  078A  0845               	movwf	(___flmul@prod+1)
  6751  078B  00D1               	movf	0+(??___flmul+0)+0,w
  6752  078C  0844               	movwf	(___flmul@prod)
  6753  078D  00D0               
  6754                           	line	178
  6755                           	
  6756                           l2792:	
  6757  078E                     	movlw	01h
  6758  078E  3001               	addwf	(___flmul@temp),f
  6759  078F  07D4               	skipnc
  6760  0790  1803               	incf	(___flmul@temp+1),f
  6761  0791  0AD5               	movlw	0
  6762  0792  3000               	addwf	(___flmul@temp+1),f
  6763  0793  07D5               	goto	l2794
  6764  0794  2F96               	line	179
  6765                           	
  6766                           l732:	
  6767  0795                     	goto	l2794
  6768  0795  2F96               	line	180
  6769                           	
  6770                           l731:	
  6771  0796                     	line	183
  6772                           	
  6773                           l2794:	
  6774  0796                     	movf	(___flmul@temp+1),w
  6775  0796  0855               	xorlw	80h
  6776  0797  3A80               	movwf	btemp+1
  6777  0798  00FF               	movlw	(0)^80h
  6778  0799  3080               	subwf	btemp+1,w
  6779  079A  027F               	skipz
  6780  079B  1D03               	goto	u3855
  6781  079C  2F9F               	movlw	0FFh
  6782  079D  30FF               	subwf	(___flmul@temp),w
  6783  079E  0254               u3855:
  6784  079F                     
  6785                           	skipc
  6786  079F  1C03               	goto	u3851
  6787  07A0  2FA2               	goto	u3850
  6788  07A1  2FA3               u3851:
  6789  07A2                     	goto	l2798
  6790  07A2  2FAE               u3850:
  6791  07A3                     	line	184
  6792                           	
  6793                           l2796:	
  6794  07A3                     	movlw	07Fh
  6795  07A3  307F               	bcf	status, 5	;RP0=0, select bank0
  6796  07A4  1283               	bcf	status, 6	;RP1=0, select bank0
  6797  07A5  1303               	movwf	(___flmul@prod+3)
  6798  07A6  00D3               	movlw	080h
  6799  07A7  3080               	movwf	(___flmul@prod+2)
  6800  07A8  00D2               	movlw	0
  6801  07A9  3000               	movwf	(___flmul@prod+1)
  6802  07AA  00D1               	movlw	0
  6803  07AB  3000               	movwf	(___flmul@prod)
  6804  07AC  00D0               
  6805                           	line	185
  6806                           	goto	l734
  6807  07AD  2FE5               	line	187
  6808                           	
  6809                           l733:	
  6810  07AE                     	
  6811                           l2798:	
  6812  07AE                     	bcf	status, 5	;RP0=0, select bank0
  6813  07AE  1283               	bcf	status, 6	;RP1=0, select bank0
  6814  07AF  1303               	movf	(___flmul@temp+1),w
  6815  07B0  0855               	xorlw	80h
  6816  07B1  3A80               	movwf	btemp+1
  6817  07B2  00FF               	movlw	(0)^80h
  6818  07B3  3080               	subwf	btemp+1,w
  6819  07B4  027F               	skipz
  6820  07B5  1D03               	goto	u3865
  6821  07B6  2FB9               	movlw	01h
  6822  07B7  3001               	subwf	(___flmul@temp),w
  6823  07B8  0254               u3865:
  6824  07B9                     
  6825                           	skipnc
  6826  07B9  1803               	goto	u3861
  6827  07BA  2FBC               	goto	u3860
  6828  07BB  2FBD               u3861:
  6829  07BC                     	goto	l2804
  6830  07BC  2FC9               u3860:
  6831  07BD                     	line	188
  6832                           	
  6833                           l2800:	
  6834  07BD                     	movlw	high highword(0)
  6835  07BD  3000               	bcf	status, 5	;RP0=0, select bank0
  6836  07BE  1283               	bcf	status, 6	;RP1=0, select bank0
  6837  07BF  1303               	movwf	(___flmul@prod+3)
  6838  07C0  00D3               	movlw	low highword(0)
  6839  07C1  3000               	movwf	(___flmul@prod+2)
  6840  07C2  00D2               	movlw	high(0)
  6841  07C3  3000               	movwf	(___flmul@prod+1)
  6842  07C4  00D1               	movlw	low(0)
  6843  07C5  3000               	movwf	(___flmul@prod)
  6844  07C6  00D0               
  6845                           	line	190
  6846                           	
  6847                           l2802:	
  6848  07C7                     	clrf	(___flmul@sign)
  6849  07C7  01C9               	line	191
  6850                           	goto	l734
  6851  07C8  2FE5               	line	192
  6852                           	
  6853                           l735:	
  6854  07C9                     	line	194
  6855                           	
  6856                           l2804:	
  6857  07C9                     	bcf	status, 5	;RP0=0, select bank0
  6858  07C9  1283               	bcf	status, 6	;RP1=0, select bank0
  6859  07CA  1303               	movf	(___flmul@temp),w
  6860  07CB  0854               	movwf	(??___flmul+0)+0
  6861  07CC  00C4               	movf	(??___flmul+0)+0,w
  6862  07CD  0844               	movwf	(___flmul@bexp)
  6863  07CE  00CF               	line	195
  6864                           	movlw	0FFh
  6865  07CF  30FF               	andwf	(___flmul@prod),f
  6866  07D0  05D0               	movlw	0FFh
  6867  07D1  30FF               	andwf	(___flmul@prod+1),f
  6868  07D2  05D1               	movlw	07Fh
  6869  07D3  307F               	andwf	(___flmul@prod+2),f
  6870  07D4  05D2               	movlw	0
  6871  07D5  3000               	andwf	(___flmul@prod+3),f
  6872  07D6  05D3               	line	196
  6873                           	
  6874                           l2806:	
  6875  07D7                     	btfss	(___flmul@bexp),(0)&7
  6876  07D7  1C4F               	goto	u3871
  6877  07D8  2FDA               	goto	u3870
  6878  07D9  2FDB               u3871:
  6879  07DA                     	goto	l2810
  6880  07DA  2FDD               u3870:
  6881  07DB                     	line	197
  6882                           	
  6883                           l2808:	
  6884  07DB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6885  07DB  17D2               	goto	l2810
  6886  07DC  2FDD               	line	198
  6887                           	
  6888                           l737:	
  6889  07DD                     	line	199
  6890                           	
  6891                           l2810:	
  6892  07DD                     	movf	(___flmul@bexp),w
  6893  07DD  084F               	movwf	(??___flmul+0)+0
  6894  07DE  00C4               	clrc
  6895  07DF  1003               	rrf	(??___flmul+0)+0,w
  6896  07E0  0C44               	movwf	(??___flmul+1)+0
  6897  07E1  00C5               	movf	(??___flmul+1)+0,w
  6898  07E2  0845               	movwf	0+(___flmul@prod)+03h
  6899  07E3  00D3               	goto	l734
  6900  07E4  2FE5               	line	200
  6901                           	
  6902                           l736:	
  6903  07E5                     	
  6904                           l734:	
  6905  07E5                     	line	201
  6906                           	movf	(___flmul@sign),w
  6907  07E5  0849               	movwf	(??___flmul+0)+0
  6908  07E6  00C4               	movf	(??___flmul+0)+0,w
  6909  07E7  0844               	iorwf	0+(___flmul@prod)+03h,f
  6910  07E8  04D3               	line	203
  6911                           	
  6912                           l2812:	
  6913  07E9                     	movf	(___flmul@prod+3),w
  6914  07E9  0853               	movwf	(?___flmul+3)
  6915  07EA  00BF               	movf	(___flmul@prod+2),w
  6916  07EB  0852               	movwf	(?___flmul+2)
  6917  07EC  00BE               	movf	(___flmul@prod+1),w
  6918  07ED  0851               	movwf	(?___flmul+1)
  6919  07EE  00BD               	movf	(___flmul@prod),w
  6920  07EF  0850               	movwf	(?___flmul)
  6921  07F0  00BC               
  6922                           	goto	l722
  6923  07F1  2FF2               	
  6924                           l2814:	
  6925  07F2                     	line	205
  6926                           	
  6927                           l722:	
  6928  07F2                     	return
  6929  07F2  0008               	opt stack 0
  6930                           GLOBAL	__end_of___flmul
  6931                           	__end_of___flmul:
  6932  07F3                     	signat	___flmul,8316
  6933                           	global	__Umul8_16
  6934                           
  6935 ;; *************** function __Umul8_16 *****************
  6936 ;; Defined at:
  6937 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  multiplier      1    wreg     unsigned char 
  6940 ;;  multiplicand    1    0[COMMON] unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  multiplier      1    8[COMMON] unsigned char 
  6943 ;;  word_mpld       2    6[COMMON] unsigned int 
  6944 ;;  product         2    4[COMMON] unsigned int 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  2    0[COMMON] unsigned int 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6954 ;;      Params:         2       0       0       0       0
  6955 ;;      Locals:         5       0       0       0       0
  6956 ;;      Temps:          2       0       0       0       0
  6957 ;;      Totals:         9       0       0       0       0
  6958 ;;Total ram usage:        9 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		___flmul
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6967                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6968                           	line	4
  6969                           global __ptext19
  6970                           __ptext19:	;psect for function __Umul8_16
  6971  1522                     psect	text19
  6972                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6973                           	line	4
  6974                           	global	__size_of__Umul8_16
  6975                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6976  002A                     	
  6977                           __Umul8_16:	
  6978  1522                     ;incstack = 0
  6979                           	opt	stack 6
  6980                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6981                           ;__Umul8_16@multiplier stored from wreg
  6982                           	movwf	(__Umul8_16@multiplier)
  6983  1522  00F8               	line	5
  6984                           	
  6985                           l2226:	
  6986  1523                     	clrf	(__Umul8_16@product)
  6987  1523  01F4               	clrf	(__Umul8_16@product+1)
  6988  1524  01F5               	line	6
  6989                           	
  6990                           l2228:	
  6991  1525                     	movf	(__Umul8_16@multiplicand),w
  6992  1525  0870               	movwf	(??__Umul8_16+0)+0
  6993  1526  00F2               	clrf	(??__Umul8_16+0)+0+1
  6994  1527  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6995  1528  0872               	movwf	(__Umul8_16@word_mpld)
  6996  1529  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6997  152A  0873               	movwf	(__Umul8_16@word_mpld+1)
  6998  152B  00F7               	goto	l2230
  6999  152C  2D2D               	line	50
  7000                           	
  7001                           l759:	
  7002  152D                     	line	51
  7003                           	
  7004                           l2230:	
  7005  152D                     	btfss	(__Umul8_16@multiplier),(0)&7
  7006  152D  1C78               	goto	u2611
  7007  152E  2D30               	goto	u2610
  7008  152F  2D31               u2611:
  7009  1530                     	goto	l760
  7010  1530  2D37               u2610:
  7011  1531                     	line	52
  7012                           	
  7013                           l2232:	
  7014  1531                     	movf	(__Umul8_16@word_mpld),w
  7015  1531  0876               	addwf	(__Umul8_16@product),f
  7016  1532  07F4               	skipnc
  7017  1533  1803               	incf	(__Umul8_16@product+1),f
  7018  1534  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  7019  1535  0877               	addwf	(__Umul8_16@product+1),f
  7020  1536  07F5               	line	53
  7021                           	
  7022                           l760:	
  7023  1537                     	line	54
  7024                           	movlw	01h
  7025  1537  3001               	
  7026                           u2625:
  7027  1538                     	clrc
  7028  1538  1003               	rlf	(__Umul8_16@word_mpld),f
  7029  1539  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  7030  153A  0DF7               	addlw	-1
  7031  153B  3EFF               	skipz
  7032  153C  1D03               	goto	u2625
  7033  153D  2D38               	line	55
  7034                           	clrc
  7035  153E  1003               	rrf	(__Umul8_16@multiplier),f
  7036  153F  0CF8               
  7037                           	line	56
  7038                           	
  7039                           l2234:	
  7040  1540                     	movf	((__Umul8_16@multiplier)),w
  7041  1540  0878               	btfss	status,2
  7042  1541  1D03               	goto	u2631
  7043  1542  2D44               	goto	u2630
  7044  1543  2D45               u2631:
  7045  1544                     	goto	l2230
  7046  1544  2D2D               u2630:
  7047  1545                     	goto	l2236
  7048  1545  2D46               	
  7049                           l761:	
  7050  1546                     	line	59
  7051                           	
  7052                           l2236:	
  7053  1546                     	movf	(__Umul8_16@product+1),w
  7054  1546  0875               	movwf	(?__Umul8_16+1)
  7055  1547  00F1               	movf	(__Umul8_16@product),w
  7056  1548  0874               	movwf	(?__Umul8_16)
  7057  1549  00F0               	goto	l762
  7058  154A  2D4B               	
  7059                           l2238:	
  7060  154B                     	line	60
  7061                           	
  7062                           l762:	
  7063  154B                     	return
  7064  154B  0008               	opt stack 0
  7065                           GLOBAL	__end_of__Umul8_16
  7066                           	__end_of__Umul8_16:
  7067  154C                     	signat	__Umul8_16,8314
  7068                           	global	___fldiv
  7069                           
  7070 ;; *************** function ___fldiv *****************
  7071 ;; Defined at:
  7072 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  a               4   54[BANK0 ] unsigned int 
  7075 ;;  b               4   58[BANK0 ] unsigned int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  grs             4   74[BANK0 ] unsigned long 
  7078 ;;  rem             4   67[BANK0 ] unsigned long 
  7079 ;;  new_exp         2   72[BANK0 ] int 
  7080 ;;  aexp            1   79[BANK0 ] unsigned char 
  7081 ;;  bexp            1   78[BANK0 ] unsigned char 
  7082 ;;  sign            1   71[BANK0 ] unsigned char 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  4   54[BANK0 ] unsigned char 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0, btemp+1
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7092 ;;      Params:         0       8       0       0       0
  7093 ;;      Locals:         0      13       0       0       0
  7094 ;;      Temps:          0       5       0       0       0
  7095 ;;      Totals:         0      26       0       0       0
  7096 ;;Total ram usage:       26 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_main
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  7105                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7106                           	line	8
  7107                           global __ptext20
  7108                           __ptext20:	;psect for function ___fldiv
  7109  0DF7                     psect	text20
  7110                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7111                           	line	8
  7112                           	global	__size_of___fldiv
  7113                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  7114  0209                     	
  7115                           ___fldiv:	
  7116  0DF7                     ;incstack = 0
  7117                           	opt	stack 7
  7118                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7119                           	line	26
  7120                           	
  7121                           l2534:	
  7122  0DF7                     	bcf	status, 5	;RP0=0, select bank0
  7123  0DF7  1283               	bcf	status, 6	;RP1=0, select bank0
  7124  0DF8  1303               	movf	0+(___fldiv@b)+03h,w
  7125  0DF9  085D               	andlw	080h
  7126  0DFA  3980               	movwf	(??___fldiv+0)+0
  7127  0DFB  00DE               	movf	(??___fldiv+0)+0,w
  7128  0DFC  085E               	movwf	(___fldiv@sign)
  7129  0DFD  00E7               	line	27
  7130                           	
  7131                           l2536:	
  7132  0DFE                     	movf	0+(___fldiv@b)+03h,w
  7133  0DFE  085D               	movwf	(??___fldiv+0)+0
  7134  0DFF  00DE               	addwf	(??___fldiv+0)+0,w
  7135  0E00  075E               	movwf	(??___fldiv+1)+0
  7136  0E01  00DF               	movf	(??___fldiv+1)+0,w
  7137  0E02  085F               	movwf	(___fldiv@bexp)
  7138  0E03  00EE               	line	28
  7139                           	
  7140                           l2538:	
  7141  0E04                     	btfss	0+(___fldiv@b)+02h,(7)&7
  7142  0E04  1FDC               	goto	u3221
  7143  0E05  2E07               	goto	u3220
  7144  0E06  2E08               u3221:
  7145  0E07                     	goto	l2542
  7146  0E07  2E0A               u3220:
  7147  0E08                     	line	29
  7148                           	
  7149                           l2540:	
  7150  0E08                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  7151  0E08  146E               	goto	l2542
  7152  0E09  2E0A               	line	30
  7153                           	
  7154                           l675:	
  7155  0E0A                     	line	33
  7156                           	
  7157                           l2542:	
  7158  0E0A                     	movf	((___fldiv@bexp)),w
  7159  0E0A  086E               	btfsc	status,2
  7160  0E0B  1903               	goto	u3231
  7161  0E0C  2E0E               	goto	u3230
  7162  0E0D  2E0F               u3231:
  7163  0E0E                     	goto	l2552
  7164  0E0E  2E20               u3230:
  7165  0E0F                     	line	35
  7166                           	
  7167                           l2544:	
  7168  0E0F                     		incf	((___fldiv@bexp)),w
  7169  0E0F  0A6E               	btfss	status,2
  7170  0E10  1D03               	goto	u3241
  7171  0E11  2E13               	goto	u3240
  7172  0E12  2E14               u3241:
  7173  0E13                     	goto	l2548
  7174  0E13  2E1D               u3240:
  7175  0E14                     	line	37
  7176                           	
  7177                           l2546:	
  7178  0E14                     	movlw	0x0
  7179  0E14  3000               	movwf	(___fldiv@b+3)
  7180  0E15  00DD               	movlw	0x0
  7181  0E16  3000               	movwf	(___fldiv@b+2)
  7182  0E17  00DC               	movlw	0x0
  7183  0E18  3000               	movwf	(___fldiv@b+1)
  7184  0E19  00DB               	movlw	0x0
  7185  0E1A  3000               	movwf	(___fldiv@b)
  7186  0E1B  00DA               
  7187                           	goto	l2548
  7188  0E1C  2E1D               	line	38
  7189                           	
  7190                           l677:	
  7191  0E1D                     	line	40
  7192                           	
  7193                           l2548:	
  7194  0E1D                     	bsf	(___fldiv@b)+(23/8),(23)&7
  7195  0E1D  17DC               	line	42
  7196                           	
  7197                           l2550:	
  7198  0E1E                     	clrf	0+(___fldiv@b)+03h
  7199  0E1E  01DD               	line	43
  7200                           	goto	l2554
  7201  0E1F  2E29               	line	44
  7202                           	
  7203                           l676:	
  7204  0E20                     	line	46
  7205                           	
  7206                           l2552:	
  7207  0E20                     	movlw	0x0
  7208  0E20  3000               	movwf	(___fldiv@b+3)
  7209  0E21  00DD               	movlw	0x0
  7210  0E22  3000               	movwf	(___fldiv@b+2)
  7211  0E23  00DC               	movlw	0x0
  7212  0E24  3000               	movwf	(___fldiv@b+1)
  7213  0E25  00DB               	movlw	0x0
  7214  0E26  3000               	movwf	(___fldiv@b)
  7215  0E27  00DA               
  7216                           	goto	l2554
  7217  0E28  2E29               	line	47
  7218                           	
  7219                           l678:	
  7220  0E29                     	line	49
  7221                           	
  7222                           l2554:	
  7223  0E29                     	movf	0+(___fldiv@a)+03h,w
  7224  0E29  0859               	andlw	080h
  7225  0E2A  3980               	movwf	(??___fldiv+0)+0
  7226  0E2B  00DE               	movf	(??___fldiv+0)+0,w
  7227  0E2C  085E               	xorwf	(___fldiv@sign),f
  7228  0E2D  06E7               	line	50
  7229                           	
  7230                           l2556:	
  7231  0E2E                     	movf	0+(___fldiv@a)+03h,w
  7232  0E2E  0859               	movwf	(??___fldiv+0)+0
  7233  0E2F  00DE               	addwf	(??___fldiv+0)+0,w
  7234  0E30  075E               	movwf	(??___fldiv+1)+0
  7235  0E31  00DF               	movf	(??___fldiv+1)+0,w
  7236  0E32  085F               	movwf	(___fldiv@aexp)
  7237  0E33  00EF               	line	51
  7238                           	
  7239                           l2558:	
  7240  0E34                     	btfss	0+(___fldiv@a)+02h,(7)&7
  7241  0E34  1FD8               	goto	u3251
  7242  0E35  2E37               	goto	u3250
  7243  0E36  2E38               u3251:
  7244  0E37                     	goto	l2562
  7245  0E37  2E3A               u3250:
  7246  0E38                     	line	52
  7247                           	
  7248                           l2560:	
  7249  0E38                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  7250  0E38  146F               	goto	l2562
  7251  0E39  2E3A               	line	53
  7252                           	
  7253                           l679:	
  7254  0E3A                     	line	56
  7255                           	
  7256                           l2562:	
  7257  0E3A                     	movf	((___fldiv@aexp)),w
  7258  0E3A  086F               	btfsc	status,2
  7259  0E3B  1903               	goto	u3261
  7260  0E3C  2E3E               	goto	u3260
  7261  0E3D  2E3F               u3261:
  7262  0E3E                     	goto	l2572
  7263  0E3E  2E50               u3260:
  7264  0E3F                     	line	58
  7265                           	
  7266                           l2564:	
  7267  0E3F                     		incf	((___fldiv@aexp)),w
  7268  0E3F  0A6F               	btfss	status,2
  7269  0E40  1D03               	goto	u3271
  7270  0E41  2E43               	goto	u3270
  7271  0E42  2E44               u3271:
  7272  0E43                     	goto	l2568
  7273  0E43  2E4D               u3270:
  7274  0E44                     	line	60
  7275                           	
  7276                           l2566:	
  7277  0E44                     	movlw	0x0
  7278  0E44  3000               	movwf	(___fldiv@a+3)
  7279  0E45  00D9               	movlw	0x0
  7280  0E46  3000               	movwf	(___fldiv@a+2)
  7281  0E47  00D8               	movlw	0x0
  7282  0E48  3000               	movwf	(___fldiv@a+1)
  7283  0E49  00D7               	movlw	0x0
  7284  0E4A  3000               	movwf	(___fldiv@a)
  7285  0E4B  00D6               
  7286                           	goto	l2568
  7287  0E4C  2E4D               	line	61
  7288                           	
  7289                           l681:	
  7290  0E4D                     	line	63
  7291                           	
  7292                           l2568:	
  7293  0E4D                     	bsf	(___fldiv@a)+(23/8),(23)&7
  7294  0E4D  17D8               	line	65
  7295                           	
  7296                           l2570:	
  7297  0E4E                     	clrf	0+(___fldiv@a)+03h
  7298  0E4E  01D9               	line	66
  7299                           	goto	l682
  7300  0E4F  2E58               	line	67
  7301                           	
  7302                           l680:	
  7303  0E50                     	line	69
  7304                           	
  7305                           l2572:	
  7306  0E50                     	movlw	0x0
  7307  0E50  3000               	movwf	(___fldiv@a+3)
  7308  0E51  00D9               	movlw	0x0
  7309  0E52  3000               	movwf	(___fldiv@a+2)
  7310  0E53  00D8               	movlw	0x0
  7311  0E54  3000               	movwf	(___fldiv@a+1)
  7312  0E55  00D7               	movlw	0x0
  7313  0E56  3000               	movwf	(___fldiv@a)
  7314  0E57  00D6               
  7315                           	line	70
  7316                           	
  7317                           l682:	
  7318  0E58                     	line	75
  7319                           	movf	(___fldiv@a+3),w
  7320  0E58  0859               	iorwf	(___fldiv@a+2),w
  7321  0E59  0458               	iorwf	(___fldiv@a+1),w
  7322  0E5A  0457               	iorwf	(___fldiv@a),w
  7323  0E5B  0456               	skipz
  7324  0E5C  1D03               	goto	u3281
  7325  0E5D  2E5F               	goto	u3280
  7326  0E5E  2E60               u3281:
  7327  0E5F                     	goto	l2582
  7328  0E5F  2E7A               u3280:
  7329  0E60                     	line	76
  7330                           	
  7331                           l2574:	
  7332  0E60                     	movlw	high highword(0)
  7333  0E60  3000               	movwf	(___fldiv@b+3)
  7334  0E61  00DD               	movlw	low highword(0)
  7335  0E62  3000               	movwf	(___fldiv@b+2)
  7336  0E63  00DC               	movlw	high(0)
  7337  0E64  3000               	movwf	(___fldiv@b+1)
  7338  0E65  00DB               	movlw	low(0)
  7339  0E66  3000               	movwf	(___fldiv@b)
  7340  0E67  00DA               
  7341                           	line	77
  7342                           	movlw	080h
  7343  0E68  3080               	iorwf	0+(___fldiv@b)+02h,f
  7344  0E69  04DC               	movlw	07Fh
  7345  0E6A  307F               	iorwf	1+(___fldiv@b)+02h,f
  7346  0E6B  04DD               	line	78
  7347                           	
  7348                           l2576:	
  7349  0E6C                     	movf	(___fldiv@sign),w
  7350  0E6C  0867               	movwf	(??___fldiv+0)+0
  7351  0E6D  00DE               	movf	(??___fldiv+0)+0,w
  7352  0E6E  085E               	iorwf	0+(___fldiv@b)+03h,f
  7353  0E6F  04DD               	line	79
  7354                           	
  7355                           l2578:	
  7356  0E70                     	movf	(___fldiv@b+3),w
  7357  0E70  085D               	movwf	(?___fldiv+3)
  7358  0E71  00D9               	movf	(___fldiv@b+2),w
  7359  0E72  085C               	movwf	(?___fldiv+2)
  7360  0E73  00D8               	movf	(___fldiv@b+1),w
  7361  0E74  085B               	movwf	(?___fldiv+1)
  7362  0E75  00D7               	movf	(___fldiv@b),w
  7363  0E76  085A               	movwf	(?___fldiv)
  7364  0E77  00D6               
  7365                           	goto	l684
  7366  0E78  2FFF               	
  7367                           l2580:	
  7368  0E79                     	goto	l684
  7369  0E79  2FFF               	line	80
  7370                           	
  7371                           l683:	
  7372  0E7A                     	line	83
  7373                           	
  7374                           l2582:	
  7375  0E7A                     	movf	((___fldiv@bexp)),w
  7376  0E7A  086E               	btfss	status,2
  7377  0E7B  1D03               	goto	u3291
  7378  0E7C  2E7E               	goto	u3290
  7379  0E7D  2E7F               u3291:
  7380  0E7E                     	goto	l2588
  7381  0E7E  2E91               u3290:
  7382  0E7F                     	line	84
  7383                           	
  7384                           l2584:	
  7385  0E7F                     	movlw	high highword(0)
  7386  0E7F  3000               	movwf	(___fldiv@b+3)
  7387  0E80  00DD               	movlw	low highword(0)
  7388  0E81  3000               	movwf	(___fldiv@b+2)
  7389  0E82  00DC               	movlw	high(0)
  7390  0E83  3000               	movwf	(___fldiv@b+1)
  7391  0E84  00DB               	movlw	low(0)
  7392  0E85  3000               	movwf	(___fldiv@b)
  7393  0E86  00DA               
  7394                           	line	85
  7395                           	movf	(___fldiv@b+3),w
  7396  0E87  085D               	movwf	(?___fldiv+3)
  7397  0E88  00D9               	movf	(___fldiv@b+2),w
  7398  0E89  085C               	movwf	(?___fldiv+2)
  7399  0E8A  00D8               	movf	(___fldiv@b+1),w
  7400  0E8B  085B               	movwf	(?___fldiv+1)
  7401  0E8C  00D7               	movf	(___fldiv@b),w
  7402  0E8D  085A               	movwf	(?___fldiv)
  7403  0E8E  00D6               
  7404                           	goto	l684
  7405  0E8F  2FFF               	
  7406                           l2586:	
  7407  0E90                     	goto	l684
  7408  0E90  2FFF               	line	86
  7409                           	
  7410                           l685:	
  7411  0E91                     	line	89
  7412                           	
  7413                           l2588:	
  7414  0E91                     	movf	(___fldiv@aexp),w
  7415  0E91  086F               	movwf	(??___fldiv+0)+0
  7416  0E92  00DE               	clrf	(??___fldiv+0)+0+1
  7417  0E93  01DF               	comf	(??___fldiv+0)+0,f
  7418  0E94  09DE               	comf	(??___fldiv+0)+1,f
  7419  0E95  09DF               	incf	(??___fldiv+0)+0,f
  7420  0E96  0ADE               	skipnz
  7421  0E97  1903               	incf	(??___fldiv+0)+1,f
  7422  0E98  0ADF               	movf	(___fldiv@bexp),w
  7423  0E99  086E               	addwf	0+(??___fldiv+0)+0,w
  7424  0E9A  075E               	movwf	(??___fldiv+2)+0
  7425  0E9B  00E0               	movf	1+(??___fldiv+0)+0,w
  7426  0E9C  085F               	skipnc
  7427  0E9D  1803               	incf	1+(??___fldiv+0)+0,w
  7428  0E9E  0A5F               	movwf	((??___fldiv+2)+0)+1
  7429  0E9F  00E1               	movf	0+(??___fldiv+2)+0,w
  7430  0EA0  0860               	addlw	low(07Fh)
  7431  0EA1  3E7F               	movwf	(___fldiv@new_exp)
  7432  0EA2  00E8               	movf	1+(??___fldiv+2)+0,w
  7433  0EA3  0861               	skipnc
  7434  0EA4  1803               	addlw	1
  7435  0EA5  3E01               	addlw	high(07Fh)
  7436  0EA6  3E00               	movwf	1+(___fldiv@new_exp)
  7437  0EA7  00E9               	line	92
  7438                           	
  7439                           l2590:	
  7440  0EA8                     	movf	(___fldiv@b+3),w
  7441  0EA8  085D               	movwf	(___fldiv@rem+3)
  7442  0EA9  00E6               	movf	(___fldiv@b+2),w
  7443  0EAA  085C               	movwf	(___fldiv@rem+2)
  7444  0EAB  00E5               	movf	(___fldiv@b+1),w
  7445  0EAC  085B               	movwf	(___fldiv@rem+1)
  7446  0EAD  00E4               	movf	(___fldiv@b),w
  7447  0EAE  085A               	movwf	(___fldiv@rem)
  7448  0EAF  00E3               
  7449                           	line	93
  7450                           	
  7451                           l2592:	
  7452  0EB0                     	movlw	high highword(0)
  7453  0EB0  3000               	movwf	(___fldiv@b+3)
  7454  0EB1  00DD               	movlw	low highword(0)
  7455  0EB2  3000               	movwf	(___fldiv@b+2)
  7456  0EB3  00DC               	movlw	high(0)
  7457  0EB4  3000               	movwf	(___fldiv@b+1)
  7458  0EB5  00DB               	movlw	low(0)
  7459  0EB6  3000               	movwf	(___fldiv@b)
  7460  0EB7  00DA               
  7461                           	line	94
  7462                           	
  7463                           l2594:	
  7464  0EB8                     	movlw	high highword(0)
  7465  0EB8  3000               	movwf	(___fldiv@grs+3)
  7466  0EB9  00ED               	movlw	low highword(0)
  7467  0EBA  3000               	movwf	(___fldiv@grs+2)
  7468  0EBB  00EC               	movlw	high(0)
  7469  0EBC  3000               	movwf	(___fldiv@grs+1)
  7470  0EBD  00EB               	movlw	low(0)
  7471  0EBE  3000               	movwf	(___fldiv@grs)
  7472  0EBF  00EA               
  7473                           	line	96
  7474                           	
  7475                           l2596:	
  7476  0EC0                     	clrf	(___fldiv@aexp)
  7477  0EC0  01EF               	line	97
  7478                           	goto	l2616
  7479  0EC1  2F10               	
  7480                           l687:	
  7481  0EC2                     	line	100
  7482                           	
  7483                           l2598:	
  7484  0EC2                     	movf	((___fldiv@aexp)),w
  7485  0EC2  086F               	btfsc	status,2
  7486  0EC3  1903               	goto	u3301
  7487  0EC4  2EC6               	goto	u3300
  7488  0EC5  2EC7               u3301:
  7489  0EC6                     	goto	l2608
  7490  0EC6  2EE9               u3300:
  7491  0EC7                     	line	101
  7492                           	
  7493                           l2600:	
  7494  0EC7                     	movlw	01h
  7495  0EC7  3001               	movwf	(??___fldiv+0)+0
  7496  0EC8  00DE               u3315:
  7497  0EC9                     	clrc
  7498  0EC9  1003               	rlf	(___fldiv@rem),f
  7499  0ECA  0DE3               	rlf	(___fldiv@rem+1),f
  7500  0ECB  0DE4               	rlf	(___fldiv@rem+2),f
  7501  0ECC  0DE5               	rlf	(___fldiv@rem+3),f
  7502  0ECD  0DE6               	decfsz	(??___fldiv+0)+0
  7503  0ECE  0BDE               	goto	u3315
  7504  0ECF  2EC9               	line	102
  7505                           	movlw	01h
  7506  0ED0  3001               	movwf	(??___fldiv+0)+0
  7507  0ED1  00DE               u3325:
  7508  0ED2                     	clrc
  7509  0ED2  1003               	rlf	(___fldiv@b),f
  7510  0ED3  0DDA               	rlf	(___fldiv@b+1),f
  7511  0ED4  0DDB               	rlf	(___fldiv@b+2),f
  7512  0ED5  0DDC               	rlf	(___fldiv@b+3),f
  7513  0ED6  0DDD               	decfsz	(??___fldiv+0)+0
  7514  0ED7  0BDE               	goto	u3325
  7515  0ED8  2ED2               	line	103
  7516                           	
  7517                           l2602:	
  7518  0ED9                     	btfss	(___fldiv@grs+3),(31)&7
  7519  0ED9  1FED               	goto	u3331
  7520  0EDA  2EDC               	goto	u3330
  7521  0EDB  2EDD               u3331:
  7522  0EDC                     	goto	l2606
  7523  0EDC  2EDF               u3330:
  7524  0EDD                     	line	104
  7525                           	
  7526                           l2604:	
  7527  0EDD                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7528  0EDD  145A               	goto	l2606
  7529  0EDE  2EDF               	line	105
  7530                           	
  7531                           l689:	
  7532  0EDF                     	line	106
  7533                           	
  7534                           l2606:	
  7535  0EDF                     	movlw	01h
  7536  0EDF  3001               	movwf	(??___fldiv+0)+0
  7537  0EE0  00DE               u3345:
  7538  0EE1                     	clrc
  7539  0EE1  1003               	rlf	(___fldiv@grs),f
  7540  0EE2  0DEA               	rlf	(___fldiv@grs+1),f
  7541  0EE3  0DEB               	rlf	(___fldiv@grs+2),f
  7542  0EE4  0DEC               	rlf	(___fldiv@grs+3),f
  7543  0EE5  0DED               	decfsz	(??___fldiv+0)+0
  7544  0EE6  0BDE               	goto	u3345
  7545  0EE7  2EE1               	goto	l2608
  7546  0EE8  2EE9               	line	107
  7547                           	
  7548                           l688:	
  7549  0EE9                     	line	112
  7550                           	
  7551                           l2608:	
  7552  0EE9                     	movf	(___fldiv@a+3),w
  7553  0EE9  0859               	subwf	(___fldiv@rem+3),w
  7554  0EEA  0266               	skipz
  7555  0EEB  1D03               	goto	u3355
  7556  0EEC  2EF7               	movf	(___fldiv@a+2),w
  7557  0EED  0858               	subwf	(___fldiv@rem+2),w
  7558  0EEE  0265               	skipz
  7559  0EEF  1D03               	goto	u3355
  7560  0EF0  2EF7               	movf	(___fldiv@a+1),w
  7561  0EF1  0857               	subwf	(___fldiv@rem+1),w
  7562  0EF2  0264               	skipz
  7563  0EF3  1D03               	goto	u3355
  7564  0EF4  2EF7               	movf	(___fldiv@a),w
  7565  0EF5  0856               	subwf	(___fldiv@rem),w
  7566  0EF6  0263               u3355:
  7567  0EF7                     	skipc
  7568  0EF7  1C03               	goto	u3351
  7569  0EF8  2EFA               	goto	u3350
  7570  0EF9  2EFB               u3351:
  7571  0EFA                     	goto	l2614
  7572  0EFA  2F0B               u3350:
  7573  0EFB                     	line	115
  7574                           	
  7575                           l2610:	
  7576  0EFB                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  7577  0EFB  176D               	line	116
  7578                           	
  7579                           l2612:	
  7580  0EFC                     	movf	(___fldiv@a),w
  7581  0EFC  0856               	subwf	(___fldiv@rem),f
  7582  0EFD  02E3               	movf	(___fldiv@a+1),w
  7583  0EFE  0857               	skipc
  7584  0EFF  1C03               	incfsz	(___fldiv@a+1),w
  7585  0F00  0F57               	subwf	(___fldiv@rem+1),f
  7586  0F01  02E4               	movf	(___fldiv@a+2),w
  7587  0F02  0858               	skipc
  7588  0F03  1C03               	incfsz	(___fldiv@a+2),w
  7589  0F04  0F58               	subwf	(___fldiv@rem+2),f
  7590  0F05  02E5               	movf	(___fldiv@a+3),w
  7591  0F06  0859               	skipc
  7592  0F07  1C03               	incfsz	(___fldiv@a+3),w
  7593  0F08  0F59               	subwf	(___fldiv@rem+3),f
  7594  0F09  02E6               	goto	l2614
  7595  0F0A  2F0B               	line	117
  7596                           	
  7597                           l690:	
  7598  0F0B                     	line	118
  7599                           	
  7600                           l2614:	
  7601  0F0B                     	movlw	low(01h)
  7602  0F0B  3001               	movwf	(??___fldiv+0)+0
  7603  0F0C  00DE               	movf	(??___fldiv+0)+0,w
  7604  0F0D  085E               	addwf	(___fldiv@aexp),f
  7605  0F0E  07EF               	goto	l2616
  7606  0F0F  2F10               	line	119
  7607                           	
  7608                           l686:	
  7609  0F10                     	line	97
  7610                           	
  7611                           l2616:	
  7612  0F10                     	movlw	low(01Ah)
  7613  0F10  301A               	subwf	(___fldiv@aexp),w
  7614  0F11  026F               	skipc
  7615  0F12  1C03               	goto	u3361
  7616  0F13  2F15               	goto	u3360
  7617  0F14  2F16               u3361:
  7618  0F15                     	goto	l2598
  7619  0F15  2EC2               u3360:
  7620  0F16                     	goto	l2618
  7621  0F16  2F17               	
  7622                           l691:	
  7623  0F17                     	line	122
  7624                           	
  7625                           l2618:	
  7626  0F17                     	movf	(___fldiv@rem+3),w
  7627  0F17  0866               	iorwf	(___fldiv@rem+2),w
  7628  0F18  0465               	iorwf	(___fldiv@rem+1),w
  7629  0F19  0464               	iorwf	(___fldiv@rem),w
  7630  0F1A  0463               	skipnz
  7631  0F1B  1903               	goto	u3371
  7632  0F1C  2F1E               	goto	u3370
  7633  0F1D  2F1F               u3371:
  7634  0F1E                     	goto	l2632
  7635  0F1E  2F41               u3370:
  7636  0F1F                     	line	123
  7637                           	
  7638                           l2620:	
  7639  0F1F                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  7640  0F1F  146A               	goto	l2632
  7641  0F20  2F41               	line	124
  7642                           	
  7643                           l692:	
  7644  0F21                     	line	127
  7645                           	goto	l2632
  7646  0F21  2F41               	
  7647                           l694:	
  7648  0F22                     	line	128
  7649                           	
  7650                           l2622:	
  7651  0F22                     	movlw	01h
  7652  0F22  3001               	movwf	(??___fldiv+0)+0
  7653  0F23  00DE               u3385:
  7654  0F24                     	clrc
  7655  0F24  1003               	rlf	(___fldiv@b),f
  7656  0F25  0DDA               	rlf	(___fldiv@b+1),f
  7657  0F26  0DDB               	rlf	(___fldiv@b+2),f
  7658  0F27  0DDC               	rlf	(___fldiv@b+3),f
  7659  0F28  0DDD               	decfsz	(??___fldiv+0)+0
  7660  0F29  0BDE               	goto	u3385
  7661  0F2A  2F24               	line	129
  7662                           	
  7663                           l2624:	
  7664  0F2B                     	btfss	(___fldiv@grs+3),(31)&7
  7665  0F2B  1FED               	goto	u3391
  7666  0F2C  2F2E               	goto	u3390
  7667  0F2D  2F2F               u3391:
  7668  0F2E                     	goto	l2628
  7669  0F2E  2F31               u3390:
  7670  0F2F                     	line	130
  7671                           	
  7672                           l2626:	
  7673  0F2F                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7674  0F2F  145A               	goto	l2628
  7675  0F30  2F31               	line	131
  7676                           	
  7677                           l695:	
  7678  0F31                     	line	132
  7679                           	
  7680                           l2628:	
  7681  0F31                     	movlw	01h
  7682  0F31  3001               	movwf	(??___fldiv+0)+0
  7683  0F32  00DE               u3405:
  7684  0F33                     	clrc
  7685  0F33  1003               	rlf	(___fldiv@grs),f
  7686  0F34  0DEA               	rlf	(___fldiv@grs+1),f
  7687  0F35  0DEB               	rlf	(___fldiv@grs+2),f
  7688  0F36  0DEC               	rlf	(___fldiv@grs+3),f
  7689  0F37  0DED               	decfsz	(??___fldiv+0)+0
  7690  0F38  0BDE               	goto	u3405
  7691  0F39  2F33               	line	133
  7692                           	
  7693                           l2630:	
  7694  0F3A                     	movlw	0FFh
  7695  0F3A  30FF               	addwf	(___fldiv@new_exp),f
  7696  0F3B  07E8               	skipnc
  7697  0F3C  1803               	incf	(___fldiv@new_exp+1),f
  7698  0F3D  0AE9               	movlw	0FFh
  7699  0F3E  30FF               	addwf	(___fldiv@new_exp+1),f
  7700  0F3F  07E9               	goto	l2632
  7701  0F40  2F41               	line	134
  7702                           	
  7703                           l693:	
  7704  0F41                     	line	127
  7705                           	
  7706                           l2632:	
  7707  0F41                     	btfss	(___fldiv@b+2),(23)&7
  7708  0F41  1FDC               	goto	u3411
  7709  0F42  2F44               	goto	u3410
  7710  0F43  2F45               u3411:
  7711  0F44                     	goto	l2622
  7712  0F44  2F22               u3410:
  7713  0F45                     	goto	l2634
  7714  0F45  2F46               	
  7715                           l696:	
  7716  0F46                     	line	139
  7717                           	
  7718                           l2634:	
  7719  0F46                     	clrf	(___fldiv@aexp)
  7720  0F46  01EF               	line	140
  7721                           	
  7722                           l2636:	
  7723  0F47                     	btfss	(___fldiv@grs+3),(31)&7
  7724  0F47  1FED               	goto	u3421
  7725  0F48  2F4A               	goto	u3420
  7726  0F49  2F4B               u3421:
  7727  0F4A                     	goto	l2644
  7728  0F4A  2F6B               u3420:
  7729  0F4B                     	line	141
  7730                           	
  7731                           l2638:	
  7732  0F4B                     	movlw	0FFh
  7733  0F4B  30FF               	andwf	(___fldiv@grs),w
  7734  0F4C  056A               	movwf	(??___fldiv+0)+0
  7735  0F4D  00DE               	movlw	0FFh
  7736  0F4E  30FF               	andwf	(___fldiv@grs+1),w
  7737  0F4F  056B               	movwf	((??___fldiv+0)+0+1)
  7738  0F50  00DF               	movlw	0FFh
  7739  0F51  30FF               	andwf	(___fldiv@grs+2),w
  7740  0F52  056C               	movwf	((??___fldiv+0)+0+2)
  7741  0F53  00E0               	movlw	07Fh
  7742  0F54  307F               	andwf	(___fldiv@grs+3),w
  7743  0F55  056D               	movwf	((??___fldiv+0)+0+3)
  7744  0F56  00E1               	movf	3+(??___fldiv+0)+0,w
  7745  0F57  0861               	iorwf	2+(??___fldiv+0)+0,w
  7746  0F58  0460               	iorwf	1+(??___fldiv+0)+0,w
  7747  0F59  045F               	iorwf	0+(??___fldiv+0)+0,w
  7748  0F5A  045E               	skipnz
  7749  0F5B  1903               	goto	u3431
  7750  0F5C  2F5E               	goto	u3430
  7751  0F5D  2F5F               u3431:
  7752  0F5E                     	goto	l698
  7753  0F5E  2F62               u3430:
  7754  0F5F                     	line	142
  7755                           	
  7756                           l2640:	
  7757  0F5F                     	clrf	(___fldiv@aexp)
  7758  0F5F  01EF               	incf	(___fldiv@aexp),f
  7759  0F60  0AEF               	line	143
  7760                           	goto	l2644
  7761  0F61  2F6B               	line	144
  7762                           	
  7763                           l698:	
  7764  0F62                     	line	145
  7765                           	btfss	(___fldiv@b),(0)&7
  7766  0F62  1C5A               	goto	u3441
  7767  0F63  2F65               	goto	u3440
  7768  0F64  2F66               u3441:
  7769  0F65                     	goto	l2644
  7770  0F65  2F6B               u3440:
  7771  0F66                     	line	146
  7772                           	
  7773                           l2642:	
  7774  0F66                     	clrf	(___fldiv@aexp)
  7775  0F66  01EF               	incf	(___fldiv@aexp),f
  7776  0F67  0AEF               	goto	l2644
  7777  0F68  2F6B               	line	147
  7778                           	
  7779                           l700:	
  7780  0F69                     	goto	l2644
  7781  0F69  2F6B               	line	148
  7782                           	
  7783                           l699:	
  7784  0F6A                     	goto	l2644
  7785  0F6A  2F6B               	line	149
  7786                           	
  7787                           l697:	
  7788  0F6B                     	line	150
  7789                           	
  7790                           l2644:	
  7791  0F6B                     	movf	((___fldiv@aexp)),w
  7792  0F6B  086F               	btfsc	status,2
  7793  0F6C  1903               	goto	u3451
  7794  0F6D  2F6F               	goto	u3450
  7795  0F6E  2F70               u3451:
  7796  0F6F                     	goto	l2654
  7797  0F6F  2FA3               u3450:
  7798  0F70                     	line	151
  7799                           	
  7800                           l2646:	
  7801  0F70                     	movlw	01h
  7802  0F70  3001               	addwf	(___fldiv@b),f
  7803  0F71  07DA               	movlw	0
  7804  0F72  3000               	skipnc
  7805  0F73  1803               movlw 1
  7806  0F74  3001               	addwf	(___fldiv@b+1),f
  7807  0F75  07DB               	movlw	0
  7808  0F76  3000               	skipnc
  7809  0F77  1803               movlw 1
  7810  0F78  3001               	addwf	(___fldiv@b+2),f
  7811  0F79  07DC               	movlw	0
  7812  0F7A  3000               	skipnc
  7813  0F7B  1803               movlw 1
  7814  0F7C  3001               	addwf	(___fldiv@b+3),f
  7815  0F7D  07DD               	line	152
  7816                           	
  7817                           l2648:	
  7818  0F7E                     	btfss	(___fldiv@b+3),(24)&7
  7819  0F7E  1C5D               	goto	u3461
  7820  0F7F  2F81               	goto	u3460
  7821  0F80  2F82               u3461:
  7822  0F81                     	goto	l2654
  7823  0F81  2FA3               u3460:
  7824  0F82                     	line	153
  7825                           	
  7826                           l2650:	
  7827  0F82                     	movf	(___fldiv@b),w
  7828  0F82  085A               	movwf	(??___fldiv+0)+0
  7829  0F83  00DE               	movf	(___fldiv@b+1),w
  7830  0F84  085B               	movwf	((??___fldiv+0)+0+1)
  7831  0F85  00DF               	movf	(___fldiv@b+2),w
  7832  0F86  085C               	movwf	((??___fldiv+0)+0+2)
  7833  0F87  00E0               	movf	(___fldiv@b+3),w
  7834  0F88  085D               	movwf	((??___fldiv+0)+0+3)
  7835  0F89  00E1               	movlw	01h
  7836  0F8A  3001               	movwf	(??___fldiv+4)+0
  7837  0F8B  00E2               u3475:
  7838  0F8C                     	rlf	(??___fldiv+0)+3,w
  7839  0F8C  0D61               	rrf	(??___fldiv+0)+3,f
  7840  0F8D  0CE1               	rrf	(??___fldiv+0)+2,f
  7841  0F8E  0CE0               	rrf	(??___fldiv+0)+1,f
  7842  0F8F  0CDF               	rrf	(??___fldiv+0)+0,f
  7843  0F90  0CDE               u3470:
  7844  0F91                     	decfsz	(??___fldiv+4)+0,f
  7845  0F91  0BE2               	goto	u3475
  7846  0F92  2F8C               	movf	3+(??___fldiv+0)+0,w
  7847  0F93  0861               	movwf	(___fldiv@b+3)
  7848  0F94  00DD               	movf	2+(??___fldiv+0)+0,w
  7849  0F95  0860               	movwf	(___fldiv@b+2)
  7850  0F96  00DC               	movf	1+(??___fldiv+0)+0,w
  7851  0F97  085F               	movwf	(___fldiv@b+1)
  7852  0F98  00DB               	movf	0+(??___fldiv+0)+0,w
  7853  0F99  085E               	movwf	(___fldiv@b)
  7854  0F9A  00DA               
  7855                           	line	154
  7856                           	
  7857                           l2652:	
  7858  0F9B                     	movlw	01h
  7859  0F9B  3001               	addwf	(___fldiv@new_exp),f
  7860  0F9C  07E8               	skipnc
  7861  0F9D  1803               	incf	(___fldiv@new_exp+1),f
  7862  0F9E  0AE9               	movlw	0
  7863  0F9F  3000               	addwf	(___fldiv@new_exp+1),f
  7864  0FA0  07E9               	goto	l2654
  7865  0FA1  2FA3               	line	155
  7866                           	
  7867                           l702:	
  7868  0FA2                     	goto	l2654
  7869  0FA2  2FA3               	line	156
  7870                           	
  7871                           l701:	
  7872  0FA3                     	line	159
  7873                           	
  7874                           l2654:	
  7875  0FA3                     	movf	(___fldiv@new_exp+1),w
  7876  0FA3  0869               	xorlw	80h
  7877  0FA4  3A80               	movwf	btemp+1
  7878  0FA5  00FF               	movlw	(0)^80h
  7879  0FA6  3080               	subwf	btemp+1,w
  7880  0FA7  027F               	skipz
  7881  0FA8  1D03               	goto	u3485
  7882  0FA9  2FAC               	movlw	0FFh
  7883  0FAA  30FF               	subwf	(___fldiv@new_exp),w
  7884  0FAB  0268               u3485:
  7885  0FAC                     
  7886                           	skipc
  7887  0FAC  1C03               	goto	u3481
  7888  0FAD  2FAF               	goto	u3480
  7889  0FAE  2FB0               u3481:
  7890  0FAF                     	goto	l2658
  7891  0FAF  2FBF               u3480:
  7892  0FB0                     	line	160
  7893                           	
  7894                           l2656:	
  7895  0FB0                     	movlw	0FFh
  7896  0FB0  30FF               	bcf	status, 5	;RP0=0, select bank0
  7897  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  7898  0FB2  1303               	movwf	(___fldiv@new_exp)
  7899  0FB3  00E8               	movlw	0
  7900  0FB4  3000               	movwf	((___fldiv@new_exp))+1
  7901  0FB5  00E9               	line	161
  7902                           	movlw	high highword(0)
  7903  0FB6  3000               	movwf	(___fldiv@b+3)
  7904  0FB7  00DD               	movlw	low highword(0)
  7905  0FB8  3000               	movwf	(___fldiv@b+2)
  7906  0FB9  00DC               	movlw	high(0)
  7907  0FBA  3000               	movwf	(___fldiv@b+1)
  7908  0FBB  00DB               	movlw	low(0)
  7909  0FBC  3000               	movwf	(___fldiv@b)
  7910  0FBD  00DA               
  7911                           	goto	l2658
  7912  0FBE  2FBF               	line	162
  7913                           	
  7914                           l703:	
  7915  0FBF                     	line	165
  7916                           	
  7917                           l2658:	
  7918  0FBF                     	bcf	status, 5	;RP0=0, select bank0
  7919  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  7920  0FC0  1303               	movf	(___fldiv@new_exp+1),w
  7921  0FC1  0869               	xorlw	80h
  7922  0FC2  3A80               	movwf	btemp+1
  7923  0FC3  00FF               	movlw	(0)^80h
  7924  0FC4  3080               	subwf	btemp+1,w
  7925  0FC5  027F               	skipz
  7926  0FC6  1D03               	goto	u3495
  7927  0FC7  2FCA               	movlw	01h
  7928  0FC8  3001               	subwf	(___fldiv@new_exp),w
  7929  0FC9  0268               u3495:
  7930  0FCA                     
  7931                           	skipnc
  7932  0FCA  1803               	goto	u3491
  7933  0FCB  2FCD               	goto	u3490
  7934  0FCC  2FCE               u3491:
  7935  0FCD                     	goto	l704
  7936  0FCD  2FDB               u3490:
  7937  0FCE                     	line	166
  7938                           	
  7939                           l2660:	
  7940  0FCE                     	bcf	status, 5	;RP0=0, select bank0
  7941  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7942  0FCF  1303               	clrf	(___fldiv@new_exp)
  7943  0FD0  01E8               	clrf	(___fldiv@new_exp+1)
  7944  0FD1  01E9               	line	167
  7945                           	
  7946                           l2662:	
  7947  0FD2                     	movlw	high highword(0)
  7948  0FD2  3000               	movwf	(___fldiv@b+3)
  7949  0FD3  00DD               	movlw	low highword(0)
  7950  0FD4  3000               	movwf	(___fldiv@b+2)
  7951  0FD5  00DC               	movlw	high(0)
  7952  0FD6  3000               	movwf	(___fldiv@b+1)
  7953  0FD7  00DB               	movlw	low(0)
  7954  0FD8  3000               	movwf	(___fldiv@b)
  7955  0FD9  00DA               
  7956                           	line	169
  7957                           	
  7958                           l2664:	
  7959  0FDA                     	clrf	(___fldiv@sign)
  7960  0FDA  01E7               	line	170
  7961                           	
  7962                           l704:	
  7963  0FDB                     	line	173
  7964                           	bcf	status, 5	;RP0=0, select bank0
  7965  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  7966  0FDC  1303               	movf	(___fldiv@new_exp),w
  7967  0FDD  0868               	movwf	(??___fldiv+0)+0
  7968  0FDE  00DE               	movf	(??___fldiv+0)+0,w
  7969  0FDF  085E               	movwf	(___fldiv@bexp)
  7970  0FE0  00EE               	line	175
  7971                           	
  7972                           l2666:	
  7973  0FE1                     	btfss	(___fldiv@bexp),(0)&7
  7974  0FE1  1C6E               	goto	u3501
  7975  0FE2  2FE4               	goto	u3500
  7976  0FE3  2FE5               u3501:
  7977  0FE4                     	goto	l2670
  7978  0FE4  2FE7               u3500:
  7979  0FE5                     	line	176
  7980                           	
  7981                           l2668:	
  7982  0FE5                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  7983  0FE5  17DC               	line	177
  7984                           	goto	l706
  7985  0FE6  2FEB               	line	179
  7986                           	
  7987                           l705:	
  7988  0FE7                     	line	180
  7989                           	
  7990                           l2670:	
  7991  0FE7                     	movlw	low(07Fh)
  7992  0FE7  307F               	movwf	(??___fldiv+0)+0
  7993  0FE8  00DE               	movf	(??___fldiv+0)+0,w
  7994  0FE9  085E               	andwf	0+(___fldiv@b)+02h,f
  7995  0FEA  05DC               	line	181
  7996                           	
  7997                           l706:	
  7998  0FEB                     	line	182
  7999                           	movf	(___fldiv@bexp),w
  8000  0FEB  086E               	movwf	(??___fldiv+0)+0
  8001  0FEC  00DE               	clrc
  8002  0FED  1003               	rrf	(??___fldiv+0)+0,w
  8003  0FEE  0C5E               	movwf	(??___fldiv+1)+0
  8004  0FEF  00DF               	movf	(??___fldiv+1)+0,w
  8005  0FF0  085F               	movwf	0+(___fldiv@b)+03h
  8006  0FF1  00DD               	line	183
  8007                           	movf	(___fldiv@sign),w
  8008  0FF2  0867               	movwf	(??___fldiv+0)+0
  8009  0FF3  00DE               	movf	(??___fldiv+0)+0,w
  8010  0FF4  085E               	iorwf	0+(___fldiv@b)+03h,f
  8011  0FF5  04DD               	line	184
  8012                           	
  8013                           l2672:	
  8014  0FF6                     	movf	(___fldiv@b+3),w
  8015  0FF6  085D               	movwf	(?___fldiv+3)
  8016  0FF7  00D9               	movf	(___fldiv@b+2),w
  8017  0FF8  085C               	movwf	(?___fldiv+2)
  8018  0FF9  00D8               	movf	(___fldiv@b+1),w
  8019  0FFA  085B               	movwf	(?___fldiv+1)
  8020  0FFB  00D7               	movf	(___fldiv@b),w
  8021  0FFC  085A               	movwf	(?___fldiv)
  8022  0FFD  00D6               
  8023                           	goto	l684
  8024  0FFE  2FFF               	
  8025                           l2674:	
  8026  0FFF                     	line	185
  8027                           	
  8028                           l684:	
  8029  0FFF                     	return
  8030  0FFF  0008               	opt stack 0
  8031                           GLOBAL	__end_of___fldiv
  8032                           	__end_of___fldiv:
  8033  1000                     	signat	___fldiv,8316
  8034                           	global	___fladd
  8035                           
  8036 ;; *************** function ___fladd *****************
  8037 ;; Defined at:
  8038 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  b               4    4[BANK0 ] unsigned char 
  8041 ;;  a               4    8[BANK0 ] unsigned char 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  grs             1   27[BANK0 ] unsigned char 
  8044 ;;  bexp            1   26[BANK0 ] unsigned char 
  8045 ;;  aexp            1   25[BANK0 ] unsigned char 
  8046 ;;  signs           1   24[BANK0 ] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  4    4[BANK0 ] unsigned char 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0, btemp+1
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8056 ;;      Params:         0       8       0       0       0
  8057 ;;      Locals:         0       4       0       0       0
  8058 ;;      Temps:          0      12       0       0       0
  8059 ;;      Totals:         0      24       0       0       0
  8060 ;;Total ram usage:       24 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_main
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  8069                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8070                           	line	10
  8071                           global __ptext21
  8072                           __ptext21:	;psect for function ___fladd
  8073  01C2                     psect	text21
  8074                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8075                           	line	10
  8076                           	global	__size_of___fladd
  8077                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8078  02BC                     	
  8079                           ___fladd:	
  8080  01C2                     ;incstack = 0
  8081                           	opt	stack 7
  8082                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8083                           	line	21
  8084                           	
  8085                           l2340:	
  8086  01C2                     	bcf	status, 5	;RP0=0, select bank0
  8087  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  8088  01C3  1303               	movf	0+(___fladd@b)+03h,w
  8089  01C4  0827               	andlw	080h
  8090  01C5  3980               	movwf	(??___fladd+0)+0
  8091  01C6  00AC               	movf	(??___fladd+0)+0,w
  8092  01C7  082C               	movwf	(___fladd@signs)
  8093  01C8  00B8               	line	22
  8094                           	
  8095                           l2342:	
  8096  01C9                     	movf	0+(___fladd@b)+03h,w
  8097  01C9  0827               	movwf	(??___fladd+0)+0
  8098  01CA  00AC               	addwf	(??___fladd+0)+0,w
  8099  01CB  072C               	movwf	(??___fladd+1)+0
  8100  01CC  00AD               	movf	(??___fladd+1)+0,w
  8101  01CD  082D               	movwf	(___fladd@bexp)
  8102  01CE  00BA               	line	23
  8103                           	
  8104                           l2344:	
  8105  01CF                     	btfss	0+(___fladd@b)+02h,(7)&7
  8106  01CF  1FA6               	goto	u2761
  8107  01D0  29D2               	goto	u2760
  8108  01D1  29D3               u2761:
  8109  01D2                     	goto	l2348
  8110  01D2  29D5               u2760:
  8111  01D3                     	line	24
  8112                           	
  8113                           l2346:	
  8114  01D3                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8115  01D3  143A               	goto	l2348
  8116  01D4  29D5               	line	25
  8117                           	
  8118                           l618:	
  8119  01D5                     	line	28
  8120                           	
  8121                           l2348:	
  8122  01D5                     	movf	((___fladd@bexp)),w
  8123  01D5  083A               	btfsc	status,2
  8124  01D6  1903               	goto	u2771
  8125  01D7  29D9               	goto	u2770
  8126  01D8  29DA               u2771:
  8127  01D9                     	goto	l2358
  8128  01D9  29EB               u2770:
  8129  01DA                     	line	30
  8130                           	
  8131                           l2350:	
  8132  01DA                     		incf	((___fladd@bexp)),w
  8133  01DA  0A3A               	btfss	status,2
  8134  01DB  1D03               	goto	u2781
  8135  01DC  29DE               	goto	u2780
  8136  01DD  29DF               u2781:
  8137  01DE                     	goto	l2354
  8138  01DE  29E8               u2780:
  8139  01DF                     	line	32
  8140                           	
  8141                           l2352:	
  8142  01DF                     	movlw	0x0
  8143  01DF  3000               	movwf	(___fladd@b+3)
  8144  01E0  00A7               	movlw	0x0
  8145  01E1  3000               	movwf	(___fladd@b+2)
  8146  01E2  00A6               	movlw	0x0
  8147  01E3  3000               	movwf	(___fladd@b+1)
  8148  01E4  00A5               	movlw	0x0
  8149  01E5  3000               	movwf	(___fladd@b)
  8150  01E6  00A4               
  8151                           	goto	l2354
  8152  01E7  29E8               	line	33
  8153                           	
  8154                           l620:	
  8155  01E8                     	line	35
  8156                           	
  8157                           l2354:	
  8158  01E8                     	bsf	(___fladd@b)+(23/8),(23)&7
  8159  01E8  17A6               	line	37
  8160                           	
  8161                           l2356:	
  8162  01E9                     	clrf	0+(___fladd@b)+03h
  8163  01E9  01A7               	line	38
  8164                           	goto	l2360
  8165  01EA  29F4               	line	39
  8166                           	
  8167                           l619:	
  8168  01EB                     	line	41
  8169                           	
  8170                           l2358:	
  8171  01EB                     	movlw	0x0
  8172  01EB  3000               	movwf	(___fladd@b+3)
  8173  01EC  00A7               	movlw	0x0
  8174  01ED  3000               	movwf	(___fladd@b+2)
  8175  01EE  00A6               	movlw	0x0
  8176  01EF  3000               	movwf	(___fladd@b+1)
  8177  01F0  00A5               	movlw	0x0
  8178  01F1  3000               	movwf	(___fladd@b)
  8179  01F2  00A4               
  8180                           	goto	l2360
  8181  01F3  29F4               	line	42
  8182                           	
  8183                           l621:	
  8184  01F4                     	line	44
  8185                           	
  8186                           l2360:	
  8187  01F4                     	movf	0+(___fladd@a)+03h,w
  8188  01F4  082B               	andlw	080h
  8189  01F5  3980               	movwf	(??___fladd+0)+0
  8190  01F6  00AC               	movf	(??___fladd+0)+0,w
  8191  01F7  082C               	movwf	(___fladd@aexp)
  8192  01F8  00B9               	line	46
  8193                           	
  8194                           l2362:	
  8195  01F9                     	movf	(___fladd@aexp),w
  8196  01F9  0839               	xorwf	(___fladd@signs),w
  8197  01FA  0638               	skipnz
  8198  01FB  1903               	goto	u2791
  8199  01FC  29FE               	goto	u2790
  8200  01FD  29FF               u2791:
  8201  01FE                     	goto	l2366
  8202  01FE  2A01               u2790:
  8203  01FF                     	line	47
  8204                           	
  8205                           l2364:	
  8206  01FF                     	bsf	(___fladd@signs)+(6/8),(6)&7
  8207  01FF  1738               	goto	l2366
  8208  0200  2A01               	line	48
  8209                           	
  8210                           l622:	
  8211  0201                     	line	49
  8212                           	
  8213                           l2366:	
  8214  0201                     	movf	0+(___fladd@a)+03h,w
  8215  0201  082B               	movwf	(??___fladd+0)+0
  8216  0202  00AC               	addwf	(??___fladd+0)+0,w
  8217  0203  072C               	movwf	(??___fladd+1)+0
  8218  0204  00AD               	movf	(??___fladd+1)+0,w
  8219  0205  082D               	movwf	(___fladd@aexp)
  8220  0206  00B9               	line	50
  8221                           	
  8222                           l2368:	
  8223  0207                     	btfss	0+(___fladd@a)+02h,(7)&7
  8224  0207  1FAA               	goto	u2801
  8225  0208  2A0A               	goto	u2800
  8226  0209  2A0B               u2801:
  8227  020A                     	goto	l2372
  8228  020A  2A0D               u2800:
  8229  020B                     	line	51
  8230                           	
  8231                           l2370:	
  8232  020B                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  8233  020B  1439               	goto	l2372
  8234  020C  2A0D               	line	52
  8235                           	
  8236                           l623:	
  8237  020D                     	line	55
  8238                           	
  8239                           l2372:	
  8240  020D                     	movf	((___fladd@aexp)),w
  8241  020D  0839               	btfsc	status,2
  8242  020E  1903               	goto	u2811
  8243  020F  2A11               	goto	u2810
  8244  0210  2A12               u2811:
  8245  0211                     	goto	l2382
  8246  0211  2A23               u2810:
  8247  0212                     	line	57
  8248                           	
  8249                           l2374:	
  8250  0212                     		incf	((___fladd@aexp)),w
  8251  0212  0A39               	btfss	status,2
  8252  0213  1D03               	goto	u2821
  8253  0214  2A16               	goto	u2820
  8254  0215  2A17               u2821:
  8255  0216                     	goto	l2378
  8256  0216  2A20               u2820:
  8257  0217                     	line	59
  8258                           	
  8259                           l2376:	
  8260  0217                     	movlw	0x0
  8261  0217  3000               	movwf	(___fladd@a+3)
  8262  0218  00AB               	movlw	0x0
  8263  0219  3000               	movwf	(___fladd@a+2)
  8264  021A  00AA               	movlw	0x0
  8265  021B  3000               	movwf	(___fladd@a+1)
  8266  021C  00A9               	movlw	0x0
  8267  021D  3000               	movwf	(___fladd@a)
  8268  021E  00A8               
  8269                           	goto	l2378
  8270  021F  2A20               	line	60
  8271                           	
  8272                           l625:	
  8273  0220                     	line	62
  8274                           	
  8275                           l2378:	
  8276  0220                     	bsf	(___fladd@a)+(23/8),(23)&7
  8277  0220  17AA               	line	64
  8278                           	
  8279                           l2380:	
  8280  0221                     	clrf	0+(___fladd@a)+03h
  8281  0221  01AB               	line	65
  8282                           	goto	l626
  8283  0222  2A2B               	line	66
  8284                           	
  8285                           l624:	
  8286  0223                     	line	68
  8287                           	
  8288                           l2382:	
  8289  0223                     	movlw	0x0
  8290  0223  3000               	movwf	(___fladd@a+3)
  8291  0224  00AB               	movlw	0x0
  8292  0225  3000               	movwf	(___fladd@a+2)
  8293  0226  00AA               	movlw	0x0
  8294  0227  3000               	movwf	(___fladd@a+1)
  8295  0228  00A9               	movlw	0x0
  8296  0229  3000               	movwf	(___fladd@a)
  8297  022A  00A8               
  8298                           	line	69
  8299                           	
  8300                           l626:	
  8301  022B                     	line	75
  8302                           	movf	(___fladd@bexp),w
  8303  022B  083A               	subwf	(___fladd@aexp),w
  8304  022C  0239               	skipnc
  8305  022D  1803               	goto	u2831
  8306  022E  2A30               	goto	u2830
  8307  022F  2A31               u2831:
  8308  0230                     	goto	l2418
  8309  0230  2A77               u2830:
  8310  0231                     	line	77
  8311                           	
  8312                           l2384:	
  8313  0231                     	btfss	(___fladd@signs),(6)&7
  8314  0231  1F38               	goto	u2841
  8315  0232  2A34               	goto	u2840
  8316  0233  2A35               u2841:
  8317  0234                     	goto	l2388
  8318  0234  2A3A               u2840:
  8319  0235                     	line	78
  8320                           	
  8321                           l2386:	
  8322  0235                     	movlw	low(080h)
  8323  0235  3080               	movwf	(??___fladd+0)+0
  8324  0236  00AC               	movf	(??___fladd+0)+0,w
  8325  0237  082C               	xorwf	(___fladd@signs),f
  8326  0238  06B8               	goto	l2388
  8327  0239  2A3A               	line	79
  8328                           	
  8329                           l628:	
  8330  023A                     	line	81
  8331                           	
  8332                           l2388:	
  8333  023A                     	movf	(___fladd@bexp),w
  8334  023A  083A               	movwf	(??___fladd+0)+0
  8335  023B  00AC               	movf	(??___fladd+0)+0,w
  8336  023C  082C               	movwf	(___fladd@grs)
  8337  023D  00BB               	line	82
  8338                           	
  8339                           l2390:	
  8340  023E                     	movf	(___fladd@aexp),w
  8341  023E  0839               	movwf	(??___fladd+0)+0
  8342  023F  00AC               	movf	(??___fladd+0)+0,w
  8343  0240  082C               	movwf	(___fladd@bexp)
  8344  0241  00BA               	line	83
  8345                           	
  8346                           l2392:	
  8347  0242                     	movf	(___fladd@grs),w
  8348  0242  083B               	movwf	(??___fladd+0)+0
  8349  0243  00AC               	movf	(??___fladd+0)+0,w
  8350  0244  082C               	movwf	(___fladd@aexp)
  8351  0245  00B9               	line	84
  8352                           	
  8353                           l2394:	
  8354  0246                     	movf	(___fladd@b),w
  8355  0246  0824               	movwf	(??___fladd+0)+0
  8356  0247  00AC               	movf	(??___fladd+0)+0,w
  8357  0248  082C               	movwf	(___fladd@grs)
  8358  0249  00BB               	line	85
  8359                           	
  8360                           l2396:	
  8361  024A                     	movf	(___fladd@a),w
  8362  024A  0828               	movwf	(??___fladd+0)+0
  8363  024B  00AC               	movf	(??___fladd+0)+0,w
  8364  024C  082C               	movwf	(___fladd@b)
  8365  024D  00A4               	line	86
  8366                           	
  8367                           l2398:	
  8368  024E                     	movf	(___fladd@grs),w
  8369  024E  083B               	movwf	(??___fladd+0)+0
  8370  024F  00AC               	movf	(??___fladd+0)+0,w
  8371  0250  082C               	movwf	(___fladd@a)
  8372  0251  00A8               	line	87
  8373                           	
  8374                           l2400:	
  8375  0252                     	movf	0+(___fladd@b)+01h,w
  8376  0252  0825               	movwf	(??___fladd+0)+0
  8377  0253  00AC               	movf	(??___fladd+0)+0,w
  8378  0254  082C               	movwf	(___fladd@grs)
  8379  0255  00BB               	line	88
  8380                           	
  8381                           l2402:	
  8382  0256                     	movf	0+(___fladd@a)+01h,w
  8383  0256  0829               	movwf	(??___fladd+0)+0
  8384  0257  00AC               	movf	(??___fladd+0)+0,w
  8385  0258  082C               	movwf	0+(___fladd@b)+01h
  8386  0259  00A5               	line	89
  8387                           	
  8388                           l2404:	
  8389  025A                     	movf	(___fladd@grs),w
  8390  025A  083B               	movwf	(??___fladd+0)+0
  8391  025B  00AC               	movf	(??___fladd+0)+0,w
  8392  025C  082C               	movwf	0+(___fladd@a)+01h
  8393  025D  00A9               	line	90
  8394                           	
  8395                           l2406:	
  8396  025E                     	movf	0+(___fladd@b)+02h,w
  8397  025E  0826               	movwf	(??___fladd+0)+0
  8398  025F  00AC               	movf	(??___fladd+0)+0,w
  8399  0260  082C               	movwf	(___fladd@grs)
  8400  0261  00BB               	line	91
  8401                           	
  8402                           l2408:	
  8403  0262                     	movf	0+(___fladd@a)+02h,w
  8404  0262  082A               	movwf	(??___fladd+0)+0
  8405  0263  00AC               	movf	(??___fladd+0)+0,w
  8406  0264  082C               	movwf	0+(___fladd@b)+02h
  8407  0265  00A6               	line	92
  8408                           	
  8409                           l2410:	
  8410  0266                     	movf	(___fladd@grs),w
  8411  0266  083B               	movwf	(??___fladd+0)+0
  8412  0267  00AC               	movf	(??___fladd+0)+0,w
  8413  0268  082C               	movwf	0+(___fladd@a)+02h
  8414  0269  00AA               	line	93
  8415                           	
  8416                           l2412:	
  8417  026A                     	movf	0+(___fladd@b)+03h,w
  8418  026A  0827               	movwf	(??___fladd+0)+0
  8419  026B  00AC               	movf	(??___fladd+0)+0,w
  8420  026C  082C               	movwf	(___fladd@grs)
  8421  026D  00BB               	line	94
  8422                           	
  8423                           l2414:	
  8424  026E                     	movf	0+(___fladd@a)+03h,w
  8425  026E  082B               	movwf	(??___fladd+0)+0
  8426  026F  00AC               	movf	(??___fladd+0)+0,w
  8427  0270  082C               	movwf	0+(___fladd@b)+03h
  8428  0271  00A7               	line	95
  8429                           	
  8430                           l2416:	
  8431  0272                     	movf	(___fladd@grs),w
  8432  0272  083B               	movwf	(??___fladd+0)+0
  8433  0273  00AC               	movf	(??___fladd+0)+0,w
  8434  0274  082C               	movwf	0+(___fladd@a)+03h
  8435  0275  00AB               	goto	l2418
  8436  0276  2A77               	line	96
  8437                           	
  8438                           l627:	
  8439  0277                     	line	98
  8440                           	
  8441                           l2418:	
  8442  0277                     	clrf	(___fladd@grs)
  8443  0277  01BB               	line	100
  8444                           	
  8445                           l2420:	
  8446  0278                     	movf	(___fladd@bexp),w
  8447  0278  083A               	movwf	(??___fladd+0)+0
  8448  0279  00AC               	clrf	(??___fladd+0)+0+1
  8449  027A  01AD               	comf	(??___fladd+0)+0,f
  8450  027B  09AC               	comf	(??___fladd+0)+1,f
  8451  027C  09AD               	incf	(??___fladd+0)+0,f
  8452  027D  0AAC               	skipnz
  8453  027E  1903               	incf	(??___fladd+0)+1,f
  8454  027F  0AAD               	movf	(___fladd@aexp),w
  8455  0280  0839               	addwf	0+(??___fladd+0)+0,w
  8456  0281  072C               	movwf	(??___fladd+2)+0
  8457  0282  00AE               	movf	1+(??___fladd+0)+0,w
  8458  0283  082D               	skipnc
  8459  0284  1803               	incf	1+(??___fladd+0)+0,w
  8460  0285  0A2D               	movwf	((??___fladd+2)+0)+1
  8461  0286  00AF               	movf	1+(??___fladd+2)+0,w
  8462  0287  082F               	xorlw	80h
  8463  0288  3A80               	movwf	btemp+1
  8464  0289  00FF               	movlw	(0)^80h
  8465  028A  3080               	subwf	btemp+1,w
  8466  028B  027F               	skipz
  8467  028C  1D03               	goto	u2855
  8468  028D  2A90               	movlw	01Ah
  8469  028E  301A               	subwf	0+(??___fladd+2)+0,w
  8470  028F  022E               u2855:
  8471  0290                     
  8472                           	skipc
  8473  0290  1C03               	goto	u2851
  8474  0291  2A93               	goto	u2850
  8475  0292  2A94               u2851:
  8476  0293                     	goto	l2436
  8477  0293  2AD5               u2850:
  8478  0294                     	line	101
  8479                           	
  8480                           l2422:	
  8481  0294                     	bcf	status, 5	;RP0=0, select bank0
  8482  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  8483  0295  1303               	movf	(___fladd@b+3),w
  8484  0296  0827               	iorwf	(___fladd@b+2),w
  8485  0297  0426               	iorwf	(___fladd@b+1),w
  8486  0298  0425               	iorwf	(___fladd@b),w
  8487  0299  0424               	skipz
  8488  029A  1D03               	goto	u2861
  8489  029B  2A9D               	goto	u2860
  8490  029C  2A9F               u2861:
  8491  029D                     	movlw	1
  8492  029D  3001               	goto	u2870
  8493  029E  2AA0               u2860:
  8494  029F                     	movlw	0
  8495  029F  3000               u2870:
  8496  02A0                     	movwf	(??___fladd+0)+0
  8497  02A0  00AC               	movf	(??___fladd+0)+0,w
  8498  02A1  082C               	movwf	(___fladd@grs)
  8499  02A2  00BB               	line	102
  8500                           	movlw	high highword(0)
  8501  02A3  3000               	movwf	(___fladd@b+3)
  8502  02A4  00A7               	movlw	low highword(0)
  8503  02A5  3000               	movwf	(___fladd@b+2)
  8504  02A6  00A6               	movlw	high(0)
  8505  02A7  3000               	movwf	(___fladd@b+1)
  8506  02A8  00A5               	movlw	low(0)
  8507  02A9  3000               	movwf	(___fladd@b)
  8508  02AA  00A4               
  8509                           	line	103
  8510                           	movf	(___fladd@aexp),w
  8511  02AB  0839               	movwf	(??___fladd+0)+0
  8512  02AC  00AC               	movf	(??___fladd+0)+0,w
  8513  02AD  082C               	movwf	(___fladd@bexp)
  8514  02AE  00BA               	line	104
  8515                           	goto	l630
  8516  02AF  2ADE               	line	105
  8517                           	
  8518                           l629:	
  8519  02B0                     	line	106
  8520                           	goto	l2436
  8521  02B0  2AD5               	
  8522                           l632:	
  8523  02B1                     	line	109
  8524                           	btfss	(___fladd@grs),(0)&7
  8525  02B1  1C3B               	goto	u2881
  8526  02B2  2AB4               	goto	u2880
  8527  02B3  2AB5               u2881:
  8528  02B4                     	goto	l2426
  8529  02B4  2ABE               u2880:
  8530  02B5                     	line	110
  8531                           	
  8532                           l2424:	
  8533  02B5                     	movf	(___fladd@grs),w
  8534  02B5  083B               	movwf	(??___fladd+0)+0
  8535  02B6  00AC               	clrc
  8536  02B7  1003               	rrf	(??___fladd+0)+0,w
  8537  02B8  0C2C               	iorlw	01h
  8538  02B9  3801               	movwf	(??___fladd+1)+0
  8539  02BA  00AD               	movf	(??___fladd+1)+0,w
  8540  02BB  082D               	movwf	(___fladd@grs)
  8541  02BC  00BB               	line	111
  8542                           	goto	l2428
  8543  02BD  2AC1               	line	112
  8544                           	
  8545                           l633:	
  8546  02BE                     	line	113
  8547                           	
  8548                           l2426:	
  8549  02BE                     	clrc
  8550  02BE  1003               	rrf	(___fladd@grs),f
  8551  02BF  0CBB               
  8552                           	goto	l2428
  8553  02C0  2AC1               	line	114
  8554                           	
  8555                           l634:	
  8556  02C1                     	line	115
  8557                           	
  8558                           l2428:	
  8559  02C1                     	btfss	(___fladd@b),(0)&7
  8560  02C1  1C24               	goto	u2891
  8561  02C2  2AC4               	goto	u2890
  8562  02C3  2AC5               u2891:
  8563  02C4                     	goto	l2432
  8564  02C4  2AC7               u2890:
  8565  02C5                     	line	116
  8566                           	
  8567                           l2430:	
  8568  02C5                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8569  02C5  17BB               	goto	l2432
  8570  02C6  2AC7               	line	117
  8571                           	
  8572                           l635:	
  8573  02C7                     	line	118
  8574                           	
  8575                           l2432:	
  8576  02C7                     	movlw	01h
  8577  02C7  3001               	movwf	(??___fladd+0)+0
  8578  02C8  00AC               u2905:
  8579  02C9                     	rlf	(___fladd@b+3),w
  8580  02C9  0D27               	rrf	(___fladd@b+3),f
  8581  02CA  0CA7               	rrf	(___fladd@b+2),f
  8582  02CB  0CA6               	rrf	(___fladd@b+1),f
  8583  02CC  0CA5               	rrf	(___fladd@b),f
  8584  02CD  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8585  02CE  0BAC               	goto	u2905
  8586  02CF  2AC9               
  8587                           	line	119
  8588                           	
  8589                           l2434:	
  8590  02D0                     	movlw	low(01h)
  8591  02D0  3001               	movwf	(??___fladd+0)+0
  8592  02D1  00AC               	movf	(??___fladd+0)+0,w
  8593  02D2  082C               	addwf	(___fladd@bexp),f
  8594  02D3  07BA               	goto	l2436
  8595  02D4  2AD5               	line	120
  8596                           	
  8597                           l631:	
  8598  02D5                     	line	106
  8599                           	
  8600                           l2436:	
  8601  02D5                     	bcf	status, 5	;RP0=0, select bank0
  8602  02D5  1283               	bcf	status, 6	;RP1=0, select bank0
  8603  02D6  1303               	movf	(___fladd@aexp),w
  8604  02D7  0839               	subwf	(___fladd@bexp),w
  8605  02D8  023A               	skipc
  8606  02D9  1C03               	goto	u2911
  8607  02DA  2ADC               	goto	u2910
  8608  02DB  2ADD               u2911:
  8609  02DC                     	goto	l632
  8610  02DC  2AB1               u2910:
  8611  02DD                     	goto	l630
  8612  02DD  2ADE               	
  8613                           l636:	
  8614  02DE                     	line	121
  8615                           	
  8616                           l630:	
  8617  02DE                     	line	124
  8618                           	btfsc	(___fladd@signs),(6)&7
  8619  02DE  1B38               	goto	u2921
  8620  02DF  2AE1               	goto	u2920
  8621  02E0  2AE2               u2921:
  8622  02E1                     	goto	l2462
  8623  02E1  2B31               u2920:
  8624  02E2                     	line	127
  8625                           	
  8626                           l2438:	
  8627  02E2                     	movf	((___fladd@bexp)),w
  8628  02E2  083A               	btfss	status,2
  8629  02E3  1D03               	goto	u2931
  8630  02E4  2AE6               	goto	u2930
  8631  02E5  2AE7               u2931:
  8632  02E6                     	goto	l2444
  8633  02E6  2AF1               u2930:
  8634  02E7                     	line	128
  8635                           	
  8636                           l2440:	
  8637  02E7                     	movlw	0x0
  8638  02E7  3000               	movwf	(?___fladd+3)
  8639  02E8  00A7               	movlw	0x0
  8640  02E9  3000               	movwf	(?___fladd+2)
  8641  02EA  00A6               	movlw	0x0
  8642  02EB  3000               	movwf	(?___fladd+1)
  8643  02EC  00A5               	movlw	0x0
  8644  02ED  3000               	movwf	(?___fladd)
  8645  02EE  00A4               
  8646                           	goto	l639
  8647  02EF  2C7D               	
  8648                           l2442:	
  8649  02F0                     	goto	l639
  8650  02F0  2C7D               	line	129
  8651                           	
  8652                           l638:	
  8653  02F1                     	line	132
  8654                           	
  8655                           l2444:	
  8656  02F1                     	movf	(___fladd@a),w
  8657  02F1  0828               	addwf	(___fladd@b),f
  8658  02F2  07A4               	movf	(___fladd@a+1),w
  8659  02F3  0829               	clrz
  8660  02F4  1103               	skipnc
  8661  02F5  1803               	addlw	1
  8662  02F6  3E01               	skipnz
  8663  02F7  1903               	goto	u2941
  8664  02F8  2AFA               	addwf	(___fladd@b+1),f
  8665  02F9  07A5               u2941:
  8666  02FA                     	movf	(___fladd@a+2),w
  8667  02FA  082A               	clrz
  8668  02FB  1103               	skipnc
  8669  02FC  1803               	addlw	1
  8670  02FD  3E01               	skipnz
  8671  02FE  1903               	goto	u2942
  8672  02FF  2B01               	addwf	(___fladd@b+2),f
  8673  0300  07A6               u2942:
  8674  0301                     	movf	(___fladd@a+3),w
  8675  0301  082B               	clrz
  8676  0302  1103               	skipnc
  8677  0303  1803               	addlw	1
  8678  0304  3E01               	skipnz
  8679  0305  1903               	goto	u2943
  8680  0306  2B08               	addwf	(___fladd@b+3),f
  8681  0307  07A7               u2943:
  8682  0308                     
  8683                           	line	134
  8684                           	
  8685                           l2446:	
  8686  0308                     	btfss	(___fladd@b+3),(24)&7
  8687  0308  1C27               	goto	u2951
  8688  0309  2B0B               	goto	u2950
  8689  030A  2B0C               u2951:
  8690  030B                     	goto	l2496
  8691  030B  2BFA               u2950:
  8692  030C                     	line	135
  8693                           	
  8694                           l2448:	
  8695  030C                     	btfss	(___fladd@grs),(0)&7
  8696  030C  1C3B               	goto	u2961
  8697  030D  2B0F               	goto	u2960
  8698  030E  2B10               u2961:
  8699  030F                     	goto	l2452
  8700  030F  2B19               u2960:
  8701  0310                     	line	136
  8702                           	
  8703                           l2450:	
  8704  0310                     	movf	(___fladd@grs),w
  8705  0310  083B               	movwf	(??___fladd+0)+0
  8706  0311  00AC               	clrc
  8707  0312  1003               	rrf	(??___fladd+0)+0,w
  8708  0313  0C2C               	iorlw	01h
  8709  0314  3801               	movwf	(??___fladd+1)+0
  8710  0315  00AD               	movf	(??___fladd+1)+0,w
  8711  0316  082D               	movwf	(___fladd@grs)
  8712  0317  00BB               	line	137
  8713                           	goto	l2454
  8714  0318  2B1C               	line	138
  8715                           	
  8716                           l641:	
  8717  0319                     	line	139
  8718                           	
  8719                           l2452:	
  8720  0319                     	clrc
  8721  0319  1003               	rrf	(___fladd@grs),f
  8722  031A  0CBB               
  8723                           	goto	l2454
  8724  031B  2B1C               	line	140
  8725                           	
  8726                           l642:	
  8727  031C                     	line	141
  8728                           	
  8729                           l2454:	
  8730  031C                     	btfss	(___fladd@b),(0)&7
  8731  031C  1C24               	goto	u2971
  8732  031D  2B1F               	goto	u2970
  8733  031E  2B20               u2971:
  8734  031F                     	goto	l2458
  8735  031F  2B22               u2970:
  8736  0320                     	line	142
  8737                           	
  8738                           l2456:	
  8739  0320                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8740  0320  17BB               	goto	l2458
  8741  0321  2B22               	line	143
  8742                           	
  8743                           l643:	
  8744  0322                     	line	144
  8745                           	
  8746                           l2458:	
  8747  0322                     	movlw	01h
  8748  0322  3001               	movwf	(??___fladd+0)+0
  8749  0323  00AC               u2985:
  8750  0324                     	rlf	(___fladd@b+3),w
  8751  0324  0D27               	rrf	(___fladd@b+3),f
  8752  0325  0CA7               	rrf	(___fladd@b+2),f
  8753  0326  0CA6               	rrf	(___fladd@b+1),f
  8754  0327  0CA5               	rrf	(___fladd@b),f
  8755  0328  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8756  0329  0BAC               	goto	u2985
  8757  032A  2B24               
  8758                           	line	145
  8759                           	
  8760                           l2460:	
  8761  032B                     	movlw	low(01h)
  8762  032B  3001               	movwf	(??___fladd+0)+0
  8763  032C  00AC               	movf	(??___fladd+0)+0,w
  8764  032D  082C               	addwf	(___fladd@bexp),f
  8765  032E  07BA               	goto	l2496
  8766  032F  2BFA               	line	146
  8767                           	
  8768                           l640:	
  8769  0330                     	line	148
  8770                           	goto	l2496
  8771  0330  2BFA               	line	149
  8772                           	
  8773                           l637:	
  8774  0331                     	line	153
  8775                           	
  8776                           l2462:	
  8777  0331                     	movf	(___fladd@b+3),w
  8778  0331  0827               	xorlw	80h
  8779  0332  3A80               	movwf	btemp+1
  8780  0333  00FF               	movf	(___fladd@a+3),w
  8781  0334  082B               	xorlw	80h
  8782  0335  3A80               	subwf	btemp+1,w
  8783  0336  027F               	
  8784                           	skipz
  8785  0337  1D03               	goto	u2993
  8786  0338  2B43               	movf	(___fladd@a+2),w
  8787  0339  082A               	subwf	(___fladd@b+2),w
  8788  033A  0226               	skipz
  8789  033B  1D03               	goto	u2993
  8790  033C  2B43               	movf	(___fladd@a+1),w
  8791  033D  0829               	subwf	(___fladd@b+1),w
  8792  033E  0225               	skipz
  8793  033F  1D03               	goto	u2993
  8794  0340  2B43               	movf	(___fladd@a),w
  8795  0341  0828               	subwf	(___fladd@b),w
  8796  0342  0224               u2993:
  8797  0343                     	skipnc
  8798  0343  1803               	goto	u2991
  8799  0344  2B46               	goto	u2990
  8800  0345  2B47               u2991:
  8801  0346                     	goto	l2472
  8802  0346  2BAD               u2990:
  8803  0347                     	line	154
  8804                           	
  8805                           l2464:	
  8806  0347                     	movlw	0FFh
  8807  0347  30FF               	movwf	((??___fladd+0)+0)
  8808  0348  00AC               	movlw	0FFh
  8809  0349  30FF               	movwf	((??___fladd+0)+0+1)
  8810  034A  00AD               	movlw	0FFh
  8811  034B  30FF               	movwf	((??___fladd+0)+0+2)
  8812  034C  00AE               	movlw	0FFh
  8813  034D  30FF               	movwf	((??___fladd+0)+0+3)
  8814  034E  00AF               	movf	(___fladd@a),w
  8815  034F  0828               	movwf	(??___fladd+4)+0
  8816  0350  00B0               	movf	(___fladd@a+1),w
  8817  0351  0829               	movwf	((??___fladd+4)+0+1)
  8818  0352  00B1               	movf	(___fladd@a+2),w
  8819  0353  082A               	movwf	((??___fladd+4)+0+2)
  8820  0354  00B2               	movf	(___fladd@a+3),w
  8821  0355  082B               	movwf	((??___fladd+4)+0+3)
  8822  0356  00B3               	comf	(___fladd@b),w
  8823  0357  0924               	movwf	(??___fladd+8)+0
  8824  0358  00B4               	comf	(___fladd@b+1),w
  8825  0359  0925               	movwf	((??___fladd+8)+0+1)
  8826  035A  00B5               	comf	(___fladd@b+2),w
  8827  035B  0926               	movwf	((??___fladd+8)+0+2)
  8828  035C  00B6               	comf	(___fladd@b+3),w
  8829  035D  0927               	movwf	((??___fladd+8)+0+3)
  8830  035E  00B7               	incf	(??___fladd+8)+0,f
  8831  035F  0AB4               	skipnz
  8832  0360  1903               	incf	((??___fladd+8)+0+1),f
  8833  0361  0AB5               	skipnz
  8834  0362  1903               	incf	((??___fladd+8)+0+2),f
  8835  0363  0AB6               	skipnz
  8836  0364  1903               	incf	((??___fladd+8)+0+3),f
  8837  0365  0AB7               	movf	0+(??___fladd+8)+0,w
  8838  0366  0834               	addwf	(??___fladd+4)+0,f
  8839  0367  07B0               	movf	1+(??___fladd+8)+0,w
  8840  0368  0835               	skipnc
  8841  0369  1803               	incfsz	1+(??___fladd+8)+0,w
  8842  036A  0F35               	goto	u3000
  8843  036B  2B6D               	goto	u3001
  8844  036C  2B6E               u3000:
  8845  036D                     	addwf	(??___fladd+4)+1,f
  8846  036D  07B1               u3001:
  8847  036E                     	movf	2+(??___fladd+8)+0,w
  8848  036E  0836               	skipnc
  8849  036F  1803               	incfsz	2+(??___fladd+8)+0,w
  8850  0370  0F36               	goto	u3002
  8851  0371  2B73               	goto	u3003
  8852  0372  2B74               u3002:
  8853  0373                     	addwf	(??___fladd+4)+2,f
  8854  0373  07B2               u3003:
  8855  0374                     	movf	3+(??___fladd+8)+0,w
  8856  0374  0837               	skipnc
  8857  0375  1803               	incf	3+(??___fladd+8)+0,w
  8858  0376  0A37               	addwf	(??___fladd+4)+3,f
  8859  0377  07B3               	movf	0+(??___fladd+4)+0,w
  8860  0378  0830               	addwf	(??___fladd+0)+0,f
  8861  0379  07AC               	movf	1+(??___fladd+4)+0,w
  8862  037A  0831               	skipnc
  8863  037B  1803               	incfsz	1+(??___fladd+4)+0,w
  8864  037C  0F31               	goto	u3010
  8865  037D  2B7F               	goto	u3011
  8866  037E  2B80               u3010:
  8867  037F                     	addwf	(??___fladd+0)+1,f
  8868  037F  07AD               u3011:
  8869  0380                     	movf	2+(??___fladd+4)+0,w
  8870  0380  0832               	skipnc
  8871  0381  1803               	incfsz	2+(??___fladd+4)+0,w
  8872  0382  0F32               	goto	u3012
  8873  0383  2B85               	goto	u3013
  8874  0384  2B86               u3012:
  8875  0385                     	addwf	(??___fladd+0)+2,f
  8876  0385  07AE               u3013:
  8877  0386                     	movf	3+(??___fladd+4)+0,w
  8878  0386  0833               	skipnc
  8879  0387  1803               	incf	3+(??___fladd+4)+0,w
  8880  0388  0A33               	addwf	(??___fladd+0)+3,f
  8881  0389  07AF               	movf	3+(??___fladd+0)+0,w
  8882  038A  082F               	movwf	(___fladd@b+3)
  8883  038B  00A7               	movf	2+(??___fladd+0)+0,w
  8884  038C  082E               	movwf	(___fladd@b+2)
  8885  038D  00A6               	movf	1+(??___fladd+0)+0,w
  8886  038E  082D               	movwf	(___fladd@b+1)
  8887  038F  00A5               	movf	0+(??___fladd+0)+0,w
  8888  0390  082C               	movwf	(___fladd@b)
  8889  0391  00A4               
  8890                           	line	155
  8891                           	movlw	low(080h)
  8892  0392  3080               	movwf	(??___fladd+0)+0
  8893  0393  00AC               	movf	(??___fladd+0)+0,w
  8894  0394  082C               	xorwf	(___fladd@signs),f
  8895  0395  06B8               	line	156
  8896                           	
  8897                           l2466:	
  8898  0396                     	comf	(___fladd@grs),f
  8899  0396  09BB               	incf	(___fladd@grs),f
  8900  0397  0ABB               	line	157
  8901                           	
  8902                           l2468:	
  8903  0398                     	movf	((___fladd@grs)),w
  8904  0398  083B               	btfss	status,2
  8905  0399  1D03               	goto	u3021
  8906  039A  2B9C               	goto	u3020
  8907  039B  2B9D               u3021:
  8908  039C                     	goto	l647
  8909  039C  2BBB               u3020:
  8910  039D                     	line	158
  8911                           	
  8912                           l2470:	
  8913  039D                     	movlw	01h
  8914  039D  3001               	addwf	(___fladd@b),f
  8915  039E  07A4               	movlw	0
  8916  039F  3000               	skipnc
  8917  03A0  1803               movlw 1
  8918  03A1  3001               	addwf	(___fladd@b+1),f
  8919  03A2  07A5               	movlw	0
  8920  03A3  3000               	skipnc
  8921  03A4  1803               movlw 1
  8922  03A5  3001               	addwf	(___fladd@b+2),f
  8923  03A6  07A6               	movlw	0
  8924  03A7  3000               	skipnc
  8925  03A8  1803               movlw 1
  8926  03A9  3001               	addwf	(___fladd@b+3),f
  8927  03AA  07A7               	goto	l647
  8928  03AB  2BBB               	line	159
  8929                           	
  8930                           l646:	
  8931  03AC                     	line	160
  8932                           	goto	l647
  8933  03AC  2BBB               	line	161
  8934                           	
  8935                           l645:	
  8936  03AD                     	line	162
  8937                           	
  8938                           l2472:	
  8939  03AD                     	movf	(___fladd@a),w
  8940  03AD  0828               	subwf	(___fladd@b),f
  8941  03AE  02A4               	movf	(___fladd@a+1),w
  8942  03AF  0829               	skipc
  8943  03B0  1C03               	incfsz	(___fladd@a+1),w
  8944  03B1  0F29               	subwf	(___fladd@b+1),f
  8945  03B2  02A5               	movf	(___fladd@a+2),w
  8946  03B3  082A               	skipc
  8947  03B4  1C03               	incfsz	(___fladd@a+2),w
  8948  03B5  0F2A               	subwf	(___fladd@b+2),f
  8949  03B6  02A6               	movf	(___fladd@a+3),w
  8950  03B7  082B               	skipc
  8951  03B8  1C03               	incfsz	(___fladd@a+3),w
  8952  03B9  0F2B               	subwf	(___fladd@b+3),f
  8953  03BA  02A7               	line	163
  8954                           	
  8955                           l647:	
  8956  03BB                     	line	166
  8957                           	movf	(___fladd@b+3),w
  8958  03BB  0827               	iorwf	(___fladd@b+2),w
  8959  03BC  0426               	iorwf	(___fladd@b+1),w
  8960  03BD  0425               	iorwf	(___fladd@b),w
  8961  03BE  0424               	skipz
  8962  03BF  1D03               	goto	u3031
  8963  03C0  2BC2               	goto	u3030
  8964  03C1  2BC3               u3031:
  8965  03C2                     	goto	l2494
  8966  03C2  2BF4               u3030:
  8967  03C3                     	
  8968                           l2474:	
  8969  03C3                     	movf	((___fladd@grs)),w
  8970  03C3  083B               	btfss	status,2
  8971  03C4  1D03               	goto	u3041
  8972  03C5  2BC7               	goto	u3040
  8973  03C6  2BC8               u3041:
  8974  03C7                     	goto	l2494
  8975  03C7  2BF4               u3040:
  8976  03C8                     	line	167
  8977                           	
  8978                           l2476:	
  8979  03C8                     	movlw	0x0
  8980  03C8  3000               	movwf	(?___fladd+3)
  8981  03C9  00A7               	movlw	0x0
  8982  03CA  3000               	movwf	(?___fladd+2)
  8983  03CB  00A6               	movlw	0x0
  8984  03CC  3000               	movwf	(?___fladd+1)
  8985  03CD  00A5               	movlw	0x0
  8986  03CE  3000               	movwf	(?___fladd)
  8987  03CF  00A4               
  8988                           	goto	l639
  8989  03D0  2C7D               	
  8990                           l2478:	
  8991  03D1                     	goto	l639
  8992  03D1  2C7D               	line	168
  8993                           	
  8994                           l648:	
  8995  03D2                     	line	171
  8996                           	goto	l2494
  8997  03D2  2BF4               	
  8998                           l650:	
  8999  03D3                     	line	172
  9000                           	
  9001                           l2480:	
  9002  03D3                     	movlw	01h
  9003  03D3  3001               	movwf	(??___fladd+0)+0
  9004  03D4  00AC               u3055:
  9005  03D5                     	clrc
  9006  03D5  1003               	rlf	(___fladd@b),f
  9007  03D6  0DA4               	rlf	(___fladd@b+1),f
  9008  03D7  0DA5               	rlf	(___fladd@b+2),f
  9009  03D8  0DA6               	rlf	(___fladd@b+3),f
  9010  03D9  0DA7               	decfsz	(??___fladd+0)+0
  9011  03DA  0BAC               	goto	u3055
  9012  03DB  2BD5               	line	173
  9013                           	
  9014                           l2482:	
  9015  03DC                     	btfss	(___fladd@grs),(7)&7
  9016  03DC  1FBB               	goto	u3061
  9017  03DD  2BDF               	goto	u3060
  9018  03DE  2BE0               u3061:
  9019  03DF                     	goto	l651
  9020  03DF  2BE1               u3060:
  9021  03E0                     	line	174
  9022                           	
  9023                           l2484:	
  9024  03E0                     	bsf	(___fladd@b)+(0/8),(0)&7
  9025  03E0  1424               	line	175
  9026                           	
  9027                           l651:	
  9028  03E1                     	line	176
  9029                           	btfss	(___fladd@grs),(0)&7
  9030  03E1  1C3B               	goto	u3071
  9031  03E2  2BE4               	goto	u3070
  9032  03E3  2BE5               u3071:
  9033  03E4                     	goto	l2488
  9034  03E4  2BE8               u3070:
  9035  03E5                     	line	177
  9036                           	
  9037                           l2486:	
  9038  03E5                     	setc
  9039  03E5  1403               	rlf	(___fladd@grs),f
  9040  03E6  0DBB               	line	178
  9041                           	goto	l2490
  9042  03E7  2BEB               	line	179
  9043                           	
  9044                           l652:	
  9045  03E8                     	line	180
  9046                           	
  9047                           l2488:	
  9048  03E8                     	clrc
  9049  03E8  1003               	rlf	(___fladd@grs),f
  9050  03E9  0DBB               
  9051                           	goto	l2490
  9052  03EA  2BEB               	line	181
  9053                           	
  9054                           l653:	
  9055  03EB                     	line	182
  9056                           	
  9057                           l2490:	
  9058  03EB                     	movf	((___fladd@bexp)),w
  9059  03EB  083A               	btfsc	status,2
  9060  03EC  1903               	goto	u3081
  9061  03ED  2BEF               	goto	u3080
  9062  03EE  2BF0               u3081:
  9063  03EF                     	goto	l2494
  9064  03EF  2BF4               u3080:
  9065  03F0                     	line	183
  9066                           	
  9067                           l2492:	
  9068  03F0                     	movlw	01h
  9069  03F0  3001               	subwf	(___fladd@bexp),f
  9070  03F1  02BA               	goto	l2494
  9071  03F2  2BF4               	line	184
  9072                           	
  9073                           l654:	
  9074  03F3                     	goto	l2494
  9075  03F3  2BF4               	line	185
  9076                           	
  9077                           l649:	
  9078  03F4                     	line	171
  9079                           	
  9080                           l2494:	
  9081  03F4                     	btfss	(___fladd@b+2),(23)&7
  9082  03F4  1FA6               	goto	u3091
  9083  03F5  2BF7               	goto	u3090
  9084  03F6  2BF8               u3091:
  9085  03F7                     	goto	l2480
  9086  03F7  2BD3               u3090:
  9087  03F8                     	goto	l2496
  9088  03F8  2BFA               	
  9089                           l655:	
  9090  03F9                     	goto	l2496
  9091  03F9  2BFA               	line	186
  9092                           	
  9093                           l644:	
  9094  03FA                     	line	192
  9095                           	
  9096                           l2496:	
  9097  03FA                     	clrf	(___fladd@aexp)
  9098  03FA  01B9               	line	193
  9099                           	
  9100                           l2498:	
  9101  03FB                     	btfss	(___fladd@grs),(7)&7
  9102  03FB  1FBB               	goto	u3101
  9103  03FC  2BFE               	goto	u3100
  9104  03FD  2BFF               u3101:
  9105  03FE                     	goto	l2506
  9106  03FE  2C11               u3100:
  9107  03FF                     	line	194
  9108                           	
  9109                           l2500:	
  9110  03FF                     	movf	(___fladd@grs),w
  9111  03FF  083B               	andlw	07Fh
  9112  0400  397F               	btfsc	status,2
  9113  0401  1903               	goto	u3111
  9114  0402  2C04               	goto	u3110
  9115  0403  2C05               u3111:
  9116  0404                     	goto	l657
  9117  0404  2C08               u3110:
  9118  0405                     	line	195
  9119                           	
  9120                           l2502:	
  9121  0405                     	clrf	(___fladd@aexp)
  9122  0405  01B9               	incf	(___fladd@aexp),f
  9123  0406  0AB9               	line	196
  9124                           	goto	l2506
  9125  0407  2C11               	line	197
  9126                           	
  9127                           l657:	
  9128  0408                     	line	198
  9129                           	btfss	(___fladd@b),(0)&7
  9130  0408  1C24               	goto	u3121
  9131  0409  2C0B               	goto	u3120
  9132  040A  2C0C               u3121:
  9133  040B                     	goto	l2506
  9134  040B  2C11               u3120:
  9135  040C                     	line	199
  9136                           	
  9137                           l2504:	
  9138  040C                     	clrf	(___fladd@aexp)
  9139  040C  01B9               	incf	(___fladd@aexp),f
  9140  040D  0AB9               	goto	l2506
  9141  040E  2C11               	line	200
  9142                           	
  9143                           l659:	
  9144  040F                     	goto	l2506
  9145  040F  2C11               	line	201
  9146                           	
  9147                           l658:	
  9148  0410                     	goto	l2506
  9149  0410  2C11               	line	202
  9150                           	
  9151                           l656:	
  9152  0411                     	line	203
  9153                           	
  9154                           l2506:	
  9155  0411                     	movf	((___fladd@aexp)),w
  9156  0411  0839               	btfsc	status,2
  9157  0412  1903               	goto	u3131
  9158  0413  2C15               	goto	u3130
  9159  0414  2C16               u3131:
  9160  0415                     	goto	l660
  9161  0415  2C4C               u3130:
  9162  0416                     	line	204
  9163                           	
  9164                           l2508:	
  9165  0416                     	movlw	01h
  9166  0416  3001               	addwf	(___fladd@b),f
  9167  0417  07A4               	movlw	0
  9168  0418  3000               	skipnc
  9169  0419  1803               movlw 1
  9170  041A  3001               	addwf	(___fladd@b+1),f
  9171  041B  07A5               	movlw	0
  9172  041C  3000               	skipnc
  9173  041D  1803               movlw 1
  9174  041E  3001               	addwf	(___fladd@b+2),f
  9175  041F  07A6               	movlw	0
  9176  0420  3000               	skipnc
  9177  0421  1803               movlw 1
  9178  0422  3001               	addwf	(___fladd@b+3),f
  9179  0423  07A7               	line	205
  9180                           	
  9181                           l2510:	
  9182  0424                     	btfss	(___fladd@b+3),(24)&7
  9183  0424  1C27               	goto	u3141
  9184  0425  2C27               	goto	u3140
  9185  0426  2C28               u3141:
  9186  0427                     	goto	l660
  9187  0427  2C4C               u3140:
  9188  0428                     	line	206
  9189                           	
  9190                           l2512:	
  9191  0428                     	movf	(___fladd@b),w
  9192  0428  0824               	movwf	(??___fladd+0)+0
  9193  0429  00AC               	movf	(___fladd@b+1),w
  9194  042A  0825               	movwf	((??___fladd+0)+0+1)
  9195  042B  00AD               	movf	(___fladd@b+2),w
  9196  042C  0826               	movwf	((??___fladd+0)+0+2)
  9197  042D  00AE               	movf	(___fladd@b+3),w
  9198  042E  0827               	movwf	((??___fladd+0)+0+3)
  9199  042F  00AF               	movlw	01h
  9200  0430  3001               	movwf	(??___fladd+4)+0
  9201  0431  00B0               u3155:
  9202  0432                     	rlf	(??___fladd+0)+3,w
  9203  0432  0D2F               	rrf	(??___fladd+0)+3,f
  9204  0433  0CAF               	rrf	(??___fladd+0)+2,f
  9205  0434  0CAE               	rrf	(??___fladd+0)+1,f
  9206  0435  0CAD               	rrf	(??___fladd+0)+0,f
  9207  0436  0CAC               u3150:
  9208  0437                     	decfsz	(??___fladd+4)+0,f
  9209  0437  0BB0               	goto	u3155
  9210  0438  2C32               	movf	3+(??___fladd+0)+0,w
  9211  0439  082F               	movwf	(___fladd@b+3)
  9212  043A  00A7               	movf	2+(??___fladd+0)+0,w
  9213  043B  082E               	movwf	(___fladd@b+2)
  9214  043C  00A6               	movf	1+(??___fladd+0)+0,w
  9215  043D  082D               	movwf	(___fladd@b+1)
  9216  043E  00A5               	movf	0+(??___fladd+0)+0,w
  9217  043F  082C               	movwf	(___fladd@b)
  9218  0440  00A4               
  9219                           	line	207
  9220                           		incf	((___fladd@bexp)),w
  9221  0441  0A3A               	btfsc	status,2
  9222  0442  1903               	goto	u3161
  9223  0443  2C45               	goto	u3160
  9224  0444  2C46               u3161:
  9225  0445                     	goto	l660
  9226  0445  2C4C               u3160:
  9227  0446                     	line	208
  9228                           	
  9229                           l2514:	
  9230  0446                     	movlw	low(01h)
  9231  0446  3001               	movwf	(??___fladd+0)+0
  9232  0447  00AC               	movf	(??___fladd+0)+0,w
  9233  0448  082C               	addwf	(___fladd@bexp),f
  9234  0449  07BA               	goto	l660
  9235  044A  2C4C               	line	209
  9236                           	
  9237                           l662:	
  9238  044B                     	goto	l660
  9239  044B  2C4C               	line	210
  9240                           	
  9241                           l661:	
  9242  044C                     	line	211
  9243                           	
  9244                           l660:	
  9245  044C                     	line	215
  9246                           		incf	((___fladd@bexp)),w
  9247  044C  0A3A               	btfsc	status,2
  9248  044D  1903               	goto	u3171
  9249  044E  2C50               	goto	u3170
  9250  044F  2C51               u3171:
  9251  0450                     	goto	l2518
  9252  0450  2C57               u3170:
  9253  0451                     	
  9254                           l2516:	
  9255  0451                     	movf	((___fladd@bexp)),w
  9256  0451  083A               	btfss	status,2
  9257  0452  1D03               	goto	u3181
  9258  0453  2C55               	goto	u3180
  9259  0454  2C56               u3181:
  9260  0455                     	goto	l2524
  9261  0455  2C67               u3180:
  9262  0456                     	goto	l2518
  9263  0456  2C57               	
  9264                           l665:	
  9265  0457                     	line	216
  9266                           	
  9267                           l2518:	
  9268  0457                     	movlw	high highword(0)
  9269  0457  3000               	movwf	(___fladd@b+3)
  9270  0458  00A7               	movlw	low highword(0)
  9271  0459  3000               	movwf	(___fladd@b+2)
  9272  045A  00A6               	movlw	high(0)
  9273  045B  3000               	movwf	(___fladd@b+1)
  9274  045C  00A5               	movlw	low(0)
  9275  045D  3000               	movwf	(___fladd@b)
  9276  045E  00A4               
  9277                           	line	218
  9278                           	
  9279                           l2520:	
  9280  045F                     	movf	((___fladd@bexp)),w
  9281  045F  083A               	btfss	status,2
  9282  0460  1D03               	goto	u3191
  9283  0461  2C63               	goto	u3190
  9284  0462  2C64               u3191:
  9285  0463                     	goto	l2524
  9286  0463  2C67               u3190:
  9287  0464                     	line	219
  9288                           	
  9289                           l2522:	
  9290  0464                     	clrf	(___fladd@signs)
  9291  0464  01B8               	goto	l2524
  9292  0465  2C67               	line	220
  9293                           	
  9294                           l666:	
  9295  0466                     	goto	l2524
  9296  0466  2C67               	line	221
  9297                           	
  9298                           l663:	
  9299  0467                     	line	225
  9300                           	
  9301                           l2524:	
  9302  0467                     	btfss	(___fladd@bexp),(0)&7
  9303  0467  1C3A               	goto	u3201
  9304  0468  2C6A               	goto	u3200
  9305  0469  2C6B               u3201:
  9306  046A                     	goto	l2528
  9307  046A  2C6D               u3200:
  9308  046B                     	line	226
  9309                           	
  9310                           l2526:	
  9311  046B                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9312  046B  17A6               	line	227
  9313                           	goto	l668
  9314  046C  2C71               	line	229
  9315                           	
  9316                           l667:	
  9317  046D                     	line	230
  9318                           	
  9319                           l2528:	
  9320  046D                     	movlw	low(07Fh)
  9321  046D  307F               	movwf	(??___fladd+0)+0
  9322  046E  00AC               	movf	(??___fladd+0)+0,w
  9323  046F  082C               	andwf	0+(___fladd@b)+02h,f
  9324  0470  05A6               	line	231
  9325                           	
  9326                           l668:	
  9327  0471                     	line	232
  9328                           	movf	(___fladd@bexp),w
  9329  0471  083A               	movwf	(??___fladd+0)+0
  9330  0472  00AC               	clrc
  9331  0473  1003               	rrf	(??___fladd+0)+0,w
  9332  0474  0C2C               	movwf	(??___fladd+1)+0
  9333  0475  00AD               	movf	(??___fladd+1)+0,w
  9334  0476  082D               	movwf	0+(___fladd@b)+03h
  9335  0477  00A7               	line	233
  9336                           	
  9337                           l2530:	
  9338  0478                     	btfss	(___fladd@signs),(7)&7
  9339  0478  1FB8               	goto	u3211
  9340  0479  2C7B               	goto	u3210
  9341  047A  2C7C               u3211:
  9342  047B                     	goto	l669
  9343  047B  2C7D               u3210:
  9344  047C                     	line	234
  9345                           	
  9346                           l2532:	
  9347  047C                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9348  047C  17A7               	line	235
  9349                           	
  9350                           l669:	
  9351  047D                     	line	236
  9352                           	line	237
  9353                           	
  9354                           l639:	
  9355  047D                     	return
  9356  047D  0008               	opt stack 0
  9357                           GLOBAL	__end_of___fladd
  9358                           	__end_of___fladd:
  9359  047E                     	signat	___fladd,8316
  9360                           	global	_Update_Current_Date_Time
  9361                           
  9362 ;; *************** function _Update_Current_Date_Time *****************
  9363 ;; Defined at:
  9364 ;;		line 166 in file "mainM.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;		None
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0, pclath, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9378 ;;      Params:         0       0       0       0       0
  9379 ;;      Locals:         0       0       0       0       0
  9380 ;;      Temps:          1       0       0       0       0
  9381 ;;      Totals:         1       0       0       0       0
  9382 ;;Total ram usage:        1 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; Hardware stack levels required when called:    2
  9385 ;; This function calls:
  9386 ;;		_BCD_2_DEC
  9387 ;;		_I2C_Master_Read
  9388 ;;		_I2C_Master_Start
  9389 ;;		_I2C_Master_Stop
  9390 ;;		_I2C_Master_Write
  9391 ;; This function is called by:
  9392 ;;		_main
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  9396                           	file	"mainM.c"
  9397                           	line	166
  9398                           global __ptext22
  9399                           __ptext22:	;psect for function _Update_Current_Date_Time
  9400  0051                     psect	text22
  9401                           	file	"mainM.c"
  9402                           	line	166
  9403                           	global	__size_of_Update_Current_Date_Time
  9404                           	__size_of_Update_Current_Date_Time	equ	__end_of_Update_Current_Date_Time-_Update_Curren
                                 t_Date_Time
  9405  0171                     	
  9406                           _Update_Current_Date_Time:	
  9407  0051                     ;incstack = 0
  9408                           	opt	stack 5
  9409                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  9410                           	line	169
  9411                           	
  9412                           l2294:	
  9413  0051                     ;mainM.c: 169:    I2C_Master_Start();
  9414                           	fcall	_I2C_Master_Start
  9415  0051  160A  118A  243C  120A  118A  	line	170
  9416                           ;mainM.c: 170:    I2C_Master_Write(0xD0);
  9417                           	movlw	0D0h
  9418  0056  30D0               	bcf	status, 5	;RP0=0, select bank0
  9419  0057  1283               	bcf	status, 6	;RP1=0, select bank0
  9420  0058  1303               	movwf	(I2C_Master_Write@d)
  9421  0059  00A0               	movlw	0
  9422  005A  3000               	movwf	((I2C_Master_Write@d))+1
  9423  005B  00A1               	fcall	_I2C_Master_Write
  9424  005C  160A  118A  244E  120A  118A  	line	171
  9425                           ;mainM.c: 171:    I2C_Master_Write(0);
  9426                           	movlw	0
  9427  0061  3000               	bcf	status, 5	;RP0=0, select bank0
  9428  0062  1283               	bcf	status, 6	;RP1=0, select bank0
  9429  0063  1303               	movwf	(I2C_Master_Write@d)
  9430  0064  00A0               	movwf	(I2C_Master_Write@d+1)
  9431  0065  00A1               	fcall	_I2C_Master_Write
  9432  0066  160A  118A  244E  120A  118A  	line	172
  9433                           ;mainM.c: 172:    I2C_Master_Stop();
  9434                           	fcall	_I2C_Master_Stop
  9435  006B  160A  118A  2445  120A  118A  	line	175
  9436                           ;mainM.c: 175:    I2C_Master_Start();
  9437                           	fcall	_I2C_Master_Start
  9438  0070  160A  118A  243C  120A  118A  	line	176
  9439                           ;mainM.c: 176:    I2C_Master_Write(0xD1);
  9440                           	movlw	0D1h
  9441  0075  30D1               	bcf	status, 5	;RP0=0, select bank0
  9442  0076  1283               	bcf	status, 6	;RP1=0, select bank0
  9443  0077  1303               	movwf	(I2C_Master_Write@d)
  9444  0078  00A0               	movlw	0
  9445  0079  3000               	movwf	((I2C_Master_Write@d))+1
  9446  007A  00A1               	fcall	_I2C_Master_Write
  9447  007B  160A  118A  244E  120A  118A  	line	177
  9448                           ;mainM.c: 177:    sec = BCD_2_DEC(I2C_Master_Read(0));
  9449                           	movlw	0
  9450  0080  3000               	movwf	(I2C_Master_Read@a)
  9451  0081  00F0               	movwf	(I2C_Master_Read@a+1)
  9452  0082  00F1               	fcall	_I2C_Master_Read
  9453  0083  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9454  0088  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9455  0089  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9456  008A  0870               	movwf	(BCD_2_DEC@to_convert)
  9457  008B  00F6               	fcall	_BCD_2_DEC
  9458  008C  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9459  0091  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9460  0092  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9461  0093  087D               	bsf	status, 5	;RP0=1, select bank1
  9462  0094  1683               	bcf	status, 6	;RP1=0, select bank1
  9463  0095  1303               	movwf	(_sec)^080h
  9464  0096  00B9               	line	178
  9465                           ;mainM.c: 178:    I2C_Master_Stop();
  9466                           	fcall	_I2C_Master_Stop
  9467  0097  160A  118A  2445  120A  118A  	line	180
  9468                           ;mainM.c: 180:    I2C_Master_Start();
  9469                           	fcall	_I2C_Master_Start
  9470  009C  160A  118A  243C  120A  118A  	line	181
  9471                           ;mainM.c: 181:    I2C_Master_Write(0xD1);
  9472                           	movlw	0D1h
  9473  00A1  30D1               	bcf	status, 5	;RP0=0, select bank0
  9474  00A2  1283               	bcf	status, 6	;RP1=0, select bank0
  9475  00A3  1303               	movwf	(I2C_Master_Write@d)
  9476  00A4  00A0               	movlw	0
  9477  00A5  3000               	movwf	((I2C_Master_Write@d))+1
  9478  00A6  00A1               	fcall	_I2C_Master_Write
  9479  00A7  160A  118A  244E  120A  118A  	line	182
  9480                           ;mainM.c: 182:    min = BCD_2_DEC(I2C_Master_Read(0));
  9481                           	movlw	0
  9482  00AC  3000               	movwf	(I2C_Master_Read@a)
  9483  00AD  00F0               	movwf	(I2C_Master_Read@a+1)
  9484  00AE  00F1               	fcall	_I2C_Master_Read
  9485  00AF  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9486  00B4  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9487  00B5  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9488  00B6  0870               	movwf	(BCD_2_DEC@to_convert)
  9489  00B7  00F6               	fcall	_BCD_2_DEC
  9490  00B8  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9491  00BD  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9492  00BE  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9493  00BF  087D               	bsf	status, 5	;RP0=1, select bank1
  9494  00C0  1683               	bcf	status, 6	;RP1=0, select bank1
  9495  00C1  1303               	movwf	(_min)^080h
  9496  00C2  00B8               	line	183
  9497                           ;mainM.c: 183:    I2C_Master_Stop();
  9498                           	fcall	_I2C_Master_Stop
  9499  00C3  160A  118A  2445  120A  118A  	line	185
  9500                           ;mainM.c: 185:    I2C_Master_Start();
  9501                           	fcall	_I2C_Master_Start
  9502  00C8  160A  118A  243C  120A  118A  	line	186
  9503                           ;mainM.c: 186:    I2C_Master_Write(0xD1);
  9504                           	movlw	0D1h
  9505  00CD  30D1               	bcf	status, 5	;RP0=0, select bank0
  9506  00CE  1283               	bcf	status, 6	;RP1=0, select bank0
  9507  00CF  1303               	movwf	(I2C_Master_Write@d)
  9508  00D0  00A0               	movlw	0
  9509  00D1  3000               	movwf	((I2C_Master_Write@d))+1
  9510  00D2  00A1               	fcall	_I2C_Master_Write
  9511  00D3  160A  118A  244E  120A  118A  	line	187
  9512                           ;mainM.c: 187:    hour = BCD_2_DEC(I2C_Master_Read(0));
  9513                           	movlw	0
  9514  00D8  3000               	movwf	(I2C_Master_Read@a)
  9515  00D9  00F0               	movwf	(I2C_Master_Read@a+1)
  9516  00DA  00F1               	fcall	_I2C_Master_Read
  9517  00DB  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9518  00E0  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9519  00E1  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9520  00E2  0870               	movwf	(BCD_2_DEC@to_convert)
  9521  00E3  00F6               	fcall	_BCD_2_DEC
  9522  00E4  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9523  00E9  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9524  00EA  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9525  00EB  087D               	bsf	status, 5	;RP0=1, select bank1
  9526  00EC  1683               	bcf	status, 6	;RP1=0, select bank1
  9527  00ED  1303               	movwf	(_hour)^080h
  9528  00EE  00B7               	line	188
  9529                           ;mainM.c: 188:    I2C_Master_Stop();
  9530                           	fcall	_I2C_Master_Stop
  9531  00EF  160A  118A  2445  120A  118A  	line	190
  9532                           ;mainM.c: 190:    I2C_Master_Start();
  9533                           	fcall	_I2C_Master_Start
  9534  00F4  160A  118A  243C  120A  118A  	line	191
  9535                           ;mainM.c: 191:    I2C_Master_Write(0xD1);
  9536                           	movlw	0D1h
  9537  00F9  30D1               	bcf	status, 5	;RP0=0, select bank0
  9538  00FA  1283               	bcf	status, 6	;RP1=0, select bank0
  9539  00FB  1303               	movwf	(I2C_Master_Write@d)
  9540  00FC  00A0               	movlw	0
  9541  00FD  3000               	movwf	((I2C_Master_Write@d))+1
  9542  00FE  00A1               	fcall	_I2C_Master_Write
  9543  00FF  160A  118A  244E  120A  118A  	line	192
  9544                           ;mainM.c: 192:    hour = BCD_2_DEC(I2C_Master_Read(0));
  9545                           	movlw	0
  9546  0104  3000               	movwf	(I2C_Master_Read@a)
  9547  0105  00F0               	movwf	(I2C_Master_Read@a+1)
  9548  0106  00F1               	fcall	_I2C_Master_Read
  9549  0107  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9550  010C  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9551  010D  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9552  010E  0870               	movwf	(BCD_2_DEC@to_convert)
  9553  010F  00F6               	fcall	_BCD_2_DEC
  9554  0110  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9555  0115  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9556  0116  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9557  0117  087D               	bsf	status, 5	;RP0=1, select bank1
  9558  0118  1683               	bcf	status, 6	;RP1=0, select bank1
  9559  0119  1303               	movwf	(_hour)^080h
  9560  011A  00B7               	line	193
  9561                           ;mainM.c: 193:    I2C_Master_Stop();
  9562                           	fcall	_I2C_Master_Stop
  9563  011B  160A  118A  2445  120A  118A  	line	195
  9564                           ;mainM.c: 195:    I2C_Master_Start();
  9565                           	fcall	_I2C_Master_Start
  9566  0120  160A  118A  243C  120A  118A  	line	196
  9567                           ;mainM.c: 196:    I2C_Master_Write(0xD1);
  9568                           	movlw	0D1h
  9569  0125  30D1               	bcf	status, 5	;RP0=0, select bank0
  9570  0126  1283               	bcf	status, 6	;RP1=0, select bank0
  9571  0127  1303               	movwf	(I2C_Master_Write@d)
  9572  0128  00A0               	movlw	0
  9573  0129  3000               	movwf	((I2C_Master_Write@d))+1
  9574  012A  00A1               	fcall	_I2C_Master_Write
  9575  012B  160A  118A  244E  120A  118A  	line	197
  9576                           ;mainM.c: 197:    date = BCD_2_DEC(I2C_Master_Read(0));
  9577                           	movlw	0
  9578  0130  3000               	movwf	(I2C_Master_Read@a)
  9579  0131  00F0               	movwf	(I2C_Master_Read@a+1)
  9580  0132  00F1               	fcall	_I2C_Master_Read
  9581  0133  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9582  0138  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9583  0139  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9584  013A  0870               	movwf	(BCD_2_DEC@to_convert)
  9585  013B  00F6               	fcall	_BCD_2_DEC
  9586  013C  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9587  0141  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9588  0142  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9589  0143  087D               	bsf	status, 5	;RP0=1, select bank1
  9590  0144  1683               	bcf	status, 6	;RP1=0, select bank1
  9591  0145  1303               	movwf	(_date)^080h
  9592  0146  00B6               	line	198
  9593                           ;mainM.c: 198:    I2C_Master_Stop();
  9594                           	fcall	_I2C_Master_Stop
  9595  0147  160A  118A  2445  120A  118A  	line	200
  9596                           ;mainM.c: 200:    I2C_Master_Start();
  9597                           	fcall	_I2C_Master_Start
  9598  014C  160A  118A  243C  120A  118A  	line	201
  9599                           ;mainM.c: 201:    I2C_Master_Write(0xD1);
  9600                           	movlw	0D1h
  9601  0151  30D1               	bcf	status, 5	;RP0=0, select bank0
  9602  0152  1283               	bcf	status, 6	;RP1=0, select bank0
  9603  0153  1303               	movwf	(I2C_Master_Write@d)
  9604  0154  00A0               	movlw	0
  9605  0155  3000               	movwf	((I2C_Master_Write@d))+1
  9606  0156  00A1               	fcall	_I2C_Master_Write
  9607  0157  160A  118A  244E  120A  118A  	line	202
  9608                           ;mainM.c: 202:    month = BCD_2_DEC(I2C_Master_Read(0));
  9609                           	movlw	0
  9610  015C  3000               	movwf	(I2C_Master_Read@a)
  9611  015D  00F0               	movwf	(I2C_Master_Read@a+1)
  9612  015E  00F1               	fcall	_I2C_Master_Read
  9613  015F  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9614  0164  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9615  0165  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9616  0166  0870               	movwf	(BCD_2_DEC@to_convert)
  9617  0167  00F6               	fcall	_BCD_2_DEC
  9618  0168  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9619  016D  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9620  016E  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9621  016F  087D               	bsf	status, 5	;RP0=1, select bank1
  9622  0170  1683               	bcf	status, 6	;RP1=0, select bank1
  9623  0171  1303               	movwf	(_month)^080h
  9624  0172  00B5               	line	203
  9625                           ;mainM.c: 203:    I2C_Master_Stop();
  9626                           	fcall	_I2C_Master_Stop
  9627  0173  160A  118A  2445  120A  118A  	line	205
  9628                           ;mainM.c: 205:    I2C_Master_Start();
  9629                           	fcall	_I2C_Master_Start
  9630  0178  160A  118A  243C  120A  118A  	line	206
  9631                           ;mainM.c: 206:    I2C_Master_Write(0xD1);
  9632                           	movlw	0D1h
  9633  017D  30D1               	bcf	status, 5	;RP0=0, select bank0
  9634  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  9635  017F  1303               	movwf	(I2C_Master_Write@d)
  9636  0180  00A0               	movlw	0
  9637  0181  3000               	movwf	((I2C_Master_Write@d))+1
  9638  0182  00A1               	fcall	_I2C_Master_Write
  9639  0183  160A  118A  244E  120A  118A  	line	207
  9640                           ;mainM.c: 207:    year = BCD_2_DEC(I2C_Master_Read(0));
  9641                           	movlw	0
  9642  0188  3000               	movwf	(I2C_Master_Read@a)
  9643  0189  00F0               	movwf	(I2C_Master_Read@a+1)
  9644  018A  00F1               	fcall	_I2C_Master_Read
  9645  018B  160A  118A  254C  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  9646  0190  0871               	movwf	(BCD_2_DEC@to_convert+1)
  9647  0191  00F7               	movf	(0+(?_I2C_Master_Read)),w
  9648  0192  0870               	movwf	(BCD_2_DEC@to_convert)
  9649  0193  00F6               	fcall	_BCD_2_DEC
  9650  0194  160A  118A  24D4  120A  118A  	movf	(0+(?_BCD_2_DEC)),w
  9651  0199  0876               	movwf	(??_Update_Current_Date_Time+0)+0
  9652  019A  00FD               	movf	(??_Update_Current_Date_Time+0)+0,w
  9653  019B  087D               	bsf	status, 5	;RP0=1, select bank1
  9654  019C  1683               	bcf	status, 6	;RP1=0, select bank1
  9655  019D  1303               	movwf	(_year)^080h
  9656  019E  00B4               	line	208
  9657                           ;mainM.c: 208:    I2C_Master_Stop();
  9658                           	fcall	_I2C_Master_Stop
  9659  019F  160A  118A  2445  120A  118A  	line	211
  9660                           ;mainM.c: 211:     I2C_Master_Start();
  9661                           	fcall	_I2C_Master_Start
  9662  01A4  160A  118A  243C  120A  118A  	line	212
  9663                           ;mainM.c: 212:     I2C_Master_Write(0xD1);
  9664                           	movlw	0D1h
  9665  01A9  30D1               	bcf	status, 5	;RP0=0, select bank0
  9666  01AA  1283               	bcf	status, 6	;RP1=0, select bank0
  9667  01AB  1303               	movwf	(I2C_Master_Write@d)
  9668  01AC  00A0               	movlw	0
  9669  01AD  3000               	movwf	((I2C_Master_Write@d))+1
  9670  01AE  00A1               	fcall	_I2C_Master_Write
  9671  01AF  160A  118A  244E  120A  118A  	line	213
  9672                           ;mainM.c: 213:     I2C_Master_Read(0);
  9673                           	movlw	0
  9674  01B4  3000               	movwf	(I2C_Master_Read@a)
  9675  01B5  00F0               	movwf	(I2C_Master_Read@a+1)
  9676  01B6  00F1               	fcall	_I2C_Master_Read
  9677  01B7  160A  118A  254C  120A  118A  	line	214
  9678                           ;mainM.c: 214:     I2C_Master_Stop();
  9679                           	fcall	_I2C_Master_Stop
  9680  01BC  160A  118A  2445  120A  118A  	line	216
  9681                           	
  9682                           l106:	
  9683  01C1                     	return
  9684  01C1  0008               	opt stack 0
  9685                           GLOBAL	__end_of_Update_Current_Date_Time
  9686                           	__end_of_Update_Current_Date_Time:
  9687  01C2                     	signat	_Update_Current_Date_Time,89
  9688                           	global	_I2C_Master_Read
  9689                           
  9690 ;; *************** function _I2C_Master_Read *****************
  9691 ;; Defined at:
  9692 ;;		line 74 in file "I2C.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  a               2    0[COMMON] unsigned short 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  temp            2    4[COMMON] unsigned short 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  2    0[COMMON] unsigned short 
  9699 ;; Registers used:
  9700 ;;		wreg, status,2, status,0, pclath, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9706 ;;      Params:         2       0       0       0       0
  9707 ;;      Locals:         2       0       0       0       0
  9708 ;;      Temps:          2       0       0       0       0
  9709 ;;      Totals:         6       0       0       0       0
  9710 ;;Total ram usage:        6 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    1
  9713 ;; This function calls:
  9714 ;;		_I2C_Master_Wait
  9715 ;; This function is called by:
  9716 ;;		_main
  9717 ;;		_Update_Current_Date_Time
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9721                           	file	"I2C.c"
  9722                           	line	74
  9723                           global __ptext23
  9724                           __ptext23:	;psect for function _I2C_Master_Read
  9725  154C                     psect	text23
  9726                           	file	"I2C.c"
  9727                           	line	74
  9728                           	global	__size_of_I2C_Master_Read
  9729                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  9730  002F                     	
  9731                           _I2C_Master_Read:	
  9732  154C                     ;incstack = 0
  9733                           	opt	stack 5
  9734                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9735                           	line	77
  9736                           	
  9737                           l2156:	
  9738  154C                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  9739                           	fcall	_I2C_Master_Wait
  9740  154C  160A  118A  2458  160A  118A  	line	78
  9741                           	
  9742                           l2158:	
  9743  1551                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  9744                           	bsf	status, 5	;RP0=1, select bank1
  9745  1551  1683               	bcf	status, 6	;RP1=0, select bank1
  9746  1552  1303               	bsf	(145)^080h,3	;volatile
  9747  1553  1591               	line	79
  9748                           ;I2C.c: 79:     I2C_Master_Wait();
  9749                           	fcall	_I2C_Master_Wait
  9750  1554  160A  118A  2458  160A  118A  	line	80
  9751                           	
  9752                           l2160:	
  9753  1559                     ;I2C.c: 80:     temp = SSPBUF;
  9754                           	bcf	status, 5	;RP0=0, select bank0
  9755  1559  1283               	bcf	status, 6	;RP1=0, select bank0
  9756  155A  1303               	movf	(19),w	;volatile
  9757  155B  0813               	movwf	(??_I2C_Master_Read+0)+0
  9758  155C  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  9759  155D  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  9760  155E  0872               	movwf	(I2C_Master_Read@temp)
  9761  155F  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  9762  1560  0873               	movwf	(I2C_Master_Read@temp+1)
  9763  1561  00F5               	line	81
  9764                           	
  9765                           l2162:	
  9766  1562                     ;I2C.c: 81:     I2C_Master_Wait();
  9767                           	fcall	_I2C_Master_Wait
  9768  1562  160A  118A  2458  160A  118A  	line	82
  9769                           	
  9770                           l2164:	
  9771  1567                     ;I2C.c: 82:     if(a == 1){
  9772                           		decf	((I2C_Master_Read@a)),w
  9773  1567  0370               iorwf	((I2C_Master_Read@a+1)),w
  9774  1568  0471               	btfss	status,2
  9775  1569  1D03               	goto	u2581
  9776  156A  2D6C               	goto	u2580
  9777  156B  2D6D               u2581:
  9778  156C                     	goto	l156
  9779  156C  2D71               u2580:
  9780  156D                     	line	83
  9781                           	
  9782                           l2166:	
  9783  156D                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  9784                           	bsf	status, 5	;RP0=1, select bank1
  9785  156D  1683               	bcf	status, 6	;RP1=0, select bank1
  9786  156E  1303               	bcf	(145)^080h,5	;volatile
  9787  156F  1291               	line	84
  9788                           ;I2C.c: 84:     }else{
  9789                           	goto	l157
  9790  1570  2D74               	
  9791                           l156:	
  9792  1571                     	line	85
  9793                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  9794                           	bsf	status, 5	;RP0=1, select bank1
  9795  1571  1683               	bcf	status, 6	;RP1=0, select bank1
  9796  1572  1303               	bsf	(145)^080h,5	;volatile
  9797  1573  1691               	line	86
  9798                           ;I2C.c: 86:     }
  9799                           	
  9800                           l157:	
  9801  1574                     	line	87
  9802                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  9803                           	bsf	(145)^080h,4	;volatile
  9804  1574  1611               	line	88
  9805                           	
  9806                           l2168:	
  9807  1575                     ;I2C.c: 88:     return temp;
  9808                           	movf	(I2C_Master_Read@temp+1),w
  9809  1575  0875               	movwf	(?_I2C_Master_Read+1)
  9810  1576  00F1               	movf	(I2C_Master_Read@temp),w
  9811  1577  0874               	movwf	(?_I2C_Master_Read)
  9812  1578  00F0               	goto	l158
  9813  1579  2D7A               	
  9814                           l2170:	
  9815  157A                     	line	89
  9816                           	
  9817                           l158:	
  9818  157A                     	return
  9819  157A  0008               	opt stack 0
  9820                           GLOBAL	__end_of_I2C_Master_Read
  9821                           	__end_of_I2C_Master_Read:
  9822  157B                     	signat	_I2C_Master_Read,4218
  9823                           	global	_BCD_2_DEC
  9824                           
  9825 ;; *************** function _BCD_2_DEC *****************
  9826 ;; Defined at:
  9827 ;;		line 141 in file "mainM.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  to_convert      2    6[COMMON] int 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  2    6[COMMON] int 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2, status,0, pclath, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9841 ;;      Params:         2       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0
  9843 ;;      Temps:          2       0       0       0       0
  9844 ;;      Totals:         4       0       0       0       0
  9845 ;;Total ram usage:        4 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    1
  9848 ;; This function calls:
  9849 ;;		___wmul
  9850 ;; This function is called by:
  9851 ;;		_Update_Current_Date_Time
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9855                           	file	"mainM.c"
  9856                           	line	141
  9857                           global __ptext24
  9858                           __ptext24:	;psect for function _BCD_2_DEC
  9859  14D4                     psect	text24
  9860                           	file	"mainM.c"
  9861                           	line	141
  9862                           	global	__size_of_BCD_2_DEC
  9863                           	__size_of_BCD_2_DEC	equ	__end_of_BCD_2_DEC-_BCD_2_DEC
  9864  0026                     	
  9865                           _BCD_2_DEC:	
  9866  14D4                     ;incstack = 0
  9867                           	opt	stack 5
  9868                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  9869                           	line	143
  9870                           	
  9871                           l2218:	
  9872  14D4                     ;mainM.c: 141: int BCD_2_DEC(int to_convert);mainM.c: 142: {;mainM.c: 143:    return (to
                                 _convert >> 4) * 10 + (to_convert & 0x0F);
  9873                           	movlw	0Fh
  9874  14D4  300F               	andwf	(BCD_2_DEC@to_convert),w
  9875  14D5  0576               	movwf	(??_BCD_2_DEC+0)+0
  9876  14D6  00F8               	movlw	0
  9877  14D7  3000               	andwf	(BCD_2_DEC@to_convert+1),w
  9878  14D8  0577               	movwf	1+(??_BCD_2_DEC+0)+0
  9879  14D9  00F9               	swapf	(BCD_2_DEC@to_convert),w
  9880  14DA  0E76               	andlw	0fh
  9881  14DB  390F               	movwf	(___wmul@multiplier)
  9882  14DC  00F0               	swapf	(BCD_2_DEC@to_convert+1),w
  9883  14DD  0E77               	andlw	0f0h
  9884  14DE  39F0               	iorwf	(___wmul@multiplier)+0
  9885  14DF  04F0               	swapf	(BCD_2_DEC@to_convert+1),w
  9886  14E0  0E77               	andlw	0fh
  9887  14E1  390F               	movwf	(___wmul@multiplier)+1
  9888  14E2  00F1               	movlw	0f0h
  9889  14E3  30F0               	btfss	(___wmul@multiplier)+1,3
  9890  14E4  1DF1               	movlw	0
  9891  14E5  3000               	iorwf	(___wmul@multiplier)+1
  9892  14E6  04F1               	movlw	0Ah
  9893  14E7  300A               	movwf	(___wmul@multiplicand)
  9894  14E8  00F2               	movlw	0
  9895  14E9  3000               	movwf	((___wmul@multiplicand))+1
  9896  14EA  00F3               	fcall	___wmul
  9897  14EB  160A  118A  24FA  160A  118A  	movf	0+(??_BCD_2_DEC+0)+0,w
  9898  14F0  0878               	addwf	(0+(?___wmul)),w
  9899  14F1  0770               	movwf	(?_BCD_2_DEC)
  9900  14F2  00F6               	movf	1+(??_BCD_2_DEC+0)+0,w
  9901  14F3  0879               	skipnc
  9902  14F4  1803               	incf	1+(??_BCD_2_DEC+0)+0,w
  9903  14F5  0A79               	addwf	(1+(?___wmul)),w
  9904  14F6  0771               	movwf	1+(?_BCD_2_DEC)
  9905  14F7  00F7               	goto	l97
  9906  14F8  2CF9               	
  9907                           l2220:	
  9908  14F9                     	line	144
  9909                           	
  9910                           l97:	
  9911  14F9                     	return
  9912  14F9  0008               	opt stack 0
  9913                           GLOBAL	__end_of_BCD_2_DEC
  9914                           	__end_of_BCD_2_DEC:
  9915  14FA                     	signat	_BCD_2_DEC,4218
  9916                           	global	___wmul
  9917                           
  9918 ;; *************** function ___wmul *****************
  9919 ;; Defined at:
  9920 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;  multiplier      2    0[COMMON] unsigned int 
  9923 ;;  multiplicand    2    2[COMMON] unsigned int 
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  product         2    4[COMMON] unsigned int 
  9926 ;; Return value:  Size  Location     Type
  9927 ;;                  2    0[COMMON] unsigned int 
  9928 ;; Registers used:
  9929 ;;		wreg, status,2, status,0
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9935 ;;      Params:         4       0       0       0       0
  9936 ;;      Locals:         2       0       0       0       0
  9937 ;;      Temps:          0       0       0       0       0
  9938 ;;      Totals:         6       0       0       0       0
  9939 ;;Total ram usage:        6 bytes
  9940 ;; Hardware stack levels used:    1
  9941 ;; This function calls:
  9942 ;;		Nothing
  9943 ;; This function is called by:
  9944 ;;		_BCD_2_DEC
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
  9948                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  9949                           	line	15
  9950                           global __ptext25
  9951                           __ptext25:	;psect for function ___wmul
  9952  14FA                     psect	text25
  9953                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  9954                           	line	15
  9955                           	global	__size_of___wmul
  9956                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  9957  0028                     	
  9958                           ___wmul:	
  9959  14FA                     ;incstack = 0
  9960                           	opt	stack 5
  9961                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9962                           	line	43
  9963                           	
  9964                           l2028:	
  9965  14FA                     	clrf	(___wmul@product)
  9966  14FA  01F4               	clrf	(___wmul@product+1)
  9967  14FB  01F5               	goto	l2030
  9968  14FC  2CFD               	line	44
  9969                           	
  9970                           l332:	
  9971  14FD                     	line	45
  9972                           	
  9973                           l2030:	
  9974  14FD                     	btfss	(___wmul@multiplier),(0)&7
  9975  14FD  1C70               	goto	u2281
  9976  14FE  2D00               	goto	u2280
  9977  14FF  2D01               u2281:
  9978  1500                     	goto	l333
  9979  1500  2D07               u2280:
  9980  1501                     	line	46
  9981                           	
  9982                           l2032:	
  9983  1501                     	movf	(___wmul@multiplicand),w
  9984  1501  0872               	addwf	(___wmul@product),f
  9985  1502  07F4               	skipnc
  9986  1503  1803               	incf	(___wmul@product+1),f
  9987  1504  0AF5               	movf	(___wmul@multiplicand+1),w
  9988  1505  0873               	addwf	(___wmul@product+1),f
  9989  1506  07F5               	
  9990                           l333:	
  9991  1507                     	line	47
  9992                           	movlw	01h
  9993  1507  3001               	
  9994                           u2295:
  9995  1508                     	clrc
  9996  1508  1003               	rlf	(___wmul@multiplicand),f
  9997  1509  0DF2               	rlf	(___wmul@multiplicand+1),f
  9998  150A  0DF3               	addlw	-1
  9999  150B  3EFF               	skipz
 10000  150C  1D03               	goto	u2295
 10001  150D  2D08               	line	48
 10002                           	
 10003                           l2034:	
 10004  150E                     	movlw	01h
 10005  150E  3001               	
 10006                           u2305:
 10007  150F                     	clrc
 10008  150F  1003               	rrf	(___wmul@multiplier+1),f
 10009  1510  0CF1               	rrf	(___wmul@multiplier),f
 10010  1511  0CF0               	addlw	-1
 10011  1512  3EFF               	skipz
 10012  1513  1D03               	goto	u2305
 10013  1514  2D0F               	line	49
 10014                           	
 10015                           l2036:	
 10016  1515                     	movf	((___wmul@multiplier)),w
 10017  1515  0870               iorwf	((___wmul@multiplier+1)),w
 10018  1516  0471               	btfss	status,2
 10019  1517  1D03               	goto	u2311
 10020  1518  2D1A               	goto	u2310
 10021  1519  2D1B               u2311:
 10022  151A                     	goto	l2030
 10023  151A  2CFD               u2310:
 10024  151B                     	goto	l2038
 10025  151B  2D1C               	
 10026                           l334:	
 10027  151C                     	line	52
 10028                           	
 10029                           l2038:	
 10030  151C                     	movf	(___wmul@product+1),w
 10031  151C  0875               	movwf	(?___wmul+1)
 10032  151D  00F1               	movf	(___wmul@product),w
 10033  151E  0874               	movwf	(?___wmul)
 10034  151F  00F0               	goto	l335
 10035  1520  2D21               	
 10036                           l2040:	
 10037  1521                     	line	53
 10038                           	
 10039                           l335:	
 10040  1521                     	return
 10041  1521  0008               	opt stack 0
 10042                           GLOBAL	__end_of___wmul
 10043                           	__end_of___wmul:
 10044  1522                     	signat	___wmul,8314
 10045                           	global	_Config_Time_Date
 10046                           
 10047 ;; *************** function _Config_Time_Date *****************
 10048 ;; Defined at:
 10049 ;;		line 151 in file "mainM.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;		None
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  1    wreg      void 
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0, pclath, cstack
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10063 ;;      Params:         0       0       0       0       0
 10064 ;;      Locals:         0       0       0       0       0
 10065 ;;      Temps:          0       2       0       0       0
 10066 ;;      Totals:         0       2       0       0       0
 10067 ;;Total ram usage:        2 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    2
 10070 ;; This function calls:
 10071 ;;		_DEC_2_BCD
 10072 ;;		_I2C_Master_Start
 10073 ;;		_I2C_Master_Stop
 10074 ;;		_I2C_Master_Write
 10075 ;; This function is called by:
 10076 ;;		_main
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 10080                           	file	"mainM.c"
 10081                           	line	151
 10082                           global __ptext26
 10083                           __ptext26:	;psect for function _Config_Time_Date
 10084  0A2B                     psect	text26
 10085                           	file	"mainM.c"
 10086                           	line	151
 10087                           	global	__size_of_Config_Time_Date
 10088                           	__size_of_Config_Time_Date	equ	__end_of_Config_Time_Date-_Config_Time_Date
 10089  00CD                     	
 10090                           _Config_Time_Date:	
 10091  0A2B                     ;incstack = 0
 10092                           	opt	stack 5
 10093                           ; Regs used in _Config_Time_Date: [wreg+status,2+status,0+pclath+cstack]
 10094                           	line	153
 10095                           	
 10096                           l2272:	
 10097  0A2B                     ;mainM.c: 153:    I2C_Master_Start();
 10098                           	fcall	_I2C_Master_Start
 10099  0A2B  160A  118A  243C  120A  158A  	line	154
 10100                           ;mainM.c: 154:    I2C_Master_Write(0xD0);
 10101                           	movlw	0D0h
 10102  0A30  30D0               	bcf	status, 5	;RP0=0, select bank0
 10103  0A31  1283               	bcf	status, 6	;RP1=0, select bank0
 10104  0A32  1303               	movwf	(I2C_Master_Write@d)
 10105  0A33  00A0               	movlw	0
 10106  0A34  3000               	movwf	((I2C_Master_Write@d))+1
 10107  0A35  00A1               	fcall	_I2C_Master_Write
 10108  0A36  160A  118A  244E  120A  158A  	line	155
 10109                           ;mainM.c: 155:    I2C_Master_Write(0);
 10110                           	movlw	0
 10111  0A3B  3000               	bcf	status, 5	;RP0=0, select bank0
 10112  0A3C  1283               	bcf	status, 6	;RP1=0, select bank0
 10113  0A3D  1303               	movwf	(I2C_Master_Write@d)
 10114  0A3E  00A0               	movwf	(I2C_Master_Write@d+1)
 10115  0A3F  00A1               	fcall	_I2C_Master_Write
 10116  0A40  160A  118A  244E  120A  158A  	line	156
 10117                           ;mainM.c: 156:    I2C_Master_Write(DEC_2_BCD(sec));
 10118                           	bsf	status, 5	;RP0=1, select bank1
 10119  0A45  1683               	bcf	status, 6	;RP1=0, select bank1
 10120  0A46  1303               	movf	(_sec)^080h,w
 10121  0A47  0839               	bcf	status, 5	;RP0=0, select bank0
 10122  0A48  1283               	bcf	status, 6	;RP1=0, select bank0
 10123  0A49  1303               	movwf	(??_Config_Time_Date+0)+0
 10124  0A4A  00A2               	clrf	(??_Config_Time_Date+0)+0+1
 10125  0A4B  01A3               	movf	0+(??_Config_Time_Date+0)+0,w
 10126  0A4C  0822               	movwf	(DEC_2_BCD@to_convert)
 10127  0A4D  00F9               	movf	1+(??_Config_Time_Date+0)+0,w
 10128  0A4E  0823               	movwf	(DEC_2_BCD@to_convert+1)
 10129  0A4F  00FA               	fcall	_DEC_2_BCD
 10130  0A50  160A  118A  257B  120A  158A  	movf	(1+(?_DEC_2_BCD)),w
 10131  0A55  087A               	bcf	status, 5	;RP0=0, select bank0
 10132  0A56  1283               	bcf	status, 6	;RP1=0, select bank0
 10133  0A57  1303               	movwf	(I2C_Master_Write@d+1)
 10134  0A58  00A1               	movf	(0+(?_DEC_2_BCD)),w
 10135  0A59  0879               	movwf	(I2C_Master_Write@d)
 10136  0A5A  00A0               	fcall	_I2C_Master_Write
 10137  0A5B  160A  118A  244E  120A  158A  	line	157
 10138                           ;mainM.c: 157:    I2C_Master_Write(DEC_2_BCD(min));
 10139                           	bsf	status, 5	;RP0=1, select bank1
 10140  0A60  1683               	bcf	status, 6	;RP1=0, select bank1
 10141  0A61  1303               	movf	(_min)^080h,w
 10142  0A62  0838               	bcf	status, 5	;RP0=0, select bank0
 10143  0A63  1283               	bcf	status, 6	;RP1=0, select bank0
 10144  0A64  1303               	movwf	(??_Config_Time_Date+0)+0
 10145  0A65  00A2               	clrf	(??_Config_Time_Date+0)+0+1
 10146  0A66  01A3               	movf	0+(??_Config_Time_Date+0)+0,w
 10147  0A67  0822               	movwf	(DEC_2_BCD@to_convert)
 10148  0A68  00F9               	movf	1+(??_Config_Time_Date+0)+0,w
 10149  0A69  0823               	movwf	(DEC_2_BCD@to_convert+1)
 10150  0A6A  00FA               	fcall	_DEC_2_BCD
 10151  0A6B  160A  118A  257B  120A  158A  	movf	(1+(?_DEC_2_BCD)),w
 10152  0A70  087A               	bcf	status, 5	;RP0=0, select bank0
 10153  0A71  1283               	bcf	status, 6	;RP1=0, select bank0
 10154  0A72  1303               	movwf	(I2C_Master_Write@d+1)
 10155  0A73  00A1               	movf	(0+(?_DEC_2_BCD)),w
 10156  0A74  0879               	movwf	(I2C_Master_Write@d)
 10157  0A75  00A0               	fcall	_I2C_Master_Write
 10158  0A76  160A  118A  244E  120A  158A  	line	158
 10159                           ;mainM.c: 158:    I2C_Master_Write(DEC_2_BCD(hour));
 10160                           	bsf	status, 5	;RP0=1, select bank1
 10161  0A7B  1683               	bcf	status, 6	;RP1=0, select bank1
 10162  0A7C  1303               	movf	(_hour)^080h,w
 10163  0A7D  0837               	bcf	status, 5	;RP0=0, select bank0
 10164  0A7E  1283               	bcf	status, 6	;RP1=0, select bank0
 10165  0A7F  1303               	movwf	(??_Config_Time_Date+0)+0
 10166  0A80  00A2               	clrf	(??_Config_Time_Date+0)+0+1
 10167  0A81  01A3               	movf	0+(??_Config_Time_Date+0)+0,w
 10168  0A82  0822               	movwf	(DEC_2_BCD@to_convert)
 10169  0A83  00F9               	movf	1+(??_Config_Time_Date+0)+0,w
 10170  0A84  0823               	movwf	(DEC_2_BCD@to_convert+1)
 10171  0A85  00FA               	fcall	_DEC_2_BCD
 10172  0A86  160A  118A  257B  120A  158A  	movf	(1+(?_DEC_2_BCD)),w
 10173  0A8B  087A               	bcf	status, 5	;RP0=0, select bank0
 10174  0A8C  1283               	bcf	status, 6	;RP1=0, select bank0
 10175  0A8D  1303               	movwf	(I2C_Master_Write@d+1)
 10176  0A8E  00A1               	movf	(0+(?_DEC_2_BCD)),w
 10177  0A8F  0879               	movwf	(I2C_Master_Write@d)
 10178  0A90  00A0               	fcall	_I2C_Master_Write
 10179  0A91  160A  118A  244E  120A  158A  	line	159
 10180                           ;mainM.c: 159:    I2C_Master_Write(1);
 10181                           	movlw	01h
 10182  0A96  3001               	bcf	status, 5	;RP0=0, select bank0
 10183  0A97  1283               	bcf	status, 6	;RP1=0, select bank0
 10184  0A98  1303               	movwf	(I2C_Master_Write@d)
 10185  0A99  00A0               	movlw	0
 10186  0A9A  3000               	movwf	((I2C_Master_Write@d))+1
 10187  0A9B  00A1               	fcall	_I2C_Master_Write
 10188  0A9C  160A  118A  244E  120A  158A  	line	160
 10189                           ;mainM.c: 160:    I2C_Master_Write(DEC_2_BCD(date));
 10190                           	bsf	status, 5	;RP0=1, select bank1
 10191  0AA1  1683               	bcf	status, 6	;RP1=0, select bank1
 10192  0AA2  1303               	movf	(_date)^080h,w
 10193  0AA3  0836               	bcf	status, 5	;RP0=0, select bank0
 10194  0AA4  1283               	bcf	status, 6	;RP1=0, select bank0
 10195  0AA5  1303               	movwf	(??_Config_Time_Date+0)+0
 10196  0AA6  00A2               	clrf	(??_Config_Time_Date+0)+0+1
 10197  0AA7  01A3               	movf	0+(??_Config_Time_Date+0)+0,w
 10198  0AA8  0822               	movwf	(DEC_2_BCD@to_convert)
 10199  0AA9  00F9               	movf	1+(??_Config_Time_Date+0)+0,w
 10200  0AAA  0823               	movwf	(DEC_2_BCD@to_convert+1)
 10201  0AAB  00FA               	fcall	_DEC_2_BCD
 10202  0AAC  160A  118A  257B  120A  158A  	movf	(1+(?_DEC_2_BCD)),w
 10203  0AB1  087A               	bcf	status, 5	;RP0=0, select bank0
 10204  0AB2  1283               	bcf	status, 6	;RP1=0, select bank0
 10205  0AB3  1303               	movwf	(I2C_Master_Write@d+1)
 10206  0AB4  00A1               	movf	(0+(?_DEC_2_BCD)),w
 10207  0AB5  0879               	movwf	(I2C_Master_Write@d)
 10208  0AB6  00A0               	fcall	_I2C_Master_Write
 10209  0AB7  160A  118A  244E  120A  158A  	line	161
 10210                           ;mainM.c: 161:    I2C_Master_Write(DEC_2_BCD(month));
 10211                           	bsf	status, 5	;RP0=1, select bank1
 10212  0ABC  1683               	bcf	status, 6	;RP1=0, select bank1
 10213  0ABD  1303               	movf	(_month)^080h,w
 10214  0ABE  0835               	bcf	status, 5	;RP0=0, select bank0
 10215  0ABF  1283               	bcf	status, 6	;RP1=0, select bank0
 10216  0AC0  1303               	movwf	(??_Config_Time_Date+0)+0
 10217  0AC1  00A2               	clrf	(??_Config_Time_Date+0)+0+1
 10218  0AC2  01A3               	movf	0+(??_Config_Time_Date+0)+0,w
 10219  0AC3  0822               	movwf	(DEC_2_BCD@to_convert)
 10220  0AC4  00F9               	movf	1+(??_Config_Time_Date+0)+0,w
 10221  0AC5  0823               	movwf	(DEC_2_BCD@to_convert+1)
 10222  0AC6  00FA               	fcall	_DEC_2_BCD
 10223  0AC7  160A  118A  257B  120A  158A  	movf	(1+(?_DEC_2_BCD)),w
 10224  0ACC  087A               	bcf	status, 5	;RP0=0, select bank0
 10225  0ACD  1283               	bcf	status, 6	;RP1=0, select bank0
 10226  0ACE  1303               	movwf	(I2C_Master_Write@d+1)
 10227  0ACF  00A1               	movf	(0+(?_DEC_2_BCD)),w
 10228  0AD0  0879               	movwf	(I2C_Master_Write@d)
 10229  0AD1  00A0               	fcall	_I2C_Master_Write
 10230  0AD2  160A  118A  244E  120A  158A  	line	162
 10231                           ;mainM.c: 162:    I2C_Master_Write(DEC_2_BCD(year));
 10232                           	bsf	status, 5	;RP0=1, select bank1
 10233  0AD7  1683               	bcf	status, 6	;RP1=0, select bank1
 10234  0AD8  1303               	movf	(_year)^080h,w
 10235  0AD9  0834               	bcf	status, 5	;RP0=0, select bank0
 10236  0ADA  1283               	bcf	status, 6	;RP1=0, select bank0
 10237  0ADB  1303               	movwf	(??_Config_Time_Date+0)+0
 10238  0ADC  00A2               	clrf	(??_Config_Time_Date+0)+0+1
 10239  0ADD  01A3               	movf	0+(??_Config_Time_Date+0)+0,w
 10240  0ADE  0822               	movwf	(DEC_2_BCD@to_convert)
 10241  0ADF  00F9               	movf	1+(??_Config_Time_Date+0)+0,w
 10242  0AE0  0823               	movwf	(DEC_2_BCD@to_convert+1)
 10243  0AE1  00FA               	fcall	_DEC_2_BCD
 10244  0AE2  160A  118A  257B  120A  158A  	movf	(1+(?_DEC_2_BCD)),w
 10245  0AE7  087A               	bcf	status, 5	;RP0=0, select bank0
 10246  0AE8  1283               	bcf	status, 6	;RP1=0, select bank0
 10247  0AE9  1303               	movwf	(I2C_Master_Write@d+1)
 10248  0AEA  00A1               	movf	(0+(?_DEC_2_BCD)),w
 10249  0AEB  0879               	movwf	(I2C_Master_Write@d)
 10250  0AEC  00A0               	fcall	_I2C_Master_Write
 10251  0AED  160A  118A  244E  120A  158A  	line	163
 10252                           ;mainM.c: 163:    I2C_Master_Stop();
 10253                           	fcall	_I2C_Master_Stop
 10254  0AF2  160A  118A  2445  120A  158A  	line	164
 10255                           	
 10256                           l103:	
 10257  0AF7                     	return
 10258  0AF7  0008               	opt stack 0
 10259                           GLOBAL	__end_of_Config_Time_Date
 10260                           	__end_of_Config_Time_Date:
 10261  0AF8                     	signat	_Config_Time_Date,89
 10262                           	global	_I2C_Master_Write
 10263                           
 10264 ;; *************** function _I2C_Master_Write *****************
 10265 ;; Defined at:
 10266 ;;		line 65 in file "I2C.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  d               2    0[BANK0 ] unsigned int 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0, pclath, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10280 ;;      Params:         0       2       0       0       0
 10281 ;;      Locals:         0       0       0       0       0
 10282 ;;      Temps:          0       0       0       0       0
 10283 ;;      Totals:         0       2       0       0       0
 10284 ;;Total ram usage:        2 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    1
 10287 ;; This function calls:
 10288 ;;		_I2C_Master_Wait
 10289 ;; This function is called by:
 10290 ;;		_main
 10291 ;;		_Config_Time_Date
 10292 ;;		_Update_Current_Date_Time
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 10296                           	file	"I2C.c"
 10297                           	line	65
 10298                           global __ptext27
 10299                           __ptext27:	;psect for function _I2C_Master_Write
 10300  144E                     psect	text27
 10301                           	file	"I2C.c"
 10302                           	line	65
 10303                           	global	__size_of_I2C_Master_Write
 10304                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
 10305  000A                     	
 10306                           _I2C_Master_Write:	
 10307  144E                     ;incstack = 0
 10308                           	opt	stack 5
 10309                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10310                           	line	67
 10311                           	
 10312                           l2152:	
 10313  144E                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
 10314                           	fcall	_I2C_Master_Wait
 10315  144E  160A  118A  2458  160A  118A  	line	68
 10316                           	
 10317                           l2154:	
 10318  1453                     ;I2C.c: 68:     SSPBUF = d;
 10319                           	bcf	status, 5	;RP0=0, select bank0
 10320  1453  1283               	bcf	status, 6	;RP1=0, select bank0
 10321  1454  1303               	movf	(I2C_Master_Write@d),w
 10322  1455  0820               	movwf	(19)	;volatile
 10323  1456  0093               	line	69
 10324                           	
 10325                           l153:	
 10326  1457                     	return
 10327  1457  0008               	opt stack 0
 10328                           GLOBAL	__end_of_I2C_Master_Write
 10329                           	__end_of_I2C_Master_Write:
 10330  1458                     	signat	_I2C_Master_Write,4217
 10331                           	global	_I2C_Master_Stop
 10332                           
 10333 ;; *************** function _I2C_Master_Stop *****************
 10334 ;; Defined at:
 10335 ;;		line 55 in file "I2C.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0, pclath, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10349 ;;      Params:         0       0       0       0       0
 10350 ;;      Locals:         0       0       0       0       0
 10351 ;;      Temps:          0       0       0       0       0
 10352 ;;      Totals:         0       0       0       0       0
 10353 ;;Total ram usage:        0 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    1
 10356 ;; This function calls:
 10357 ;;		_I2C_Master_Wait
 10358 ;; This function is called by:
 10359 ;;		_main
 10360 ;;		_Config_Time_Date
 10361 ;;		_Update_Current_Date_Time
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 10365                           	line	55
 10366                           global __ptext28
 10367                           __ptext28:	;psect for function _I2C_Master_Stop
 10368  1445                     psect	text28
 10369                           	file	"I2C.c"
 10370                           	line	55
 10371                           	global	__size_of_I2C_Master_Stop
 10372                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
 10373  0009                     	
 10374                           _I2C_Master_Stop:	
 10375  1445                     ;incstack = 0
 10376                           	opt	stack 5
 10377                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10378                           	line	57
 10379                           	
 10380                           l2172:	
 10381  1445                     ;I2C.c: 57:     I2C_Master_Wait();
 10382                           	fcall	_I2C_Master_Wait
 10383  1445  160A  118A  2458  160A  118A  	line	58
 10384                           	
 10385                           l2174:	
 10386  144A                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 10387                           	bsf	status, 5	;RP0=1, select bank1
 10388  144A  1683               	bcf	status, 6	;RP1=0, select bank1
 10389  144B  1303               	bsf	(145)^080h,2	;volatile
 10390  144C  1511               	line	59
 10391                           	
 10392                           l150:	
 10393  144D                     	return
 10394  144D  0008               	opt stack 0
 10395                           GLOBAL	__end_of_I2C_Master_Stop
 10396                           	__end_of_I2C_Master_Stop:
 10397  144E                     	signat	_I2C_Master_Stop,89
 10398                           	global	_I2C_Master_Start
 10399                           
 10400 ;; *************** function _I2C_Master_Start *****************
 10401 ;; Defined at:
 10402 ;;		line 39 in file "I2C.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;		None
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      void 
 10409 ;; Registers used:
 10410 ;;		wreg, status,2, status,0, pclath, cstack
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10416 ;;      Params:         0       0       0       0       0
 10417 ;;      Locals:         0       0       0       0       0
 10418 ;;      Temps:          0       0       0       0       0
 10419 ;;      Totals:         0       0       0       0       0
 10420 ;;Total ram usage:        0 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; Hardware stack levels required when called:    1
 10423 ;; This function calls:
 10424 ;;		_I2C_Master_Wait
 10425 ;; This function is called by:
 10426 ;;		_main
 10427 ;;		_Config_Time_Date
 10428 ;;		_Update_Current_Date_Time
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10432                           	line	39
 10433                           global __ptext29
 10434                           __ptext29:	;psect for function _I2C_Master_Start
 10435  143C                     psect	text29
 10436                           	file	"I2C.c"
 10437                           	line	39
 10438                           	global	__size_of_I2C_Master_Start
 10439                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
 10440  0009                     	
 10441                           _I2C_Master_Start:	
 10442  143C                     ;incstack = 0
 10443                           	opt	stack 5
 10444                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10445                           	line	41
 10446                           	
 10447                           l2148:	
 10448  143C                     ;I2C.c: 41:     I2C_Master_Wait();
 10449                           	fcall	_I2C_Master_Wait
 10450  143C  160A  118A  2458  160A  118A  	line	42
 10451                           	
 10452                           l2150:	
 10453  1441                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 10454                           	bsf	status, 5	;RP0=1, select bank1
 10455  1441  1683               	bcf	status, 6	;RP1=0, select bank1
 10456  1442  1303               	bsf	(145)^080h,0	;volatile
 10457  1443  1411               	line	43
 10458                           	
 10459                           l144:	
 10460  1444                     	return
 10461  1444  0008               	opt stack 0
 10462                           GLOBAL	__end_of_I2C_Master_Start
 10463                           	__end_of_I2C_Master_Start:
 10464  1445                     	signat	_I2C_Master_Start,89
 10465                           	global	_I2C_Master_Wait
 10466                           
 10467 ;; *************** function _I2C_Master_Wait *****************
 10468 ;; Defined at:
 10469 ;;		line 32 in file "I2C.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;		None
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;		None
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10483 ;;      Params:         0       0       0       0       0
 10484 ;;      Locals:         0       0       0       0       0
 10485 ;;      Temps:          0       0       0       0       0
 10486 ;;      Totals:         0       0       0       0       0
 10487 ;;Total ram usage:        0 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; This function calls:
 10490 ;;		Nothing
 10491 ;; This function is called by:
 10492 ;;		_I2C_Master_Start
 10493 ;;		_I2C_Master_Stop
 10494 ;;		_I2C_Master_Write
 10495 ;;		_I2C_Master_Read
 10496 ;;		_I2C_Master_RepeatedStart
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10500                           	line	32
 10501                           global __ptext30
 10502                           __ptext30:	;psect for function _I2C_Master_Wait
 10503  1458                     psect	text30
 10504                           	file	"I2C.c"
 10505                           	line	32
 10506                           	global	__size_of_I2C_Master_Wait
 10507                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
 10508  000F                     	
 10509                           _I2C_Master_Wait:	
 10510  1458                     ;incstack = 0
 10511                           	opt	stack 5
 10512                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10513                           	line	34
 10514                           	
 10515                           l1954:	
 10516  1458                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10517                           	goto	l138
 10518  1458  2C59               	
 10519                           l139:	
 10520  1459                     	
 10521                           l138:	
 10522  1459                     	bsf	status, 5	;RP0=1, select bank1
 10523  1459  1683               	bcf	status, 6	;RP1=0, select bank1
 10524  145A  1303               	btfsc	(148)^080h,(2)&7	;volatile
 10525  145B  1914               	goto	u2181
 10526  145C  2C5E               	goto	u2180
 10527  145D  2C5F               u2181:
 10528  145E                     	goto	l138
 10529  145E  2C59               u2180:
 10530  145F                     	
 10531                           l1956:	
 10532  145F                     	movf	(145)^080h,w	;volatile
 10533  145F  0811               	andlw	01Fh
 10534  1460  391F               	btfss	status,2
 10535  1461  1D03               	goto	u2191
 10536  1462  2C64               	goto	u2190
 10537  1463  2C65               u2191:
 10538  1464                     	goto	l138
 10539  1464  2C59               u2190:
 10540  1465                     	goto	l141
 10541  1465  2C66               	
 10542                           l140:	
 10543  1466                     	line	35
 10544                           	
 10545                           l141:	
 10546  1466                     	return
 10547  1466  0008               	opt stack 0
 10548                           GLOBAL	__end_of_I2C_Master_Wait
 10549                           	__end_of_I2C_Master_Wait:
 10550  1467                     	signat	_I2C_Master_Wait,89
 10551                           	global	_DEC_2_BCD
 10552                           
 10553 ;; *************** function _DEC_2_BCD *****************
 10554 ;; Defined at:
 10555 ;;		line 146 in file "mainM.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;  to_convert      2    9[COMMON] int 
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  2    9[COMMON] int 
 10562 ;; Registers used:
 10563 ;;		wreg, status,2, status,0, pclath, cstack
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10569 ;;      Params:         2       0       0       0       0
 10570 ;;      Locals:         0       0       0       0       0
 10571 ;;      Temps:          2       0       0       0       0
 10572 ;;      Totals:         4       0       0       0       0
 10573 ;;Total ram usage:        4 bytes
 10574 ;; Hardware stack levels used:    1
 10575 ;; Hardware stack levels required when called:    1
 10576 ;; This function calls:
 10577 ;;		___awdiv
 10578 ;;		___awmod
 10579 ;; This function is called by:
 10580 ;;		_Config_Time_Date
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10584                           	file	"mainM.c"
 10585                           	line	146
 10586                           global __ptext31
 10587                           __ptext31:	;psect for function _DEC_2_BCD
 10588  157B                     psect	text31
 10589                           	file	"mainM.c"
 10590                           	line	146
 10591                           	global	__size_of_DEC_2_BCD
 10592                           	__size_of_DEC_2_BCD	equ	__end_of_DEC_2_BCD-_DEC_2_BCD
 10593  0031                     	
 10594                           _DEC_2_BCD:	
 10595  157B                     ;incstack = 0
 10596                           	opt	stack 5
 10597                           ; Regs used in _DEC_2_BCD: [wreg+status,2+status,0+pclath+cstack]
 10598                           	line	148
 10599                           	
 10600                           l2222:	
 10601  157B                     ;mainM.c: 146: int DEC_2_BCD (int to_convert);mainM.c: 147: {;mainM.c: 148:    return ((
                                 to_convert / 10) << 4) + (to_convert % 10);
 10602                           	movlw	0Ah
 10603  157B  300A               	movwf	(___awdiv@divisor)
 10604  157C  00F0               	movlw	0
 10605  157D  3000               	movwf	((___awdiv@divisor))+1
 10606  157E  00F1               	movf	(DEC_2_BCD@to_convert+1),w
 10607  157F  087A               	movwf	(___awdiv@dividend+1)
 10608  1580  00F3               	movf	(DEC_2_BCD@to_convert),w
 10609  1581  0879               	movwf	(___awdiv@dividend)
 10610  1582  00F2               	fcall	___awdiv
 10611  1583  160A  118A  278F  160A  118A  	movf	(0+?___awdiv),w
 10612  1588  0870               	movwf	(??_DEC_2_BCD+0)+0
 10613  1589  00FB               	movf	(1+?___awdiv),w
 10614  158A  0871               	movwf	((??_DEC_2_BCD+0)+0+1)
 10615  158B  00FC               	swapf	(??_DEC_2_BCD+0)+0,f
 10616  158C  0EFB               	swapf	(??_DEC_2_BCD+0)+1,f
 10617  158D  0EFC               	movlw	0f0h
 10618  158E  30F0               	andwf	(??_DEC_2_BCD+0)+1,f
 10619  158F  05FC               	movf	(??_DEC_2_BCD+0)+0,w
 10620  1590  087B               	andlw	0fh
 10621  1591  390F               	iorwf	(??_DEC_2_BCD+0)+1,f
 10622  1592  04FC               	movlw	0f0h
 10623  1593  30F0               	andwf	(??_DEC_2_BCD+0)+0,f
 10624  1594  05FB               	movlw	0Ah
 10625  1595  300A               	movwf	(___awmod@divisor)
 10626  1596  00F0               	movlw	0
 10627  1597  3000               	movwf	((___awmod@divisor))+1
 10628  1598  00F1               	movf	(DEC_2_BCD@to_convert+1),w
 10629  1599  087A               	movwf	(___awmod@dividend+1)
 10630  159A  00F3               	movf	(DEC_2_BCD@to_convert),w
 10631  159B  0879               	movwf	(___awmod@dividend)
 10632  159C  00F2               	fcall	___awmod
 10633  159D  160A  118A  26BF  160A  118A  	movf	(0+(?___awmod)),w
 10634  15A2  0870               	addwf	0+(??_DEC_2_BCD+0)+0,w
 10635  15A3  077B               	movwf	(?_DEC_2_BCD)
 10636  15A4  00F9               	movf	(1+(?___awmod)),w
 10637  15A5  0871               	skipnc
 10638  15A6  1803               	incf	(1+(?___awmod)),w
 10639  15A7  0A71               	addwf	1+(??_DEC_2_BCD+0)+0,w
 10640  15A8  077C               	movwf	1+(?_DEC_2_BCD)
 10641  15A9  00FA               	goto	l100
 10642  15AA  2DAB               	
 10643                           l2224:	
 10644  15AB                     	line	149
 10645                           	
 10646                           l100:	
 10647  15AB                     	return
 10648  15AB  0008               	opt stack 0
 10649                           GLOBAL	__end_of_DEC_2_BCD
 10650                           	__end_of_DEC_2_BCD:
 10651  15AC                     	signat	_DEC_2_BCD,4218
 10652                           	global	___awmod
 10653                           
 10654 ;; *************** function ___awmod *****************
 10655 ;; Defined at:
 10656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  divisor         2    0[COMMON] int 
 10659 ;;  dividend        2    2[COMMON] int 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;  sign            1    6[COMMON] unsigned char 
 10662 ;;  counter         1    5[COMMON] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  2    0[COMMON] int 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10672 ;;      Params:         4       0       0       0       0
 10673 ;;      Locals:         2       0       0       0       0
 10674 ;;      Temps:          1       0       0       0       0
 10675 ;;      Totals:         7       0       0       0       0
 10676 ;;Total ram usage:        7 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_DEC_2_BCD
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           psect	text32,local,class=CODE,delta=2,merge=1,group=1
 10685                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10686                           	line	5
 10687                           global __ptext32
 10688                           __ptext32:	;psect for function ___awmod
 10689  16BF                     psect	text32
 10690                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10691                           	line	5
 10692                           	global	__size_of___awmod
 10693                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 10694  0063                     	
 10695                           ___awmod:	
 10696  16BF                     ;incstack = 0
 10697                           	opt	stack 5
 10698                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10699                           	line	12
 10700                           	
 10701                           l2110:	
 10702  16BF                     	clrf	(___awmod@sign)
 10703  16BF  01F6               	line	13
 10704                           	
 10705                           l2112:	
 10706  16C0                     	btfss	(___awmod@dividend+1),7
 10707  16C0  1FF3               	goto	u2491
 10708  16C1  2EC3               	goto	u2490
 10709  16C2  2EC4               u2491:
 10710  16C3                     	goto	l2118
 10711  16C3  2ECC               u2490:
 10712  16C4                     	line	14
 10713                           	
 10714                           l2114:	
 10715  16C4                     	comf	(___awmod@dividend),f
 10716  16C4  09F2               	comf	(___awmod@dividend+1),f
 10717  16C5  09F3               	incf	(___awmod@dividend),f
 10718  16C6  0AF2               	skipnz
 10719  16C7  1903               	incf	(___awmod@dividend+1),f
 10720  16C8  0AF3               	line	15
 10721                           	
 10722                           l2116:	
 10723  16C9                     	clrf	(___awmod@sign)
 10724  16C9  01F6               	incf	(___awmod@sign),f
 10725  16CA  0AF6               	goto	l2118
 10726  16CB  2ECC               	line	16
 10727                           	
 10728                           l489:	
 10729  16CC                     	line	17
 10730                           	
 10731                           l2118:	
 10732  16CC                     	btfss	(___awmod@divisor+1),7
 10733  16CC  1FF1               	goto	u2501
 10734  16CD  2ECF               	goto	u2500
 10735  16CE  2ED0               u2501:
 10736  16CF                     	goto	l2122
 10737  16CF  2ED6               u2500:
 10738  16D0                     	line	18
 10739                           	
 10740                           l2120:	
 10741  16D0                     	comf	(___awmod@divisor),f
 10742  16D0  09F0               	comf	(___awmod@divisor+1),f
 10743  16D1  09F1               	incf	(___awmod@divisor),f
 10744  16D2  0AF0               	skipnz
 10745  16D3  1903               	incf	(___awmod@divisor+1),f
 10746  16D4  0AF1               	goto	l2122
 10747  16D5  2ED6               	
 10748                           l490:	
 10749  16D6                     	line	19
 10750                           	
 10751                           l2122:	
 10752  16D6                     	movf	((___awmod@divisor)),w
 10753  16D6  0870               iorwf	((___awmod@divisor+1)),w
 10754  16D7  0471               	btfsc	status,2
 10755  16D8  1903               	goto	u2511
 10756  16D9  2EDB               	goto	u2510
 10757  16DA  2EDC               u2511:
 10758  16DB                     	goto	l2140
 10759  16DB  2F11               u2510:
 10760  16DC                     	line	20
 10761                           	
 10762                           l2124:	
 10763  16DC                     	clrf	(___awmod@counter)
 10764  16DC  01F5               	incf	(___awmod@counter),f
 10765  16DD  0AF5               	line	21
 10766                           	goto	l2130
 10767  16DE  2EEB               	
 10768                           l493:	
 10769  16DF                     	line	22
 10770                           	
 10771                           l2126:	
 10772  16DF                     	movlw	01h
 10773  16DF  3001               	
 10774                           u2525:
 10775  16E0                     	clrc
 10776  16E0  1003               	rlf	(___awmod@divisor),f
 10777  16E1  0DF0               	rlf	(___awmod@divisor+1),f
 10778  16E2  0DF1               	addlw	-1
 10779  16E3  3EFF               	skipz
 10780  16E4  1D03               	goto	u2525
 10781  16E5  2EE0               	line	23
 10782                           	
 10783                           l2128:	
 10784  16E6                     	movlw	low(01h)
 10785  16E6  3001               	movwf	(??___awmod+0)+0
 10786  16E7  00F4               	movf	(??___awmod+0)+0,w
 10787  16E8  0874               	addwf	(___awmod@counter),f
 10788  16E9  07F5               	goto	l2130
 10789  16EA  2EEB               	line	24
 10790                           	
 10791                           l492:	
 10792  16EB                     	line	21
 10793                           	
 10794                           l2130:	
 10795  16EB                     	btfss	(___awmod@divisor+1),(15)&7
 10796  16EB  1FF1               	goto	u2531
 10797  16EC  2EEE               	goto	u2530
 10798  16ED  2EEF               u2531:
 10799  16EE                     	goto	l2126
 10800  16EE  2EDF               u2530:
 10801  16EF                     	goto	l2132
 10802  16EF  2EF1               	
 10803                           l494:	
 10804  16F0                     	goto	l2132
 10805  16F0  2EF1               	line	25
 10806                           	
 10807                           l495:	
 10808  16F1                     	line	26
 10809                           	
 10810                           l2132:	
 10811  16F1                     	movf	(___awmod@divisor+1),w
 10812  16F1  0871               	subwf	(___awmod@dividend+1),w
 10813  16F2  0273               	skipz
 10814  16F3  1D03               	goto	u2545
 10815  16F4  2EF7               	movf	(___awmod@divisor),w
 10816  16F5  0870               	subwf	(___awmod@dividend),w
 10817  16F6  0272               u2545:
 10818  16F7                     	skipc
 10819  16F7  1C03               	goto	u2541
 10820  16F8  2EFA               	goto	u2540
 10821  16F9  2EFB               u2541:
 10822  16FA                     	goto	l2136
 10823  16FA  2F02               u2540:
 10824  16FB                     	line	27
 10825                           	
 10826                           l2134:	
 10827  16FB                     	movf	(___awmod@divisor),w
 10828  16FB  0870               	subwf	(___awmod@dividend),f
 10829  16FC  02F2               	movf	(___awmod@divisor+1),w
 10830  16FD  0871               	skipc
 10831  16FE  1C03               	decf	(___awmod@dividend+1),f
 10832  16FF  03F3               	subwf	(___awmod@dividend+1),f
 10833  1700  02F3               	goto	l2136
 10834  1701  2F02               	
 10835                           l496:	
 10836  1702                     	line	28
 10837                           	
 10838                           l2136:	
 10839  1702                     	movlw	01h
 10840  1702  3001               	
 10841                           u2555:
 10842  1703                     	clrc
 10843  1703  1003               	rrf	(___awmod@divisor+1),f
 10844  1704  0CF1               	rrf	(___awmod@divisor),f
 10845  1705  0CF0               	addlw	-1
 10846  1706  3EFF               	skipz
 10847  1707  1D03               	goto	u2555
 10848  1708  2F03               	line	29
 10849                           	
 10850                           l2138:	
 10851  1709                     	movlw	01h
 10852  1709  3001               	subwf	(___awmod@counter),f
 10853  170A  02F5               	btfss	status,2
 10854  170B  1D03               	goto	u2561
 10855  170C  2F0E               	goto	u2560
 10856  170D  2F0F               u2561:
 10857  170E                     	goto	l2132
 10858  170E  2EF1               u2560:
 10859  170F                     	goto	l2140
 10860  170F  2F11               	
 10861                           l497:	
 10862  1710                     	goto	l2140
 10863  1710  2F11               	line	30
 10864                           	
 10865                           l491:	
 10866  1711                     	line	31
 10867                           	
 10868                           l2140:	
 10869  1711                     	movf	((___awmod@sign)),w
 10870  1711  0876               	btfsc	status,2
 10871  1712  1903               	goto	u2571
 10872  1713  2F15               	goto	u2570
 10873  1714  2F16               u2571:
 10874  1715                     	goto	l2144
 10875  1715  2F1C               u2570:
 10876  1716                     	line	32
 10877                           	
 10878                           l2142:	
 10879  1716                     	comf	(___awmod@dividend),f
 10880  1716  09F2               	comf	(___awmod@dividend+1),f
 10881  1717  09F3               	incf	(___awmod@dividend),f
 10882  1718  0AF2               	skipnz
 10883  1719  1903               	incf	(___awmod@dividend+1),f
 10884  171A  0AF3               	goto	l2144
 10885  171B  2F1C               	
 10886                           l498:	
 10887  171C                     	line	33
 10888                           	
 10889                           l2144:	
 10890  171C                     	movf	(___awmod@dividend+1),w
 10891  171C  0873               	movwf	(?___awmod+1)
 10892  171D  00F1               	movf	(___awmod@dividend),w
 10893  171E  0872               	movwf	(?___awmod)
 10894  171F  00F0               	goto	l499
 10895  1720  2F21               	
 10896                           l2146:	
 10897  1721                     	line	34
 10898                           	
 10899                           l499:	
 10900  1721                     	return
 10901  1721  0008               	opt stack 0
 10902                           GLOBAL	__end_of___awmod
 10903                           	__end_of___awmod:
 10904  1722                     	signat	___awmod,8314
 10905                           	global	___awdiv
 10906                           
 10907 ;; *************** function ___awdiv *****************
 10908 ;; Defined at:
 10909 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;  divisor         2    0[COMMON] int 
 10912 ;;  dividend        2    2[COMMON] int 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  quotient        2    7[COMMON] int 
 10915 ;;  sign            1    6[COMMON] unsigned char 
 10916 ;;  counter         1    5[COMMON] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  2    0[COMMON] int 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10926 ;;      Params:         4       0       0       0       0
 10927 ;;      Locals:         4       0       0       0       0
 10928 ;;      Temps:          1       0       0       0       0
 10929 ;;      Totals:         9       0       0       0       0
 10930 ;;Total ram usage:        9 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_DEC_2_BCD
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           psect	text33,local,class=CODE,delta=2,merge=1,group=1
 10939                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 10940                           	line	5
 10941                           global __ptext33
 10942                           __ptext33:	;psect for function ___awdiv
 10943  178F                     psect	text33
 10944                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 10945                           	line	5
 10946                           	global	__size_of___awdiv
 10947                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 10948  0071                     	
 10949                           ___awdiv:	
 10950  178F                     ;incstack = 0
 10951                           	opt	stack 5
 10952                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10953                           	line	13
 10954                           	
 10955                           l2066:	
 10956  178F                     	clrf	(___awdiv@sign)
 10957  178F  01F6               	line	14
 10958                           	
 10959                           l2068:	
 10960  1790                     	btfss	(___awdiv@divisor+1),7
 10961  1790  1FF1               	goto	u2391
 10962  1791  2F93               	goto	u2390
 10963  1792  2F94               u2391:
 10964  1793                     	goto	l2074
 10965  1793  2F9C               u2390:
 10966  1794                     	line	15
 10967                           	
 10968                           l2070:	
 10969  1794                     	comf	(___awdiv@divisor),f
 10970  1794  09F0               	comf	(___awdiv@divisor+1),f
 10971  1795  09F1               	incf	(___awdiv@divisor),f
 10972  1796  0AF0               	skipnz
 10973  1797  1903               	incf	(___awdiv@divisor+1),f
 10974  1798  0AF1               	line	16
 10975                           	
 10976                           l2072:	
 10977  1799                     	clrf	(___awdiv@sign)
 10978  1799  01F6               	incf	(___awdiv@sign),f
 10979  179A  0AF6               	goto	l2074
 10980  179B  2F9C               	line	17
 10981                           	
 10982                           l476:	
 10983  179C                     	line	18
 10984                           	
 10985                           l2074:	
 10986  179C                     	btfss	(___awdiv@dividend+1),7
 10987  179C  1FF3               	goto	u2401
 10988  179D  2F9F               	goto	u2400
 10989  179E  2FA0               u2401:
 10990  179F                     	goto	l2080
 10991  179F  2FAA               u2400:
 10992  17A0                     	line	19
 10993                           	
 10994                           l2076:	
 10995  17A0                     	comf	(___awdiv@dividend),f
 10996  17A0  09F2               	comf	(___awdiv@dividend+1),f
 10997  17A1  09F3               	incf	(___awdiv@dividend),f
 10998  17A2  0AF2               	skipnz
 10999  17A3  1903               	incf	(___awdiv@dividend+1),f
 11000  17A4  0AF3               	line	20
 11001                           	
 11002                           l2078:	
 11003  17A5                     	movlw	low(01h)
 11004  17A5  3001               	movwf	(??___awdiv+0)+0
 11005  17A6  00F4               	movf	(??___awdiv+0)+0,w
 11006  17A7  0874               	xorwf	(___awdiv@sign),f
 11007  17A8  06F6               	goto	l2080
 11008  17A9  2FAA               	line	21
 11009                           	
 11010                           l477:	
 11011  17AA                     	line	22
 11012                           	
 11013                           l2080:	
 11014  17AA                     	clrf	(___awdiv@quotient)
 11015  17AA  01F7               	clrf	(___awdiv@quotient+1)
 11016  17AB  01F8               	line	23
 11017                           	
 11018                           l2082:	
 11019  17AC                     	movf	((___awdiv@divisor)),w
 11020  17AC  0870               iorwf	((___awdiv@divisor+1)),w
 11021  17AD  0471               	btfsc	status,2
 11022  17AE  1903               	goto	u2411
 11023  17AF  2FB1               	goto	u2410
 11024  17B0  2FB2               u2411:
 11025  17B1                     	goto	l2102
 11026  17B1  2FEF               u2410:
 11027  17B2                     	line	24
 11028                           	
 11029                           l2084:	
 11030  17B2                     	clrf	(___awdiv@counter)
 11031  17B2  01F5               	incf	(___awdiv@counter),f
 11032  17B3  0AF5               	line	25
 11033                           	goto	l2090
 11034  17B4  2FC1               	
 11035                           l480:	
 11036  17B5                     	line	26
 11037                           	
 11038                           l2086:	
 11039  17B5                     	movlw	01h
 11040  17B5  3001               	
 11041                           u2425:
 11042  17B6                     	clrc
 11043  17B6  1003               	rlf	(___awdiv@divisor),f
 11044  17B7  0DF0               	rlf	(___awdiv@divisor+1),f
 11045  17B8  0DF1               	addlw	-1
 11046  17B9  3EFF               	skipz
 11047  17BA  1D03               	goto	u2425
 11048  17BB  2FB6               	line	27
 11049                           	
 11050                           l2088:	
 11051  17BC                     	movlw	low(01h)
 11052  17BC  3001               	movwf	(??___awdiv+0)+0
 11053  17BD  00F4               	movf	(??___awdiv+0)+0,w
 11054  17BE  0874               	addwf	(___awdiv@counter),f
 11055  17BF  07F5               	goto	l2090
 11056  17C0  2FC1               	line	28
 11057                           	
 11058                           l479:	
 11059  17C1                     	line	25
 11060                           	
 11061                           l2090:	
 11062  17C1                     	btfss	(___awdiv@divisor+1),(15)&7
 11063  17C1  1FF1               	goto	u2431
 11064  17C2  2FC4               	goto	u2430
 11065  17C3  2FC5               u2431:
 11066  17C4                     	goto	l2086
 11067  17C4  2FB5               u2430:
 11068  17C5                     	goto	l2092
 11069  17C5  2FC7               	
 11070                           l481:	
 11071  17C6                     	goto	l2092
 11072  17C6  2FC7               	line	29
 11073                           	
 11074                           l482:	
 11075  17C7                     	line	30
 11076                           	
 11077                           l2092:	
 11078  17C7                     	movlw	01h
 11079  17C7  3001               	
 11080                           u2445:
 11081  17C8                     	clrc
 11082  17C8  1003               	rlf	(___awdiv@quotient),f
 11083  17C9  0DF7               	rlf	(___awdiv@quotient+1),f
 11084  17CA  0DF8               	addlw	-1
 11085  17CB  3EFF               	skipz
 11086  17CC  1D03               	goto	u2445
 11087  17CD  2FC8               	line	31
 11088                           	movf	(___awdiv@divisor+1),w
 11089  17CE  0871               	subwf	(___awdiv@dividend+1),w
 11090  17CF  0273               	skipz
 11091  17D0  1D03               	goto	u2455
 11092  17D1  2FD4               	movf	(___awdiv@divisor),w
 11093  17D2  0870               	subwf	(___awdiv@dividend),w
 11094  17D3  0272               u2455:
 11095  17D4                     	skipc
 11096  17D4  1C03               	goto	u2451
 11097  17D5  2FD7               	goto	u2450
 11098  17D6  2FD8               u2451:
 11099  17D7                     	goto	l2098
 11100  17D7  2FE0               u2450:
 11101  17D8                     	line	32
 11102                           	
 11103                           l2094:	
 11104  17D8                     	movf	(___awdiv@divisor),w
 11105  17D8  0870               	subwf	(___awdiv@dividend),f
 11106  17D9  02F2               	movf	(___awdiv@divisor+1),w
 11107  17DA  0871               	skipc
 11108  17DB  1C03               	decf	(___awdiv@dividend+1),f
 11109  17DC  03F3               	subwf	(___awdiv@dividend+1),f
 11110  17DD  02F3               	line	33
 11111                           	
 11112                           l2096:	
 11113  17DE                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11114  17DE  1477               	goto	l2098
 11115  17DF  2FE0               	line	34
 11116                           	
 11117                           l483:	
 11118  17E0                     	line	35
 11119                           	
 11120                           l2098:	
 11121  17E0                     	movlw	01h
 11122  17E0  3001               	
 11123                           u2465:
 11124  17E1                     	clrc
 11125  17E1  1003               	rrf	(___awdiv@divisor+1),f
 11126  17E2  0CF1               	rrf	(___awdiv@divisor),f
 11127  17E3  0CF0               	addlw	-1
 11128  17E4  3EFF               	skipz
 11129  17E5  1D03               	goto	u2465
 11130  17E6  2FE1               	line	36
 11131                           	
 11132                           l2100:	
 11133  17E7                     	movlw	01h
 11134  17E7  3001               	subwf	(___awdiv@counter),f
 11135  17E8  02F5               	btfss	status,2
 11136  17E9  1D03               	goto	u2471
 11137  17EA  2FEC               	goto	u2470
 11138  17EB  2FED               u2471:
 11139  17EC                     	goto	l2092
 11140  17EC  2FC7               u2470:
 11141  17ED                     	goto	l2102
 11142  17ED  2FEF               	
 11143                           l484:	
 11144  17EE                     	goto	l2102
 11145  17EE  2FEF               	line	37
 11146                           	
 11147                           l478:	
 11148  17EF                     	line	38
 11149                           	
 11150                           l2102:	
 11151  17EF                     	movf	((___awdiv@sign)),w
 11152  17EF  0876               	btfsc	status,2
 11153  17F0  1903               	goto	u2481
 11154  17F1  2FF3               	goto	u2480
 11155  17F2  2FF4               u2481:
 11156  17F3                     	goto	l2106
 11157  17F3  2FFA               u2480:
 11158  17F4                     	line	39
 11159                           	
 11160                           l2104:	
 11161  17F4                     	comf	(___awdiv@quotient),f
 11162  17F4  09F7               	comf	(___awdiv@quotient+1),f
 11163  17F5  09F8               	incf	(___awdiv@quotient),f
 11164  17F6  0AF7               	skipnz
 11165  17F7  1903               	incf	(___awdiv@quotient+1),f
 11166  17F8  0AF8               	goto	l2106
 11167  17F9  2FFA               	
 11168                           l485:	
 11169  17FA                     	line	40
 11170                           	
 11171                           l2106:	
 11172  17FA                     	movf	(___awdiv@quotient+1),w
 11173  17FA  0878               	movwf	(?___awdiv+1)
 11174  17FB  00F1               	movf	(___awdiv@quotient),w
 11175  17FC  0877               	movwf	(?___awdiv)
 11176  17FD  00F0               	goto	l486
 11177  17FE  2FFF               	
 11178                           l2108:	
 11179  17FF                     	line	41
 11180                           	
 11181                           l486:	
 11182  17FF                     	return
 11183  17FF  0008               	opt stack 0
 11184                           GLOBAL	__end_of___awdiv
 11185                           	__end_of___awdiv:
 11186  1800                     	signat	___awdiv,8314
 11187                           global	___latbits
 11188                           ___latbits	equ	2
 11189  0002                     	global	btemp
 11190                           	btemp set 07Eh
 11191  007E                     
 11192                           	DABS	1,126,2	;btemp
 11193                           	global	wtemp0
 11194                           	wtemp0 set btemp+0
 11195  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      4      38
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Update_Current_Date_Time
    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _BCD_2_DEC->_I2C_Master_Read
    _BCD_2_DEC->___wmul
    _Config_Time_Date->_DEC_2_BCD
    _I2C_Master_Write->_DEC_2_BCD
    _DEC_2_BCD->___awdiv

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg
    _Update_Current_Date_Time->_I2C_Master_Write
    _Config_Time_Date->_I2C_Master_Write

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   23808
                                              0 BANK1      4     4      0
                   _Config_Time_Date
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
           _Update_Current_Date_Time
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    2879
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1779
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1720
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     492
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     772
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             54 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             1     1      0    3395
                                             13 COMMON     1     1      0
                          _BCD_2_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     881
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2     820
                                              6 COMMON     4     2      2
                    _I2C_Master_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Config_Time_Date                                     2     2      0    3094
                                              2 BANK0      2     2      0
                          _DEC_2_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1694
                                              0 BANK0      2     0      2
                          _DEC_2_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    1400
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Time_Date
     _DEC_2_BCD
       ___awdiv
       ___awmod
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_2_BCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Master_Wait (ARG)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _DEC_2_BCD (ARG)
       ___awdiv
       ___awmod
     _I2C_Master_Wait (ARG)
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Master_Read (ARG)
         _I2C_Master_Wait
       ___wmul (ARG)
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_2_BCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Master_Wait (ARG)
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      26       7       47.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Feb 22 12:20:59 2020

                     ___fldiv@aexp 006F                       ___fldiv@bexp 006E  
                                pc 0002                       ___fldiv@sign 0067  
                      __CFG_CP$OFF 0000                    writeStrLCD@cont 0077  
                               l90 0DF4                                 l91 0DF4  
                               l94 08CE                                 l87 0C03  
                               l88 0DD3                                 l97 14F9  
                               l89 0DF3                       ___awdiv@sign 0076  
                               _s3 00BA                 __size_of_DEC_2_BCD 0031  
                               fsr 0004                ___wmul@multiplicand 0072  
              __Umul8_16@word_mpld 0076                                l100 15AB  
                              l103 0AF7                                l200 1498  
                              l106 01C1                                l203 14D3  
                              l140 1466                                l141 1466  
                              l150 144D                                l310 0BDE  
                              l206 16A3                                l135 15E3  
                              l311 0B00                                l207 16BE  
                              l144 1444                                l320 0B50  
                              l312 0B12                                l153 1457  
                              l321 0B5A                                l313 0B19  
                              l138 1459                                l322 0B82  
                              l314 0B14                                l139 1459  
                              l315 0BF2                                l323 0B77  
                              l332 14FD                                l156 1571  
                              l180 14A7                                l324 0B94  
                              l316 0B15                                l333 1507  
                              l157 1574                                l181 14AF  
                              l325 0BD3                                l317 0B16  
                              l334 151C                                l158 157A  
                              l182 14B5                                l190 0846  
                              l326 0B99                                l318 0B36  
                              l335 1521                                l191 0846  
                              l327 0BDD                                l319 0B17  
                              l520 0935                                l600 0011  
                              l328 0BF1                                l521 0921  
                              l185 1433                                l601 0022  
                              l329 0BF7                                l514 1474  
                              l522 0922                                l362 1785  
                              l194 1484                                l602 0023  
                              l610 1627                                l515 1475  
                              l523 0934                                l363 1743  
                              l603 003C                                l611 1638  
                              l620 01E8                                l700 0F69  
                              l524 0958                                l364 1735  
                              l188 0829                                l604 004A  
                              l612 1639                                l621 01F4  
                              l701 0FA3                                l525 0945  
                              l365 1748                                l197 161D  
                              l189 0806                                l605 0050  
                              l613 164A                                l630 02DE  
                              l622 0201                                l702 0FA2  
                              l526 0951                                l518 08EC  
                              l366 1749                                l614 1658  
                              l631 02D5                                l623 020D  
                              l703 0FBF                                l711 0491  
                              l527 0946                                l519 0968  
                              l367 1774                                l615 165E  
                              l480 17B5                                l640 0330  
                              l632 02B1                                l624 0223  
                              l704 0FDB                                l712 04A6  
                              l528 0957                                l368 1784  
                              l608 1659                                l481 17C6  
                              l641 0319                                l633 02BE  
                              l625 0220                                l705 0FE7  
                              l721 04E9                                l713 04A4  
                              l529 0968                                l369 178E  
                              l609 1633                                l482 17C7  
                              l490 16D6                                l650 03D3  
                              l642 031C                                l634 02C1  
                              l626 022B                                l618 01D5  
                              l706 0FEB                                l730 075C  
                              l722 07F2                                l714 04AF  
                              l483 17E0                                l491 1711  
                              l651 03E1                                l643 0322  
                              l635 02C7                                l627 0277  
                              l619 01EB                                l731 0796  
                              l723 0734                                l715 04C0  
                              l484 17EE                                l476 179C  
                              l492 16EB                                l660 044C  
                              l644 03FA                                l652 03E8  
                              l636 02DE                                l628 023A  
                              l732 0795                                l724 0715  
                              l716 04D5                                l740 0983  
                              l485 17FA                                l477 17AA  
                              l493 16DF                                l661 044C  
                              l653 03EB                                l645 03AD  
                              l637 0331                                l629 02B0  
                              l733 07AE                                l725 0724  
                              l717 04D3                                l741 098B  
                              l486 17FF                                l478 17EF  
                              l494 16F0                                l662 044B  
                              l654 03F3                                l646 03AC  
                              l638 02F1                                l734 07E5  
                              l726 0739                                l718 04DE  
                              l750 09E7                                l742 099D  
                              l479 17C1                                l495 16F1  
                              l663 0467                                l655 03F9  
                              l647 03BB                                l639 047D  
                              l735 07C9                                l727 075E  
                              l719 04F3                                l751 09DB  
                              l743 0A2A                                l496 1702  
                              l656 0411                                l648 03D2  
                              l680 0E50                                l760 1537  
                              l736 07E5                                l728 0755  
                              l744 09B0                                l497 1710  
                              l489 16CC                                l665 0457  
                              l657 0408                                l649 03F4  
                              l681 0E4D                                l761 1546  
                              l737 07DD                                l729 075D  
                              l753 09F2                                l745 09A2  
                              l498 171C                                l666 0466  
                              l658 0410                                l690 0F0B  
                              l682 0E58                                l762 154B  
                              l754 09F2                                l746 09B7  
                              l499 1721                                l667 046D  
                              l659 040F                                l691 0F17  
                              l683 0E7A                                l675 0E0A  
                              l755 09FE                                l747 09D3  
                              l668 0471                                l692 0F21  
                              l684 0FFF                                l676 0E20  
                              l756 0A21                                l748 09B8  
                              l669 047D                                l693 0F41  
                              l685 0E91                                l677 0E1D  
                              l749 09DA                                l694 0F22  
                              l686 0F10                                l678 0E29  
                              l598 004B                                l695 0F31  
                              l687 0EC2                                l679 0E3A  
                              l759 152D                                l599 001D  
                              l696 0F46                                l688 0EE9  
                              l697 0F6B                                l689 0EDF  
                              l698 0F62                                l699 0F6A  
                              _GIE 005F                                _RD0 0040  
                              _RD1 0041                       __CFG_CPD$OFF 0000  
                              _adc 00C0                                _min 00B8  
                              _sec 00B9                                _lux 00A0  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0076                       ___flmul@aexp 004E  
                     ___flmul@bexp 004F                       ___flmul@sign 0049  
                     ___flmul@temp 0054                       ___flmul@prod 0050  
                     __CFG_LVP$OFF 0000                       ___fltol@exp1 007A  
                             l2000 0B77                               l2010 0B99  
                             l2002 0B82                               l2100 17E7  
                             l2012 0BC7                               l2004 0B88  
                             l2020 0BF2                               l2102 17EF  
                             l2110 16BF                               l2030 14FD  
                             l2022 0BF7                               l2014 0BCE  
                             l2006 0B8F                               l2104 17F4  
                             l2120 16D0                               l2112 16C0  
                             l2040 1521                               l2032 1501  
                             l2200 15ED                               l2016 0BD3  
                             l2008 0B94                               l2106 17FA  
                             l2130 16EB                               l2122 16D6  
                             l2114 16C4                               l2034 150E  
                             l2050 1749                               l2042 1722  
                             l2210 160B                               l2202 15F3  
                             l2018 0BDE                               l2108 17FF  
                             l2132 16F1                               l2124 16DC  
                             l2140 1711                               l2116 16C9  
                             l2036 1515                               l2028 14FA  
                             l2220 14F9                               l2300 1474  
                             l2060 177D                               l2052 1752  
                             l2044 1732                               l2212 1611  
                             l2204 15F9                               l2070 1794  
                             l2142 1716                               l2134 16FB  
                             l2126 16DF                               l2118 16CC  
                             l2222 157B                               l2150 1441  
                             l2038 151C                               l2230 152D  
                             l2302 1475                               l2310 08EC  
                             l2054 1764                               l2046 1735  
                             l2062 1785                               l2214 1617  
                             l2206 15FF                               l2080 17AA  
                             l2072 1799                               l2144 171C  
                             l2136 1702                               l2128 16E6  
                             l2224 15AB                               l2152 144E  
                             l2160 1559                               l2400 0252  
                             l2232 1531                               l2320 0910  
                             l2312 0901                               l2304 08CF  
                             l2064 178E                               l2056 1772  
                             l2048 1743                               l2216 142D  
                             l2208 1605                               l2240 0847  
                             l2090 17C1                               l2082 17AC  
                             l2074 179C                               l2066 178F  
                             l2146 1721                               l2138 1709  
                             l2154 1453                               l2218 14D4  
                             l2170 157A                               l2162 1562  
                             l2410 0266                               l2402 0256  
                             l2234 1540                               l2226 1523  
                             l2330 093B                               l2322 0917  
                             l2314 0902                               l2306 08E2  
                             l2058 1774                               l2250 0872  
                             l2242 0853                               l2092 17C7  
                             l2084 17B2                               l2076 17A0  
                             l2068 1790                               l2148 143C  
                             l2172 1445                               l2164 1567  
                             l2156 154C                               l2500 03FF  
                             l2420 0278                               l2412 026A  
                             l2404 025A                               l2340 01C2  
                             l2236 1546                               l2228 1525  
                             l2332 0944                               l2324 0920  
                             l2316 090A                               l2308 08EB  
                             l2180 14A7                               l2260 08A5  
                             l2252 087B                               l2244 0860  
                             l2094 17D8                               l2086 17B5  
                             l2078 17A5                               l2174 144A  
                             l2166 156D                               l2158 1551  
                             l2510 0424                               l2502 0405  
                             l2430 02C5                               l2422 0294  
                             l2414 026E                               l2406 025E  
                             l2350 01DA                               l2342 01C9  
                             l2238 154B                               l2334 0946  
                             l2326 0922                               l2318 090C  
                             l2190 15B3                               l2182 14AF  
                             l2270 08C6                               l2262 08AD  
                             l2254 0887                               l2246 0865  
                             l2096 17DE                               l2088 17BC  
                             l2272 0A2B                               l2168 1575  
                             l2520 045F                               l2512 0428  
                             l2504 040C                               l2440 02E7  
                             l2432 02C7                               l2424 02B5  
                             l2416 0272                               l2408 0262  
                             l2360 01F4                               l2352 01DF  
                             l2344 01CF                               l2600 0EC7  
                             l2336 0958                               l2328 0935  
                             l2192 15E0                               l2176 149A  
                             l2264 08B5                               l2256 0890  
                             l2248 086A                               l2184 14B9  
                             l2280 1681                               l2098 17E0  
                             l2530 0478                               l2522 0464  
                             l2514 0446                               l2506 0411  
                             l2450 0310                               l2442 02F0  
                             l2434 02D0                               l2426 02BE  
                             l2418 0277                               l2370 020B  
                             l2362 01F9                               l2354 01E8  
                             l2346 01D3                               l2610 0EFB  
                             l2602 0ED9                               l2338 095D  
                             l2194 15E1                               l2186 15AC  
                             l2178 149F                               l2266 08BD  
                             l2258 089C                               l2290 16AB  
                             l2282 1687                               l2274 1662  
                             l2532 047C                               l2524 0467  
                             l2516 0451                               l2508 0416  
                             l2460 032B                               l2452 0319  
                             l2444 02F1                               l2428 02C1  
                             l2436 02D5                               l2380 0221  
                             l2372 020D                               l2364 01FF  
                             l2356 01E9                               l2348 01D5  
                             l2620 0F1F                               l2612 0EFC  
                             l2604 0EDD                               l2540 0E08  
                             l2700 04BE                               l2196 15E2  
                             l2188 15B0                               l2268 08BE  
                             l1900 0008                               l2292 16B8  
                             l2284 1694                               l2276 166C  
                             l2294 0051                               l2526 046B  
                             l2518 0457                               l2470 039D  
                             l2454 031C                               l2446 0308  
                             l2438 02E2                               l2462 0331  
                             l2390 023E                               l2374 0212  
                             l2382 0223                               l2366 0201  
                             l2358 01EB                               l2630 0F3A  
                             l2622 0F22                               l2614 0F0B  
                             l2606 0EDF                               l2550 0E1E  
                             l2542 0E0A                               l2534 0DF7  
                             l2710 04D5                               l2702 04C0  
                             l2198 15E4                               l1910 0023  
                             l1902 000E                               l2286 169C  
                             l2278 1674                               l2528 046D  
                             l2480 03D3                               l2464 0347  
                             l2472 03AD                               l2456 0320  
                             l2448 030C                               l2392 0242  
                             l2384 0231                               l2376 0217  
                             l2368 0207                               l2640 0F5F  
                             l2624 0F2B                               l2632 0F41  
                             l2608 0EE9                               l2616 0F10  
                             l2560 0E38                               l2544 0E0F  
                             l2552 0E20                               l2536 0DFE  
                             l2800 07BD                               l2720 04F3  
                             l2712 04DE                               l2704 04C5  
                             l2296 1467                               l1912 0034  
                             l1904 0011                               l1920 004B  
                             l2288 16A3                               l2490 03EB  
                             l2482 03DC                               l2474 03C3  
                             l2466 0396                               l2458 0322  
                             l2394 0246                               l2386 0235  
                             l2378 0220                               l2650 0F82  
                             l2642 0F66                               l2634 0F46  
                             l2626 0F2F                               l2618 0F17  
                             l2570 0E4E                               l2562 0E3A  
                             l2554 0E29                               l2546 0E14  
                             l2538 0E04                               l2810 07DD  
                             l2802 07C7                               l2730 0575  
                             l2722 0503                               l2714 04E3  
                             l2706 04CA                               l2298 1471  
                             l1922 0050                               l1914 003A  
                             l1906 0018                               l1930 162E  
                             l2492 03F0                               l2484 03E0  
                             l2476 03C8                               l2468 0398  
                             l2396 024A                               l2388 023A  
                             l2660 0FCE                               l2652 0F9B  
                             l2644 0F6B                               l2636 0F47  
                             l2628 0F31                               l2580 0E79  
                             l2564 0E3F                               l2572 0E50  
                             l2556 0E2E                               l2548 0E1D  
                             l2812 07E9                               l2804 07C9  
                             l2740 05E3                               l2732 0591  
                             l2724 0510                               l2716 04E9  
                             l2708 04D3                               l2820 0973  
                             l1916 003C                               l1908 001D  
                             l1940 1651                               l1932 1633  
                             l1924 161E                               l2900 0D76  
                             l2486 03E5                               l2478 03D1  
                             l2494 03F4                               l2398 024E  
                             l2670 0FE7                               l2662 0FD2  
                             l2646 0F70                               l2654 0FA3  
                             l2638 0F4B                               l2590 0EA8  
                             l2574 0E60                               l2582 0E7A  
                             l2566 0E44                               l2558 0E34  
                             l2814 07F2                               l2806 07D7  
                             l2750 0673                               l2742 05F3  
                             l2734 05AD                               l2726 052D  
                             l2718 04F2                               l2830 09A2  
                             l2822 0983                               l1950 0822  
                             l1918 0043                               l1934 1639  
                             l1926 1624                               l1942 1659  
                             l2910 0DB3                               l2902 0D89  
                             l2488 03E8                               l2496 03FA  
                             l2672 0FF6                               l2664 0FDA  
                             l2656 0FB0                               l2648 0F7E  
                             l2592 0EB0                               l2584 0E7F  
                             l2576 0E6C                               l2568 0E4D  
                             l2808 07DB                               l2760 0707  
                             l2752 0683                               l2744 0610  
                             l2736 05B6                               l2728 0549  
                             l2680 048B                               l2840 09DB  
                             l2832 09B0                               l2824 0993  
                             l2816 096A                               l1960 1489  
                             l1952 0829                               l1944 165E  
                             l1936 1643                               l1928 1627  
                             l2920 0DDB                               l2912 0DBF  
                             l2904 0D99                               l1954 1458  
                             l2498 03FB                               l2674 0FFF  
                             l2666 0FE1                               l2658 0FBF  
                             l2594 0EB8                               l2586 0E90  
                             l2578 0E70                               l2770 072D  
                             l2762 0715                               l2754 06B0  
                             l2746 0629                               l2738 05C6  
                             l2690 04A4                               l2682 048F  
                             l2850 0A16                               l2842 09E7  
                             l2834 09B8                               l2826 099C  
                             l2818 096F                               l1962 148B  
                             l1890 1477                               l1946 0803  
                             l1938 164A                               l1970 0B06  
                             l2914 0DC4                               l2906 0DA5  
                             l1956 145F                               l2668 0FE5  
                             l2596 0EC0                               l2588 0E91  
                             l2780 0752                               l2764 071E  
                             l2772 0734                               l2756 06D6  
                             l2748 0646                               l2692 04A6  
                             l2684 0491                               l2676 047E  
                             l2852 0A1B                               l2844 09EB  
                             l2836 09BC                               l2828 099D  
                             l1964 1495                               l1892 147A  
                             l1948 0806                               l1980 0B36  
                             l1972 0B0D                               l2916 0DCC  
                             l2908 0DAD                               l2860 0BF8  
                             l2598 0EC2                               l2790 0775  
                             l2782 0759                               l2774 0739  
                             l2766 0722                               l2758 06FE  
                             l2694 04AF                               l2686 0496  
                             l2678 0485                               l2854 0A1F  
                             l2846 09F6                               l2838 09CA  
                             l1958 1486                               l1894 147C  
                             l1990 0B50                               l1982 0B3E  
                             l1974 0B12                               l1966 0AFB  
                             l2918 0DD3                               l2870 0C21  
                             l2862 0BFD                               l2792 078E  
                             l2784 075E                               l2776 073A  
                             l2768 0724                               l2696 04B4  
                             l2688 049B                               l2856 0A21  
                             l2848 0A00                               l1896 1481  
                             l1992 0B52                               l1984 0B42  
                             l1976 0B18                               l1968 0B00  
                             l2880 0C4E                               l2872 0C26  
                             l2864 0C03                               l2786 0763  
                             l2794 0796                               l2778 073E  
                             l2698 04BA                               l2858 0A2A  
                             l1898 0006                               l1994 0B59  
                             l1986 0B46                               l2946 0B2B  
                             l1978 0B19                               l2890 0C7B  
                             l2882 0C53                               l2874 0C30  
                             l2866 0C08                               l2796 07A3  
                             l2788 0771                               l1996 0B5A  
                             l1988 0B4A                               l2892 0C80  
                             l2884 0C5D                               l2876 0C35  
                             l2868 0C13                               l2798 07AE  
                             l1998 0B76                               l2894 0C8A  
                             l2886 0C62                               l2878 0C40  
                             l2896 0CE7                               l2888 0C6D  
                             l2898 0CFA                               STR_1 101D  
                             STR_2 1020                               STR_3 1023  
                             STR_4 1026                               STR_5 101A  
                             u2020 000E                               u2021 000D  
                             u2110 1637                               u2111 1636  
                             u3000 036D                               u2040 0021  
                             u2120 1643                               u2200 0B06  
                             u3001 036E                               u2041 0020  
                             u2121 1642                               u2105 1628  
                             u2201 0B05                               u3010 037F  
                             u3002 0373                               u2210 0B46  
                             u3011 0380                               u3003 0374  
                             u2035 0012                               u2211 0B45  
                             u3100 03FF                               u3020 039D  
                             u3012 0385                               u2060 0034  
                             u2140 1657                               u2220 0B58  
                             u3101 03FE                               u3021 039C  
                             u3013 0386                               u2061 0033  
                             u2141 1656                               u2125 163F  
                             u2221 0B57                               u2310 151B  
                             u3110 0405                               u3030 03C3  
                             u2150 0810                               u2230 0B75  
                             u2311 151A                               u3111 0404  
                             u3031 03C2                               u2055 0024  
                             u2135 164B                               u2231 0B74  
                             u2400 17A0                               u3200 046B  
                             u3120 040C                               u3040 03C8  
                             u4000 0A1B                               u2320 1732  
                             u2160 0833                               u2080 0049  
                             u2240 0B81                               u2401 179F  
                             u2305 150F                               u3201 046A  
                             u3121 040B                               u3041 03C7  
                             u4001 0A1A                               u2321 1731  
                             u2081 0048                               u2065 0030  
                             u2241 0B80                               u2410 17B2  
                             u3210 047C                               u3130 0416  
                             u4010 0A1F                               u2170 0845  
                             u2090 1624                               u2250 0B88  
                             u2411 17B1                               u3211 047B  
                             u3131 0415                               u4011 0A1E  
                             u2171 0844                               u2075 003D  
                             u2091 1623                               u2251 0B87  
                             u2235 0B71                               u2500 16D0  
                             u2180 145F                               u3140 0428  
                             u3060 03E0                               u3300 0EC7  
                             u3220 0E08                               u2340 1747  
                             u2260 0BDC                               u4020 0DCC  
                             u2501 16CF                               u2181 145E  
                             u3141 0427                               u3061 03DF  
                             u3301 0EC6                               u3221 0E07  
                             u2341 1746                               u2261 0BDB  
                             u4021 0DCB                               u2430 17C5  
                             u2510 16DC                               u2190 1465  
                             u3150 0437                               u3070 03E5  
                             u3230 0E0F                               u2270 0BF0  
                             u2431 17C4                               u2511 16DB  
                             u2191 1464                               u3071 03E4  
                             u3055 03D5                               u3231 0E0E  
                             u2335 1737                               u2271 0BEF  
                             u2280 1501                               u3160 0446  
                             u3080 03F0                               u3240 0E14  
                             u2360 1764                               u2600 15C3  
                             u2425 17B6                               u2281 1500  
                             u3161 0445                               u3081 03EF  
                             u3241 0E13                               u2361 1763  
                             u2450 17D8                               u2530 16EF  
                             u3170 0451                               u3090 03F8  
                             u3410 0F45                               u3330 0EDD  
                             u3250 0E38                               u2610 1531  
                             u2451 17D7                               u2531 16EE  
                             u3171 0450                               u3155 0432  
                             u3091 03F7                               u3411 0F44  
                             u3331 0EDC                               u3315 0EC9  
                             u3251 0E37                               u2611 1530  
                             u2355 174B                               u2540 16FB  
                             u3180 0456                               u3500 0FE5  
                             u3420 0F4B                               u3260 0E3F  
                             u2380 1783                               u2445 17C8  
                             u2541 16FA                               u2525 16E0  
                             u3181 0455                               u3501 0FE4  
                             u3421 0F4A                               u3405 0F33  
                             u3325 0ED2                               u3261 0E3E  
                             u2381 1782                               u2365 1760  
                             u2605 15BE                               u4037 0C2C  
                             u2470 17ED                               u2390 1794  
                             u3190 0464                               u3430 0F5F  
                             u3350 0EFB                               u3270 0E44  
                             u2630 1545                               u3510 048F  
                             u2710 0933                               u2471 17EC  
                             u2455 17D4                               u2391 1793  
                             u2295 1508                               u3191 0463  
                             u3431 0F5E                               u3351 0EFA  
                             u3271 0E43                               u2631 1544  
                             u3511 048E                               u2711 0932  
                             u2375 1775                               u4047 0C59  
                             u2480 17F4                               u2560 170F  
                             u2800 020B                               u3440 0F66  
                             u3360 0F16                               u3280 0E60  
                             u3520 0496                               u2720 093B  
                             u2640 169C                               u2481 17F3  
                             u2465 17E1                               u2561 170E  
                             u2545 16F7                               u2801 020A  
                             u3441 0F65                               u3361 0F15  
                             u3345 0EE1                               u3281 0E5F  
                             u2625 1538                               u3601 0557  
                             u3521 0495                               u2721 093A  
                             u2705 0923                               u2641 169B  
                             u4057 0C86                               u2570 1716  
                             u2490 16C4                               u2810 0212  
                             u3450 0F70                               u3370 0F1F  
                             u3290 0E7F                               u3602 055E  
                             u3530 049B                               u2650 1471  
                             u2571 1715                               u2555 1703  
                             u2491 16C3                               u2811 0211  
                             u3451 0F6F                               u3371 0F1E  
                             u3355 0EF7                               u3291 0E7E  
                             u3611 0583                               u3603 0565  
                             u3531 049A                               u2651 1470  
                             u4067 147F                               u2580 156D  
                             u2820 0217                               u3460 0F82  
                             u3700 06BC                               u3612 058A  
                             u3540 04BE                               u2740 0956  
                             u2660 08E2                               u2581 156C  
                             u2821 0216                               u3461 0F81  
                             u3621 059F                               u3613 0591  
                             u3541 04BD                               u2741 0955  
                             u2661 08E1                               u4077 15E8  
                             u2910 02DD                               u2830 0231  
                             u3470 0F91                               u3390 0F2F  
                             u3622 05A6                               u3550 04C5  
                             u2750 095D                               u2670 08FA  
                             u2590 149F                               u2911 02DC  
                             u2831 0230                               u3391 0F2E  
                             u3711 06C8                               u3623 05AD  
                             u3551 04C4                               u2751 095C  
                             u2735 0948                               u4087 1490  
                             u2591 149E                               u2920 02E2  
                             u2840 0235                               u2760 01D3  
                             u3480 0FB0                               u3800 0752  
                             u3720 06E4                               u3712 06CF  
                             u3560 04CA                               u2680 0910  
                             u2921 02E1                               u2905 02C9  
                             u2841 0234                               u2761 01D2  
                             u3481 0FAF                               u3385 0F24  
                             u3801 0751                               u3713 06D6  
                             u3705 06B7                               u3641 05D5  
                             u3561 04C9                               u2681 090F  
                             u2930 02E7                               u2850 0294  
                             u2770 01DA                               u3490 0FCE  
                             u3810 0759                               u3642 05DC  
                             u3570 04E3                               u2690 0917  
                             u2931 02E6                               u2851 0293  
                             u2771 01D9                               u3491 0FCD  
                             u3475 0F8C                               u3811 0758  
                             u3731 06F0                               u3651 0602  
                             u3643 05E3                               u3635 05AF  
                             u3571 04E2                               u2691 0916  
                             u2675 08F5                               _PEIE 005E  
                             u2860 029F                               u2780 01DF  
                             u3820 0763                               u3732 06F7  
                             u3652 0609                               u3580 04E8  
                             u3900 0993                               u2941 02FA  
                             u2861 029D                               u2781 01DE  
                             u3485 0FAC                               u3821 0762  
                             u3733 06FE                               u3725 06DF  
                             u3653 0610                               u3581 04E7  
                             u3901 0992                               u2950 030C  
                             u2942 0301                               u2870 02A0  
                             u2790 01FF                               u3830 0775  
                             u2951 030B                               u2943 0308  
                             u2855 0290                               u2791 01FE  
                             u3495 0FCA                               u3831 0774  
                             u3671 0638                               u3591 053B  
                             u2960 0310                               u2880 02B5  
                             u3840 0784                               u3760 0722  
                             u3672 063F                               u3592 0542  
                             u3920 09B6                               u2961 030F  
                             u2881 02B4                               u3761 0721  
                             u3745 0700                               u3681 0665  
                             u3673 0646                               u3665 0612  
                             u3593 0549                               u3921 09B5  
                             u2970 0320                               u2890 02C5  
                             u3850 07A3                               u3682 066C  
                             u2971 031F                               u2891 02C4  
                             u3851 07A2                               u3755 0717  
                             u3691 0692                               u3683 0673  
                             u3915 09A7                               u3860 07BD  
                             u3780 0738                               u3692 0699  
                             u3940 09D9                               u3861 07BC  
                             u3845 077F                               u3781 0737  
                             u3693 06A0                               u3941 09D8  
                             u2990 0347                               u3870 07DB  
                             u3790 073E                               u2991 0346  
                             u3871 07DA                               u3855 079F  
                             u3791 073D                               u3775 0726  
                             u3935 09CB                               u3960 09EB  
                             u3880 096F                               u2993 0343  
                             u2985 0324                               u3865 07B9  
                             u3961 09EA                               u3881 096E  
                             u3970 09F1                               u3890 0973  
                             u3971 09F0                               u3955 09DF  
                             u3891 0972                               u3980 09F6  
                             u3981 09F5                               u3990 0A0B  
                             u3995 0A06                       __CFG_WRT$OFF 0000  
                             _dec1 00BE                               _dec2 00BB  
                             _date 00B6                  writeStrLCD@string 0072  
                             _main 0BF8                               _hour 00B7  
                             _year 00B4                               btemp 007E  
                             start 0000                      __CFG_IESO$OFF 0000  
                  ___fldiv@new_exp 0068                   ?_I2C_Master_Init 0020  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                        _writeIntLCD 14B6  
                    ___fltol@sign1 0079                    __end_of___fladd 047E  
                            ?_main 0070                    __end_of___fldiv 1000  
                  __end_of___awdiv 1800                    __end_of___flneg 1476  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 1722  
                  __end_of___flmul 07F3                    __end_of___fltol 0969  
                            _ANSEL 0188                    __end_of___lldiv 178F  
                  ___awdiv@divisor 0070                    __end_of___lwdiv 0051  
                  __end_of___lwmod 165F                    ___awdiv@counter 0075  
                      _writeStrLCD 0803                              _PORTB 0006  
                            _PORTD 0008                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _SSPIF 0063                     __CFG_FCMEN$OFF 0000  
                __end_of_BCD_2_DEC 14FA                    __end_of_initLCD 161E  
                  __end_of_dpowers 101A                              _month 00B5  
                            _setup 0847              __size_of_writeCharLCD 000F  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                __end_of_DEC_2_BCD 15AC                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0BF8  
                   __CFG_MCLRE$OFF 0000                    __initialization 07F3  
                     __end_of_main 0DF7                             ??_main 00C2  
                     _writeCharLCD 1476                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0020                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 007D                   ___awdiv@dividend 0072  
                           ?_setup 0070                             _ANSELH 0189  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                   __end_of___xxtofl 0A2B  
                   __CFG_PWRTE$OFF 0000                  writeIntLCD@buffer 0030  
                writeIntLCD@numero 0034                             _clcLCD 142D  
                           _cmdLCD 1485                          ??___fladd 002C  
                           ___wmul 14FA                          ??___fldiv 005E  
                        ??___awdiv 0074                          ??___flneg 007E  
                        ??___awmod 0074                          ??___flmul 0044  
                        ??___fltol 0074                          ??___lldiv 0078  
         __end_of_Config_Time_Date 0AF8                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _float1 00AC  
                           _float2 00A4                             _cursor 00C1  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075   __end_of_Update_Current_Date_Time 01C2  
                        ??_initLCD 0073                 __size_of__Umul8_16 002A  
                        ??_sprintf 0023                       ___xxtofl@arg 007A  
                     ___xxtofl@exp 0079                       ___xxtofl@val 0070  
          __end_of__initialization 07FC                  writeFloat@decimal 0035  
                       ___flneg@f1 0020                         ___fltol@f1 0070  
                writeFloat@initPos 0036                  writeFloat@integer 0038  
                   __pcstackCOMMON 0070                      __end_of_setup 08CF  
                          ??_setup 0028                         __pbssBANK1 00A0  
                    ?_setCursorLCD 0073                  __end_of__Umul8_16 154C  
                       __pmaintext 0BF8                            ?_clcLCD 0070  
                          ?_cmdLCD 0070                            ?___wmul 0070  
                     ?_writeIntLCD 0070                       ?_writeStrLCD 0072  
                        ?___xxtofl 0070           _Update_Current_Date_Time 0051  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 1000                     ??_setCursorLCD 0074  
                        _BCD_2_DEC 14D4                          _DEC_2_BCD 157B  
                          ___fladd 01C2                      setCursorLCD@x 0073  
                    setCursorLCD@y 0075                            ___fldiv 0DF7  
                          ___awdiv 178F                    __size_of_clcLCD 0007  
                          ___flneg 1467                    __size_of_cmdLCD 0014  
                          ___awmod 16BF                            ___flmul 047E  
                          ___fltol 08CF                            ___lldiv 1722  
                  __size_of___wmul 0028                            ___lwdiv 0006  
                          ___lwmod 161E                            __ptext1 165F  
                          __ptext2 14B6                            __ptext3 0AF8  
                          __ptext4 161E                            __ptext5 0006  
                          __ptext6 0847                            __ptext7 0803  
                          __ptext8 1476                            __ptext9 1499  
                          _initLCD 15E4                            _entero1 00BF  
                          _entero2 00BC                            _counter 00BD  
                          _dpowers 1010                         ??___xxtofl 0074  
                 ___awmod@dividend 0072           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002F           __size_of_I2C_Master_Wait 000F  
         __size_of_I2C_Master_Stop 0009                            _sprintf 0AF8  
                          clrloop0 1435               end_of_initialization 07FC  
                       ?_BCD_2_DEC 0076          __size_of_I2C_Master_Start 0009  
                       ?_DEC_2_BCD 0079          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0070                    ___lldiv@counter 007D  
                 I2C_Master_Init@c 0020                   I2C_Master_Read@a 0070  
                ?_Config_Time_Date 0070                 ??_Config_Time_Date 0022  
                      ___fladd@grs 003B                      ___xxtofl@sign 0078  
                        _TRISCbits 0087                        ___fldiv@grs 006A  
                      ___fldiv@rem 0063                        ___flmul@grs 004A  
              BCD_2_DEC@to_convert 0076                         _writeFloat 165F  
                   __end_of_clcLCD 1434                     __end_of_cmdLCD 1499  
                   __end_of___wmul 1522               __end_of_setCursorLCD 14B6  
             __size_of_writeIntLCD 001E                start_initialization 07F3  
             __size_of_writeStrLCD 0044                        ??_BCD_2_DEC 0078  
                ??_I2C_Master_Init 0024                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                        ??_DEC_2_BCD 007B  
                         ??_clcLCD 0073                           ??_cmdLCD 0070  
                         ??___wmul 0074                          __Umul8_16 1522  
       ??_Update_Current_Date_Time 007D                          ___fladd@a 0028  
                        ___fladd@b 0024                          ___fldiv@a 0056  
                        ___fldiv@b 005A                          ___flmul@a 0040  
                        ___flmul@b 003C                          ___latbits 0002  
                    __pcstackBANK0 0020                      __pcstackBANK1 00C2  
                __size_of___xxtofl 00C2              writeCharLCD@character 0071  
                      sprintf@flag 0027                        sprintf@prec 0028  
                 _I2C_Master_Start 143C                   _I2C_Master_Write 144E  
                 ___lwdiv@dividend 0072                          cmdLCD@cmd 0072  
                         ?___fladd 0024                           ?___fldiv 0056  
                         ?___awdiv 0070                           ?___flneg 0020  
                         ?___awmod 0070                           ?___flmul 003C  
                         ?___fltol 0070                           ?___lldiv 0070  
                      ?_writeFloat 0035                         ?__Umul8_16 0070  
                         ?___lwdiv 0070                           ?___lwmod 0078  
                        __pstrings 1000                           ?_initLCD 0070  
                    ?_writeCharLCD 0070                   ___lwdiv@quotient 0075  
                         ?_sprintf 0020                     __size_of_setup 0088  
                   ___wmul@product 0074                          clear_ram0 1434  
            __size_of_setCursorLCD 001D                        __stringbase 100F  
                ___wmul@multiplier 0070                     ??_writeCharLCD 0070  
              I2C_Master_Read@temp 0074          __size_of_Config_Time_Date 00CD  
              __size_of_writeFloat 0060                       _setCursorLCD 1499  
                      ??__Umul8_16 0072                   __size_of___fladd 02BC  
                 __size_of___fldiv 0209                   __size_of___awdiv 0071  
                 __size_of___flneg 000F                   __size_of___awmod 0063  
                 __size_of___flmul 0375                   __size_of___fltol 009A  
                 __size_of___lldiv 006D                   __size_of___lwdiv 004B  
                 __size_of___lwmod 0041                 __end_of__stringtab 1010  
                       sprintf@val 0029                    _I2C_Master_Init 15AC  
                  _I2C_Master_Read 154C                   __size_of_initLCD 003A  
                         ___xxtofl 0969                    _I2C_Master_Wait 1458  
                  _I2C_Master_Stop 1445                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 15E4  
                         __ptext11 142D                           __ptext20 0DF7  
                         __ptext12 1485                           __ptext21 01C2  
                         __ptext13 15AC                           __ptext30 1458  
                         __ptext22 0051                           __ptext14 1722  
                         __ptext31 157B                           __ptext23 154C  
                         __ptext15 0969                           __ptext32 16BF  
                         __ptext24 14D4                           __ptext16 08CF  
                         __ptext33 178F                           __ptext25 14FA  
                         __ptext17 1467                           __ptext26 0A2B  
                         __ptext18 047E                           __ptext27 144E  
                         __ptext19 1522                           __ptext28 1445  
                         __ptext29 143C                  __CFG_BOR4V$BOR40V 0000  
                 __size_of_sprintf 0100                      __size_of_main 01FF  
                         _sensorF1 00B0                           _sensorF2 00A8  
                    ??_writeIntLCD 002D                      ??_writeStrLCD 0074  
         __end_of_I2C_Master_Start 1445           __end_of_I2C_Master_Write 1458  
                        sprintf@ap 0026                          sprintf@sp 002B  
                 ___lwmod@dividend 007A                   ___lldiv@dividend 0074  
             __end_of_writeCharLCD 1485                          stringcode 100A  
                     ??_writeFloat 0037            __end_of_I2C_Master_Init 15E4  
          __end_of_I2C_Master_Read 157B            __end_of_I2C_Master_Wait 1467  
          __end_of_I2C_Master_Stop 144E             __Umul8_16@multiplicand 0070  
                         sprintf@c 002C                           sprintf@f 0020  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0020  
                  ___lwmod@divisor 0078                    ___lwmod@counter 007D  
                         stringdir 100A                           stringtab 1000  
              __end_of_writeIntLCD 14D4                        _SSPCON2bits 0091  
              __end_of_writeStrLCD 0847                      ___fladd@signs 0038  
                 _Config_Time_Date 0A2B  __size_of_Update_Current_Date_Time 0171  
        ?_Update_Current_Date_Time 0070                 __end_of_writeFloat 16BF  
                     ___fladd@aexp 0039                       ___fladd@bexp 003A  
             __Umul8_16@multiplier 0078                DEC_2_BCD@to_convert 0079  
                __Umul8_16@product 0074                 __size_of_BCD_2_DEC 0026  
