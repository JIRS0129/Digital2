

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Feb 21 20:18:41 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     	FNCALL	_main,_setup
   556                           	FNCALL	_setup,_I2C_Slave_Init
   557                           	FNROOT	_main
   558                           	FNCALL	intlevel1,_isr
   559                           	global	intlevel1
   560                           	FNROOT	intlevel1
   561                           	global	_counterbtn2
   562                           	global	_counterbtn1
   563                           	global	_btn2
   564                           	global	_btn1
   565                           	global	_counted2
   566                           	global	_counted1
   567                           	global	_z
   568                           	global	_PORTB
   569                           _PORTB	set	0x6
   570  0006                     	global	_PORTBbits
   571                           _PORTBbits	set	0x6
   572  0006                     	global	_PORTDbits
   573                           _PORTDbits	set	0x8
   574  0008                     	global	_PORTA
   575                           _PORTA	set	0x5
   576  0005                     	global	_PORTD
   577                           _PORTD	set	0x8
   578  0008                     	global	_SSPCONbits
   579                           _SSPCONbits	set	0x14
   580  0014                     	global	_PIR1bits
   581                           _PIR1bits	set	0xC
   582  000C                     	global	_SSPBUF
   583                           _SSPBUF	set	0x13
   584  0013                     	global	_SSPCON
   585                           _SSPCON	set	0x14
   586  0014                     	global	_SSPIF
   587                           _SSPIF	set	0x63
   588  0063                     	global	_PEIE
   589                           _PEIE	set	0x5E
   590  005E                     	global	_GIE
   591                           _GIE	set	0x5F
   592  005F                     	global	_TRISD
   593                           _TRISD	set	0x88
   594  0088                     	global	_TRISB
   595                           _TRISB	set	0x86
   596  0086                     	global	_TRISA
   597                           _TRISA	set	0x85
   598  0085                     	global	_SSPSTATbits
   599                           _SSPSTATbits	set	0x94
   600  0094                     	global	_SSPCON2bits
   601                           _SSPCON2bits	set	0x91
   602  0091                     	global	_TRISCbits
   603                           _TRISCbits	set	0x87
   604  0087                     	global	_SSPSTAT
   605                           _SSPSTAT	set	0x94
   606  0094                     	global	_SSPADD
   607                           _SSPADD	set	0x93
   608  0093                     	global	_SSPCON2
   609                           _SSPCON2	set	0x91
   610  0091                     	global	_BF
   611                           _BF	set	0x4A0
   612  04A0                     	global	_SSPIE
   613                           _SSPIE	set	0x463
   614  0463                     	global	_TRISC4
   615                           _TRISC4	set	0x43C
   616  043C                     	global	_TRISC3
   617                           _TRISC3	set	0x43B
   618  043B                     	global	_ANSELH
   619                           _ANSELH	set	0x189
   620  0189                     	global	_ANSEL
   621                           _ANSEL	set	0x188
   622  0188                     ; #config settings
   623                           global __CFG_FOSC$INTRC_NOCLKOUT
   624                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   625  0000                     global __CFG_WDTE$OFF
   626                           __CFG_WDTE$OFF equ 0x0
   627  0000                     global __CFG_PWRTE$OFF
   628                           __CFG_PWRTE$OFF equ 0x0
   629  0000                     global __CFG_MCLRE$OFF
   630                           __CFG_MCLRE$OFF equ 0x0
   631  0000                     global __CFG_CP$OFF
   632                           __CFG_CP$OFF equ 0x0
   633  0000                     global __CFG_CPD$OFF
   634                           __CFG_CPD$OFF equ 0x0
   635  0000                     global __CFG_BOREN$OFF
   636                           __CFG_BOREN$OFF equ 0x0
   637  0000                     global __CFG_IESO$OFF
   638                           __CFG_IESO$OFF equ 0x0
   639  0000                     global __CFG_FCMEN$OFF
   640                           __CFG_FCMEN$OFF equ 0x0
   641  0000                     global __CFG_LVP$OFF
   642                           __CFG_LVP$OFF equ 0x0
   643  0000                     global __CFG_BOR4V$BOR40V
   644                           __CFG_BOR4V$BOR40V equ 0x0
   645  0000                     global __CFG_WRT$OFF
   646                           __CFG_WRT$OFF equ 0x0
   647  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\selg."
   648                           	line	#
   649                           psect cinit,class=CODE,delta=2
   650                           global start_initialization
   651                           start_initialization:
   652  000F                     
   653                           global __initialization
   654                           __initialization:
   655  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   656                           global __pbssCOMMON
   657                           __pbssCOMMON:
   658  0070                     _counterbtn2:
   659  0070                            ds      1
   660  0070                     
   661                           _counterbtn1:
   662  0071                            ds      1
   663  0071                     
   664                           _btn2:
   665  0072                            ds      1
   666  0072                     
   667                           _btn1:
   668  0073                            ds      1
   669  0073                     
   670                           _counted2:
   671  0074                            ds      1
   672  0074                     
   673                           _counted1:
   674  0075                            ds      1
   675  0075                     
   676                           _counter:
   677  0076                            ds      1
   678  0076                     
   679                           _dato:
   680  0077                            ds      1
   681  0077                     
   682                           _z:
   683  0078                            ds      1
   684  0078                     
   685                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\selg."
   686                           	line	#
   687                           ; Clear objects allocated to COMMON
   688                           psect cinit,class=CODE,delta=2,merge=1
   689                           	clrf	((__pbssCOMMON)+0)&07Fh
   690  000F  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
   691  0010  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
   692  0011  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
   693  0012  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
   694  0013  01F4               	clrf	((__pbssCOMMON)+5)&07Fh
   695  0014  01F5               	clrf	((__pbssCOMMON)+6)&07Fh
   696  0015  01F6               	clrf	((__pbssCOMMON)+7)&07Fh
   697  0016  01F7               	clrf	((__pbssCOMMON)+8)&07Fh
   698  0017  01F8               psect cinit,class=CODE,delta=2,merge=1
   699                           global end_of_initialization,__end_of__initialization
   700                           
   701                           ;End of C runtime variable initialization code
   702                           
   703                           end_of_initialization:
   704  0018                     __end_of__initialization:
   705  0018                     clrf status
   706  0018  0183               ljmp _main	;jump to C main() function
   707  0019  120A  118A  281C   psect	cstackCOMMON,class=COMMON,space=1,noexec
   708                           global __pcstackCOMMON
   709                           __pcstackCOMMON:
   710  0079                     ?_setup:	; 1 bytes @ 0x0
   711  0079                     ?_I2C_Slave_Init:	; 1 bytes @ 0x0
   712  0079                     ?_isr:	; 1 bytes @ 0x0
   713  0079                     ??_isr:	; 1 bytes @ 0x0
   714  0079                     ?_main:	; 1 bytes @ 0x0
   715  0079                     	ds	3
   716  0079                     ??_I2C_Slave_Init:	; 1 bytes @ 0x3
   717  007C                     	global	I2C_Slave_Init@address
   718                           I2C_Slave_Init@address:	; 1 bytes @ 0x3
   719  007C                     	ds	1
   720  007C                     ??_setup:	; 1 bytes @ 0x4
   721  007D                     ??_main:	; 1 bytes @ 0x4
   722  007D                     	ds	1
   723  007D                     ;!
   724                           ;!Data Sizes:
   725                           ;!    Strings     0
   726                           ;!    Constant    0
   727                           ;!    Data        0
   728                           ;!    BSS         9
   729                           ;!    Persistent  0
   730                           ;!    Stack       0
   731                           ;!
   732                           ;!Auto Spaces:
   733                           ;!    Space          Size  Autos    Used
   734                           ;!    COMMON           14      5      14
   735                           ;!    BANK0            80      0       0
   736                           ;!    BANK1            80      0       0
   737                           ;!    BANK3            96      0       0
   738                           ;!    BANK2            96      0       0
   739                           
   740                           ;!
   741                           ;!Pointer List with Targets:
   742                           ;!
   743                           ;!    None.
   744                           
   745                           
   746                           ;!
   747                           ;!Critical Paths under _main in COMMON
   748                           ;!
   749                           ;!    _setup->_I2C_Slave_Init
   750                           ;!
   751                           ;!Critical Paths under _isr in COMMON
   752                           ;!
   753                           ;!    None.
   754                           ;!
   755                           ;!Critical Paths under _main in BANK0
   756                           ;!
   757                           ;!    None.
   758                           ;!
   759                           ;!Critical Paths under _isr in BANK0
   760                           ;!
   761                           ;!    None.
   762                           ;!
   763                           ;!Critical Paths under _main in BANK1
   764                           ;!
   765                           ;!    None.
   766                           ;!
   767                           ;!Critical Paths under _isr in BANK1
   768                           ;!
   769                           ;!    None.
   770                           ;!
   771                           ;!Critical Paths under _main in BANK3
   772                           ;!
   773                           ;!    None.
   774                           ;!
   775                           ;!Critical Paths under _isr in BANK3
   776                           ;!
   777                           ;!    None.
   778                           ;!
   779                           ;!Critical Paths under _main in BANK2
   780                           ;!
   781                           ;!    None.
   782                           ;!
   783                           ;!Critical Paths under _isr in BANK2
   784                           ;!
   785                           ;!    None.
   786                           
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   789 ;;
   790                           
   791                           ;!
   792                           ;!Call Graph Tables:
   793                           ;!
   794                           ;! ---------------------------------------------------------------------------------
   795                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   796                           ;! ---------------------------------------------------------------------------------
   797                           ;! (0) _main                                                 1     1      0      15
   798                           ;!                                              4 COMMON     1     1      0
   799                           ;!                              _setup
   800                           ;! ---------------------------------------------------------------------------------
   801                           ;! (1) _setup                                                0     0      0      15
   802                           ;!                     _I2C_Slave_Init
   803                           ;! ---------------------------------------------------------------------------------
   804                           ;! (2) _I2C_Slave_Init                                       1     1      0      15
   805                           ;!                                              3 COMMON     1     1      0
   806                           ;! ---------------------------------------------------------------------------------
   807                           ;! Estimated maximum stack depth 2
   808                           ;! ---------------------------------------------------------------------------------
   809                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   810                           ;! ---------------------------------------------------------------------------------
   811                           ;! (3) _isr                                                  3     3      0       0
   812                           ;!                                              0 COMMON     3     3      0
   813                           ;! ---------------------------------------------------------------------------------
   814                           ;! Estimated maximum stack depth 3
   815                           ;! ---------------------------------------------------------------------------------
   816                           ;!
   817                           ;! Call Graph Graphs:
   818                           ;!
   819                           ;! _main (ROOT)
   820                           ;!   _setup
   821                           ;!     _I2C_Slave_Init
   822                           ;!
   823                           ;! _isr (ROOT)
   824                           ;!
   825                           
   826                           ;! Address spaces:
   827                           
   828                           ;!Name               Size   Autos  Total    Cost      Usage
   829                           ;!BITCOMMON            E      0       0       0        0.0%
   830                           ;!EEDATA             100      0       0       0        0.0%
   831                           ;!NULL                 0      0       0       0        0.0%
   832                           ;!CODE                 0      0       0       0        0.0%
   833                           ;!COMMON               E      5       E       1      100.0%
   834                           ;!BITSFR0              0      0       0       1        0.0%
   835                           ;!SFR0                 0      0       0       1        0.0%
   836                           ;!BITSFR1              0      0       0       2        0.0%
   837                           ;!SFR1                 0      0       0       2        0.0%
   838                           ;!STACK                0      0       0       2        0.0%
   839                           ;!ABS                  0      0       E       3        0.0%
   840                           ;!BITBANK0            50      0       0       4        0.0%
   841                           ;!BITSFR3              0      0       0       4        0.0%
   842                           ;!SFR3                 0      0       0       4        0.0%
   843                           ;!BANK0               50      0       0       5        0.0%
   844                           ;!BITSFR2              0      0       0       5        0.0%
   845                           ;!SFR2                 0      0       0       5        0.0%
   846                           ;!BITBANK1            50      0       0       6        0.0%
   847                           ;!BANK1               50      0       0       7        0.0%
   848                           ;!BITBANK3            60      0       0       8        0.0%
   849                           ;!BANK3               60      0       0       9        0.0%
   850                           ;!BITBANK2            60      0       0      10        0.0%
   851                           ;!BANK2               60      0       0      11        0.0%
   852                           ;!DATA                 0      0       E      12        0.0%
   853                           
   854                           	global	_main
   855                           
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 91 in file "mainS2.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0, pclath, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : B00/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0
   874 ;;      Temps:          1       0       0       0       0
   875 ;;      Totals:         1       0       0       0       0
   876 ;;Total ram usage:        1 bytes
   877 ;; Hardware stack levels required when called:    3
   878 ;; This function calls:
   879 ;;		_setup
   880 ;; This function is called by:
   881 ;;		Startup code after reset
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   885                           	file	"mainS2.c"
   886                           	line	91
   887                           global __pmaintext
   888                           __pmaintext:	;psect for function _main
   889  001C                     psect	maintext
   890                           	file	"mainS2.c"
   891                           	line	91
   892                           	global	__size_of_main
   893                           	__size_of_main	equ	__end_of_main-_main
   894  008C                     	
   895                           _main:	
   896  001C                     ;incstack = 0
   897                           	opt	stack 5
   898                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   899                           	line	92
   900                           	
   901                           l833:	
   902  001C                     ;mainS2.c: 92:     setup();
   903                           	fcall	_setup
   904  001C  120A  118A  212B  120A  118A  	line	96
   905                           	
   906                           l835:	
   907  0021                     ;mainS2.c: 96:     PORTDbits.RD2 = 1;
   908                           	bcf	status, 5	;RP0=0, select bank0
   909  0021  1283               	bcf	status, 6	;RP1=0, select bank0
   910  0022  1303               	bsf	(8),2	;volatile
   911  0023  1508               	goto	l837
   912  0024  2825               	line	97
   913                           ;mainS2.c: 97:     while(1){
   914                           	
   915                           l132:	
   916  0025                     	line	98
   917                           	
   918                           l837:	
   919  0025                     ;mainS2.c: 98:         if(PORTBbits.RB0 && btn1 == 0){
   920                           	btfss	(6),0	;volatile
   921  0025  1C06               	goto	u141
   922  0026  2828               	goto	u140
   923  0027  2829               u141:
   924  0028                     	goto	l843
   925  0028  2831               u140:
   926  0029                     	
   927                           l839:	
   928  0029                     	movf	((_btn1)),w
   929  0029  0873               	btfss	status,2
   930  002A  1D03               	goto	u151
   931  002B  282D               	goto	u150
   932  002C  282E               u151:
   933  002D                     	goto	l843
   934  002D  2831               u150:
   935  002E                     	line	99
   936                           	
   937                           l841:	
   938  002E                     ;mainS2.c: 99:             btn1 = 1;
   939                           	clrf	(_btn1)
   940  002E  01F3               	incf	(_btn1),f
   941  002F  0AF3               	goto	l843
   942  0030  2831               	line	100
   943                           ;mainS2.c: 100:         }
   944                           	
   945                           l133:	
   946  0031                     	line	102
   947                           	
   948                           l843:	
   949  0031                     ;mainS2.c: 102:         if (counterbtn1 <= 150) {
   950                           	movlw	low(097h)
   951  0031  3097               	subwf	(_counterbtn1),w
   952  0032  0271               	skipnc
   953  0033  1803               	goto	u161
   954  0034  2836               	goto	u160
   955  0035  2837               u161:
   956  0036                     	goto	l134
   957  0036  283D               u160:
   958  0037                     	line	103
   959                           	
   960                           l845:	
   961  0037                     ;mainS2.c: 103:             counterbtn1 = counterbtn1 + btn1;
   962                           	movf	(_btn1),w
   963  0037  0873               	addwf	(_counterbtn1),w
   964  0038  0771               	movwf	(??_main+0)+0
   965  0039  00FD               	movf	(??_main+0)+0,w
   966  003A  087D               	movwf	(_counterbtn1)
   967  003B  00F1               	line	104
   968                           ;mainS2.c: 104:         }
   969                           	goto	l861
   970  003C  2865               	line	106
   971                           ;mainS2.c: 106:         else {
   972                           	
   973                           l134:	
   974  003D                     	line	107
   975                           ;mainS2.c: 107:             if(PORTBbits.RB0 == 1 && btn1 == 1 && counted1 == 0){
   976                           	btfss	(6),0	;volatile
   977  003D  1C06               	goto	u171
   978  003E  2840               	goto	u170
   979  003F  2841               u171:
   980  0040                     	goto	l136
   981  0040  285B               u170:
   982  0041                     	
   983                           l847:	
   984  0041                     		decf	((_btn1)),w
   985  0041  0373               	btfss	status,2
   986  0042  1D03               	goto	u181
   987  0043  2845               	goto	u180
   988  0044  2846               u181:
   989  0045                     	goto	l136
   990  0045  285B               u180:
   991  0046                     	
   992                           l849:	
   993  0046                     	movf	((_counted1)),w
   994  0046  0875               	btfss	status,2
   995  0047  1D03               	goto	u191
   996  0048  284A               	goto	u190
   997  0049  284B               u191:
   998  004A                     	goto	l136
   999  004A  285B               u190:
  1000  004B                     	line	109
  1001                           	
  1002                           l851:	
  1003  004B                     ;mainS2.c: 109:                 if(PORTA == 15){
  1004                           		movlw	15
  1005  004B  300F               	xorwf	((5)),w	;volatile
  1006  004C  0605               	btfss	status,2
  1007  004D  1D03               	goto	u201
  1008  004E  2850               	goto	u200
  1009  004F  2851               u201:
  1010  0050                     	goto	l855
  1011  0050  2853               u200:
  1012  0051                     	line	110
  1013                           	
  1014                           l853:	
  1015  0051                     ;mainS2.c: 110:                     PORTA = 0;
  1016                           	clrf	(5)	;volatile
  1017  0051  0185               	line	111
  1018                           ;mainS2.c: 111:                 }else{
  1019                           	goto	l857
  1020  0052  2858               	
  1021                           l137:	
  1022  0053                     	line	112
  1023                           	
  1024                           l855:	
  1025  0053                     ;mainS2.c: 112:                     PORTA++;
  1026                           	movlw	low(01h)
  1027  0053  3001               	movwf	(??_main+0)+0
  1028  0054  00FD               	movf	(??_main+0)+0,w
  1029  0055  087D               	addwf	(5),f	;volatile
  1030  0056  0785               	goto	l857
  1031  0057  2858               	line	113
  1032                           ;mainS2.c: 113:                 }
  1033                           	
  1034                           l138:	
  1035  0058                     	line	115
  1036                           	
  1037                           l857:	
  1038  0058                     ;mainS2.c: 115:                 counted1 = 1;
  1039                           	clrf	(_counted1)
  1040  0058  01F5               	incf	(_counted1),f
  1041  0059  0AF5               	line	116
  1042                           ;mainS2.c: 116:             }
  1043                           	goto	l861
  1044  005A  2865               	line	117
  1045                           ;mainS2.c: 117:             else if(PORTBbits.RB0 == 0){
  1046                           	
  1047                           l136:	
  1048  005B                     	btfsc	(6),0	;volatile
  1049  005B  1806               	goto	u211
  1050  005C  285E               	goto	u210
  1051  005D  285F               u211:
  1052  005E                     	goto	l861
  1053  005E  2865               u210:
  1054  005F                     	line	118
  1055                           	
  1056                           l859:	
  1057  005F                     ;mainS2.c: 118:                 counterbtn1 = 0;
  1058                           	clrf	(_counterbtn1)
  1059  005F  01F1               	line	119
  1060                           ;mainS2.c: 119:                 btn1 = 0;
  1061                           	clrf	(_btn1)
  1062  0060  01F3               	line	120
  1063                           ;mainS2.c: 120:                 counted1 = 0;
  1064                           	clrf	(_counted1)
  1065  0061  01F5               	goto	l861
  1066  0062  2865               	line	121
  1067                           ;mainS2.c: 121:             }
  1068                           	
  1069                           l140:	
  1070  0063                     	goto	l861
  1071  0063  2865               	
  1072                           l139:	
  1073  0064                     	goto	l861
  1074  0064  2865               	line	122
  1075                           ;mainS2.c: 122:         }
  1076                           	
  1077                           l135:	
  1078  0065                     	line	124
  1079                           	
  1080                           l861:	
  1081  0065                     ;mainS2.c: 124:         if(PORTBbits.RB6 && btn2 == 0){
  1082                           	btfss	(6),6	;volatile
  1083  0065  1F06               	goto	u221
  1084  0066  2868               	goto	u220
  1085  0067  2869               u221:
  1086  0068                     	goto	l867
  1087  0068  2871               u220:
  1088  0069                     	
  1089                           l863:	
  1090  0069                     	movf	((_btn2)),w
  1091  0069  0872               	btfss	status,2
  1092  006A  1D03               	goto	u231
  1093  006B  286D               	goto	u230
  1094  006C  286E               u231:
  1095  006D                     	goto	l867
  1096  006D  2871               u230:
  1097  006E                     	line	125
  1098                           	
  1099                           l865:	
  1100  006E                     ;mainS2.c: 125:             btn2 = 1;
  1101                           	clrf	(_btn2)
  1102  006E  01F2               	incf	(_btn2),f
  1103  006F  0AF2               	goto	l867
  1104  0070  2871               	line	126
  1105                           ;mainS2.c: 126:         }
  1106                           	
  1107                           l141:	
  1108  0071                     	line	127
  1109                           	
  1110                           l867:	
  1111  0071                     ;mainS2.c: 127:         if (counterbtn2 <= 150) {
  1112                           	movlw	low(097h)
  1113  0071  3097               	subwf	(_counterbtn2),w
  1114  0072  0270               	skipnc
  1115  0073  1803               	goto	u241
  1116  0074  2876               	goto	u240
  1117  0075  2877               u241:
  1118  0076                     	goto	l142
  1119  0076  287D               u240:
  1120  0077                     	line	128
  1121                           	
  1122                           l869:	
  1123  0077                     ;mainS2.c: 128:           counterbtn2 = counterbtn2 + btn2;
  1124                           	movf	(_btn2),w
  1125  0077  0872               	addwf	(_counterbtn2),w
  1126  0078  0770               	movwf	(??_main+0)+0
  1127  0079  00FD               	movf	(??_main+0)+0,w
  1128  007A  087D               	movwf	(_counterbtn2)
  1129  007B  00F0               	line	129
  1130                           ;mainS2.c: 129:         }else{
  1131                           	goto	l837
  1132  007C  2825               	
  1133                           l142:	
  1134  007D                     	line	130
  1135                           ;mainS2.c: 130:             if(PORTBbits.RB6 == 1 && btn2 == 1 && counted2 == 0){
  1136                           	btfss	(6),6	;volatile
  1137  007D  1F06               	goto	u251
  1138  007E  2880               	goto	u250
  1139  007F  2881               u251:
  1140  0080                     	goto	l144
  1141  0080  2899               u250:
  1142  0081                     	
  1143                           l871:	
  1144  0081                     		decf	((_btn2)),w
  1145  0081  0372               	btfss	status,2
  1146  0082  1D03               	goto	u261
  1147  0083  2885               	goto	u260
  1148  0084  2886               u261:
  1149  0085                     	goto	l144
  1150  0085  2899               u260:
  1151  0086                     	
  1152                           l873:	
  1153  0086                     	movf	((_counted2)),w
  1154  0086  0874               	btfss	status,2
  1155  0087  1D03               	goto	u271
  1156  0088  288A               	goto	u270
  1157  0089  288B               u271:
  1158  008A                     	goto	l144
  1159  008A  2899               u270:
  1160  008B                     	line	132
  1161                           	
  1162                           l875:	
  1163  008B                     ;mainS2.c: 132:                 if(PORTA == 0){
  1164                           	movf	((5)),w	;volatile
  1165  008B  0805               	btfss	status,2
  1166  008C  1D03               	goto	u281
  1167  008D  288F               	goto	u280
  1168  008E  2890               u281:
  1169  008F                     	goto	l879
  1170  008F  2893               u280:
  1171  0090                     	line	133
  1172                           	
  1173                           l877:	
  1174  0090                     ;mainS2.c: 133:                     PORTA = 15;
  1175                           	movlw	low(0Fh)
  1176  0090  300F               	movwf	(5)	;volatile
  1177  0091  0085               	line	134
  1178                           ;mainS2.c: 134:                 }else{
  1179                           	goto	l881
  1180  0092  2896               	
  1181                           l145:	
  1182  0093                     	line	135
  1183                           	
  1184                           l879:	
  1185  0093                     ;mainS2.c: 135:                     PORTA--;
  1186                           	movlw	01h
  1187  0093  3001               	subwf	(5),f	;volatile
  1188  0094  0285               	goto	l881
  1189  0095  2896               	line	136
  1190                           ;mainS2.c: 136:                 }
  1191                           	
  1192                           l146:	
  1193  0096                     	line	137
  1194                           	
  1195                           l881:	
  1196  0096                     ;mainS2.c: 137:                 counted2 = 1;
  1197                           	clrf	(_counted2)
  1198  0096  01F4               	incf	(_counted2),f
  1199  0097  0AF4               	line	138
  1200                           ;mainS2.c: 138:             }else if(PORTBbits.RB6 == 0){
  1201                           	goto	l837
  1202  0098  2825               	
  1203                           l144:	
  1204  0099                     	btfsc	(6),6	;volatile
  1205  0099  1B06               	goto	u291
  1206  009A  289C               	goto	u290
  1207  009B  289D               u291:
  1208  009C                     	goto	l837
  1209  009C  2825               u290:
  1210  009D                     	line	139
  1211                           	
  1212                           l883:	
  1213  009D                     ;mainS2.c: 139:                 counterbtn2 = 0;
  1214                           	clrf	(_counterbtn2)
  1215  009D  01F0               	line	140
  1216                           ;mainS2.c: 140:                 btn2 = 0;
  1217                           	clrf	(_btn2)
  1218  009E  01F2               	line	141
  1219                           ;mainS2.c: 141:                 counted2 = 0;
  1220                           	clrf	(_counted2)
  1221  009F  01F4               	goto	l837
  1222  00A0  2825               	line	142
  1223                           ;mainS2.c: 142:             }
  1224                           	
  1225                           l148:	
  1226  00A1                     	goto	l837
  1227  00A1  2825               	
  1228                           l147:	
  1229  00A2                     	goto	l837
  1230  00A2  2825               	line	143
  1231                           ;mainS2.c: 143:         }
  1232                           	
  1233                           l143:	
  1234  00A3                     	goto	l837
  1235  00A3  2825               	line	144
  1236                           ;mainS2.c: 144:     }
  1237                           	
  1238                           l149:	
  1239  00A4                     	goto	l837
  1240  00A4  2825               	
  1241                           l150:	
  1242  00A5                     	line	146
  1243                           ;mainS2.c: 145:     return;
  1244                           	
  1245                           l151:	
  1246  00A5                     	global	start
  1247                           	ljmp	start
  1248  00A5  120A  118A  280C   	opt stack 0
  1249                           GLOBAL	__end_of_main
  1250                           	__end_of_main:
  1251  00A8                     	signat	_main,89
  1252                           	global	_setup
  1253                           
  1254 ;; *************** function _setup *****************
  1255 ;; Defined at:
  1256 ;;		line 150 in file "mainS2.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    2
  1277 ;; This function calls:
  1278 ;;		_I2C_Slave_Init
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1284                           	line	150
  1285                           global __ptext1
  1286                           __ptext1:	;psect for function _setup
  1287  012B                     psect	text1
  1288                           	file	"mainS2.c"
  1289                           	line	150
  1290                           	global	__size_of_setup
  1291                           	__size_of_setup	equ	__end_of_setup-_setup
  1292  0016                     	
  1293                           _setup:	
  1294  012B                     ;incstack = 0
  1295                           	opt	stack 5
  1296                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1297                           	line	151
  1298                           	
  1299                           l745:	
  1300  012B                     ;mainS2.c: 151:     ANSEL = 0;
  1301                           	bsf	status, 5	;RP0=1, select bank3
  1302  012B  1683               	bsf	status, 6	;RP1=1, select bank3
  1303  012C  1703               	clrf	(392)^0180h	;volatile
  1304  012D  0188               	line	152
  1305                           ;mainS2.c: 152:     ANSELH = 0;
  1306                           	clrf	(393)^0180h	;volatile
  1307  012E  0189               	line	154
  1308                           ;mainS2.c: 154:     TRISA = 0;
  1309                           	bsf	status, 5	;RP0=1, select bank1
  1310  012F  1683               	bcf	status, 6	;RP1=0, select bank1
  1311  0130  1303               	clrf	(133)^080h	;volatile
  1312  0131  0185               	line	155
  1313                           	
  1314                           l747:	
  1315  0132                     ;mainS2.c: 155:     TRISB = 0b01000001;
  1316                           	movlw	low(041h)
  1317  0132  3041               	movwf	(134)^080h	;volatile
  1318  0133  0086               	line	156
  1319                           	
  1320                           l749:	
  1321  0134                     ;mainS2.c: 156:     TRISD = 0;
  1322                           	clrf	(136)^080h	;volatile
  1323  0134  0188               	line	158
  1324                           	
  1325                           l751:	
  1326  0135                     ;mainS2.c: 158:     PORTA = 0;
  1327                           	bcf	status, 5	;RP0=0, select bank0
  1328  0135  1283               	bcf	status, 6	;RP1=0, select bank0
  1329  0136  1303               	clrf	(5)	;volatile
  1330  0137  0185               	line	159
  1331                           	
  1332                           l753:	
  1333  0138                     ;mainS2.c: 159:     PORTB = 0;
  1334                           	clrf	(6)	;volatile
  1335  0138  0186               	line	160
  1336                           	
  1337                           l755:	
  1338  0139                     ;mainS2.c: 160:     PORTD = 0;
  1339                           	clrf	(8)	;volatile
  1340  0139  0188               	line	161
  1341                           	
  1342                           l757:	
  1343  013A                     ;mainS2.c: 161:     I2C_Slave_Init(0x60);
  1344                           	movlw	low(060h)
  1345  013A  3060               	fcall	_I2C_Slave_Init
  1346  013B  120A  118A  2111  120A  118A  	line	162
  1347                           	
  1348                           l154:	
  1349  0140                     	return
  1350  0140  0008               	opt stack 0
  1351                           GLOBAL	__end_of_setup
  1352                           	__end_of_setup:
  1353  0141                     	signat	_setup,89
  1354                           	global	_I2C_Slave_Init
  1355                           
  1356 ;; *************** function _I2C_Slave_Init *****************
  1357 ;; Defined at:
  1358 ;;		line 93 in file "I2C.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  address         1    wreg     unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  address         1    3[COMMON] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         1       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0
  1375 ;;      Totals:         1       0       0       0       0
  1376 ;;Total ram usage:        1 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_setup
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1386                           	file	"I2C.c"
  1387                           	line	93
  1388                           global __ptext2
  1389                           __ptext2:	;psect for function _I2C_Slave_Init
  1390  0111                     psect	text2
  1391                           	file	"I2C.c"
  1392                           	line	93
  1393                           	global	__size_of_I2C_Slave_Init
  1394                           	__size_of_I2C_Slave_Init	equ	__end_of_I2C_Slave_Init-_I2C_Slave_Init
  1395  001A                     	
  1396                           _I2C_Slave_Init:	
  1397  0111                     ;incstack = 0
  1398                           	opt	stack 5
  1399                           ; Regs used in _I2C_Slave_Init: [wreg]
  1400                           ;I2C_Slave_Init@address stored from wreg
  1401                           	movwf	(I2C_Slave_Init@address)
  1402  0111  00FC               	line	95
  1403                           	
  1404                           l727:	
  1405  0112                     ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
                                 dress;
  1406                           	movf	(I2C_Slave_Init@address),w
  1407  0112  087C               	bsf	status, 5	;RP0=1, select bank1
  1408  0113  1683               	bcf	status, 6	;RP1=0, select bank1
  1409  0114  1303               	movwf	(147)^080h	;volatile
  1410  0115  0093               	line	96
  1411                           ;I2C.c: 96:     SSPCON = 0x36;
  1412                           	movlw	low(036h)
  1413  0116  3036               	bcf	status, 5	;RP0=0, select bank0
  1414  0117  1283               	bcf	status, 6	;RP1=0, select bank0
  1415  0118  1303               	movwf	(20)	;volatile
  1416  0119  0094               	line	97
  1417                           ;I2C.c: 97:     SSPSTAT = 0x80;
  1418                           	movlw	low(080h)
  1419  011A  3080               	bsf	status, 5	;RP0=1, select bank1
  1420  011B  1683               	bcf	status, 6	;RP1=0, select bank1
  1421  011C  1303               	movwf	(148)^080h	;volatile
  1422  011D  0094               	line	98
  1423                           ;I2C.c: 98:     SSPCON2 = 0x01;
  1424                           	movlw	low(01h)
  1425  011E  3001               	movwf	(145)^080h	;volatile
  1426  011F  0091               	line	99
  1427                           	
  1428                           l729:	
  1429  0120                     ;I2C.c: 99:     TRISC3 = 1;
  1430                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1431  0120  1587               	line	100
  1432                           	
  1433                           l731:	
  1434  0121                     ;I2C.c: 100:     TRISC4 = 1;
  1435                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  1436  0121  1607               	line	101
  1437                           	
  1438                           l733:	
  1439  0122                     ;I2C.c: 101:     GIE = 1;
  1440                           	bsf	(95/8),(95)&7	;volatile
  1441  0122  178B               	line	102
  1442                           	
  1443                           l735:	
  1444  0123                     ;I2C.c: 102:     PEIE = 1;
  1445                           	bsf	(94/8),(94)&7	;volatile
  1446  0123  170B               	line	103
  1447                           	
  1448                           l737:	
  1449  0124                     ;I2C.c: 103:     SSPIF = 0;
  1450                           	bcf	status, 5	;RP0=0, select bank0
  1451  0124  1283               	bcf	status, 6	;RP1=0, select bank0
  1452  0125  1303               	bcf	(99/8),(99)&7	;volatile
  1453  0126  118C               	line	104
  1454                           	
  1455                           l739:	
  1456  0127                     ;I2C.c: 104:     SSPIE = 1;
  1457                           	bsf	status, 5	;RP0=1, select bank1
  1458  0127  1683               	bcf	status, 6	;RP1=0, select bank1
  1459  0128  1303               	bsf	(1123/8)^080h,(1123)&7	;volatile
  1460  0129  158C               	line	105
  1461                           	
  1462                           l55:	
  1463  012A                     	return
  1464  012A  0008               	opt stack 0
  1465                           GLOBAL	__end_of_I2C_Slave_Init
  1466                           	__end_of_I2C_Slave_Init:
  1467  012B                     	signat	_I2C_Slave_Init,4217
  1468                           	global	_isr
  1469                           
  1470 ;; *************** function _isr *****************
  1471 ;; Defined at:
  1472 ;;		line 54 in file "mainS2.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          3       0       0       0       0
  1489 ;;      Totals:         3       0       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		Interrupt level 1
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1499                           	file	"mainS2.c"
  1500                           	line	54
  1501                           global __ptext3
  1502                           __ptext3:	;psect for function _isr
  1503  00A8                     psect	text3
  1504                           	file	"mainS2.c"
  1505                           	line	54
  1506                           	global	__size_of_isr
  1507                           	__size_of_isr	equ	__end_of_isr-_isr
  1508  0069                     	
  1509                           _isr:	
  1510  00A8                     ;incstack = 0
  1511                           	opt	stack 5
  1512                           ; Regs used in _isr: [wreg]
  1513                           psect	intentry,class=CODE,delta=2
  1514                           global __pintentry
  1515                           __pintentry:
  1516  0004                     global interrupt_function
  1517                           interrupt_function:
  1518  0004                     	global saved_w
  1519                           	saved_w	set	btemp+0
  1520  007E                     	movwf	saved_w
  1521  0004  00FE               	swapf	status,w
  1522  0005  0E03               	movwf	(??_isr+1)
  1523  0006  00FA               	movf	pclath,w
  1524  0007  080A               	movwf	(??_isr+2)
  1525  0008  00FB               	ljmp	_isr
  1526  0009  120A  118A  28A8   psect	text3
  1527                           	line	55
  1528                           	
  1529                           i1l799:	
  1530  00A8                     ;mainS2.c: 55:    if(PIR1bits.SSPIF == 1){
  1531                           	bcf	status, 5	;RP0=0, select bank0
  1532  00A8  1283               	bcf	status, 6	;RP1=0, select bank0
  1533  00A9  1303               	btfss	(12),3	;volatile
  1534  00AA  1D8C               	goto	u5_21
  1535  00AB  28AD               	goto	u5_20
  1536  00AC  28AE               u5_21:
  1537  00AD                     	goto	i1l127
  1538  00AD  290A               u5_20:
  1539  00AE                     	line	57
  1540                           	
  1541                           i1l801:	
  1542  00AE                     ;mainS2.c: 57:         SSPCONbits.CKP = 0;
  1543                           	bcf	(20),4	;volatile
  1544  00AE  1214               	line	59
  1545                           ;mainS2.c: 59:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1546                           	btfsc	(20),6	;volatile
  1547  00AF  1B14               	goto	u6_21
  1548  00B0  28B2               	goto	u6_20
  1549  00B1  28B3               u6_21:
  1550  00B2                     	goto	i1l805
  1551  00B2  28B8               u6_20:
  1552  00B3                     	
  1553                           i1l803:	
  1554  00B3                     	btfss	(20),7	;volatile
  1555  00B3  1F94               	goto	u7_21
  1556  00B4  28B6               	goto	u7_20
  1557  00B5  28B7               u7_21:
  1558  00B6                     	goto	i1l813
  1559  00B6  28C0               u7_20:
  1560  00B7                     	goto	i1l805
  1561  00B7  28B8               	
  1562                           i1l117:	
  1563  00B8                     	line	60
  1564                           	
  1565                           i1l805:	
  1566  00B8                     ;mainS2.c: 60:             z = SSPBUF;
  1567                           	movf	(19),w	;volatile
  1568  00B8  0813               	movwf	(??_isr+0)+0
  1569  00B9  00F9               	movf	(??_isr+0)+0,w
  1570  00BA  0879               	movwf	(_z)
  1571  00BB  00F8               	line	61
  1572                           	
  1573                           i1l807:	
  1574  00BC                     ;mainS2.c: 61:             SSPCONbits.SSPOV = 0;
  1575                           	bcf	(20),6	;volatile
  1576  00BC  1314               	line	62
  1577                           	
  1578                           i1l809:	
  1579  00BD                     ;mainS2.c: 62:             SSPCONbits.WCOL = 0;
  1580                           	bcf	(20),7	;volatile
  1581  00BD  1394               	line	63
  1582                           	
  1583                           i1l811:	
  1584  00BE                     ;mainS2.c: 63:             SSPCONbits.CKP = 1;
  1585                           	bsf	(20),4	;volatile
  1586  00BE  1614               	goto	i1l813
  1587  00BF  28C0               	line	64
  1588                           ;mainS2.c: 64:         }
  1589                           	
  1590                           i1l115:	
  1591  00C0                     	line	66
  1592                           	
  1593                           i1l813:	
  1594  00C0                     ;mainS2.c: 66:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1595                           	bsf	status, 5	;RP0=1, select bank1
  1596  00C0  1683               	bcf	status, 6	;RP1=0, select bank1
  1597  00C1  1303               	btfsc	(148)^080h,5	;volatile
  1598  00C2  1A94               	goto	u8_21
  1599  00C3  28C5               	goto	u8_20
  1600  00C4  28C6               u8_21:
  1601  00C5                     	goto	i1l118
  1602  00C5  28E3               u8_20:
  1603  00C6                     	
  1604                           i1l815:	
  1605  00C6                     	btfsc	(148)^080h,2	;volatile
  1606  00C6  1914               	goto	u9_21
  1607  00C7  28C9               	goto	u9_20
  1608  00C8  28CA               u9_21:
  1609  00C9                     	goto	i1l118
  1610  00C9  28E3               u9_20:
  1611  00CA                     	line	68
  1612                           	
  1613                           i1l817:	
  1614  00CA                     ;mainS2.c: 68:             z = SSPBUF;
  1615                           	bcf	status, 5	;RP0=0, select bank0
  1616  00CA  1283               	bcf	status, 6	;RP1=0, select bank0
  1617  00CB  1303               	movf	(19),w	;volatile
  1618  00CC  0813               	movwf	(??_isr+0)+0
  1619  00CD  00F9               	movf	(??_isr+0)+0,w
  1620  00CE  0879               	movwf	(_z)
  1621  00CF  00F8               	line	70
  1622                           	
  1623                           i1l819:	
  1624  00D0                     ;mainS2.c: 70:             PIR1bits.SSPIF = 0;
  1625                           	bcf	(12),3	;volatile
  1626  00D0  118C               	line	71
  1627                           	
  1628                           i1l821:	
  1629  00D1                     ;mainS2.c: 71:             SSPCONbits.CKP = 1;
  1630                           	bsf	(20),4	;volatile
  1631  00D1  1614               	line	72
  1632                           ;mainS2.c: 72:             while(!SSPSTATbits.BF);
  1633                           	goto	i1l119
  1634  00D2  28D3               	
  1635                           i1l120:	
  1636  00D3                     	
  1637                           i1l119:	
  1638  00D3                     	bsf	status, 5	;RP0=1, select bank1
  1639  00D3  1683               	bcf	status, 6	;RP1=0, select bank1
  1640  00D4  1303               	btfss	(148)^080h,0	;volatile
  1641  00D5  1C14               	goto	u10_21
  1642  00D6  28D8               	goto	u10_20
  1643  00D7  28D9               u10_21:
  1644  00D8                     	goto	i1l119
  1645  00D8  28D3               u10_20:
  1646  00D9                     	goto	i1l823
  1647  00D9  28DA               	
  1648                           i1l121:	
  1649  00DA                     	line	73
  1650                           	
  1651                           i1l823:	
  1652  00DA                     ;mainS2.c: 73:             PORTD = SSPBUF;
  1653                           	bcf	status, 5	;RP0=0, select bank0
  1654  00DA  1283               	bcf	status, 6	;RP1=0, select bank0
  1655  00DB  1303               	movf	(19),w	;volatile
  1656  00DC  0813               	movwf	(8)	;volatile
  1657  00DD  0088               	line	74
  1658                           ;mainS2.c: 74:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1659                           	opt asmopt_push
  1660                           opt asmopt_off
  1661                           	movlw	83
  1662  00DE  3053               movwf	((??_isr+0)+0),f
  1663  00DF  00F9               	u30_27:
  1664  00E0                     decfsz	(??_isr+0)+0,f
  1665  00E0  0BF9               	goto	u30_27
  1666  00E1  28E0               opt asmopt_pop
  1667                           
  1668                           	line	76
  1669                           ;mainS2.c: 76:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1670                           	goto	i1l122
  1671  00E2  2906               	
  1672                           i1l118:	
  1673  00E3                     	btfsc	(148)^080h,5	;volatile
  1674  00E3  1A94               	goto	u11_21
  1675  00E4  28E6               	goto	u11_20
  1676  00E5  28E7               u11_21:
  1677  00E6                     	goto	i1l122
  1678  00E6  2906               u11_20:
  1679  00E7                     	
  1680                           i1l825:	
  1681  00E7                     	btfss	(148)^080h,2	;volatile
  1682  00E7  1D14               	goto	u12_21
  1683  00E8  28EA               	goto	u12_20
  1684  00E9  28EB               u12_21:
  1685  00EA                     	goto	i1l122
  1686  00EA  2906               u12_20:
  1687  00EB                     	line	77
  1688                           	
  1689                           i1l827:	
  1690  00EB                     ;mainS2.c: 77:             z = SSPBUF;
  1691                           	bcf	status, 5	;RP0=0, select bank0
  1692  00EB  1283               	bcf	status, 6	;RP1=0, select bank0
  1693  00EC  1303               	movf	(19),w	;volatile
  1694  00ED  0813               	movwf	(??_isr+0)+0
  1695  00EE  00F9               	movf	(??_isr+0)+0,w
  1696  00EF  0879               	movwf	(_z)
  1697  00F0  00F8               	line	78
  1698                           	
  1699                           i1l829:	
  1700  00F1                     ;mainS2.c: 78:             BF = 0;
  1701                           	bsf	status, 5	;RP0=1, select bank1
  1702  00F1  1683               	bcf	status, 6	;RP1=0, select bank1
  1703  00F2  1303               	bcf	(1184/8)^080h,(1184)&7	;volatile
  1704  00F3  1014               	line	79
  1705                           ;mainS2.c: 79:             SSPBUF = PORTA;
  1706                           	bcf	status, 5	;RP0=0, select bank0
  1707  00F4  1283               	bcf	status, 6	;RP1=0, select bank0
  1708  00F5  1303               	movf	(5),w	;volatile
  1709  00F6  0805               	movwf	(19)	;volatile
  1710  00F7  0093               	line	80
  1711                           	
  1712                           i1l831:	
  1713  00F8                     ;mainS2.c: 80:             SSPCONbits.CKP = 1;
  1714                           	bsf	(20),4	;volatile
  1715  00F8  1614               	line	81
  1716                           ;mainS2.c: 81:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1717                           	opt asmopt_push
  1718                           opt asmopt_off
  1719                           	movlw	83
  1720  00F9  3053               movwf	((??_isr+0)+0),f
  1721  00FA  00F9               	u31_27:
  1722  00FB                     decfsz	(??_isr+0)+0,f
  1723  00FB  0BF9               	goto	u31_27
  1724  00FC  28FB               opt asmopt_pop
  1725                           
  1726                           	line	82
  1727                           ;mainS2.c: 82:             while(SSPSTATbits.BF);
  1728                           	goto	i1l124
  1729  00FD  28FE               	
  1730                           i1l125:	
  1731  00FE                     	
  1732                           i1l124:	
  1733  00FE                     	bsf	status, 5	;RP0=1, select bank1
  1734  00FE  1683               	bcf	status, 6	;RP1=0, select bank1
  1735  00FF  1303               	btfsc	(148)^080h,0	;volatile
  1736  0100  1814               	goto	u13_21
  1737  0101  2903               	goto	u13_20
  1738  0102  2904               u13_21:
  1739  0103                     	goto	i1l124
  1740  0103  28FE               u13_20:
  1741  0104                     	goto	i1l122
  1742  0104  2906               	
  1743                           i1l126:	
  1744  0105                     	goto	i1l122
  1745  0105  2906               	line	83
  1746                           ;mainS2.c: 83:         }
  1747                           	
  1748                           i1l123:	
  1749  0106                     	
  1750                           i1l122:	
  1751  0106                     	line	85
  1752                           ;mainS2.c: 85:         PIR1bits.SSPIF = 0;
  1753                           	bcf	status, 5	;RP0=0, select bank0
  1754  0106  1283               	bcf	status, 6	;RP1=0, select bank0
  1755  0107  1303               	bcf	(12),3	;volatile
  1756  0108  118C               	goto	i1l127
  1757  0109  290A               	line	86
  1758                           ;mainS2.c: 86:     }
  1759                           	
  1760                           i1l114:	
  1761  010A                     	line	87
  1762                           	
  1763                           i1l127:	
  1764  010A                     	movf	(??_isr+2),w
  1765  010A  087B               	movwf	pclath
  1766  010B  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
  1767  010C  0E7A               	movwf	status
  1768  010D  0083               	swapf	saved_w,f
  1769  010E  0EFE               	swapf	saved_w,w
  1770  010F  0E7E               	retfie
  1771  0110  0009               	opt stack 0
  1772                           GLOBAL	__end_of_isr
  1773                           	__end_of_isr:
  1774  0111                     	signat	_isr,89
  1775                           global	___latbits
  1776                           ___latbits	equ	2
  1777  0002                     	global	btemp
  1778                           	btemp set 07Eh
  1779  007E                     
  1780                           	DABS	1,126,2	;btemp
  1781                           	global	wtemp0
  1782                           	wtemp0 set btemp+0
  1783  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              4 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Feb 21 20:18:41 2020

                       _z 0078               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l55 012A                       l140 0063  
                     l132 0025                       l141 0071                       l133 0031  
                     l150 00A5                       l142 007D                       l134 003D  
                     l151 00A5                       l143 00A3                       l135 0065  
                     l144 0099                       l136 005B                       l145 0093  
                     l137 0053                       l154 0140                       l146 0096  
                     l138 0058                       l147 00A2                       l139 0064  
                     l148 00A1                       l149 00A4                       l731 0121  
                     l733 0122                       l735 0123                       l727 0112  
                     l751 0135                       l737 0124                       l729 0120  
                     l753 0138                       l745 012B                       l841 002E  
                     l833 001C                       l739 0127                       l755 0139  
                     l747 0132                       l851 004B                       l843 0031  
                     l835 0021                       l757 013A                       l749 0134  
                     l853 0051                       l861 0065                       l845 0037  
                     l837 0025                       l871 0081                       l863 0069  
                     l855 0053                       l847 0041                       l839 0029  
                     l881 0096                       l873 0086                       l865 006E  
                     l857 0058                       l849 0046                       l883 009D  
                     l875 008B                       l867 0071                       l859 005F  
                     l877 0090                       l869 0077                       l879 0093  
                     _GIE 005F                       u200 0051                       u201 0050  
                     u210 005F                       u211 005E                       u220 0069  
                     u140 0029                       u221 0068                       u141 0028  
                     u230 006E                       u150 002E                       u231 006D  
                     u151 002D                       u240 0077                       u160 0037  
                     u241 0076                       u161 0036                       u250 0081  
                     u170 0041                       u251 0080                       u171 0040  
                     u260 0086                       u180 0046                       u261 0085  
                     u181 0045                       u270 008B                       u190 004B  
                     u271 008A                       u191 004A                       u280 0090  
                     u281 008F                       u290 009D              __CFG_CPD$OFF 0000  
                     u291 009C                       _isr 00A8              __CFG_LVP$OFF 0000  
                    ?_isr 0079                      _PEIE 005E                      u5_20 00AE  
                    u5_21 00AD                      u6_20 00B3                      u6_21 00B2  
                    u7_20 00B7                      u7_21 00B6                      u8_20 00C6  
                    u8_21 00C5                      u9_20 00CA                      u9_21 00C9  
            __CFG_WRT$OFF 0000                      _btn1 0073                      _btn2 0072  
                    _dato 0077                      _main 001C                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0079  
                   ?_main 0079             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l120 00D3                     i1l121 00DA                     i1l114 010A  
                   i1l122 0106                     i1l123 0106                     i1l115 00C0  
                   i1l124 00FE                     i1l125 00FE                     i1l117 00B8  
                   i1l126 0105                     i1l118 00E3                     i1l119 00D3  
                   i1l127 010A                     i1l801 00AE                     i1l811 00BE  
                   i1l803 00B3                     i1l821 00D1                     i1l813 00C0  
                   i1l805 00B8                     i1l831 00F8                     i1l823 00DA  
                   i1l815 00C6                     i1l807 00BC                     i1l825 00E7  
                   i1l817 00CA                     i1l809 00BD                     i1l827 00EB  
                   i1l819 00D0                     i1l829 00F1                     i1l799 00A8  
                   u10_20 00D9                     u10_21 00D8                     u11_20 00E7  
                   u11_21 00E6                     u12_20 00EB                     u12_21 00EA  
                   u13_20 0104                     u13_21 0103                     u30_27 00E0  
                   u31_27 00FB                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _setup 012B            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00A8  
                  ??_main 007D                    ?_setup 0079                    _ANSELH 0189  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0018            __pcstackCOMMON 0079  
 __size_of_I2C_Slave_Init 001A             __end_of_setup 0141                   ??_setup 007D  
   I2C_Slave_Init@address 007C                __pmaintext 001C                __pintentry 0004  
                 _SSPCON2 0091                   _SSPSTAT 0094                   __ptext1 012B  
                 __ptext2 0111                   __ptext3 00A8                   _counter 0076  
            __size_of_isr 0069      end_of_initialization 0018            _I2C_Slave_Init 0111  
               _PORTBbits 0006                 _PORTDbits 0008                 _TRISCbits 0087  
  __end_of_I2C_Slave_Init 012B       start_initialization 000F               __end_of_isr 0111  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0079               __pbssCOMMON 0070  
               ___latbits 0002            __size_of_setup 0016         interrupt_function 0004  
                _PIR1bits 000C               _counterbtn1 0071               _counterbtn2 0070  
       __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 007C                  _counted1 0075  
                _counted2 0074             __size_of_main 008C                  intlevel1 0000  
             _SSPCON2bits 0091                _SSPCONbits 0014  
